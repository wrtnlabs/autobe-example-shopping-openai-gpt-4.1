{"operations":[{"specification":"This API enables new buyers to register for the aiCommerce platform and immediately gain access to buyer functionalities. In the underlying database, registration requires the creation of an ai_commerce_buyer record with required fields, such as unique email, password_hash, and initial status. The join process collects the essential information, hashes the password for storage, and sets up a minimal buyer profile. Upon successful registration, JWT tokens are issued for secure session management, and the account is provisioned for buyers' purchasing, cart usage, and other marketplace features.\n\nSecurity is enforced by requiring email uniqueness (referenced via the unique constraint on 'email' in the ai_commerce_buyer table). The password is securely hashed before storing in the 'password_hash' field. The default status is set to 'active'. Consent or legal agreements are not enforced at this endpoint but may be required by subsequent onboarding flows.\n\nThe endpoint is open to the public, with no authentication required for registration. Error responses are generated when duplicate emails are detected or invalid data is submitted. The system prevents unauthorized account elevation to non-buyer roles at the join stage. The created buyer account acts as the anchor for all future buyer-specific data (e.g., orders, favorites, addresses).\n\nThis API is tightly coupled with buyer authentication and is a required first step for onboarding into aiCommerce.","authorizationType":"join","description":"This endpoint allows a new user to join as a buyer, creating a record in the ai_commerce_buyer table. It sets up essential user fields (email, hashed password, initial status) according to the schema's constraints. Unique email enforcement prevents duplicate accounts, and the password is never stored in plaintext. Upon completion, JWT tokens are issued to the newly registered account for buyer-specific access to features like cart, orders, reviews, and favorites.\n\nAccount creation does not establish relationships with other entities until the user completes further onboarding steps (e.g., profile, addresses). Registered buyers may later be elevated to seller through separate flows. All required information comes directly from the ai_commerce_buyer schema.\n\nAfter successful execution, the response contains authorized session tokens per the defined response DTO, and initial linkage is established for all future buyer data.\n\nSecurity: email uniqueness, password hashing, and basic field validation are handled internally per schema constraints. Role elevation and additional verification occur in separate business operations.","summary":"Register a new buyer (ai_commerce_buyer table) and issue JWT tokens","parameters":[],"requestBody":{"description":"Buyer registration information as required by ai_commerce_buyer table: email, password (plain, will be hashed), and any additional initial status if needed.","typeName":"IBuyer.ICreate"},"responseBody":{"description":"Authorized session tokens and initial buyer record context upon successful registration. JWT access, refresh tokens, and buyer session info.","typeName":"IAiCommerceBuyer.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/buyer/join","method":"post"},{"specification":"Provides buyer login functionality for the aiCommerce platform, authenticating a buyer based on their email and password. This operation validates the credential against the ai_commerce_buyer table (fields: email, password_hash), ensures the buy-side account is in a valid status, and issues JWT tokens for authenticated access. The login request must supply a valid email and password, which is checked against the schema's unique constraint and hashed password for the buyer record.\n\nUpon success, the account's session is managed by issuing tokens compliant with platform security standards. Rate-limiting, account status checking (status field), and audit logging are enforced for each attempt. If authentication fails (nonexistent email, wrong password, or inactive account), the API returns a generic error to prevent information leakage.\n\nThe login operation does not permit authentication as a seller or admin; it only targets the ai_commerce_buyer role. JWT tokens grant access strictly to buyer-specific APIs and data.\n\nSecurity considerations include hashing all comparisons, returning non-enumerable error messages, and not exposing account status details. The operation does not support federated login or external authentication providers—see other APIs for those features.","authorizationType":"login","description":"Login endpoint for buyers. Validates email and password per the ai_commerce_buyer schema, checking for a non-deleted, active status account. Password is compared using secure hash, and if successful, the session management logic issues JWT access and refresh tokens using IAiCommerceBuyer.IAuthorized DTO. Account status, failed attempts, and error feedback are handled strictly by internal business rules, referencing the password_hash and status fields in the database schema. Does not support non-buyer login or social/external authentication.","summary":"Authenticate buyer by email and password (ai_commerce_buyer), return JWT tokens","parameters":[],"requestBody":{"description":"Buyer login parameters: email and password (plaintext, will be checked against stored hash in ai_commerce_buyer table, must match for successful login).","typeName":"IBuyer.ILogin"},"responseBody":{"description":"Authorized session tokens and current buyer context upon successful login. JWT access, refresh tokens, and buyer record info.","typeName":"IAiCommerceBuyer.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/buyer/login","method":"post"},{"specification":"This API endpoint enables a buyer with a valid refresh token to request a new set of access and refresh JWTs, renewing their authenticated session without re-entering credentials. It validates the provided refresh token against the session records in ai_commerce_user_authentications (specifically, the reference to buyer_id and session_expires_at fields), ensuring the session is still active, not soft-deleted, and not expired.\n\nUpon successful validation, new tokens are issued for continued authenticated access to buyer functionality. Expired or invalid tokens produce an authorization error. The response DTO follows the standardized pattern for authorized buyer sessions. Audit log entries are created for every token refresh.\n\nSecurity is enforced by strict validation of session status, session expiration (session_expires_at), and linkage to the ai_commerce_buyer. Only valid, non-expired tokens grant refreshed access. No state-changing actions are permitted through this endpoint—tokens only. All validation strictly adheres to database field definitions and current best practice for session management.","authorizationType":"refresh","description":"Refresh session JWT tokens for buyers. The submitted refresh token is validated against the session records (ai_commerce_user_authentications) for validity, non-expiry, and buyer_id linkage. Only sessions that are active, not soft-deleted, and within defined expiration windows may be refreshed. Upon validation, issues a new IAiCommerceBuyer.IAuthorized token set, while old tokens may be revoked as per the internal session policy (referencing session_expires_at and deleted_at fields). Standardized error responses for invalid/expired tokens.","summary":"Refresh buyer session tokens using a valid refresh token (ai_commerce_user_authentications).","parameters":[],"requestBody":{"description":"Refresh token and session information (must correspond to existing, active record for the buyer in ai_commerce_user_authentications table).","typeName":"IBuyer.IRefresh"},"responseBody":{"description":"New JWT access and refresh tokens for the buyer session, following IAiCommerceBuyer.IAuthorized DTO format.","typeName":"IAiCommerceBuyer.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/buyer/refresh","method":"post"},{"specification":"This operation implements the registration (join/sign-up) flow for the seller role. According to the ai_commerce_seller table in the Prisma schema, a seller account is created and linked to an existing buyer account (buyer_id) after member verification and onboarding. The endpoint collects the required registration information—email, password (which is stored as a password_hash), and any required business data via onboarding-related flows. This registration initiates the seller onboarding process (status = under_review) and triggers confirmation and compliance flows. The operation returns an initial JWT access and refresh token (IAiCommerceSeller.IAuthorized) if registration is successful. Fields referenced: email, password_hash, status, buyer_id (linked to buyer registration/role elevation), created_at. This flow is the entry-point for member-to-seller onboarding, but does not itself approve the seller; that is handled by later review steps. If the registration (email) already exists, a clear error is returned. This operation references only fields that exist in the current schema.","authorizationType":"join","description":"This endpoint handles the registration of a new seller account for the aiCommerce platform. Sellers are created as an elevated role, linked to a buyer profile via the buyer_id field. The onboarding process begins by collecting information such as email and password (stored as password_hash for security), marking the seller's status as under_review. The operation is strictly tied to the ai_commerce_seller and ai_commerce_buyer tables, making use of core authentication fields documented by the schema.\n\nThe account is set to under_review, and registration metadata such as created_at is preserved for audit/tracing. Account approval and escalation are handled separately via onboarding tables and admin processes. The response body type follows authenticated convention, issuing IAiCommerceSeller.IAuthorized, which includes JWT tokens for the session.\n\nSecurity includes validation of unique email, secure password storage, and marking created accounts as pending approval. This registration does not auto-approve; manual or automated compliance review is required thereafter. The join operation is essential for enabling the seller onboarding lifecycle, and error handling is aligned with schema constraints and business guidelines.\n\nRelated operations for login and refresh use the same authentication data model. No soft delete is performed at registration. This is the only allowed public endpoint for creating a new seller role; member and admin roles do not use this path.","summary":"Register a new seller account (ai_commerce_seller table) and issue initial tokens.","parameters":[],"requestBody":{"description":"Seller registration information (email, password, optional onboarding/kyc fields).","typeName":"IAiCommerceSeller.IJoin"},"responseBody":{"description":"Resulting authorized seller session and tokens.","typeName":"IAiCommerceSeller.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/seller/join","method":"post"},{"specification":"This operation implements the login (sign-in) flow for a seller. According to the ai_commerce_seller and ai_commerce_buyer tables (seller is linked to buyer_id), login credentials are email and password, and the password_hash field in the schema is used for secure verification. On successful authentication, the endpoint returns a new JWT set (access/refresh token) for the seller, as detailed in the IAiCommerceSeller.IAuthorized schema. Credentials are validated strictly based on the stored fields. This is not a soft delete; a suspended/deleted account (status) is denied access, matching schema business logic.","authorizationType":"login","description":"Authenticated login endpoint for sellers. Validates email and password credentials against the ai_commerce_buyer (username/email) and ai_commerce_seller (buyer_id linkage, status). Password is hashed and compared to the stored password_hash field per schema, and only active sellers are granted access.\n\nSecurity: Suspended/terminated sellers (status field) are denied login, and audit logs should be triggered per ai_commerce_audit_logs_user. On successful authentication, signed tokens are issued in the IAiCommerceSeller.IAuthorized structure.\n\nRole specificity: This login endpoint only authenticates sellers and is not available for buyers or admins. Error cases (invalid credentials, wrong status) are fully aligned with schema rules and fields.\n\nThe endpoint is the main path for session-based authentication of sellers, fit for web/mobile SDKs, and requires no pre-execution of a join endpoint if the account already exists.\n\nError handling: Invalid email/password or account status (not active) returns a clear error with no sensitive information.","summary":"Authenticate seller, issuing new JWT tokens (ai_commerce_seller, ai_commerce_buyer).","parameters":[],"requestBody":{"description":"Seller login credentials (email, password).","typeName":"IAiCommerceSeller.ILogin"},"responseBody":{"description":"Authorized session with JWT tokens for seller role.","typeName":"IAiCommerceSeller.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/seller/login","method":"post"},{"specification":"This operation implements the JWT refresh flow for the seller role. It retrieves a new access/refresh token set when provided with a valid, unexpired refresh token from a previous session. This endpoint works only for sellers, and maps to the ai_commerce_seller and ai_commerce_buyer tables, requiring an existing authenticated session. No input data from user besides the bearer token required. It returns fresh tokens upon success using the IAiCommerceSeller.IAuthorized convention. Suspended/terminated sellers (as indicated by status in the schema) are not permitted token refresh.","authorizationType":"refresh","description":"Token refresh endpoint for sellers. This operation accepts a valid refresh token tied to an active seller account (ai_commerce_seller, via buyer_id linkage). Upon validating token authenticity and session (referencing ai_commerce_user_authentications, ai_commerce_buyer, and ai_commerce_seller tables), new JWT access/refresh tokens are issued as IAiCommerceSeller.IAuthorized. No account approval/escalation is performed by this route.\n\nSecurity and status constraints: If a seller account is suspended or deleted (per status field in ai_commerce_seller), token refresh is denied. Audit logs for session/token refresh (ai_commerce_audit_logs_user) are triggered as per backend compliance expectations. No request body fields are needed—the token is extracted from the HTTP headers.\n\nThis operation is required for maintaining long-lived sessions and mobile SDK flows for seller accounts. Related endpoints (login, join) are prerequisite depending on acquisition flow, but are not called by this endpoint.","summary":"Refresh JWT tokens for valid seller session (ai_commerce_seller, ai_commerce_buyer).","parameters":[],"requestBody":null,"responseBody":{"description":"Refreshed tokens and seller session info.","typeName":"IAiCommerceSeller.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/seller/refresh","method":"post"},{"specification":"This operation handles administrator account registration for the aiCommerce platform, as represented by the ai_commerce_admin table. It enables the creation of new admin users, who gain privileged access to global settings, user and seller administration, compliance moderation, and critical business workflows. The operation requires a unique, platform-controlled email, a securely hashed password, and an initial status assignment. Only authorized internal or automated processes should invoke this endpoint, as public registration for admin roles is explicitly forbidden per business requirements. Tokens and session management are issued on successful registration through the authentication framework and ai_commerce_user_authentications table. Validation ensures email uniqueness and compliance with password security standards defined in the schema. This API operation is foundational for provisioning new administrative users and is intended for internal use only. Upstream APIs for login and refresh must reference this operation for admin onboarding workflows. It is the only entrypoint for establishing a platform administrator account at system setup or expansion.","authorizationType":"join","description":"This API registers a new administrator account on the aiCommerce platform (ai_commerce_admin table). \n\nParagraph 1: Use for platform-controlled internal provisioning (not public self-registration), as all admin actions have platform-wide impact according to the admin role definition and schema comment.\n\nParagraph 2: The request body references IAiCommerceAdmin.IJoin and expects unique email, secure password, and initial status fields. The ai_commerce_admin schema enforces email uniqueness and proper password hash storage. \n\nParagraph 3: Upon successful registration, administrator authentication is established via entry into ai_commerce_user_authentications with session/security metadata, leveraging the system's JWT/token infrastructure. \n\nParagraph 4: Only internal or automated system actors should execute this endpoint. Security must be enforced at the controller/service level to block any non-authorized invocations. Error handling covers existing email conflict and input validation.\n\nParagraph 5: Typical onboarding flows chain with admin login and session refresh using the respective authentication endpoints. All administrative actions are audit-logged as required by the business compliance layer.","summary":"Register a new admin account (ai_commerce_admin table) for platform/internal use only.","parameters":[],"requestBody":{"description":"Admin registration input (email, secure password, status).","typeName":"IAiCommerceAdmin.IJoin"},"responseBody":{"description":"Authorized admin session/tokens with admin account info.","typeName":"IAiCommerceAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/admin/join","method":"post"},{"specification":"This operation enables administrator login/authentication for ai_commerce_admin users on the aiCommerce platform. It validates administrator credentials (email, password), issues access/refresh tokens, and initializes a secure JWT-based session via ai_commerce_user_authentications. Email and credential matching are enforced per the admin table; login attempts are logged for audit and compliance. Only existing, non-suspended admin accounts may successfully authenticate. This operation is critical for all backend admin panel and monitoring functions, forming the basis of secure privileged access. Security logic must incorporate password hash comparison and session expiry management. Account lockout or suspension will result in authentication failure. Successful responses include tokens and platform administrator profile details for client session setup. Ties directly to the join and refresh operations for a complete authentication lifecycle.","authorizationType":"login","description":"Login/authentication endpoint for administrator users on the aiCommerce platform (ai_commerce_admin table). \n\nParagraph 1: Accepts admin email and password as specified in IAiCommerceAdmin.ILogin. Verifies credentials using the admin schema's password_hash and status fields.\n\nParagraph 2: Upon successful match, records a new ai_commerce_user_authentications entry and issues access/refresh tokens through JWT/session infrastructure. Suspended/deleted status or invalid credentials result in error responses as required by the compliance logic.\n\nParagraph 3: All login attempts are audit-logged, leveraging the ai_commerce_audit_logs_user schema for evidentiary and compliance enforcement. Multiple failed attempts may trigger lockout or security notifications.\n\nParagraph 4: Authorization tokens and account info are returned (IAiCommerceAdmin.IAuthorized). Session policies (expiry, refresh) are governed by the admin authentication policy determined in platform configuration. \n\nParagraph 5: To maintain secure privileged access, this operation is intended for administrator accounts only; invoke join for registration and refresh for session renewal as part of the overall authentication workflow lifecycle.","summary":"Authenticate an admin user and issue tokens (ai_commerce_admin table).","parameters":[],"requestBody":{"description":"Admin login input (email and password).","typeName":"IAiCommerceAdmin.ILogin"},"responseBody":{"description":"Authenticated admin session/tokens and profile info.","typeName":"IAiCommerceAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/admin/login","method":"post"},{"specification":"This operation allows an authenticated admin with a valid refresh token to renew their session JWT tokens for continued privileged backend access to the aiCommerce platform. It accepts a valid refresh token, validates it against records in ai_commerce_user_authentications and the admin status, and issues new access/refresh tokens as configured by the session management policy. Suspended or deleted admin accounts are blocked from refreshing sessions. Refresh attempts are fully audit-logged for compliance, and failed or expired tokens yield error responses. This endpoint ensures seamless administrator session continuity while enforcing strict role-based access and complying with the admin role's schema requirements. It is a required element of a robust administrator authentication system.","authorizationType":"refresh","description":"Allows session/token refresh for authenticated administrators on the aiCommerce platform using valid refresh tokens. \n\nParagraph 1: Accepts the refresh token as per IAiCommerceAdmin.IRefresh, validating it for existence, expiry, and linkage to an active ai_commerce_user_authentications record. \n\nParagraph 2: Admin account status is checked via the ai_commerce_admin schema; suspended/deleted statuses are blocked from refreshing. \n\nParagraph 3: On success, issues new access/refresh tokens and returns updated IAiCommerceAdmin.IAuthorized payload for privileged admin session. \n\nParagraph 4: All refresh attempts (success/failure) are logged in the ai_commerce_audit_logs_user table for compliance and traceability. \n\nParagraph 5: This endpoint is to be invoked by UI or automation just before session expiry and integrates with the login/join endpoints for full authentication lifecycle management for admin users.","summary":"Refresh admin JWT session tokens (admin authentication, ai_commerce_admin table).","parameters":[],"requestBody":{"description":"Refresh token and session info for admin account.","typeName":"IAiCommerceAdmin.IRefresh"},"responseBody":{"description":"Refreshed authentication tokens and updated admin info.","typeName":"IAiCommerceAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/admin/refresh","method":"post"},{"specification":"Implement guest (visitor) onboarding—allows an unauthenticated user to register as a member (buyer) in the system. Uses the ai_commerce_visitor (guest) and ai_commerce_buyer (member) tables. Captures required data (email, password) and hands off guest context as part of registration. Issues a temporary member JWT upon success for onboarding and initial account setup. Field mapping: Creates a row in ai_commerce_buyer with new account info, and (optionally) attaches ai_commerce_visitor context for analytics or merging. SECURITY: Only accessible without existing authentication; must not be exposed to already-logged-in users. Validates for unique email and password strength per business rules. Handles session bridging (merges guest with user if device/browser history exists). Integrates with privacy consent capture and audit logging. Related APIs: This is the entry-point for all member flows—login and refresh endpoints will be available only post-registration. Errors: Returns detailed codes for duplicate email, weak password, consent refusal, and onboarding failures, all without leaking credential info.","authorizationType":"join","description":"This endpoint enables a guest (visitor) to create a member account on the platform, represented by a new row in ai_commerce_buyer. It requires the guest to provide a unique email, a secure password, and agree to applicable privacy and onboarding terms. If the guest was tracked as an ai_commerce_visitor (browser session/device), the endpoint may bridge that context for future analytics and persistent identity. \n\nUpon successful registration, the system issues a temporary authentication token valid as a buyer (member), permitting follow-up onboarding and immediate login. The endpoint enforces uniqueness of email, password strength (minimum length, complexity, etc.), and captures consent for terms and privacy per jurisdictional requirements. If a duplicate email is found or the password does not meet security requirements, returns explicit but secure error codes. If privacy or business consent is not provided, the registration is rejected with compliance reasons. \n\nRelated flows: Successful completion allows the member to proceed to login and refresh endpoints. Pre-execution of this join is REQUIRED before those flows. \n\nDoes NOT permit registration for currently-authenticated users, to avoid session confusion or duplicate accounts. All registration and consent events are logged in the audit log (ai_commerce_audit_logs_user). \n\nError handling covers all validation (unique, password, consent), security edge cases, and bridges any known guest (ai_commerce_visitor) context for session merging.","summary":"Register a new member from guest (visitor)—creates ai_commerce_buyer with unique email/password, hands off visitor device for session bridging, and issues buyer JWT. Enforces unique email and password strength.","parameters":[],"requestBody":{"description":"Guest registration info—requires email address and password, with explicit consent for terms and privacy. May include device/session info for analytics bridge. See ai_commerce_buyer for fields.","typeName":"IAiCommerceVisitorJoin.ICreate"},"responseBody":{"description":"Returns issued buyer authorization data (initial JWT access/refresh tokens, buyer id, onboarding status). Reference: IAiCommerceVisitor.IAuthorized response DTO.","typeName":"IAiCommerceVisitor.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/visitor/join","method":"post"},{"specification":"Implements refresh token logic for guests (visitors) who completed registration or have temporary access. Uses the ai_commerce_visitor table (for original session) and issues renewed access/refresh tokens referencing latest status. Validates refresh token, session activity, and ensures continued guest eligibility. On success, returns extended session tokens and any updated onboarding metadata. Denies refresh for expired/invalid sessions or if visitor has registered/upgraded to member/admin. Security: Cannot be used to escalate privileges or impersonate registered users. Logs all refresh actions for compliance. Related flows: Typically follows the join endpoint for new members or for guest session extension. On error (expired, invalidated), requires user to re-register or upgrade. No side effects except issuing or denying new token.","authorizationType":"refresh","description":"This endpoint allows visitors/guests (ai_commerce_visitor) with a valid refresh token to renew temporary access tokens for onboarding or persistent guest/anonymous flows. It checks that the provided refresh token is active, not expired, and associated with the correct guest identity. If the guest session is still eligible, it issues new access/refresh tokens, possibly updating any onboarding context or expiring tokens.\n\nSecurity logic fully validates token authenticity, session timestamp, and ties tokens to guest visitor records as needed. If the session is expired or the visitor has registered/upgraded (i.e., is now a buyer), refresh is denied and the user is prompted to register or login. Severe errors (invalid token, privilege misuse, guest escalation) result in secure errors without exposure of session data.\n\nAll refresh flows, successful or not, are logged in the compliance/audit trail (ai_commerce_audit_logs_user) for legal and monitoring purposes.\n\nThis endpoint does not issue tokens for registered users/admins, and is strictly protected against privilege escalation. Related endpoints: join (guest registration).","summary":"Refresh a visitor (guest) session—validates refresh token, issues renewed access/refresh tokens for ai_commerce_visitor session. Expires if guest upgrades or session is invalid.","parameters":[],"requestBody":{"description":"Session refresh payload—must include valid refresh token and visitor id found in ai_commerce_visitor. See session payload structure.","typeName":"IAiCommerceVisitorRefresh.ICreate"},"responseBody":{"description":"Returns updated authorized session (access/refresh tokens, visitor id, status) if valid; otherwise, error codes for session expiration/upgrade needed. Reference: IAiCommerceVisitor.IAuthorized response DTO.","typeName":"IAiCommerceVisitor.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/visitor/refresh","method":"post"},{"specification":"This API operation allows administrators to search and retrieve a paginated, filtered list of sales channels configured in the aiCommerce platform. The underlying Prisma model is ai_commerce_channels, which provides a unified representation of each sales channel (web, mobile app, partner portal, etc). The operation supports filtering by business status, active status, name, or locale, and supports advanced searching for large deployments.","description":"This operation enables administrators to perform advanced search and pagination of sales channel records. Administrators may filter by activation status, business status, channel name, and locale, allowing efficient navigation through potentially hundreds of channels across the platform.\n\nThe operation integrates full support for pagination, sorting, and partial name matching for rapid business management. The data returned includes unique identifiers, key configuration values, and business status for each channel.\n\nAICommerce restricts channel configuration access to admin roles only. Security policies require that only authenticated admins may access this endpoint; rate-limiting and access logs are enforced at the system layer.\n\nThis endpoint is essential for global configuration, channel onboarding, and agile business management workflows. Related endpoints allow full CRUD for individual channels. Returned data strictly reflects the latest persisted state in ai_commerce_channels, excluding soft-deleted entries unless specifically filtered.","summary":"Retrieve paginated and filtered list of aiCommerce sales channels (admin only)","parameters":[],"requestBody":{"description":"Channel list search and filter criteria, including business status, locale, and activation filters.","typeName":"IAiCommerceChannel.IRequest"},"responseBody":{"description":"Paginated list of aiCommerce sales channels matching the filter criteria, including all channel properties needed for admin management.","typeName":"IPageIAiCommerceChannel"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/channels","method":"patch"},{"specification":"This operation retrieves the full detail for a specific sales channel, as stored in the ai_commerce_channels table. It is intended to provide all necessary properties for channel configuration, business rule enforcement, and display, including localized and status fields. Only admin users may access this detailed information for compliance and audit needs.","description":"This operation returns the full configuration and status details of a specific aiCommerce sales channel given its unique identifier. The detail view includes all base fields, such as code, name, locale, activation and business status, creation/update timestamps, and indexes.\n\nSecurity enforcement limits access to admins for operational integrity and auditability. The returned data exactly mirrors the stored channel in the ai_commerce_channels model and excludes soft-deleted entries.\n\nThis endpoint integrates with channel management features and is typically used in admin portals to view or edit channel information, onboard new integrations, and support compliance reporting. Invalid or non-existent IDs trigger clear not-found responses, and all accesses are logged for audit purposes.","summary":"Get detailed information for a specific aiCommerce sales channel (admin only)","parameters":[{"name":"channelId","description":"Unique identifier of the target sales channel","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed channel data for the specified aiCommerce sales channel, matching the Prisma schema definition.","typeName":"IAiCommerceChannel"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/channels/{channelId}","method":"get"},{"specification":"This operation creates a new sales channel record in the aiCommerce platform, as stored in the ai_commerce_channels table. Only admin users may create new channels. The creation requires a unique channel code, name, locale, business status, and activation flag, ensuring every new channel aligns with global platform standards. On success, the new channel record is returned.","description":"Channel creation allows platform administrators to onboard new sales outlets (such as apps, partner portals, or test platforms) into aiCommerce. All required channel attributes—code, name, locale, activation, and current workflow status—must be supplied and validated for uniqueness and schema constraints.\n\nOnly authenticated admin users may access this function. Upon creation, the new channel is assigned a system-generated UUID, and all events are audited in accordance with compliance requirements.\n\nThis operation is fundamental to aiCommerce's extensible platform model, allowing rapid expansion and configuration of new business outlets. Input validation rules enforce unique channel codes and logical business constraints, preventing conflicting configuration data. Upon creation, the entire new row as stored in the ai_commerce_channels model is returned for immediate system integration or admin display.","summary":"Create a new aiCommerce sales channel (admin only)","parameters":[],"requestBody":{"description":"Definition and configuration values for the new sales channel, including code, name, locale, and workflow status.","typeName":"IAiCommerceChannel.ICreate"},"responseBody":{"description":"Full details of the newly created aiCommerce sales channel, including all persisted fields per the Prisma schema.","typeName":"IAiCommerceChannel"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/channels","method":"post"},{"specification":"This operation updates the configuration or status of an existing sales channel, operating on the ai_commerce_channels table by its UUID. Only admin users are permitted to edit channels for compliance and operational control. Editable attributes include name, locale, activation, business status, and other allowed configuration fields. Channel code and creation timestamp remain immutable.","description":"Apply changes to essential channel properties such as name, locale, activation status, or workflow state for a specific aiCommerce sales channel by UUID. Updating a channel triggers full validation to protect unique constraints (such as code) and aligns with AICommerce's audit and compliance rules.\n\nOnly admin users can update channel records. All modifications generate audit logs to support platform forensics, with the API returning the full persisted channel after update, reflecting all schema fields.\n\nThis endpoint is integral to agile business management, channel rebranding, and operational responses to business rule/template changes. Attempts to edit system-critical or immutable fields are rejected, with clear error replies specifying the allowed field set.\n\nAll state changes are captured in the platform's audit infrastructure per compliance needs.","summary":"Update an existing aiCommerce sales channel (admin only)","parameters":[{"name":"channelId","description":"Unique identifier of the target aiCommerce sales channel to be updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated channel configuration and status information; only modifiable fields per schema","typeName":"IAiCommerceChannel.IUpdate"},"responseBody":{"description":"aiCommerce sales channel, reflecting full state after update per the Prisma schema","typeName":"IAiCommerceChannel"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/channels/{channelId}","method":"put"},{"specification":"This operation permanently deletes an aiCommerce sales channel by UUID using a soft delete (setting deleted_at per the Prisma schema). Only admin users may remove channels to ensure operational integrity and auditability. Deletion is logical (soft) for compliance, preserving all essential channel records for evidence, analytics, or rollback.","description":"Mark the specified aiCommerce sales channel as deleted by setting its deleted_at column, as per the ai_commerce_channels model. This operation supports platform compliance and evidence by enforcing soft delete—auditing all changes and preserving deleted records in the database.\n\nOnly platform admins may perform channel deletion; all actions are fully logged. Soft-deleted channels are excluded from most platform operations but can be restored or referenced for historical analytics if compliance rules permit.\n\nAttempts to remove a non-existing or already deleted channel result in a clear business error response, consistent with API error handling conventions. This is a non-reversible logical delete as defined in the AICommerce channel management schema","summary":"Soft-delete (logical removal) of an aiCommerce sales channel by UUID (admin only)","parameters":[{"name":"channelId","description":"Unique identifier of the aiCommerce sales channel to be soft-deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/channels/{channelId}","method":"delete"},{"specification":"This API operation returns a paginated, filterable list of a specific channel's configuration settings. It operates on the ai_commerce_channel_settings table, which records custom and advanced configuration properties (such as themes, feature flags, or endpoints) for each channel. Only admin users may view or manage channel settings. Supports search by key, value, or status.","description":"Enables secure retrieval of all settings attached to a specific aiCommerce channel, identified by channelId. Supports pagination and advanced filtering by key or value—for example, to find all theme configurations or feature toggles for a channel. Each setting is returned with full schema alignment to ai_commerce_channel_settings, supporting business rule enforcement.\n\nSensitive configuration data is protected—this endpoint returns only settings for the specified channel, and only admins may access these details. Audit logs track all accesses to support compliance and operational analytics.\n\nThis operation is fundamental for administrators who need to troubleshoot, audit, or rapidly modify channel settings as part of ongoing platform governance. Errors are returned if the specified channel does not exist or the admin lacks permissions.","summary":"Search and retrieve channel settings for a specified channel (admin only)","parameters":[{"name":"channelId","description":"Target sales channel UUID for which to list settings","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination options for channel settings discovery (by key, value, etc).","typeName":"IAiCommerceChannelSetting.IRequest"},"responseBody":{"description":"Paginated list of settings for the specified aiCommerce channel, per the Prisma schema","typeName":"IPageIAiCommerceChannelSetting"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/channels/{channelId}/settings","method":"patch"},{"specification":"This operation retrieves detailed information about a specific aiCommerce channel setting, using both the channel UUID and the setting UUID. It is based on the ai_commerce_channel_settings table and returns setting metadata (key, value, timestamps) for business configuration, audit, and rapid troubleshooting. Access restricted to admins to ensure compliance and configuration integrity.","description":"Given both a channelId and a settingId, retrieve all details for a single configuration setting attached to an aiCommerce sales channel. The response matches the ai_commerce_channel_settings schema and is restricted to admin usage for security and compliance. The data includes the configuration key and value, timestamps, and related channel linkage.\n\nThis endpoint is critical when troubleshooting complex deployments, enforcing business compliance, or tracking precise configuration changes across environments. Invalid or missing IDs result in a not-found response, and all accesses are tracked in system logs.\n\nReturns only channel-specific settings, ensuring admins cannot view unrelated configuration data from other channels.","summary":"Retrieve details of a specific channel setting (admin only)","parameters":[{"name":"channelId","description":"Parent aiCommerce channel's unique identifier (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"settingId","description":"Unique identifier of the channel setting (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Configuration details for the target aiCommerce channel setting per the schema.","typeName":"IAiCommerceChannelSetting"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/channels/{channelId}/settings/{settingId}","method":"get"},{"specification":"This operation creates a new configuration setting for a specific aiCommerce channel, as recorded in ai_commerce_channel_settings. Admins may define arbitrary key/value settings scoped to a channel, such as feature flags or themes. Input validation ensures no duplicate keys. Upon success, the new channel setting is persisted and returned with a unique ID and all meta fields.","description":"Allows platform administrators to add a new setting key/value for a channel, supporting modular configuration. Required fields include the parent channel ID, configuration key, and value (string or serialized). Uniqueness is enforced: the same key cannot be set twice for a given channel. Only admins may create channel settings, complying with system security and audit standards.\n\nThe endpoint returns the fully persisted setting record on success, with all relevant metadata. Attempts to insert duplicate keys or invalid data are rejected with clear messages.\n\nCommon use cases: toggling experimental features, configuring external endpoints, adjusting business logic templates. All changes are audit-logged in the platform for compliance and rollback.\n\nUpon creation, the new setting is immediately available for subsequent reads or business rule evaluation.","summary":"Create a new configuration setting for a channel (admin only)","parameters":[{"name":"channelId","description":"Target channel's unique identifier","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Key/value pair and option metadata for the new channel setting.","typeName":"IAiCommerceChannelSetting.ICreate"},"responseBody":{"description":"Full record of the newly created aiCommerce channel setting, including configuration key/value and all persisted fields.","typeName":"IAiCommerceChannelSetting"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/channels/{channelId}/settings","method":"post"},{"specification":"This operation updates an existing channel setting for a specific channel. It is associated with the ai_commerce_channel_settings table and allows administrators to modify configuration entries (such as branding, feature toggles, or URIs) governed by their 'key' and 'value' fields. The operation requires unique identifiers for the channel (channelId) and the individual setting (settingId).","description":"Update a configuration setting within a sales channel by its unique setting ID, modifying the 'key' or 'value' or both, as stored in the ai_commerce_channel_settings table.\n\nAdministrators can leverage this endpoint to apply necessary changes to enable or disable channel-specific functionalities, update feature flags, or adjust advanced business policies. Permissions must be enforced to allow only privileged admin users to execute this update operation.\n\nRelationship to the channel is validated by the foreign key constraint on ai_commerce_channel_id. All modifications are audit-logged for compliance and traceability, and any changes to unique keys or existing keys must respect uniqueness constraints in the schema.","summary":"Update an existing setting for a specific sales channel (ai_commerce_channel_settings).","parameters":[{"name":"channelId","description":"Unique identifier of the target channel","schema":{"type":"string","format":"uuid"}},{"name":"settingId","description":"Unique identifier for the channel setting to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated values for the channel setting entity","typeName":"IAiCommerceChannelSetting.IUpdate"},"responseBody":{"description":"The updated setting information as stored in ai_commerce_channel_settings","typeName":"IAiCommerceChannelSetting"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/channels/{channelId}/settings/{settingId}","method":"put"},{"specification":"This operation permanently deletes a channel setting from a sales channel, based on its unique setting ID and channel ID. It is associated with the ai_commerce_channel_settings table and ensures irreversible removal of configuration records from the database for system integrity.","description":"Administrators use this API to erase a specific configuration setting within a given channel. Given the unique setting ID and its parent channel ID, the operation performs a hard delete—removing the record from the ai_commerce_channel_settings table. All deletions are subject to business validation, including preventing deletion of settings critical for channel operation, and are logged for audit purposes.\n\nThis operation is reserved strictly for admin-level users due to potential impact on channel configuration and must adhere to referential integrity rules. Any errors or integrity constraints violations (such as deleting a non-existent or critical setting) are returned as descriptive error responses.","summary":"Delete (hard delete) a channel setting from a given sales channel (ai_commerce_channel_settings).","parameters":[{"name":"channelId","description":"Unique identifier for the channel containing the setting","schema":{"type":"string","format":"uuid"}},{"name":"settingId","description":"Unique identifier for the channel setting to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/channels/{channelId}/settings/{settingId}","method":"delete"},{"specification":"Retrieve a paginated and filterable list of all sections belonging to a specific sales channel, supporting search, sort, and business status filtering. This operation is associated with the ai_commerce_sections table and provides advanced querying for channel administrators and business managers.","description":"This API operation returns a list of all sections configured within a given sales channel, allowing advanced filtering, sorting, and pagination according to business needs. The response contains key fields such as name, code, operational status, business_status, and sort_order, as specified in the ai_commerce_sections schema.\n\nAdvanced search parameters (such as partial name match, business status, is_active, and display order) should be supplied via the request body, following the IAiCommerceSection.IRequest structure. The result is a paged response optimized for management interfaces and channel analytics workflows.\n\nThis endpoint is typically restricted to admin users or channel operators, supporting both maintenance and reporting scenarios. Validation and business rules include enforcing visibility of only non-deleted, active sections unless explicitly filtering for archived or deleted records.","summary":"Retrieve a filtered, paginated list of channel sections for a specific sales channel (ai_commerce_sections).","parameters":[{"name":"channelId","description":"Unique identifier for the target channel","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination options for section search","typeName":"IAiCommerceSection.IRequest"},"responseBody":{"description":"Paginated result set of channel sections meeting query criteria","typeName":"IPageIAiCommerceSection.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/channels/{channelId}/sections","method":"patch"},{"specification":"Retrieve complete details about a single section within a specific sales channel. The operation queries the ai_commerce_sections table using both channel and section IDs, returning all properties associated with the section entity for display or management.","description":"This API operation fetches details for a specific section within a given channel, identified by its unique sectionId and channelId. The response includes all key properties (code, name, operational status, business_status, sort_order, etc.) as defined by the ai_commerce_sections model.\n\nAccess control ensures that only administrators or privileged channel managers can view sensitive business configuration and status details. The endpoint supports audit and compliance checks—returning only the latest (non-deleted) state. Error handling includes visibility of not found, deleted, or inaccessible results, supporting secure management dashboards or integration pipelines.","summary":"Retrieve full details of a single channel section within a given sales channel (ai_commerce_sections).","parameters":[{"name":"channelId","description":"Unique identifier for the sales channel","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"Unique identifier for the channel section","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed section entity from ai_commerce_sections","typeName":"IAiCommerceSection"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/channels/{channelId}/sections/{sectionId}","method":"get"},{"specification":"Create a new merchandising or discovery section within a specific channel for business configuration or campaign activation. This operation inserts a record in the ai_commerce_sections table, with all required properties supplied in the request body. The operation must enforce data validation and name/code uniqueness per channel scope.","description":"Administrators can use this operation to establish a new section under a sales channel, providing details such as code, name, is_active, business_status, and display order, consistent with the ai_commerce_sections table structure.\n\nThe request body must satisfy all required and optional fields of IAiCommerceSection.ICreate, and the endpoint will reject requests if name/code uniqueness or validation constraints are violated within the parent channel. All creations are audit-logged and subject to business workflow rules, possibly triggering downstream events for reporting or campaign launch. Only admin-level users are authorized to perform this operation.","summary":"Create a new section for a given sales channel (ai_commerce_sections).","parameters":[{"name":"channelId","description":"Unique identifier for the target channel","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Section creation parameters as per business and schema requirements","typeName":"IAiCommerceSection.ICreate"},"responseBody":{"description":"Newly created channel section entity as stored in ai_commerce_sections","typeName":"IAiCommerceSection"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/channels/{channelId}/sections","method":"post"},{"specification":"Update an existing merchandising or discovery section under a given channel, supporting modifications of channel-specific configuration (such as name, status, or display order). This operation relates to the ai_commerce_sections table and requires full validation for uniqueness and business rules.","description":"This API operation enables administrators to adjust the properties of an existing section within a sales channel, including updating code, name, status, or display order. Path parameters specify both the target channel and section.\n\nThe request body follows IAiCommerceSection.IUpdate and must satisfy schema constraints, including uniqueness of code/name within the channel and valid state transitions (e.g., cannot set archived to active without prerequisite checks). Audit trails record all changes, and errors will be returned for missing, locked, or business-critical records. Only users with admin or equivalent privileges can use this endpoint.","summary":"Update channel section configuration for a given sales channel (ai_commerce_sections).","parameters":[{"name":"channelId","description":"Unique identifier for the sales channel","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"Unique identifier for the section to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties for the section entity according to schema and business logic","typeName":"IAiCommerceSection.IUpdate"},"responseBody":{"description":"The updated section entity from ai_commerce_sections","typeName":"IAiCommerceSection"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/channels/{channelId}/sections/{sectionId}","method":"put"},{"specification":"Permanently delete (hard delete) a merchandising or discovery section from a sales channel, based on both channel and section IDs. This operation removes the target row from ai_commerce_sections and ensures downstream references are managed according to business and referential integrity constraints.","description":"This API allows administrators to erase a specific section under a channel, removing its record from ai_commerce_sections. Both the channelId and sectionId must be specified in the path, and the operation is executed as a hard delete since no soft delete restoration logic is specified in the schema.\n\nThe process must check business rules, such as not deleting active or core sections critical for channel operation. Deletions are strictly reserved for admin users and must be audit-logged for evidence and compliance. Error handling covers non-existent, deleted, or protected sections and returns clear responses for management auditing.","summary":"Delete (hard) a section from a sales channel (ai_commerce_sections).","parameters":[{"name":"channelId","description":"Unique identifier for the parent channel","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"Unique identifier for the section to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/channels/{channelId}/sections/{sectionId}","method":"delete"},{"specification":"Retrieve a paginated and filterable list of product categories for a specific sales channel. This operation targets the ai_commerce_categories table, enabling business owners and administrators to search, filter, and sort categories based on depth, name, business_status, and parent-child relationships.","description":"This endpoint provides a flexible search and discovery interface for all categories belonging to a given channel. The request body must follow IAiCommerceCategory.IRequest, with support for pagination, search keywords, filtering by status, and hierarchical queries (including depth and parent relationships).\n\nThe response returns a paged data structure, with summary category information according to IPageIAiCommerceCategory.ISummary. This endpoint is for admin-level or privileged business users who maintain category hierarchies, and observes all access controls and business validation as defined in the ai_commerce_categories schema.\n\nValidation rules ensure uniqueness of category codes within a channel and restriction to non-deleted or active categories unless otherwise specified in query filters. Edge cases such as too deep recursion or non-existent parent references are handled with clear error messages.","summary":"Retrieve a filtered, paginated list of categories in a sales channel (ai_commerce_categories).","parameters":[{"name":"channelId","description":"Unique identifier for the target sales channel","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for category retrieval","typeName":"IAiCommerceCategory.IRequest"},"responseBody":{"description":"Paginated list of summary category details per search/filter criteria","typeName":"IPageIAiCommerceCategory.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/channels/{channelId}/categories","method":"patch"},{"specification":"This operation retrieves a single category for a given channel, identified by both channelId and categoryId. It operates on the ai_commerce_categories table, which supports hierarchical category structures mapped to specific sales channels. The purpose is to provide clients with full information about a category, including its position in the tree, business status, and visibility.","description":"This operation retrieves detailed information about a specific category under a particular channel. Categories are managed as tree structures for product classification, filtering, and analytics, each mapped to a parent channel. The operation requires both the channelId and categoryId as path parameters. It outputs all category fields including hierarchical level, parent/child relationships, activation status, business_workflow status, and audit timestamps.\n\nSecurity is considered—while category structure is readable by most users, detailed editing is reserved for administrative roles. This endpoint supports front-end category navigation, analytics, and business rule enforcement. Using the ai_commerce_categories table as defined in the Prisma schema, related data includes channel linkage, parentage, and active/archived state. Error scenarios include missing IDs, non-existent or deleted categories, and channel-category mismatches.\n\nDevelopers may use this API in combination with category listing or channel querying APIs to power mobile or web navigation, and with admin/creator permission for more advanced category management flows.","summary":"Retrieve detailed information about a specific channel category from ai_commerce_categories.","parameters":[{"name":"channelId","description":"Unique identifier of the parent sales channel (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Unique identifier of the category to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed category data including hierarchy, status, and business attributes as defined in IAiCommerceCategory.","typeName":"IAiCommerceCategory"},"authorizationType":null,"authorizationRole":null,"name":"at","path":"/aiCommerce/channels/{channelId}/categories/{categoryId}","method":"get"},{"specification":"This operation creates a new category within a specified sales channel. It is based on the ai_commerce_categories table, supporting multi-level product categorization, per-channel management, and configurable tree hierarchies. Creation requires appropriate permissions, typically granted to admin users.","description":"Admin users can create new product categories for a given channel using this endpoint. Categories are organized as hierarchical trees under channels, essential for merchandising, filtering, and analytics. When invoked, the operation validates uniqueness of the category code within the channel, required fields, and compliance with business logic (e.g., hierarchy depth, duplication prevention).\n\nThe operation processes category metadata, parent association (if not root), and visibility settings. The ai_commerce_categories Prisma model captures these details, with fields for level, business/workflow status, creation influence, and audit trails. If a new category is assigned a parentId, the endpoint ensures parent existence and correct placement in the tree. Errors may include missing/invalid parentId, duplicate code within the channel, or invalid level/sortOrder assignments. Successful creation returns the complete category object for further administrative actions or front-end refresh logic.","summary":"Create a new category under a specified channel in ai_commerce_categories.","parameters":[{"name":"channelId","description":"Unique identifier of the channel under which to create the new category (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the new category to create, including code, name, parentId, level, sort order, and status.","typeName":"IAiCommerceCategory.ICreate"},"responseBody":{"description":"The category object newly created, reflecting assigned ID, timestamps, and structure.","typeName":"IAiCommerceCategory"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/channels/{channelId}/categories","method":"post"},{"specification":"This operation updates an existing category within a sales channel. It works on the ai_commerce_categories table and supports edits to properties like name, code, sort order, business status, and hierarchy. The operation is typically performed by admin users or those entrusted with catalog management.","description":"Administrators can modify an existing product category under a sales channel with this endpoint. The ai_commerce_categories table supports updating fields such as the display name, business status, level, parent assignment, and sort order, enabling live catalog refinement and merchandising optimization.\n\nDuring an update, the API validates that the category exists under the given channel, checks the category code's uniqueness (if changed), and enforces hierarchy rules—disallowing invalid parent assignments or cyclical relationships. The operation uses the IAiCommerceCategory.IUpdate schema for the request body, and on success, returns the updated category object reflecting all changes and updated audit timestamps. Potential errors include non-existent categoryId, unauthorized channelId, duplicate code, or invalid hierarchy moves. The design follows Prisma schema's comments and business rules for multi-level categories used in channel-specific merchandising and analytics.","summary":"Update category attributes for a given channel and category in ai_commerce_categories.","parameters":[{"name":"channelId","description":"Sales channel identifier containing the category (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Target category's unique identifier (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the category, such as name, code, hierarchy, sort order, etc.","typeName":"IAiCommerceCategory.IUpdate"},"responseBody":{"description":"Updated category object after changes are committed.","typeName":"IAiCommerceCategory"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/channels/{channelId}/categories/{categoryId}","method":"put"},{"specification":"This operation permanently deletes (hard delete) a product category from a specified sales channel, using the ai_commerce_categories table. Deletion is allowed only if no products or child categories remain, enforcing strict referential integrity and business logic per compliance requirements. Only available to administrators.","description":"This endpoint allows admin users to delete a specific category from a sales channel. The ai_commerce_categories schema supports a soft delete mechanism (deleted_at), but this API performs a permanent removal: after validation, it physically removes the category, provided there are no remaining child categories or assigned products. All audit and business logic steps, such as checking dependency existence, are enforced to prevent data corruption.\n\nAttempting to delete a category with child nodes or products leads to a failure with a detailed error response. Deletion operations are logged for compliance and evidence. On success, the response confirms removal. This is a critical operation for catalog management, reflecting sales channel and category system design, and should not be used without proper administrative permissions.","summary":"Permanently delete a product category from a channel in ai_commerce_categories.","parameters":[{"name":"channelId","description":"Parent channel ID for the category (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Unique identifier of the category to be deleted (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/channels/{channelId}/categories/{categoryId}","method":"delete"},{"specification":"This operation retrieves a paginated list of section templates, which are reusable configurations for merchandising areas within sales channels. It operates on ai_commerce_section_templates, supporting filtering, search, and sorting based on template attributes. Common use cases include admin and advanced seller operations for catalog planning and rapid section instantiation.","description":"Retrieves a filtered and paginated list of section templates used for defining merchandising layouts and logic in channels. The ai_commerce_section_templates model enables admins and business users to efficiently retrieve, analyze, and select templates for new sections. The request body allows complex querying—filtering by name, is_default, business_status, date range, etc.—and supports server-side paging, search keyword, and sort fields.\n\nTemplates may be prebuilt for rapid business rollout, and are vital in AI-driven as well as manual merchandising. This API aligns with business workflow, providing analytics and template insights for channel curation. Results include core template metadata, status, and audit fields for each template. Business logic enforces access restrictions for editing but allows read access to most authenticated users or public endpoints.","summary":"List and search section templates in ai_commerce_section_templates with filtering and pagination.","parameters":[],"requestBody":{"description":"Filtering and pagination criteria for section template retrieval.","typeName":"IAiCommerceSectionTemplate.IRequest"},"responseBody":{"description":"Paginated summary list of matching section templates.","typeName":"IPageIAiCommerceSectionTemplate.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/sectionTemplates","method":"patch"},{"specification":"This operation retrieves detailed information for a specific section template identified by its unique templateId. It operates on ai_commerce_section_templates, a central entity for template-based channel merchandising setup and planning. Intended for admin and business users who require full insight into template structure before using or editing.","description":"Fetch detailed information on a single section template used for channel merchandising. Each section template is a modular, reusable definition, supporting business logic for rapid channel setup and AI personalization. The ai_commerce_section_templates schema defines required template fields, including code, name, configuration data (serialized), is_default, status, creation, and update timestamps.\n\nAccess to this endpoint is generally allowed for admin users and supports catalog planning, analytics, or prefill in UI forms. Error scenarios include invalid templateId, lack of access permission, or deleted/retired templates. The response returns complete template details as per Prisma schema comments.","summary":"Retrieve full details of a specific section template from ai_commerce_section_templates.","parameters":[{"name":"templateId","description":"Unique identifier of the section template to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete section template object as defined by the IAiCommerceSectionTemplate entity.","typeName":"IAiCommerceSectionTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/sectionTemplates/{templateId}","method":"get"},{"specification":"This operation allows admins to create a new section template for merchandising in channels. Section templates are reusable blueprints for defining the layout, content, and business rules of channel sections. Stored in ai_commerce_section_templates, they support versioning, rapid rollout, and AI-powered merchandising workflows. Only admins can create templates that affect channel configuration.","description":"Enables admin users to define and register a new section template for use in business merchandising, channel planning, or AI configuration. The ai_commerce_section_templates Prisma model captures input fields like template code, name, template_data (as serialized configuration), is_default status, and workflow status. The API request body validates template code uniqueness, field completeness, and accepted configuration schema. On success, the created template is returned for further workflow steps or UI display.\n\nBusiness rules prevent duplicate template codes and require all mandatory fields. This API powers advanced merchandising automation and rapid section instantiation. Errors include existing code, malformed template_data, or unauthorized calls. Audit trails are enforced per Prisma schema comments and compliance requirements.","summary":"Create a new section template in ai_commerce_section_templates.","parameters":[],"requestBody":{"description":"Fields required to define a new section template, such as code, name, configuration data, and status.","typeName":"IAiCommerceSectionTemplate.ICreate"},"responseBody":{"description":"Section template object that has been successfully created, including assigned ID and timestamps.","typeName":"IAiCommerceSectionTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/sectionTemplates","method":"post"},{"specification":"This operation updates an existing section template, modifying fields such as code, name, configuration, and business status in the ai_commerce_section_templates table. Section templates are critical for channel section planning, curation, and template-based deployment. Update is permitted only for admin users, and versioning/audit trails must be respected for compliance.","description":"Modifies the configuration or metadata of an existing section template, supporting business side template revision, versioning, and rapid iteration on merchandising logic. This endpoint uses the ai_commerce_section_templates Prisma model for full update capability, including the template code, name, template_data blob, is_default state, status, and timestamps. The update API ensures only authorized admins make changes and validates template code uniqueness, configuration integrity, and field completeness.\n\nOperations are logged with before/after state for compliance and traceability. On successful update, the latest template object is returned for UI refresh or workflow continuation. Potential errors are missing templateId, code conflicts, or invalid configuration data. Uses IAiCommerceSectionTemplate.IUpdate schema for request body; admins only permitted as actors.\n\nRelated APIs include template list/retrieval and section instantiation using this template.","summary":"Update an existing section template in ai_commerce_section_templates.","parameters":[{"name":"templateId","description":"Identifier of the template to update (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the template, such as code, name, template_data, etc.","typeName":"IAiCommerceSectionTemplate.IUpdate"},"responseBody":{"description":"The revised section template reflecting latest updates.","typeName":"IAiCommerceSectionTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/sectionTemplates/{templateId}","method":"put"},{"specification":"This operation deletes a section template by its unique identifier, removing its configuration from the system. It operates on the ai_commerce_section_templates table, enabling administrators to retire or eliminate obsolete or unused section templates. The deletion is a soft delete as indicated by the presence of the deleted_at field, preserving audit trails and allowing recovery in compliance with platform business rules and regulatory requirements. This process is subject to permission checks to restrict template removal to authorized admin users.","path":"/aiCommerce/admin/sectionTemplates/{templateId}","method":"delete","summary":"Remove a section template (soft delete) by template ID from ai_commerce_section_templates.","description":"Deletes a specific section template based on its unique templateId, referencing the ai_commerce_section_templates table. This API performs a soft logical deletion by updating the deleted_at field, in line with audit and evidence requirements for legal compliance and rollback.\n\nOnly administrator roles are permitted to perform this operation, ensuring that only vetted users can remove section templates from the business configuration. Audit trails of this deletion are automatically generated per platform business rules, guaranteeing investigatory and compliance needs are met.\n\nAttempting to delete a template that is still actively referenced by sections, channels, or merchandising flows will result in a validation error, and the operation will fail with appropriate messaging. Error handling ensures that database consistency and referential integrity are always maintained.\n\nThis operation can be paired with the get (detail) operation to ensure the template contents and usage can be inspected before deletion. It is also related to the list/search operation for administrators managing many templates.","parameters":[{"name":"templateId","description":"The unique identifier of the section template to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of category templates from the ai_commerce_category_templates table. It is designed to provide administrators with advanced search capabilities across existing category organization templates, supporting efficient template management and selection for channel/category configuration tasks. The endpoint supports pagination, search, and sorting as per business requirements.","path":"/aiCommerce/admin/categoryTemplates","method":"patch","summary":"List and search category templates (paginated, filterable) from ai_commerce_category_templates.","description":"Retrieves a paginated and filterable list of all category templates in the ai_commerce_category_templates table. Administrators can search by name, code, business status, or creation/update timestamps. This enhances large-scale management of reusable category hierarchies and accelerates onboarding of new channels or merchants.\n\nSecurity is strictly enforced—only admins can access this endpoint, ensuring that only privileged users can see, review, or repurpose organization templates across projects. Audit logs are maintained for all accesses of this API for compliance review.\n\nFiltering supports advanced use-cases including partial name/code match, business status selection, and sorting by created/updated times, designed to integrate seamlessly with the CMS or backoffice UI.\n\nError handling returns clear messages for invalid pagination, unsupported search criteria, or sorting constraints. The response structure includes pagination metadata and a summary of template state for each entry.","parameters":[],"requestBody":{"description":"Criteria for searching, filtering, and paginating category templates.","typeName":"IAiCommerceCategoryTemplate.IRequest"},"responseBody":{"description":"Paginated results of category template summaries as defined in ai_commerce_category_templates.","typeName":"IPageIAiCommerceCategoryTemplate.ISummary"},"authorizationRoles":["admin"],"name":"index","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves details of a specific category template using its unique templateId from the ai_commerce_category_templates table. Intended for administrative business users, it provides the configuration structure, metadata, and audit fields for inspection, review, or editing workflows within the platform.","path":"/aiCommerce/admin/categoryTemplates/{templateId}","method":"get","summary":"Get details for a specific category template from ai_commerce_category_templates.","description":"Fetches the complete detail and configuration data for a category template referenced by templateId, including business rules, JSON-encoded hierarchical structure, approval status, and timestamps from ai_commerce_category_templates.\n\nThis endpoint enables administrator roles to view and verify a category template before applying, editing, or deleting, supporting business rule enforcement, change review, and audit workflows for category organization.\n\nThe API is only accessible by admin users; authorization is enforced to prevent exposure of internal configuration logic. Full error handling is provided for invalid or non-existent IDs, and audit logs are generated for all access runs. This is typically paired with update or erase operations in API workflows.","parameters":[{"name":"templateId","description":"The UUID of the category template to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the category template, as defined in ai_commerce_category_templates.","typeName":"IAiCommerceCategoryTemplate"},"authorizationRoles":["admin"],"name":"at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new category template in the ai_commerce_category_templates table. It enables platform administrators to formalize reusable category hierarchies, facilitating standardized category onboarding for channels and supporting large-scale merchandising, analytics, and AI personalization modules.","path":"/aiCommerce/admin/categoryTemplates","method":"post","summary":"Create a new category template in ai_commerce_category_templates.","description":"Creates and registers a new reusable category template in ai_commerce_category_templates. The operation expects a payload containing all required template metadata and data structure (typically including name, code, serialized category tree, is_default flag, and business status).\n\nStrict validation is applied for template naming, code uniqueness, serialized structure, and business rule compliance. On success, a new template entry is created with all audit fields populated for evidence-preserving compliance.\n\nThis endpoint is restricted to administrative users due to its impact on global category setup. It returns the complete created template entity, including all fields for immediate use or further editing.\n\nIf the creation request attempts to violate unique code constraints or submit malformed template data, the server returns an error message with correction guidance.","parameters":[],"requestBody":{"description":"The creation data for a new category template.","typeName":"IAiCommerceCategoryTemplate.ICreate"},"responseBody":{"description":"The created category template, including all configuration and audit fields.","typeName":"IAiCommerceCategoryTemplate"},"authorizationRoles":["admin"],"name":"create","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing category template in the ai_commerce_category_templates table. It is used by administrators to revise the template's metadata, hierarchy structure, or business status for future use in channels and analytics. Audit trails are preserved by updating the record.","path":"/aiCommerce/admin/categoryTemplates/{templateId}","method":"put","summary":"Update a category template by templateId in ai_commerce_category_templates.","description":"Modifies an existing category template in ai_commerce_category_templates, identified by the templateId path parameter. The request body contains the update data for the template, such as changes to name, code, tree structure, or status fields, in compliance with business rules and schema constraints.\n\nThe operation enforces strict admin-only access and is designed for multi-stage review and approval workflows. All modifications update the updated_at field and retain the audit trail, supporting rollback and legal compliance.\n\nIf the update request would result in a code conflict, invalid template tree, or unsupported status/value, the operation fails with descriptive error messages. This endpoint is typically paired with get (detail) or erase (delete) ops in platform settings UIs.","parameters":[{"name":"templateId","description":"The UUID of the category template to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the category template.","typeName":"IAiCommerceCategoryTemplate.IUpdate"},"responseBody":{"description":"The updated category template full detail.","typeName":"IAiCommerceCategoryTemplate"},"authorizationRoles":["admin"],"name":"update","authorizationRole":"admin","authorizationType":null},{"specification":"This operation performs a soft deletion of a category template within ai_commerce_category_templates, identified by templateId. Instead of irreversible deletion, the operation sets the deleted_at field, ensuring template removal is traceable and recoverable per compliance and audit requirements.","path":"/aiCommerce/admin/categoryTemplates/{templateId}","method":"delete","summary":"Soft delete a category template by templateId (ai_commerce_category_templates).","description":"Soft deletes a category template specified by templateId from the ai_commerce_category_templates table. This logical removal marks the template as deleted via the deleted_at column, preserving legal evidence, supporting rollback or audit, and maintaining referential integrity across channel/category configuration.\n\nAuthorization is strictly admin-only for deletion, with audit logs enforced for all delete operations. Attempting to delete a template referenced by active channels or with binding relationships will return an error to prevent orphaned configurations.\n\nAdministrators are encouraged to use the get detail operation prior to deletion to confirm status and impact. Successful requests receive a confirmation response, while failure cases return a structured error.","parameters":[{"name":"templateId","description":"UUID of the category template to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This endpoint retrieves a paginated and filterable list of business rule templates from the ai_commerce_business_rule_templates table, supporting administrative review, workflow management, and configuration validation. It enables platform admins to locate, search, and manage business logic configurations and associated templates efficiently.","path":"/aiCommerce/admin/businessRuleTemplates","method":"patch","summary":"Search and retrieve business rule templates (paginated) from ai_commerce_business_rule_templates.","description":"Retrieves a paginated, filterable, and sortable list of business rule templates from the ai_commerce_business_rule_templates table. The response provides summary metadata for each template, including code, version, business status, creation dates, and approval flows, facilitating management by platform administrators.\n\nAuthorization is restricted to admin users to protect core business/process logic. All accesses are logged for compliance. Searching can be applied by template code, status, version, or business context fields. Sorting and pagination are supported as per CMS-integrated UI requirements.\n\nFailures due to invalid filters or pagination return actionable error messages. This list operation is commonly paired with template detail, create, update, and delete endpoints for full template lifecycle management.","parameters":[],"requestBody":{"description":"Search criteria and pagination settings for business rule templates.","typeName":"IAiCommerceBusinessRuleTemplate.IRequest"},"responseBody":{"description":"Paginated collection of business rule template summaries from ai_commerce_business_rule_templates.","typeName":"IPageIAiCommerceBusinessRuleTemplate.ISummary"},"authorizationRoles":["admin"],"name":"index","authorizationRole":"admin","authorizationType":null},{"specification":"This endpoint retrieves the full detail of a specific business rule template, identified by ruleId, from the ai_commerce_business_rule_templates table. It is used by administrators to inspect, review, or prepare a template for workflow changes, ensuring compliance and operational consistency.","path":"/aiCommerce/admin/businessRuleTemplates/{ruleId}","method":"get","summary":"Retrieve details of a business rule template by ruleId from ai_commerce_business_rule_templates.","description":"Fetches the detailed information for a business rule template, including code, version, serialized rule logic, statuses, and audit fields, based on the provided ruleId path parameter. The operation enables administrator users to fully inspect the template's configuration, business logic, and workflow context before making edits or changes.\n\nAuthorization is strictly reserved for admins to safeguard process configuration. All accesses are audit-logged. Attempting to retrieve a non-existent or inaccessible ruleId will result in a clear error message. Typically paired with create, update, and delete operations for comprehensive template management.","parameters":[{"name":"ruleId","description":"The UUID of the business rule template to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Business rule template detail as defined by ai_commerce_business_rule_templates.","typeName":"IAiCommerceBusinessRuleTemplate"},"authorizationRoles":["admin"],"name":"at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation allows administrators to create a new business rule template for use in configuration, workflow, or promotional logic. It corresponds to the ai_commerce_business_rule_templates table in the database, enabling modular rule logic to be versioned and deployed for channels, sections, or categories. All required business fields are captured and persisted along with operational status and audit timestamps.","description":"Create a new business rule template by specifying the required code, name, version, rules/configuration data, business status, and timestamps. Business rule templates can be attached to channels, sections, or categories, and are versioned for audit and compliance. Only administrators are authorized to create new rule templates, and each template code must be unique per version. This operation collects all necessary properties (code, name, version, template_data, business_status, created_at, updated_at) as defined in the ai_commerce_business_rule_templates schema.\n\nSecurity is enforced such that only users with the admin role are permitted to call this endpoint. Upon creation, the template becomes available for linking to channel/section/category configurations.\n\nValidation rules include uniqueness of code/version and non-null config fields. Errors occur for missing required fields or conflicts in code/version pairs.","summary":"Create a new business rule template (ai_commerce_business_rule_templates).","parameters":[],"requestBody":{"description":"Business rule template creation payload. Required: code, name, version, template_data, business_status, created_at, updated_at.","typeName":"IAiCommerceBusinessRuleTemplates.ICreate"},"responseBody":{"description":"Details of the newly created business rule template.","typeName":"IAiCommerceBusinessRuleTemplates"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/businessRuleTemplates","method":"post"},{"specification":"This operation updates an existing business rule template identified by its ruleId (primary key). It lets administrators update properties such as name, version, configuration rules, or operational status. The operation targets the ai_commerce_business_rule_templates table and ensures auditability and versioning.","description":"Update a business rule template by specifying its ruleId and providing new configuration values for name, template data, status, or version. The ai_commerce_business_rule_templates schema governs the modifiable properties and requires all updates to be audit-logged. Only administrators can perform updates, and the ruleId must be valid and correspond to an existing record.\n\nThis operation enforces data validation on editable fields, ensures uniqueness of (code, version), and maintains audit trails according to business compliance needs. Errors may occur if the ruleId is invalid, the template does not exist, or updates violate uniqueness constraints.","summary":"Update an existing business rule template (ai_commerce_business_rule_templates).","parameters":[{"name":"ruleId","description":"Unique identifier of the business rule template to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update details for the business rule template.","typeName":"IAiCommerceBusinessRuleTemplates.IUpdate"},"responseBody":{"description":"Updated business rule template details.","typeName":"IAiCommerceBusinessRuleTemplates"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/businessRuleTemplates/{ruleId}","method":"put"},{"specification":"Enables administrators to permanently delete (hard delete) an existing business rule template in the ai_commerce_business_rule_templates table, given its ruleId (primary key). Only templates not actively associated with any live configuration should be removed to preserve compliance.","description":"Delete an existing business rule template by providing the ruleId. This operation removes the template record from the database, and is limited to administrative users to ensure compliance and avoid accidental loss of critical business logic. The ruleId parameter must reference a valid template. The operation performs a hard delete—template records are permanently removed and cannot be recovered. The deletion is disallowed if the template is referenced by a live configuration.\n\nOperation is fully audit-logged, and errors are returned if the template is referenced elsewhere or the ruleId is invalid.","summary":"Delete a business rule template permanently (ai_commerce_business_rule_templates).","parameters":[{"name":"ruleId","description":"Unique identifier for the business rule template to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/businessRuleTemplates/{ruleId}","method":"delete"},{"specification":"Retrieves a paginated, searchable list of audit log entries from the ai_commerce_audit_logs_system table for system configuration events, administrative actions, and template version changes. This enables administrators to monitor and trace all changes at the system configuration level across the platform.","description":"Provides advanced search/filter capabilities to discover audit log entries according to parameters such as event type, actor, target table, or creation date. All audit events (creation, edit, deletion related to config/templates/channels/categories, etc.) are included. The request supports complex query filters, pagination, and sorting as per the ai_commerce_audit_logs_system schema.\n\nOnly admin role users may access full audit log data. Sensitive content is filtered or redacted according to business compliance policy. The response includes a paginated list of audit log entries with complete event details and metadata as defined by the ai_commerce_audit_logs_system model. Errors are returned on malformed filters or pagination parameters.","summary":"Search and retrieve system audit logs (ai_commerce_audit_logs_system).","parameters":[],"requestBody":{"description":"Search criteria and pagination info for audit logs.","typeName":"IAiCommerceAuditLogsSystem.IRequest"},"responseBody":{"description":"Paginated and filtered list of system audit logs matching search criteria.","typeName":"IPageIAiCommerceAuditLogsSystem"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/auditLogsSystem","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Fetches the details of a specific audit log entry using its logId primary key in the ai_commerce_audit_logs_system table, enabling administrators to review event histories and changes for system configuration, security, or compliance.","description":"Retrieve all details for a single audit log event identified by logId, including type of event, actor, before/after data snapshots, and the timestamp. Useful for forensic review or as legal evidence of configuration changes. The logId parameter must be a valid UUID referencing an existing audit entry.\n\nAuthorization is restricted to admins. The retrieved data includes full event context as stored in the ai_commerce_audit_logs_system table. Errors are returned if logId is invalid or if the log entry does not exist.","summary":"Get details for a single system audit log (ai_commerce_audit_logs_system).","parameters":[{"name":"logId","description":"Unique identifier for the audit log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested audit log entry.","typeName":"IAiCommerceAuditLogsSystem"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/auditLogsSystem/{logId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Lists or searches aggregated channel analytics data from ai_commerce_analytics_channels. Allows admins to retrieve analytics summaries, filtering by date, channel, or other parameters, for performance analysis or business insight.","description":"Search and retrieve analytics channel summaries, supporting advanced filter, pagination, and sorting options. Only admin role can access or query detailed analytics, which cover channel KPIs such as total orders, sales amount, number of buyers, and stat date. The results are based on the ai_commerce_analytics_channels model and can be used for business intelligence dashboards and compliance reporting.\n\nAll searches are logged for audit. Errors are raised if search parameters are missing or malformed.","summary":"Search and list analytics channel summaries (ai_commerce_analytics_channels).","parameters":[],"requestBody":{"description":"Filter and paging criteria for analytics channels.","typeName":"IAiCommerceAnalyticsChannels.IRequest"},"responseBody":{"description":"Paginated analytics channels result set.","typeName":"IPageIAiCommerceAnalyticsChannels"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/analyticsChannels","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Fetches the analytics summary for a specific channel by channelAnalyticsId (primary key) in ai_commerce_analytics_channels. Serves admin performance dashboard, compliance, or reporting use cases.","description":"Get analytics summary and KPI details for a specific channel, by its unique identifier (channelAnalyticsId). The result includes order statistics, sales, buyers, and analytic timestamps, as persisted in the ai_commerce_analytics_channels model. Only admins may view this data, and the channelAnalyticsId must be valid. Returned data is used for business monitoring and compliance requirements.\n\nErrors are returned if the ID is invalid or does not exist.","summary":"Get analytics KPI summary for a specific channel (ai_commerce_analytics_channels).","parameters":[{"name":"channelAnalyticsId","description":"Primary key identifier for analyticsChannels record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full analytics channel KPI summary for the specified channel.","typeName":"IAiCommerceAnalyticsChannels"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/analyticsChannels/{channelAnalyticsId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Search and paginate through attachments (ai_commerce_attachments) uploaded by users (buyers/sellers), for business review or admin management. This operation allows admins to efficiently audit attachments, check for status, ownership, or compliance metadata, and monitor platform files.","description":"Retrieves a paginated list of attachments, filtering by attributes such as status, business type, user, or created_at timestamp. This is used for compliance review, file management, and can also support user reports of attachments. The request supports advanced filters and complex paging as per the ai_commerce_attachments schema.\n\nThis endpoint is strictly admin-only for system-wide attachment management. Sensitive data is appropriately redacted in the results. Errors are returned if filters are malformed or required parameters are missing.","summary":"Search and paginate uploaded attachments for review (ai_commerce_attachments).","parameters":[],"requestBody":{"description":"Filtering and paging criteria for attachment search.","typeName":"IAiCommerceAttachments.IRequest"},"responseBody":{"description":"Paginated attachments business data set.","typeName":"IPageIAiCommerceAttachments"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/attachments","method":"patch"},{"specification":"Retrieves metadata and access information for a specific attachment file in the attachment subsystem, enabling buyers or sellers to obtain file links, audit logs, and file status as defined in the ai_commerce_attachments table. The operation supports access control checks based on user role and attachment permissions. This endpoint is used to provide secure download, preview, or evidence management of attached files in product, inquiry, or notification-related workflows. Only metadata and file URI are returned; direct download is governed by access policies. All access events are recorded for compliance logging.","description":"This operation retrieves the detailed metadata and file access information for a single attachment, identified by its unique attachmentId. The ai_commerce_attachments table, as outlined in the schema, tracks file ownership, filename, business context, status, and timestamps, supporting buyers and sellers in uploading and managing their asset files.\n\nWhen an attachment is accessed, the system verifies user role and attachment association to ensure access control. Buyers can access only their own files, while sellers and admins have broader rights based on entity linkage. The operation only returns metadata and access URI; actual file retrieval obeys further permissions and CDN integration logic. All accesses are audited in the ai_commerce_attachment_access_audit table for compliance monitoring.\n\nAuthorization is enforced at the controller level. Read-only; modification and deletion are handled by other endpoints. This endpoint does not provide direct download but returns the required URI and metadata for file management within the commerce platform.","summary":"Retrieve metadata and access info for an attachment (ai_commerce_attachments table).","parameters":[{"name":"attachmentId","description":"Unique identifier for the target attachment file","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The metadata and access URI for the target attachment","typeName":"IAiCommerceAttachment"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/attachments/{attachmentId}","method":"get"},{"specification":"Creates a new file attachment in the attachment subsystem, allowing authenticated buyers or sellers to upload product images, evidence, or other business files. Operates on the ai_commerce_attachments table and initiates a new record with proper metadata, linking the file to business entity and user account. On success, returns metadata and file URI as required for further business processes. Initiates versioning and triggers file virus/format scan by background services. This endpoint powers product, UGC, and notification workflows for file uploads.","description":"This operation creates a new attachment record as specified in the ai_commerce_attachments schema. Buyers or sellers call this endpoint to upload a file for use in products, inquiries, reviews, comments, or notifications. The request body must include all required metadata, such as filename, business context (e.g., favorite_screenshot, notification_attachment), and reference to user ownership.\n\nThe operation performs access control checks, ensures that the user has the necessary role to upload in the given context, and starts the standard scan/validation process for the file. The attached file itself should be referenced by a URI as string, not binary upload. Metadata, including status and version, are stored for compliance and recovery. All uploads are appended to the audit trail.\n\nReturns the created attachment's metadata and accessible link as per business rules defined in the schema. Errors may result from validation failure, file type or size limits, or permissions issues. This endpoint is central for enabling users to personalize and evidence their business entities securely.","summary":"Create a file attachment (ai_commerce_attachments table) and return metadata/URI.","parameters":[],"requestBody":{"description":"Attachment information, including file metadata and business association, for upload","typeName":"IAiCommerceAttachment.ICreate"},"responseBody":{"description":"Attachment metadata and access URI for the created file","typeName":"IAiCommerceAttachment"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/attachments","method":"post"},{"specification":"Updates metadata or business context of an existing attachment owned by an authenticated buyer or seller. Enables file renaming, business purpose adjustment, or status changes in the ai_commerce_attachments table. Does not alter underlying file version or content; separate endpoints exist for file re-upload/versioning. All updates are audit logged per compliance requirements. Business context (e.g., business_type) and user ownership are strictly enforced.","description":"This operation updates the properties of an attachment, excluding the file's binary content, as per the ai_commerce_attachments schema. Allowed updates include filename (renaming), business_type (e.g., favorite_screenshot, notification_attachment), and status (active, quarantined, deleted) if permitted by business logic. The operation enforces role-based access, ensuring only file owners or admins can update the record. Each modification is logged in the ai_commerce_attachment_access_audit table for evidence.\n\nRenaming and status changes are validated to avoid business logic conflicts (e.g., status cannot be set to quarantined without system scan result). The operation strictly prohibits file content/version uploads, which are managed by different endpoints.\n\nReturns the updated attachment metadata and URI. Invocation may fail due to access control, invalid status transitions, or missing record. The operation supports recovery, evidence, and business context management.","summary":"Update attachment metadata (not file content) in ai_commerce_attachments table.","parameters":[{"name":"attachmentId","description":"Unique identifier for the attachment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The fields to update in the attachment record (metadata, status, association)","typeName":"IAiCommerceAttachment.IUpdate"},"responseBody":{"description":"The updated attachment metadata and access URI","typeName":"IAiCommerceAttachment"},"authorizationType":null,"authorizationRole":"buyer","name":"update","path":"/aiCommerce/buyer/attachments/{attachmentId}","method":"put"},{"specification":"Removes (soft deletes) an attachment file by marking its deleted_at timestamp in ai_commerce_attachments. Only owners or admins can erase an attachment. The attachment is not physically removed and can be restored via audit workflows as per compliance/retention rules. Actual file unavailability and discovered links are managed by background services after logical deletion. All erasures are audit logged for traceability.","description":"This operation performs a soft delete of an attachment as described in the ai_commerce_attachments schema. Rather than physically erasing the file, the system updates the deleted_at field to the current timestamp, effectively hiding the attachment from standard user access, while retaining it for evidence, legal, or audit purposes. Only the file's owner or platform admins can erase an attachment.\n\nSoft deletion is necessary for compliance with privacy, audit, and right-to-forget business rules. The erase operation ensures data integrity, logs all actions, and triggers downstream processes such as scheduled physical deletion or restoration handling if required by compliance.\n\nInvocation requires authentication and verifies ownership/permissions before updating the attachment record. This ensures no unauthorized deletions occur. Cannot be used to erase files referenced by compliance holds or in active legal cases. No content is returned, as the attachment is logically removed.","summary":"Soft delete an attachment file (ai_commerce_attachments table) by marking deleted_at timestamp.","parameters":[{"name":"attachmentId","description":"Unique identifier for the attachment to erase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase","path":"/aiCommerce/buyer/attachments/{attachmentId}","method":"delete"},{"specification":"Provides a paginated and filterable list of seller onboarding cases in the ai_commerce_seller_onboarding table. Used by admins to monitor, review, and process all seller onboarding applications, including status (draft, submitted, reviewing, approved, rejected, escalated), timestamps, and business context. Supports advanced search by onboarding status, created date, user reference, and stage. Returns summaries suitable for dashboards and review lists, covering onboarding progress tracking and compliance workflows.","description":"This operation returns a filtered, paginated list of all seller onboarding records within the ai_commerce_seller_onboarding table. Admins can use advanced search criteria—including onboarding_status, created_at, user references, or current_stage—to monitor the flow and progress of seller onboarding applications. The operation supports business workflows around onboarding review, KYC compliance, and escalation.\n\nEach result in the list provides a summary of the onboarding application: applicant association, current status, timestamps, and business context. Pagination and sorting are available for dashboards and compliance review queues. The endpoint enables administrators to quickly filter for applications requiring intervention, escalation, or documentation. Records are retrieved with audit compliance, omitting deleted or non-relevant cases unless explicitly requested.\n\nNo personally identifiable or sensitive KYC data is exposed without proper authorization. Errors may occur if non-admin roles attempt access or if listing criteria are malformed.","summary":"Retrieve paginated/searchable seller onboarding application list (ai_commerce_seller_onboarding table).","parameters":[],"requestBody":{"description":"Search filters and pagination for onboarding applications","typeName":"IAiCommerceSellerOnboarding.IRequest"},"responseBody":{"description":"Paged result list of seller onboarding application summaries","typeName":"IPageIAiCommerceSellerOnboarding.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/sellerOnboardings","method":"patch"},{"specification":"Retrieves the full details of a specific seller onboarding application from ai_commerce_seller_onboarding by unique onboarding ID. Used by administrators to review all information, business context, application data, current status, and compliance/audit fields. Supports detailed investigation, escalation, or approval process steps directly. Strong access control is enforced to protect sensitive onboarding information and compliance-related documentation.","description":"This operation returns detailed information for a seller onboarding application from ai_commerce_seller_onboarding, identified by sellerOnboardingId. All application fields are included, including application_data (KYC, disclosures, supporting docs), onboarding_status, current_stage, notes, and audit fields (created_at, updated_at, deleted_at). This endpoint is strictly admin-restricted due to sensitive compliance and KYC content.\n\nUse cases include onboarding review, compliance audit, escalation, or final approval/denial workflow. The administrator can access application details for a comprehensive review, request further documentation, or make an approval/rejection decision within compliance guidelines.\n\nThe operation enforces data access policies at the controller and service layer, ensuring private and sensitive fields are protected. If the onboarding record is not found or the requester lacks authorization, an error is returned.","summary":"Get full details for a specific seller onboarding application (ai_commerce_seller_onboarding table).","parameters":[{"name":"sellerOnboardingId","description":"Unique identifier for the seller onboarding application","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All details of the seller onboarding application","typeName":"IAiCommerceSellerOnboarding"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/sellerOnboardings/{sellerOnboardingId}","method":"get"},{"specification":"Initiates creation of a new seller onboarding application in the ai_commerce_seller_onboarding table. Enables a user (buyer aspiring to be seller) to submit application details, supporting documents, and business disclosures for KYC and compliance processing. Initial onboarding_status is set (typically 'draft' or 'submitted'), and validation of business logic and compliance checks is performed on input. Upon creation, a new onboarding case is tracked for approvals and status changes.","description":"This operation creates a new seller onboarding application record as specified in ai_commerce_seller_onboarding. It is invoked by a buyer user seeking to become a seller and submit all required application data for onboarding, including KYC documentation, legal disclosures, and business details packed in application_data. The system validates the request, assigns the appropriate onboarding_status, and stores all necessary compliance evidence.\n\nInitiation triggers onboarding workflow and KYC checks. On success, the onboarding application is ready for review by compliance/admin personnel. On failure, errors may result from validation, missing documents, or business rule mismatches. After creation, the user can track onboarding progress and participate in further onboarding steps (e.g., KYC submission, media uploads, escalation).\n\nAdmin, seller, and compliance roles may reference onboarding status for approval or escalation.","summary":"Create new seller onboarding application (ai_commerce_seller_onboarding table).","parameters":[],"requestBody":{"description":"Information for new onboarding application (application_data, applicant, business disclosure)","typeName":"IAiCommerceSellerOnboarding.ICreate"},"responseBody":{"description":"Created seller onboarding application record with identifiers and workflow status","typeName":"IAiCommerceSellerOnboarding"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/sellerOnboardings","method":"post"},{"specification":"Updates an existing seller onboarding application in ai_commerce_seller_onboarding. Allows the applicant or admin to modify application data, onboarding_status, current_stage, or notes, subject to business workflow and audit constraints. Enforces workflow transitions (e.g., 'submitted','reviewing','approved','rejected','escalated'). All changes are audit logged, with status transitions requiring compliance with onboarding process rules. Status transitions and data updates are strictly controlled for audit evidence.","description":"This operation updates the fields of a seller onboarding application record based on the ai_commerce_seller_onboarding schema. Supported updates include onboarding_status changes (per workflow), updates to application_data, notes, or current_stage, and compliance justification. Both applicants (buyer) and admins can update relevant fields per business rules—e.g., buyers submit additional documents, admins escalate or approve.\n\nEach update records before/after change, timestamp, and user performing the action for audit and compliance. Update permission is context-sensitive: applicants alter their own onboarding records, while admins/compliance can update any onboarding application for review, escalation, or adjudication. Workflow rules enforce valid status transitions; invalid or unauthorized updates are rejected.\n\nReturns the updated onboarding application details as defined by schema. The endpoint ensures full traceability, prevents unauthorized workflow jumps, and maintains platform compliance posture.","summary":"Update seller onboarding application information or status (ai_commerce_seller_onboarding table).","parameters":[{"name":"sellerOnboardingId","description":"Unique identifier for the seller onboarding record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated onboarding application information or workflow fields allowed by business logic","typeName":"IAiCommerceSellerOnboarding.IUpdate"},"responseBody":{"description":"Updated seller onboarding application with all fields and current status","typeName":"IAiCommerceSellerOnboarding"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/sellerOnboardings/{sellerOnboardingId}","method":"put"},{"specification":"Permanently deletes an existing seller onboarding record from the ai_commerce_seller_onboarding table. This is used when an administrator or an authorized actor needs to remove an onboarding application entirely, for example if a duplicate or fraudulent onboarding attempt was detected or a seller withdraws their application. A hard delete is performed as no soft delete field is present in the schema, ensuring the onboarding record and its references are removed from the database. All referenced audit information and compliance evidence must be preserved per business rules.","description":"This operation allows an administrator or an authorized actor to permanently delete a seller onboarding record from the ai_commerce_seller_onboarding table. This is typically used in scenarios where a seller's onboarding process is cancelled due to fraud detection, duplicate application, or explicit withdrawal by the user. There is no soft delete field, so the removal is permanent and the onboarding record is fully deleted, though all audit logs related to this onboarding must be preserved for compliance reasons.\n\nSecurity is critical for this operation, as only privileged roles (admin) should be permitted to perform deletions. Relations to store, user authentication, and seller KYC data must be checked/handled at the provider/service logic level to prevent orphaned references and maintain referential integrity.\n\nAttempts to delete onboarding records that are under dispute or legal hold must result in validation errors, and attempts must be correctly logged for audit trail purposes.","summary":"Permanently delete a seller onboarding record from ai_commerce_seller_onboarding.","parameters":[{"name":"sellerOnboardingId","description":"Unique identifier of the seller onboarding record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/sellerOnboardings/{sellerOnboardingId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"Performs a paginated, filtered search of seller KYC (Know Your Customer) records from ai_commerce_seller_kyc. This operation enables administrators and compliance personnel to review, sort, and analyze KYC submissions across all sellers. It supports advanced filtering by KYC status, document type, onboarding ID, created date, and provides paginated result sets for efficient audit and compliance review.","description":"This API operation retrieves a paginated and filtered list of seller KYC records from the ai_commerce_seller_kyc table for administrative review and compliance operations. It allows administrators to apply complex filtering on KYC status (such as verified, pending, rejected), document types, and onboarding relationships, while supporting sort and pagination parameters for scalable processing of large volumes of KYC submissions.\n\nReturned results provide the essential details for each KYC record including status, document types, and associated onboarding application context. The provider/service layer is expected to apply result filtering according to authorization, ensuring that only users with the necessary roles (admin) can access sensitive KYC documents and compliance evidence, in line with privacy and security policy.\n\nValidation is applied to ensure request parameters are within acceptable range and result size is constrained to prevent over-fetching. This operation is critical for periodic compliance audits and legal investigations.","summary":"Search and list ai_commerce_seller_kyc records (admin, compliance only).","parameters":[],"requestBody":{"description":"Request parameters for filtering, searching, and paginating ai_commerce_seller_kyc records.","typeName":"IAiCommerceSellerKyc.IRequest"},"responseBody":{"description":"Paginated list of ai_commerce_seller_kyc records matching search criteria.","typeName":"IPageIAiCommerceSellerKyc"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/sellerKyc","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the detailed KYC (Know Your Customer) record for a specific seller KYC application from ai_commerce_seller_kyc by unique KYC ID. Used by administrators or compliance staff to review the full details and verification evidence for a submitted seller application. The operation returns all KYC information including status, document metadata, verification notes, timestamps, and audit context for compliance workflows.","description":"This operation retrieves the full detail of a single seller KYC record from the ai_commerce_seller_kyc table based on the provided KYC ID. It is used during compliance reviews, audits, or investigations where the administrator or compliance officer must examine document metadata, reviewer notes, resolved status, and supporting evidence as recorded in the KYC record. Returns all available fields for the KYC submission for forensic and compliance purposes.\n\nAccess to this operation is strictly limited to authorized admin or compliance personnel, as KYC records contain highly sensitive identity documents and business information. Role-based access control and logging are enforced by the service provider.\n\nAny attempts to retrieve a non-existent KYC ID or one not available to the requester due to missing permissions must result in an error and audit logging.","summary":"Get full details of a seller KYC record by its ID.","parameters":[{"name":"sellerKycId","description":"Unique identifier of the seller KYC record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full ai_commerce_seller_kyc record including all KYC fields and evidence.","typeName":"IAiCommerceSellerKyc"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/sellerKyc/{sellerKycId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new seller KYC (Know Your Customer) verification submission in the ai_commerce_seller_kyc table. This is used by sellers or authorized onboarding actors to submit new KYC documentation for compliance verification during or after onboarding. Stores all document metadata, KYC status, and audit fields for subsequent review and approval workflow.","description":"This API operation allows a seller or an authorized onboarding workflow to create a new KYC submission by providing necessary KYC data in the request body. The sent data includes details like document type, provided metadata, and onboarding references, as required by the ai_commerce_seller_kyc schema.\n\nUpon submission, the record is stored with status field set to a workflow-appropriate initial value (such as 'pending'). Further processing, review, or approval will follow according to compliance workflow. All fields and relationships from the schema must be supplied.\n\nThis operation can be used by the onboarding automation system or authorized sellers. Access control should prevent unauthorized KYC creation by limiting to sellers in the onboarding stage or admins acting on behalf of applicants.","summary":"Create a new seller KYC verification submission (onboarding, compliance).","parameters":[],"requestBody":{"description":"KYC document and metadata as required for ai_commerce_seller_kyc creation.","typeName":"IAiCommerceSellerKyc.ICreate"},"responseBody":{"description":"Created ai_commerce_seller_kyc record including all submitted fields and assigned status.","typeName":"IAiCommerceSellerKyc"},"authorizationRoles":["seller","admin"],"name":"create","path":"/aiCommerce/seller/sellerKyc","method":"post","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new seller KYC (Know Your Customer) verification submission in the ai_commerce_seller_kyc table. This is used by sellers or authorized onboarding actors to submit new KYC documentation for compliance verification during or after onboarding. Stores all document metadata, KYC status, and audit fields for subsequent review and approval workflow.","description":"This API operation allows a seller or an authorized onboarding workflow to create a new KYC submission by providing necessary KYC data in the request body. The sent data includes details like document type, provided metadata, and onboarding references, as required by the ai_commerce_seller_kyc schema.\n\nUpon submission, the record is stored with status field set to a workflow-appropriate initial value (such as 'pending'). Further processing, review, or approval will follow according to compliance workflow. All fields and relationships from the schema must be supplied.\n\nThis operation can be used by the onboarding automation system or authorized sellers. Access control should prevent unauthorized KYC creation by limiting to sellers in the onboarding stage or admins acting on behalf of applicants.","summary":"Create a new seller KYC verification submission (onboarding, compliance).","parameters":[],"requestBody":{"description":"KYC document and metadata as required for ai_commerce_seller_kyc creation.","typeName":"IAiCommerceSellerKyc.ICreate"},"responseBody":{"description":"Created ai_commerce_seller_kyc record including all submitted fields and assigned status.","typeName":"IAiCommerceSellerKyc"},"authorizationRoles":["seller","admin"],"name":"create","path":"/aiCommerce/admin/sellerKyc","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing seller KYC (Know Your Customer) record in the ai_commerce_seller_kyc table. This is used during compliance reviews to update status, document metadata, verification notes or evidence. The request body must supply all updatable fields as described by IAiCommerceSellerKyc.IUpdate DTO, and only authorized roles should be able to update a KYC submission.","description":"This operation updates an existing seller KYC submission with new status (such as 'verified', 'rejected', etc.), document metadata, or compliance notes. Typically executed by a compliance admin, this endpoint ensures all updates are audited and retain previous KYC state for legal evidence.\n\nThe input must reference an existing seller KYC ID and provide updated information as per business rules. Validation rules ensure status transitions follow compliance policy and all updates are consistent with previous audit trail.\n\nOnly admin roles may update KYC records, as these represent sensitive compliance evidence. All updates must be logged, and any unauthorized attempt should return an error, preserving audit integrity.","summary":"Update an existing seller KYC verification record for compliance review.","parameters":[{"name":"sellerKycId","description":"Unique identifier of the seller KYC record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the ai_commerce_seller_kyc submission.","typeName":"IAiCommerceSellerKyc.IUpdate"},"responseBody":{"description":"Updated ai_commerce_seller_kyc record with new status and notes.","typeName":"IAiCommerceSellerKyc"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/sellerKyc/{sellerKycId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Deletes an existing seller KYC (Know Your Customer) record from ai_commerce_seller_kyc. This is strictly for administrative actions such as remediation of duplicate/incomplete/erroneous submissions. As the ai_commerce_seller_kyc table has a soft delete field (deleted_at), this action will mark the KYC record as deleted for audit/evidence compliance rather than permanently erasing the record.","description":"This operation marks a seller KYC record as deleted in the ai_commerce_seller_kyc table by setting the deleted_at timestamp field. This is used by admins when a KYC record is found to be a duplicate, incomplete, or submitted in error, and preserves all evidence for legal and audit purposes. The record is not physically deleted but excluded from most business queries, ensuring privacy and compliance.\n\nOnly admin-level users can perform this operation, as it represents a sensitive compliance operation that must be carefully controlled. Attempts to delete KYC records that are under investigation or legal hold must result in validation errors; all actions are audited by the provider/service layer.","summary":"Soft delete a seller KYC record for audit/audit-compliance.","parameters":[{"name":"sellerKycId","description":"Unique identifier of the seller KYC record to soft delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/sellerKyc/{sellerKycId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"Searches and returns a paginated, filtered list of seller profile records from ai_commerce_seller_profiles. This endpoint is used by admins to review, analyze, and moderate seller profile data, status, compliance, and business attributes. Supports advanced filtering by approval_status, display_name, and related onboarding/application data.","description":"Enables platform administrators to search and browse seller profiles from ai_commerce_seller_profiles table. The operation supports advanced query parameters for filtering by display name, approval status, and other core profile attributes. Returns paginated data for high-volume moderation and compliance operations.","summary":"Paginated search of seller profiles for admin-level moderation and analytics.","parameters":[],"requestBody":{"description":"Filtering and pagination options for listing seller profiles.","typeName":"IAiCommerceSellerProfiles.IRequest"},"responseBody":{"description":"Paginated list of seller profiles matching criteria.","typeName":"IPageIAiCommerceSellerProfiles"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/sellerProfiles","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a full seller profile by ID from ai_commerce_seller_profiles, including all business, compliance, brand, and status information. Used by admins for moderation, compliance review, and audit evidence gathering. Returns all defined schema fields for the seller profile.","description":"This operation allows a platform administrator to retrieve all details for a single seller profile, identified by its unique ID. All business, branding, compliance, status, and audit fields as defined in the ai_commerce_seller_profiles schema are retrieved and returned in the response. This operation is restricted to admin-level roles, as seller profile data often includes sensitive business/verification details.\n\nIf a profile with the supplied ID does not exist, or if the caller is not an authorized admin, the operation returns an error with a clear audit trail.","summary":"Admin retrieves a complete seller profile by ID for audit or moderation.","parameters":[{"name":"sellerProfileId","description":"Unique identifier of the seller profile to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All ai_commerce_seller_profiles fields for the identified seller.","typeName":"IAiCommerceSellerProfiles"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/sellerProfiles/{sellerProfileId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a seller profile entity within the aiCommerce platform. The seller profile represents a seller's public and private information, including display name, business metadata, approval status, and suspension reason when applicable. The operation is strictly based on the ai_commerce_seller_profiles Prisma schema. Only authenticated users with 'seller' privileges who have completed onboarding can create their own seller profile. The API validates the uniqueness of the user_id, enforces required fields, and triggers audit/logging for compliance and traceability. Admins can also act on behalf of a seller under certain rules, but always with full audit trail.","path":"/aiCommerce/seller/sellerProfiles","method":"post","summary":"Create a new seller profile (ai_commerce_seller_profiles table) for a verified seller user.","description":"This endpoint creates a new seller profile for an authenticated seller. The seller profile is crucial for establishing a seller's business presence on the platform, including branding, regulatory disclosures, and approval workflow management.\n\nSecurity is enforced so that only authenticated users who have passed onboarding and are escalated to seller status (see ai_commerce_seller) can use this API. The profile contains fields like display_name, profile_metadata, approval_status (defaulted to 'pending' or as per business rules), and optionally suspension_reason.\n\nThe underlying entity, ai_commerce_seller_profiles, uses user_id (tied to ai_commerce_user_authentications) as a unique reference. Business rules ensure that only one active profile exists per seller and that re-creation after suspension/termination follows compliance workflows.\n\nUpon successful creation, the detailed profile is returned. Attempting to create a duplicate seller profile or providing incomplete/invalid business information will result in a validation error. Full creation is audit logged for compliance and future review.","parameters":[],"requestBody":{"description":"Seller profile creation payload, including display_name, metadata, and initial approval status.","typeName":"IAiCommerceSellerProfiles.ICreate"},"responseBody":{"description":"The newly created seller profile record with all fields and relational references populated.","typeName":"IAiCommerceSellerProfiles"},"authorizationRoles":["seller"],"name":"create","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates an existing seller profile (ai_commerce_seller_profiles) for a given profile ID. It accepts modifications to display name, profile metadata, approval status, and suspension reason. Only the owning seller or an admin can update the profile, as determined by authorization checks. The operation references the Prisma ai_commerce_seller_profiles model for field constraints and audit logging. Changes are versioned with updated_at and all edits are strictly audit logged for compliance.","path":"/aiCommerce/seller/sellerProfiles/{sellerProfileId}","method":"put","summary":"Update an existing seller profile (ai_commerce_seller_profiles table) for the specified sellerProfileId.","description":"This API endpoint allows a seller (or platform admin) to update their profile information, such as display_name, profile_metadata, approval_status, and suspension_reason if needed. All field changes are subject to validation according to the database schema constraints, ensuring required fields and uniqueness are preserved.\n\nSecurity and permission checks require that the requesting user be the profile owner (seller) or an admin operator, with actions fully audit logged. Business rules may enforce further restrictions based on approval status or suspension state.\n\nOn success, the full updated seller profile is returned. If the profile is not found, or if the user is unauthorized or submits invalid data, the system returns appropriate business or validation errors. The update is strictly recorded for audit and compliance purposes.","parameters":[{"name":"sellerProfileId","description":"Unique identifier for the seller profile being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload of fields to update in the seller profile, according to the DB schema.","typeName":"IAiCommerceSellerProfiles.IUpdate"},"responseBody":{"description":"The updated seller profile record after modifications are applied.","typeName":"IAiCommerceSellerProfiles"},"authorizationRoles":["seller","admin"],"name":"update","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates an existing seller profile (ai_commerce_seller_profiles) for a given profile ID. It accepts modifications to display name, profile metadata, approval status, and suspension reason. Only the owning seller or an admin can update the profile, as determined by authorization checks. The operation references the Prisma ai_commerce_seller_profiles model for field constraints and audit logging. Changes are versioned with updated_at and all edits are strictly audit logged for compliance.","path":"/aiCommerce/admin/sellerProfiles/{sellerProfileId}","method":"put","summary":"Update an existing seller profile (ai_commerce_seller_profiles table) for the specified sellerProfileId.","description":"This API endpoint allows a seller (or platform admin) to update their profile information, such as display_name, profile_metadata, approval_status, and suspension_reason if needed. All field changes are subject to validation according to the database schema constraints, ensuring required fields and uniqueness are preserved.\n\nSecurity and permission checks require that the requesting user be the profile owner (seller) or an admin operator, with actions fully audit logged. Business rules may enforce further restrictions based on approval status or suspension state.\n\nOn success, the full updated seller profile is returned. If the profile is not found, or if the user is unauthorized or submits invalid data, the system returns appropriate business or validation errors. The update is strictly recorded for audit and compliance purposes.","parameters":[{"name":"sellerProfileId","description":"Unique identifier for the seller profile being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload of fields to update in the seller profile, according to the DB schema.","typeName":"IAiCommerceSellerProfiles.IUpdate"},"responseBody":{"description":"The updated seller profile record after modifications are applied.","typeName":"IAiCommerceSellerProfiles"},"authorizationRoles":["seller","admin"],"name":"update","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently erases a seller profile (ai_commerce_seller_profiles) with the specified sellerProfileId. Since the Prisma schema does not contain a soft delete field for this entity, the delete is a hard delete that removes the record from the database. Only the profile's owner (seller) or an admin can perform this operation, after passing strict authorization checks. All deletions are audit logged for compliance. Associated child entities or references must be validated for referential integrity before deletion.","path":"/aiCommerce/seller/sellerProfiles/{sellerProfileId}","method":"delete","summary":"Permanently delete (hard remove) a seller profile for the specified sellerProfileId.","description":"This API operation performs a hard deletion of a seller profile from the ai_commerce_seller_profiles table, identified by sellerProfileId. No soft delete exists for this entity, so deletion is irreversible and data is fully removed from the database. This API can only be used by the owning seller or an administrator following explicit business rules and audit protocols.\n\nBefore deletion, the system checks for related dependencies to prevent referential integrity violations (e.g., linked stores, analytics). Authorization enforcement is strict and every delete operation is audit logged for regulatory and legal compliance.\n\nIf the profile exists and is deletable, the operation completes without returning a body. Errors are raised if the profile is not found, the user is unauthorized, or dependent references prevent deletion. This endpoint is not used for soft-deletion scenarios.","parameters":[{"name":"sellerProfileId","description":"Unique identifier for the seller profile to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","authorizationRole":"seller","authorizationType":null},{"specification":"This operation permanently erases a seller profile (ai_commerce_seller_profiles) with the specified sellerProfileId. Since the Prisma schema does not contain a soft delete field for this entity, the delete is a hard delete that removes the record from the database. Only the profile's owner (seller) or an admin can perform this operation, after passing strict authorization checks. All deletions are audit logged for compliance. Associated child entities or references must be validated for referential integrity before deletion.","path":"/aiCommerce/admin/sellerProfiles/{sellerProfileId}","method":"delete","summary":"Permanently delete (hard remove) a seller profile for the specified sellerProfileId.","description":"This API operation performs a hard deletion of a seller profile from the ai_commerce_seller_profiles table, identified by sellerProfileId. No soft delete exists for this entity, so deletion is irreversible and data is fully removed from the database. This API can only be used by the owning seller or an administrator following explicit business rules and audit protocols.\n\nBefore deletion, the system checks for related dependencies to prevent referential integrity violations (e.g., linked stores, analytics). Authorization enforcement is strict and every delete operation is audit logged for regulatory and legal compliance.\n\nIf the profile exists and is deletable, the operation completes without returning a body. Errors are raised if the profile is not found, the user is unauthorized, or dependent references prevent deletion. This endpoint is not used for soft-deletion scenarios.","parameters":[{"name":"sellerProfileId","description":"Unique identifier for the seller profile to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of store entities (ai_commerce_stores) available in the system. It provides advanced search criteria, sorting, and pagination features based on the Prisma schema's fields, including store_name, store_code, approval_status, and associated seller profile. Results are restricted by user role: sellers only see their own stores, admins see all, buyers may see public stores. Supports analytics integrations and filterable queries as requestBody.","path":"/aiCommerce/seller/stores","method":"patch","summary":"Search and retrieve a filtered, paginated list of stores (ai_commerce_stores table).","description":"This API operation returns a paginated and searchable list of stores from the ai_commerce_stores table. Advanced filtering can be performed on fields such as store_name, store_code, approval_status, and owner_user_id, supporting business workflows for sellers and platform administrators.\n\nSellers are restricted to their own stores, while admins can query the entire set. Buyers and visitors, if enabled, may only see public/active stores, subject to business rules and approval_status. The response includes pagination, summary data for each store (store ID, name, code, status), and may contain additional analytics fields if available through related tables.\n\nThe listing supports sorting, search queries, and full-text indexing of store names/codes. Business logic enforces role-based visibility and hides stores that are closed or suspended for most roles. Extensive validation is performed on query criteria and any errors are returned as business-validation failures.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for store retrieval (fields from ai_commerce_stores, full-text search, etc).","typeName":"IAiCommerceStores.IRequest"},"responseBody":{"description":"Paginated, filtered list of stores matching criteria, including summary data and pagination metadata.","typeName":"IPageIAiCommerceStores.ISummary"},"authorizationRoles":["seller","admin"],"name":"index","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of store entities (ai_commerce_stores) available in the system. It provides advanced search criteria, sorting, and pagination features based on the Prisma schema's fields, including store_name, store_code, approval_status, and associated seller profile. Results are restricted by user role: sellers only see their own stores, admins see all, buyers may see public stores. Supports analytics integrations and filterable queries as requestBody.","path":"/aiCommerce/admin/stores","method":"patch","summary":"Search and retrieve a filtered, paginated list of stores (ai_commerce_stores table).","description":"This API operation returns a paginated and searchable list of stores from the ai_commerce_stores table. Advanced filtering can be performed on fields such as store_name, store_code, approval_status, and owner_user_id, supporting business workflows for sellers and platform administrators.\n\nSellers are restricted to their own stores, while admins can query the entire set. Buyers and visitors, if enabled, may only see public/active stores, subject to business rules and approval_status. The response includes pagination, summary data for each store (store ID, name, code, status), and may contain additional analytics fields if available through related tables.\n\nThe listing supports sorting, search queries, and full-text indexing of store names/codes. Business logic enforces role-based visibility and hides stores that are closed or suspended for most roles. Extensive validation is performed on query criteria and any errors are returned as business-validation failures.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for store retrieval (fields from ai_commerce_stores, full-text search, etc).","typeName":"IAiCommerceStores.IRequest"},"responseBody":{"description":"Paginated, filtered list of stores matching criteria, including summary data and pagination metadata.","typeName":"IPageIAiCommerceStores.ISummary"},"authorizationRoles":["seller","admin"],"name":"index","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detailed store information from ai_commerce_stores for a specific storeId. The operation validates that the requesting user is authorized—sellers can view only their stores, admins can view any. The detail includes all basic fields plus relational data, such as store settings and analytics as available. Based strictly on the Prisma schema, the response provides a comprehensive view of the store, supporting business logic, analytics, and administrative compliance.","path":"/aiCommerce/seller/stores/{storeId}","method":"get","summary":"Retrieve full store details (ai_commerce_stores table) for a given storeId.","description":"This API endpoint returns a detailed store record from the ai_commerce_stores table, identified by storeId. The response contains all defined fields, including store_name, store_code, store_metadata, approval_status, closure_reason, and relational references such as owner_user_id and seller_profile_id.\n\nSecurity checks ensure that sellers only access their own stores, while admins have full visibility. Detailed store settings and analytics can be included in the response through entity relationships, subject to business rules and performance considerations.\n\nIf the store does not exist or access is unauthorized, appropriate errors are returned. This endpoint is used to drive business workflows for store management, analytics, and audit trails. All access is logged for compliance.","parameters":[{"name":"storeId","description":"The unique identifier of the store to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed store record, including all fields and linked relational data.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves detailed store information from ai_commerce_stores for a specific storeId. The operation validates that the requesting user is authorized—sellers can view only their stores, admins can view any. The detail includes all basic fields plus relational data, such as store settings and analytics as available. Based strictly on the Prisma schema, the response provides a comprehensive view of the store, supporting business logic, analytics, and administrative compliance.","path":"/aiCommerce/admin/stores/{storeId}","method":"get","summary":"Retrieve full store details (ai_commerce_stores table) for a given storeId.","description":"This API endpoint returns a detailed store record from the ai_commerce_stores table, identified by storeId. The response contains all defined fields, including store_name, store_code, store_metadata, approval_status, closure_reason, and relational references such as owner_user_id and seller_profile_id.\n\nSecurity checks ensure that sellers only access their own stores, while admins have full visibility. Detailed store settings and analytics can be included in the response through entity relationships, subject to business rules and performance considerations.\n\nIf the store does not exist or access is unauthorized, appropriate errors are returned. This endpoint is used to drive business workflows for store management, analytics, and audit trails. All access is logged for compliance.","parameters":[{"name":"storeId","description":"The unique identifier of the store to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed store record, including all fields and linked relational data.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new store entity (ai_commerce_stores) for a seller or admin in the aiCommerce system. The payload must contain all required store fields, such as store_name, store_code, seller_profile_id, owner_user_id, and optionally store_metadata and approval_status. Only authenticated sellers or administrators can use this endpoint, and all business and compliance rules are enforced, including uniqueness of store_code and linkage to a valid seller profile. Related audit and logging logic is triggered per business rules to support compliance and traceability.","path":"/aiCommerce/seller/stores","method":"post","summary":"Create a new store (ai_commerce_stores table) for an authenticated seller or admin.","description":"This endpoint enables an authenticated seller (or admin) to register a new store in the system. Store creation requires a valid seller_profile_id and owner_user_id, and unique store_code. Business logic validates the completeness of all fields, veracity of linked profiles, and the absence of duplicates for critical identifiers.\n\nUpon successful creation, the endpoint returns the full store record with all relational data, including identifiers, status, and the owner profile. Security checks ensure only authorized sellers or platform admins can invoke this operation. Any errors (validation, duplication, permission) result in explicit business error codes. All creation events are strictly logged for compliance purposes.","parameters":[],"requestBody":{"description":"Payload for creating a store, including core fields and business metadata as required by ai_commerce_stores.","typeName":"IAiCommerceStores.ICreate"},"responseBody":{"description":"The full detailed record of the newly created store, including relational/entity references.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"create","authorizationRole":"seller","authorizationType":null},{"specification":"This operation creates a new store entity (ai_commerce_stores) for a seller or admin in the aiCommerce system. The payload must contain all required store fields, such as store_name, store_code, seller_profile_id, owner_user_id, and optionally store_metadata and approval_status. Only authenticated sellers or administrators can use this endpoint, and all business and compliance rules are enforced, including uniqueness of store_code and linkage to a valid seller profile. Related audit and logging logic is triggered per business rules to support compliance and traceability.","path":"/aiCommerce/admin/stores","method":"post","summary":"Create a new store (ai_commerce_stores table) for an authenticated seller or admin.","description":"This endpoint enables an authenticated seller (or admin) to register a new store in the system. Store creation requires a valid seller_profile_id and owner_user_id, and unique store_code. Business logic validates the completeness of all fields, veracity of linked profiles, and the absence of duplicates for critical identifiers.\n\nUpon successful creation, the endpoint returns the full store record with all relational data, including identifiers, status, and the owner profile. Security checks ensure only authorized sellers or platform admins can invoke this operation. Any errors (validation, duplication, permission) result in explicit business error codes. All creation events are strictly logged for compliance purposes.","parameters":[],"requestBody":{"description":"Payload for creating a store, including core fields and business metadata as required by ai_commerce_stores.","typeName":"IAiCommerceStores.ICreate"},"responseBody":{"description":"The full detailed record of the newly created store, including relational/entity references.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"create","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing store (ai_commerce_stores table) identified by storeId. Editable fields include store_name, store_metadata, approval_status, closure_reason, etc., as per the schema. Only the owning seller or admin can update a store, verified by strict authorization. Updates are validated, and the new store state is returned on success. The action is logged for audit and legal compliance per business rules.","path":"/aiCommerce/seller/stores/{storeId}","method":"put","summary":"Update a store (ai_commerce_stores table) identified by storeId for the authenticated seller or admin.","description":"This endpoint allows a seller or admin to update the information of a specific store, as identified by storeId. Permitted fields for editing include store_name, store_metadata, approval_status, closure_reason, and related configuration. The modification is allowed only for the store's owner (seller) or a platform admin, and all field values are validated according to the ai_commerce_stores Prisma schema.\n\nOn successful update, the response contains the updated store record. Unauthorized attempts, invalid data, or access violations return explicit business error codes. This update is audit logged for platform compliance and forensics.","parameters":[{"name":"storeId","description":"Unique identifier of the store to be updated (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload of updatable store fields according to ai_commerce_stores schema.","typeName":"IAiCommerceStores.IUpdate"},"responseBody":{"description":"The store record after applying the requested update.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"update","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates an existing store (ai_commerce_stores table) identified by storeId. Editable fields include store_name, store_metadata, approval_status, closure_reason, etc., as per the schema. Only the owning seller or admin can update a store, verified by strict authorization. Updates are validated, and the new store state is returned on success. The action is logged for audit and legal compliance per business rules.","path":"/aiCommerce/admin/stores/{storeId}","method":"put","summary":"Update a store (ai_commerce_stores table) identified by storeId for the authenticated seller or admin.","description":"This endpoint allows a seller or admin to update the information of a specific store, as identified by storeId. Permitted fields for editing include store_name, store_metadata, approval_status, closure_reason, and related configuration. The modification is allowed only for the store's owner (seller) or a platform admin, and all field values are validated according to the ai_commerce_stores Prisma schema.\n\nOn successful update, the response contains the updated store record. Unauthorized attempts, invalid data, or access violations return explicit business error codes. This update is audit logged for platform compliance and forensics.","parameters":[{"name":"storeId","description":"Unique identifier of the store to be updated (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload of updatable store fields according to ai_commerce_stores schema.","typeName":"IAiCommerceStores.IUpdate"},"responseBody":{"description":"The store record after applying the requested update.","typeName":"IAiCommerceStores"},"authorizationRoles":["seller","admin"],"name":"update","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently removes a store (ai_commerce_stores) from the system based on storeId. If the Prisma schema does not provide a soft delete mechanism, deletion is hard, and the record is eradicated. Authorization logic guarantees that only the owning seller or admin can perform this action, and referential integrity checks ensure there are no dependent entities that would be orphaned. Every delete operation is strictly audit logged for compliance purposes.","path":"/aiCommerce/seller/stores/{storeId}","method":"delete","summary":"Permanently delete a store (ai_commerce_stores table) by storeId. Hard delete only.","description":"This API deletes a store from the ai_commerce_stores table, permanently removing the database record identified by storeId, as no soft delete field is defined. Only the store owner (seller) or admin can invoke this operation, governed by permissions and business rules.\n\nPrior to deletion, the platform validates dependencies to prevent breaking referential integrity, such as linked products or analytics. Any violation results in business-level error reporting. The delete operation itself is strictly recorded in audit logs for platform compliance and legal review.\n\nIf successful, the operation completes without a response body. Unauthorized access, non-existent records, or dependency violations will fail with appropriate errors.","parameters":[{"name":"storeId","description":"Unique identifier of the store to be deleted (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","authorizationRole":"seller","authorizationType":null},{"specification":"This operation permanently removes a store (ai_commerce_stores) from the system based on storeId. If the Prisma schema does not provide a soft delete mechanism, deletion is hard, and the record is eradicated. Authorization logic guarantees that only the owning seller or admin can perform this action, and referential integrity checks ensure there are no dependent entities that would be orphaned. Every delete operation is strictly audit logged for compliance purposes.","path":"/aiCommerce/admin/stores/{storeId}","method":"delete","summary":"Permanently delete a store (ai_commerce_stores table) by storeId. Hard delete only.","description":"This API deletes a store from the ai_commerce_stores table, permanently removing the database record identified by storeId, as no soft delete field is defined. Only the store owner (seller) or admin can invoke this operation, governed by permissions and business rules.\n\nPrior to deletion, the platform validates dependencies to prevent breaking referential integrity, such as linked products or analytics. Any violation results in business-level error reporting. The delete operation itself is strictly recorded in audit logs for platform compliance and legal review.\n\nIf successful, the operation completes without a response body. Unauthorized access, non-existent records, or dependency violations will fail with appropriate errors.","parameters":[{"name":"storeId","description":"Unique identifier of the store to be deleted (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of store analytics records, supporting advanced filtering by period, store ID, and metrics such as sales volume or conversion rate. The operation maps to the ai_commerce_store_analytics table in the Prisma schema. Used by admins and store owners to monitor and analyze store performance and business KPIs.","description":"Retrieve a filtered, paginated set of analytics records for stores, supporting queries by store ID, time period (date_bucket), and core metrics like sales volume, orders count, and conversion rates. This enables comprehensive reporting and insight into store performance for both administrative and seller-centric dashboards.\n\nRole enforcement ensures that sellers may only see analytics of their own stores, while admins access all records. The API is designed for integration into analytical dashboards, compliance auditing, and operational optimization workflows. Requested filters and sorting are processed using database indexes for optimal performance.\n\nErrors for invalid filters or unauthorized access trigger descriptive error messages and full audit logging in line with compliance standards.","summary":"Search and retrieve paginated store analytics (ai_commerce_store_analytics).","parameters":[],"requestBody":{"description":"Analytics filtering criteria, such as storeId, analytics period, metrics, and pagination.","typeName":"IAiCommerceStoreAnalytics.IRequest"},"responseBody":{"description":"Paginated results of store analytics records matching the filters, including KPIs and summary statistics.","typeName":"IPageIAiCommerceStoreAnalytics.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/storeAnalytics","method":"patch"},{"specification":"This operation retrieves the details of a specific store analytics record, identified by its unique storeAnalyticsId. Based on the ai_commerce_store_analytics table in the Prisma schema, this API is intended for granular review and detailed analysis of store performance metrics, compliance investigations, or business reporting by authorized roles.","description":"Retrieve full analytics information for a single store by its unique analytics record ID. Returns all key performance indicators, sales volume, visitor count, and any additional metrics stored for the selected date period and store.\n\nAdmin roles have unrestricted access while store owners are limited to their own analytics. This API supports monitoring, finance audits, reporting, and troubleshooting workflows, providing all available fields from the analytics table. Access attempts are recorded for audit compliance.\n\nErrors for failed lookups or violations of access control policy trigger clear error messages as per business and compliance documentation.","summary":"Retrieve detailed analytics record (ai_commerce_store_analytics) for a store.","parameters":[{"name":"storeAnalyticsId","description":"Unique identifier of the analytics record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Store analytics record, including all metrics and auxiliary analysis fields.","typeName":"IAiCommerceStoreAnalytics"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/storeAnalytics/{storeAnalyticsId}","method":"get"},{"specification":"This operation retrieves a paginated list of store banking configurations, supporting filtering, search, and sorting on all relevant fields (store, verified status, bank codes, etc.).  Maps to ai_commerce_store_banking table in the Prisma schema, and is used by admins for compliance review, payout management, or financial tracking for all stores. Sensitive data is only accessible by admins and is masked or redacted in the response as per compliance documentation.","description":"Retrieve a filtered, paginated list of store banking info for all stores. The API supports detailed queries on bank name, store reference, account status, approval state, and verification results, with outputs designed to facilitate admin finance operations and compliance audit trails.\n\nBanking records are surfaced only to admin-level users, with data masking or redaction for sensitive details (such as account numbers and routing codes) as required by privacy policy. All accesses are logged for audit and regulatory evidence.\n\nErrors are handled for improper queries, invalid filter formats, and unauthorized access attempts, which are returned with actionable error codes and full context for compliance and troubleshooting.","summary":"Search and retrieve paginated store banking information (ai_commerce_store_banking).","parameters":[],"requestBody":{"description":"Banking record search filters, pagination, and sorting (bank/status/store/verification).","typeName":"IAiCommerceStoreBanking.IRequest"},"responseBody":{"description":"Paginated list of store banking configurations, redacted for privacy and suitable for compliance review/finance audit.","typeName":"IPageIAiCommerceStoreBanking.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/storeBanking","method":"patch"},{"specification":"This operation retrieves a paginated list of store settings with advanced filtering, search, and sorting capabilities. It operates on the ai_commerce_store_settings table from the Prisma schema and supports queries to find store settings by fields such as store_id, status, and configuration parameters. This allows for management and monitoring of configuration settings across all stores, supporting both admin and seller review. Business rules include supporting audit logging for all filter/search operations and enforcing permission controls so that non-admin users can only see store settings related to their own stores if applicable.","description":"Retrieve a filtered and paginated list of store settings for the commerce platform. This API supports admin-level oversight and seller-level self-management, enabling advanced search, filtering by store, active status, and configuration parameter values. \n\nEach returned result includes the unique setting ID, belonging store, configuration key, value, status, and timestamps for creation and last update. Sellers are limited to viewing their own stores' settings, while admins can view all. Audit logging is enabled for all accesses via this endpoint, in compliance with platform governance and evidentiary rules referenced in the business requirements.\n\nSecurity is enforced through role-based access such that only authorized admins or store owners can query this list. Performance is optimized through indexed search on store_id, key, and active status. Errors (such as filter collisions or unauthorized access) are clearly returned with actionable error codes.","summary":"Search and retrieve a paginated list of store settings (ai_commerce_store_settings).","parameters":[],"requestBody":{"description":"Search filters, pagination, and sorting options for store settings list retrieval.","typeName":"IAiCommerceStoreSetting.IRequest"},"responseBody":{"description":"Paginated and filtered collection of store settings matching the given criteria, with summary details for each.","typeName":"IPageIAiCommerceStoreSetting.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/storeSettings","method":"patch"},{"specification":"This operation returns the details of a specific store setting, identified by its unique storeSettingId. The operation maps directly to the ai_commerce_store_settings table in the Prisma schema. Used by admin users to review or manage a particular configuration setting for any store, and by sellers for their own store's settings. All access is subject to permission enforcement and audit requirements.","description":"Retrieve full details for a single store setting by its unique identifier. Includes all columns (id, store_id, key, value, created_at, updated_at, deleted_at) and relation references (linked store if required).\n\nPermissions are strictly enforced so that sellers may only access settings associated with their own stores, while admins have unrestricted access. The API is intended for use in admin or store owner dashboards, configuration debugging, or compliance reviews. Errors are returned for invalid IDs or forbidden access according to platform compliance rules.\n\nAll accesses are audit-logged for governance and traceability, supporting the evidentiary protocols set forth in the business and compliance documents.","summary":"Retrieve detailed information for a specific store setting (ai_commerce_store_settings).","parameters":[{"name":"storeSettingId","description":"Unique identifier of the target store setting (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete store setting information, including all configuration parameters and associated store reference data.","typeName":"IAiCommerceStoreSetting"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/storeSettings/{storeSettingId}","method":"get"},{"specification":"This operation creates a new store setting record for a specified store. It supports definition of configuration parameters, initial status, and is used by admins primarily to manage store configuration at scale. The underlying table is ai_commerce_store_settings in the Prisma schema. Creation is logged for compliance, and business logic includes validation for unique key per store, proper format, and audit logging of the creation event.","description":"Create a new store setting for a given store, specifying key configuration details such as key, value, and metadata. Business rules enforce that each setting key must be unique within its store and that all required fields (store_id, key, value) are present and correctly formatted according to the system configuration policy.\n\nOnly users with admin role are allowed to create settings via this operation. Upon success, an audit log entry is generated for compliance and forensic traceability.\n\nError scenarios include attempts to duplicate a key for a store, invalid format submissions, and lack of permission. All setting creation events are immutable and tracked as prescribed by business compliance requirements.","summary":"Create a new store setting (ai_commerce_store_settings).","parameters":[],"requestBody":{"description":"Information for creation of store setting (must specify store_id, key, value, and any business-required metadata).","typeName":"IAiCommerceStoreSetting.ICreate"},"responseBody":{"description":"Created store setting record, including all configured fields and references.","typeName":"IAiCommerceStoreSetting"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/storeSettings","method":"post"},{"specification":"This operation updates an existing store setting, specified by storeSettingId, in the ai_commerce_store_settings table. Admins can modify configuration values, key names, and active status, subject to business rules. Updates are logged for audit and rollback, with validation for proper setting ownership, unique keys, and consistent data formats. Relates to compliance and operational configuration management.","description":"Update an existing store setting for any store, identified by its unique storeSettingId. Supported fields for update include configuration key, value, and supporting metadata. Each update is validated to ensure that the updated key remains unique within its store and that all values conform to business policy.\n\nThe operation is strictly limited to admin users, with full auditability for each change. Updates produce immutable audit trail entries in line with governance requirements. Sellers may not use this operation as platform configuration settings are admin-defined for integrity.\n\nError handling includes forbidden attempts, invalid IDs, or format violations. Successful updates synchronize configuration across related subsystems per compliance mandates.","summary":"Update a store setting by ID (ai_commerce_store_settings).","parameters":[{"name":"storeSettingId","description":"Unique identifier of the target store setting (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated store setting data, such as key, value, or status. Must conform with unique constraints and configuration policies.","typeName":"IAiCommerceStoreSetting.IUpdate"},"responseBody":{"description":"Updated store setting record with all current field values and references.","typeName":"IAiCommerceStoreSetting"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/storeSettings/{storeSettingId}","method":"put"},{"specification":"This operation permanently removes a store setting identified by storeSettingId from the ai_commerce_store_settings table. Hard delete is performed as the schema does not include required fields for soft deletion (actual removal). Only admin users can perform deletions, and each delete event is recorded in the audit log for compliance. Deletes are subject to business rules ensuring that settings not referenced by critical active flows can be safely removed.","description":"Permanently delete a store setting by its unique storeSettingId. This operation completely removes the record from the database, as no soft delete field is present.\n\nAdmin role is required and all deletions are audit-logged. Business safeguards ensure that the configuration is not in use or required for active business flows before permitting deletion. Attempts to delete settings in use or where access is forbidden will be rejected with informative error messages, fulfilling data integrity standards and compliance requirements.\n\nError handling includes invalid ID, permission denial, and attempts to delete active/locked configuration. Successful deletions report confirmation and are traceable via audit logs for legal/conformance reviews.","summary":"Delete (hard) a store setting by ID (ai_commerce_store_settings).","parameters":[{"name":"storeSettingId","description":"Unique identifier of the store setting to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/storeSettings/{storeSettingId}","method":"delete"},{"specification":"This operation retrieves the details of a specific store banking record for a seller's store. It is based on the ai_commerce_store_banking table in the Prisma schema, which manages each store's legal payout account information including bank name, account number, account holder name, routing code, verification status, and audit information. The endpoint is intended for sellers and administrators to review the stored banking information, confirm compliance status, or diagnose payout issues.","description":"Fetch detailed store banking information linked to a specific seller's store.\n\nThe operation targets ai_commerce_store_banking by requiring a unique banking record identifier (storeBankingId) in the URL path. Response includes all fields for bank identification and payout configuration, along with the compliance and verification status as maintained in the database.\n\nSecurity enforcement ensures only the authenticated owner (seller) of the store, or an administrator, can access the full banking record; others are denied. Sensitive fields such as account numbers are handled in properly permissioned views. All access is logged for auditability.","summary":"Retrieve seller store banking details by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete banking information for the specified store, including verification status and payout settings.","typeName":"IAiCommerceStoreBanking"},"authorizationRoles":["seller","admin"],"name":"at","path":"/aiCommerce/seller/storeBanking/{storeBankingId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves the details of a specific store banking record for a seller's store. It is based on the ai_commerce_store_banking table in the Prisma schema, which manages each store's legal payout account information including bank name, account number, account holder name, routing code, verification status, and audit information. The endpoint is intended for sellers and administrators to review the stored banking information, confirm compliance status, or diagnose payout issues.","description":"Fetch detailed store banking information linked to a specific seller's store.\n\nThe operation targets ai_commerce_store_banking by requiring a unique banking record identifier (storeBankingId) in the URL path. Response includes all fields for bank identification and payout configuration, along with the compliance and verification status as maintained in the database.\n\nSecurity enforcement ensures only the authenticated owner (seller) of the store, or an administrator, can access the full banking record; others are denied. Sensitive fields such as account numbers are handled in properly permissioned views. All access is logged for auditability.","summary":"Retrieve seller store banking details by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete banking information for the specified store, including verification status and payout settings.","typeName":"IAiCommerceStoreBanking"},"authorizationRoles":["seller","admin"],"name":"at","path":"/aiCommerce/admin/storeBanking/{storeBankingId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new banking configuration record for a seller’s store. It writes to ai_commerce_store_banking in the Prisma schema, which governs payout and compliance information for store sellers. Inputs include account number, bank name, holder details, and verification data. Only store owners and authorized administrators can perform this operation.","description":"Register new banking details for a seller’s store, providing all compliance-required fields like bank name, account number, account holder's name, and routing code. Upon submission, the banking record is stored pending verification and compliance checks. Only the authenticated store owner or administrators may create new banking configurations.\n\nAll input fields are validated for financial industry compliance and business logic requirements. Sensitive information is encrypted at rest and only surfaced to permissioned users. Creation events are audit-logged for legal and dispute resolution needs. Automated verification status and verification flags are updated post-creation according to business rules.","summary":"Create a new store banking/payout record for a seller’s store (ai_commerce_store_banking).","parameters":[],"requestBody":{"description":"Information required to create a new store banking configuration record.","typeName":"IAiCommerceStoreBanking.ICreate"},"responseBody":{"description":"The newly created store banking record, including all required fields and status.","typeName":"IAiCommerceStoreBanking"},"authorizationRoles":["seller"],"name":"create","path":"/aiCommerce/seller/storeBanking","method":"post","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates an existing store banking record for a seller's store. Operating on ai_commerce_store_banking in the Prisma schema, it allows modification of banking account details, bank name, account holder information, and other related details, subject to compliance verification and business rules. Only the store owner or an administrator can update these details.","description":"Modify an existing store banking configuration by supplying the banking record ID and new field values. All updates are validated against both compliance and business rules before changes are persisted. Updates could trigger re-verification and temporary suspension of payout until approval if sensitive fields (bank account, routing, etc.) change.\n\nOnly the store’s verified owner or administrators are permitted to update banking records. All modifications are logged for compliance and audit reasons. Sensitive data is stored securely according to industry standards, and changes to critical fields can require additional identity verification or trigger workflow notifications.","summary":"Update store banking details for a seller’s store by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated store banking information. Only modifiable fields in compliance with business rules are accepted.","typeName":"IAiCommerceStoreBanking.IUpdate"},"responseBody":{"description":"The updated store banking record including new and unchanged details.","typeName":"IAiCommerceStoreBanking"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/seller/storeBanking/{storeBankingId}","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates an existing store banking record for a seller's store. Operating on ai_commerce_store_banking in the Prisma schema, it allows modification of banking account details, bank name, account holder information, and other related details, subject to compliance verification and business rules. Only the store owner or an administrator can update these details.","description":"Modify an existing store banking configuration by supplying the banking record ID and new field values. All updates are validated against both compliance and business rules before changes are persisted. Updates could trigger re-verification and temporary suspension of payout until approval if sensitive fields (bank account, routing, etc.) change.\n\nOnly the store’s verified owner or administrators are permitted to update banking records. All modifications are logged for compliance and audit reasons. Sensitive data is stored securely according to industry standards, and changes to critical fields can require additional identity verification or trigger workflow notifications.","summary":"Update store banking details for a seller’s store by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated store banking information. Only modifiable fields in compliance with business rules are accepted.","typeName":"IAiCommerceStoreBanking.IUpdate"},"responseBody":{"description":"The updated store banking record including new and unchanged details.","typeName":"IAiCommerceStoreBanking"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/admin/storeBanking/{storeBankingId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently removes a store banking record for a seller's store. It targets ai_commerce_store_banking in the Prisma schema, performing a hard delete (physical removal) if permitted by business and audit rules. This operation is only allowed to the store owner and administrators, and is strictly audit-logged for compliance.","description":"Delete (permanently) a store banking configuration associated with a seller's store, using the unique storeBankingId. This action is irreversible in the absence of a soft delete column—physical removal occurs unless business policy mandates logical retention for legal or compliance reasons.\n\nOnly the store’s authorized owner or an administrator may perform this action, and all delete events are strictly logged for compliance. If the record is referenced in unresolved payout actions or required for audit, deletion may be denied or delayed subject to platform rules. Attempts to delete non-existent or unauthorized records will result in clear error messages.","summary":"Permanently delete a store banking record by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","path":"/aiCommerce/seller/storeBanking/{storeBankingId}","method":"delete","authorizationRole":"seller","authorizationType":null},{"specification":"This operation permanently removes a store banking record for a seller's store. It targets ai_commerce_store_banking in the Prisma schema, performing a hard delete (physical removal) if permitted by business and audit rules. This operation is only allowed to the store owner and administrators, and is strictly audit-logged for compliance.","description":"Delete (permanently) a store banking configuration associated with a seller's store, using the unique storeBankingId. This action is irreversible in the absence of a soft delete column—physical removal occurs unless business policy mandates logical retention for legal or compliance reasons.\n\nOnly the store’s authorized owner or an administrator may perform this action, and all delete events are strictly logged for compliance. If the record is referenced in unresolved payout actions or required for audit, deletion may be denied or delayed subject to platform rules. Attempts to delete non-existent or unauthorized records will result in clear error messages.","summary":"Permanently delete a store banking record by banking record ID (ai_commerce_store_banking).","parameters":[{"name":"storeBankingId","description":"Unique identifier for the store banking record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","path":"/aiCommerce/admin/storeBanking/{storeBankingId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of seller status history records. The ai_commerce_seller_status_history table tracks chronological role or status changes for sellers, documenting each event’s actor, reason, previous and new statuses, and timestamps for audit and compliance.","description":"Search and filter the seller status change history across the marketplace. Seller status history includes all onboarding, approvals, suspensions, demotions, appeals, and escalations, with reasons and actor logs. Supports filtering by seller profile, status type, date range, and reason, along with pagination and sorting for large historical records.\n\nAvailable to administrators for platform oversight, and to sellers for their own status history review, subject to role-based access control. All output complies with regulatory requirements for evidence and audit documentation. Sensitive details are only displayed according to the requesting party’s access level.","summary":"Search/filter the seller status history records (ai_commerce_seller_status_history).","parameters":[],"requestBody":{"description":"Search, filter, and pagination options for querying seller status histories.","typeName":"IAiCommerceSellerStatusHistory.IRequest"},"responseBody":{"description":"Paginated results of seller status transitions, reasons, and actors matching the search criteria.","typeName":"IPageIAiCommerceSellerStatusHistory"},"authorizationRoles":["admin","seller"],"name":"index","path":"/aiCommerce/admin/sellerStatusHistory","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of seller status history records. The ai_commerce_seller_status_history table tracks chronological role or status changes for sellers, documenting each event’s actor, reason, previous and new statuses, and timestamps for audit and compliance.","description":"Search and filter the seller status change history across the marketplace. Seller status history includes all onboarding, approvals, suspensions, demotions, appeals, and escalations, with reasons and actor logs. Supports filtering by seller profile, status type, date range, and reason, along with pagination and sorting for large historical records.\n\nAvailable to administrators for platform oversight, and to sellers for their own status history review, subject to role-based access control. All output complies with regulatory requirements for evidence and audit documentation. Sensitive details are only displayed according to the requesting party’s access level.","summary":"Search/filter the seller status history records (ai_commerce_seller_status_history).","parameters":[],"requestBody":{"description":"Search, filter, and pagination options for querying seller status histories.","typeName":"IAiCommerceSellerStatusHistory.IRequest"},"responseBody":{"description":"Paginated results of seller status transitions, reasons, and actors matching the search criteria.","typeName":"IPageIAiCommerceSellerStatusHistory"},"authorizationRoles":["admin","seller"],"name":"index","path":"/aiCommerce/seller/sellerStatusHistory","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"This operation fetches the details of a specific seller status history record. Table ai_commerce_seller_status_history logs chronological changes in seller status or role, with context such as actor, reason, previous and new status values, and timestamps. Can be viewed by administrators or the seller the record pertains to.","description":"Read the complete details of one seller status history event using its unique identifier. Returns actor, status change sequence, transition reason, previous status, new status, timestamps, and cross-links to related entities if applicable. Access is strictly regulated: only the seller concerned and administrators may view the record.\n\nHistorical records are presented exactly as stored, supporting full traceability for dispute resolution, compliance reviews, or appeals. Attempts to fetch a non-existent or unauthorized record will return an error or empty result as appropriate by policy.","summary":"Retrieve a single seller status history record by ID (ai_commerce_seller_status_history).","parameters":[{"name":"sellerStatusHistoryId","description":"Unique identifier for the seller status history record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full seller status history record including actor, status change, and reason.","typeName":"IAiCommerceSellerStatusHistory"},"authorizationRoles":["admin","seller"],"name":"at","path":"/aiCommerce/admin/sellerStatusHistory/{sellerStatusHistoryId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation fetches the details of a specific seller status history record. Table ai_commerce_seller_status_history logs chronological changes in seller status or role, with context such as actor, reason, previous and new status values, and timestamps. Can be viewed by administrators or the seller the record pertains to.","description":"Read the complete details of one seller status history event using its unique identifier. Returns actor, status change sequence, transition reason, previous status, new status, timestamps, and cross-links to related entities if applicable. Access is strictly regulated: only the seller concerned and administrators may view the record.\n\nHistorical records are presented exactly as stored, supporting full traceability for dispute resolution, compliance reviews, or appeals. Attempts to fetch a non-existent or unauthorized record will return an error or empty result as appropriate by policy.","summary":"Retrieve a single seller status history record by ID (ai_commerce_seller_status_history).","parameters":[{"name":"sellerStatusHistoryId","description":"Unique identifier for the seller status history record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full seller status history record including actor, status change, and reason.","typeName":"IAiCommerceSellerStatusHistory"},"authorizationRoles":["admin","seller"],"name":"at","path":"/aiCommerce/seller/sellerStatusHistory/{sellerStatusHistoryId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered list of seller appeal cases. Appeals are recorded in ai_commerce_seller_appeals, covering seller-initiated requests for redress, review, or reversal of workflow actions such as rejection, penalties, or demotions. The search interface supports filtering by status, appeal type, date, and seller profile. Access is restricted to administrators and the seller making the appeal.","description":"Search and list seller appeal cases by various filtering parameters (status, appeal type, date, and seller profile) with pagination and sorting. Provides all details needed for fair review and timely dispute resolution, including the original appeal reason, evidence, current status, and admin/seller outcome notes.\n\nRole-based security: sellers may only access records concerning their own profile; administrators can view all appeals platform-wide. All actions and responses are appropriately logged for compliance. Output is designed for efficient case triage, review, and audit workflows.","summary":"Search and list seller appeal cases (ai_commerce_seller_appeals) with advanced filtering.","parameters":[],"requestBody":{"description":"Filter criteria and pagination settings for listing seller appeals.","typeName":"IAiCommerceSellerAppeal.IRequest"},"responseBody":{"description":"Paginated list of seller appeal cases and detailed information for each.","typeName":"IPageIAiCommerceSellerAppeal"},"authorizationRoles":["admin","seller"],"name":"index","path":"/aiCommerce/admin/sellerAppeals","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered list of seller appeal cases. Appeals are recorded in ai_commerce_seller_appeals, covering seller-initiated requests for redress, review, or reversal of workflow actions such as rejection, penalties, or demotions. The search interface supports filtering by status, appeal type, date, and seller profile. Access is restricted to administrators and the seller making the appeal.","description":"Search and list seller appeal cases by various filtering parameters (status, appeal type, date, and seller profile) with pagination and sorting. Provides all details needed for fair review and timely dispute resolution, including the original appeal reason, evidence, current status, and admin/seller outcome notes.\n\nRole-based security: sellers may only access records concerning their own profile; administrators can view all appeals platform-wide. All actions and responses are appropriately logged for compliance. Output is designed for efficient case triage, review, and audit workflows.","summary":"Search and list seller appeal cases (ai_commerce_seller_appeals) with advanced filtering.","parameters":[],"requestBody":{"description":"Filter criteria and pagination settings for listing seller appeals.","typeName":"IAiCommerceSellerAppeal.IRequest"},"responseBody":{"description":"Paginated list of seller appeal cases and detailed information for each.","typeName":"IPageIAiCommerceSellerAppeal"},"authorizationRoles":["admin","seller"],"name":"index","path":"/aiCommerce/seller/sellerAppeals","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves the complete details of a single seller appeal record. The ai_commerce_seller_appeals table logs all appeals submitted by sellers regarding workflow outcomes, penalties, or compliance escalations, including evidence, status transitions, and resolution notes. Admins have access to all cases, while sellers may access their own.","description":"Fetch all available information for a seller appeal by its unique identifier. Includes the appeal reason, type, evidence, timeline, administrator notes, and all relevant workflow status fields as recorded in the database. Used for real-time dispute investigation, compliance documentation, and resolution workflows.\n\nStrict role controls apply: only the seller involved and administrators have access to this operation. Record access and case review events are audit-logged. If the provided sellerAppealId does not exist, an appropriate error is returned.","summary":"Retrieve a specific seller appeal case by ID (ai_commerce_seller_appeals).","parameters":[{"name":"sellerAppealId","description":"Unique identifier for the seller appeal record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appeal record with all case fields, evidence, and outcome status.","typeName":"IAiCommerceSellerAppeal"},"authorizationRoles":["admin","seller"],"name":"at","path":"/aiCommerce/admin/sellerAppeals/{sellerAppealId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the complete details of a single seller appeal record. The ai_commerce_seller_appeals table logs all appeals submitted by sellers regarding workflow outcomes, penalties, or compliance escalations, including evidence, status transitions, and resolution notes. Admins have access to all cases, while sellers may access their own.","description":"Fetch all available information for a seller appeal by its unique identifier. Includes the appeal reason, type, evidence, timeline, administrator notes, and all relevant workflow status fields as recorded in the database. Used for real-time dispute investigation, compliance documentation, and resolution workflows.\n\nStrict role controls apply: only the seller involved and administrators have access to this operation. Record access and case review events are audit-logged. If the provided sellerAppealId does not exist, an appropriate error is returned.","summary":"Retrieve a specific seller appeal case by ID (ai_commerce_seller_appeals).","parameters":[{"name":"sellerAppealId","description":"Unique identifier for the seller appeal record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appeal record with all case fields, evidence, and outcome status.","typeName":"IAiCommerceSellerAppeal"},"authorizationRoles":["admin","seller"],"name":"at","path":"/aiCommerce/seller/sellerAppeals/{sellerAppealId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation allows a seller to initiate an appeal related to penalties, rejections, workflow decisions, or payout withholdings connected to the seller profile. The operation is focused on the ai_commerce_seller_appeals table in the Prisma schema, which captures the details of the appeal, its type, data/evidence, and initial status. Submission triggers review flows and audit logging according to business and compliance rules. The seller must provide all relevant information required for the appeal as defined by the business context of dispute resolution.","path":"/aiCommerce/seller/sellerAppeals","method":"post","summary":"Submit a new seller appeal regarding penalties, workflow actions, or payout holds (ai_commerce_seller_appeals).","description":"This API endpoint enables a seller to formally submit an appeal regarding platform actions such as rejections, penalties, demotions, payout blocks, or other negative workflow outcomes. Submissions are recorded in the ai_commerce_seller_appeals table, including the type of appeal, supporting evidence (as JSON), and an open status pending admin or business review.\n\nUser permissions are checked to ensure that only the owner of the seller profile may appeal on their own account. The platform retains full audit trails and evidence snapshots to support compliance and business reporting. The operation ensures the completeness of appeal data and enforces one appeal per unique case, per seller, preventing duplicate submissions for the same workflow event.\n\nRelated business APIs may include endpoints to retrieve the status of current appeals, administrative review flows, and dispute documentation uploads. Appeal workflow logic is aligned with the requirements for immutable audit logs, allowing for reproducible evidence handling and eventual notification of resolution outcomes to the appellant.","parameters":[],"requestBody":{"description":"Details of the seller appeal to be submitted, including type, attached evidence, and explanation.","typeName":"IAiCommerceSellerAppeal.ICreate"},"responseBody":{"description":"Created seller appeal record including ID, status, and submitted information.","typeName":"IAiCommerceSellerAppeal"},"authorizationRole":"seller","authorizationType":null,"name":"create"},{"specification":"This operation updates details or evidence for an existing seller appeal, as identified by the path parameter sellerAppealId. It operates on ai_commerce_seller_appeals in the Prisma schema and supports updating the appeal data, attached evidence, or status if business rules permit prior to resolution. All modifications are logged for compliance, and only the appellant or admin can update pending appeals.","path":"/aiCommerce/seller/sellerAppeals/{sellerAppealId}","method":"put","summary":"Update a pending seller appeal (ai_commerce_seller_appeals) by ID.","description":"This API endpoint allows for modifications to an open seller appeal entry, identified by sellerAppealId. Updates can be made to the supporting evidence, explanation, or appeal data fields, as long as the appeal has not reached a 'closed' or 'finalized' status. The operation is strictly tracked via immutable audit logs for dispute, compliance, and business workflow traceability.\n\nSecurity logic ensures only the original appellant (seller) or an admin can perform updates; role checks are enforced at the application layer. The operation references the ai_commerce_seller_appeals table and its fields for updating records while preserving all prior versions for compliance.\n\nValidation logic may include checks for non-modifiable appeal statuses, evidence data formatting, and preventing overwriting resolved cases. Error responses are returned for forbidden, locked, or invalid state transitions. This endpoint should be used in conjunction with GET/detail and admin review APIs in the broader dispute resolution workflow.","parameters":[{"name":"sellerAppealId","description":"Unique identifier of the seller appeal to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated seller appeal data, evidence, or status information (if permitted).","typeName":"IAiCommerceSellerAppeal.IUpdate"},"responseBody":{"description":"The updated seller appeal record with new evidence or status change.","typeName":"IAiCommerceSellerAppeal"},"authorizationRole":"seller","authorizationType":null,"name":"update"},{"specification":"This operation allows a seller to withdraw or remove a pending seller appeal, as identified by sellerAppealId. It performs a soft delete on the ai_commerce_seller_appeals table by populating the deleted_at field for retention and audit. Only appeals in modifiable states may be erased by the appellant, in compliance with platform business and legal guidelines.","path":"/aiCommerce/seller/sellerAppeals/{sellerAppealId}","method":"delete","summary":"Withdraw (soft delete) a pending seller appeal (ai_commerce_seller_appeals) by ID.","description":"This API operation enables a seller to withdraw their own appeal for cases where the issue has been resolved or the appeal is no longer relevant. The soft delete is applied by setting the deleted_at timestamp for the record in ai_commerce_seller_appeals, preserving the audit trail and evidentiary requirements for compliance.\n\nOnly appeals with open or reviewable status may be withdrawn by the original appellant (seller); appeals in finalized, resolved, or locked states cannot be overwritten or removed without admin intervention. Error responses inform users of ineligible status transitions or lack of access rights. This API must interoperate with audit logging and notification mechanisms to keep all parties informed of appeal record changes.\n\nPlatform admins can restore or permanently erase appeals as per escalation procedures, but sellers are limited to soft-deleting their own unresolved appeals.","parameters":[{"name":"sellerAppealId","description":"Unique identifier of the seller appeal to withdraw (soft delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"seller","authorizationType":null,"name":"erase"},{"specification":"This API retrieves a paginated, filterable list of seller dispute records that have been created and/or are currently in workflow. The operation is based on the ai_commerce_seller_disputes table, which documents disputes, penalties, escalations, and compliance cases for seller profiles. Supports advanced querying for type, status, period, or seller affiliation.","path":"/aiCommerce/admin/sellerDisputes","method":"patch","summary":"Search and retrieve a paginated list of seller dispute cases (ai_commerce_seller_disputes).","description":"This API provides a robust search interface for retrieving seller disputes, penalties, and escalation records from the ai_commerce_seller_disputes table. Advanced search and filtering criteria are supported, including dispute type (policy violation, payout hold, fraud investigation, etc.), status (open, closed, resolved, escalated), seller profile ID, and time windows for creation or modification.\n\nThe operation supports pagination, sorting, and intelligent querying, allowing administrators and compliance personnel to focus on relevant dispute categories. Security logic ensures that sellers may only view their own dispute records, while admins are able to access all records for compliance and oversight.\n\nRelated endpoints include those for dispute detail retrieval, evidence upload, and workflow escalation or resolution. The resulting data is optimized for dashboard and compliance monitoring use cases, with each record containing sufficient metadata for follow-up actions.","parameters":[],"requestBody":{"description":"Search and filter options for retrieving seller disputes (type, status, period, seller ID, pagination).","typeName":"IAiCommerceSellerDispute.IRequest"},"responseBody":{"description":"Paginated and filtered list of seller dispute summary records with metadata.","typeName":"IPageIAiCommerceSellerDispute.ISummary"},"authorizationRole":"admin","authorizationType":null,"name":"index"},{"specification":"This operation retrieves all available information about a single seller dispute case, using a unique identifier sellerDisputeId. It reads from ai_commerce_seller_disputes and returns all business fields, workflow status, evidence data, and audit trail metadata for compliance and administrative use.","path":"/aiCommerce/admin/sellerDisputes/{sellerDisputeId}","method":"get","summary":"Retrieve detailed information for a single seller dispute case (ai_commerce_seller_disputes) by ID.","description":"This API returns full details for a specific seller dispute as recorded in the ai_commerce_seller_disputes table, including dispute type, workflow status, context, attached evidence, and business/legal metadata fields. The endpoint supports auditability and forensic evidence gathering for dispute resolution and compliance monitoring.\n\nPermissions are enforced such that only the affected seller and authorized admins may retrieve sensitive dispute data. The comprehensive response allows for UI rendering of full dispute context and supports downstream actions such as resolution workflows, appeals, and evidence uploads.\n\nThis operation is critical to dispute management business processes and should incorporate robust error handling for permission and not-found edge cases. The API should be used in conjunction with the patch endpoint for search and overview scenarios.","parameters":[{"name":"sellerDisputeId","description":"Unique identifier of the seller dispute to retrieve details for.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested seller dispute, including all metadata and workflow states.","typeName":"IAiCommerceSellerDispute"},"authorizationRole":"admin","authorizationType":null,"name":"at"},{"specification":"This operation creates a new dispute, penalty, or escalation record for a seller profile in the platform, focusing on entries in the ai_commerce_seller_disputes table. The submitted payload captures the dispute type, evidence/context, and opens a workflow for administrative and compliance tracking. This endpoint initiates formal tracking for all types of seller-centric disputes managed by the business.","path":"/aiCommerce/admin/sellerDisputes","method":"post","summary":"Create a new seller dispute, escalation, or penalty case (ai_commerce_seller_disputes).","description":"This endpoint registers a new seller dispute, penalty, or compliance escalation in the ai_commerce_seller_disputes table. Submitted data must specify the affected seller profile, dispute type, business context, and supporting evidence, opening an administrative workflow for review and resolution as per platform rules.\n\nThe operation enforces validation to prevent duplicate cases on identical business events or redundant escalation records for the same policy infraction. Audit trails capture every action in compliance with legal and forensic guidelines.\n\nAccess is typically restricted to administrators and compliance officers who manage platform dispute workflows, in accordance with business requirement documents. The endpoint interoperates with business logic for evidence upload and status transitions, and returns the full created case for UI consumption.","parameters":[],"requestBody":{"description":"Dispute/penalty/escalation data for the new seller dispute record.","typeName":"IAiCommerceSellerDispute.ICreate"},"responseBody":{"description":"The newly created seller dispute record, including all case fields and workflow metadata.","typeName":"IAiCommerceSellerDispute"},"authorizationRole":"admin","authorizationType":null,"name":"create"},{"specification":"This operation updates business/evidence data, workflow status, or resolution details for an existing seller dispute record, as specified by sellerDisputeId. The operation updates the ai_commerce_seller_disputes table and accepts changes in compliance with platform/business rules. All updates are fully tracked via audit logs, and only authorized administrators may perform dispute modifications.","path":"/aiCommerce/admin/sellerDisputes/{sellerDisputeId}","method":"put","summary":"Update an existing seller dispute (ai_commerce_seller_disputes) by ID.","description":"This API endpoint updates details for an existing seller dispute, identified by sellerDisputeId. Permitted updates may include workflow status transitions, evidence/context field changes, or business notes relevant to the dispute's resolution. The full audit trail records all changes for compliance and dispute tracking integrity.\n\nRole-based access control restricts modification to authorized administrators. Validation ensures changes are permissible by business policy (e.g., closed disputes cannot be reopened without a new escalation). Error responses communicate any forbidden or invalid state transitions, and prior versions are maintained.\n\nUse along with POST (new disputes), GET (detail), and PATCH (search) endpoints for complete dispute lifecycle management.","parameters":[{"name":"sellerDisputeId","description":"Unique identifier of the seller dispute to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data, evidence, or status transition for the seller dispute.","typeName":"IAiCommerceSellerDispute.IUpdate"},"responseBody":{"description":"The updated seller dispute record reflecting new data or status.","typeName":"IAiCommerceSellerDispute"},"authorizationRole":"admin","authorizationType":null,"name":"update"},{"specification":"This operation allows an administrator to perform a hard delete on a seller dispute record for legal, compliance, or data correction reasons. Identifies the target by sellerDisputeId and removes the record from ai_commerce_seller_disputes, subject to strict audit and evidence preservation on deletion. This action is only available to platform admins as per business compliance requirements.","path":"/aiCommerce/admin/sellerDisputes/{sellerDisputeId}","method":"delete","summary":"Permanently remove a seller dispute record (ai_commerce_seller_disputes) by ID.","description":"This API allows administrators to permanently erase a seller dispute record from the ai_commerce_seller_disputes table. The operation is typically necessary only in legally justified scenarios (e.g., correction of mistake, compliance-removal), and not a routine path for standard business workflow.\n\nThe deletion is hard (record removed from the database) and is tracked in immutable audit logs for evidence purposes. Only platform administrators are permitted to invoke this action, and checks are performed to prevent the deletion of disputes critical for ongoing legal or compliance processes.\n\nComplementary endpoints should include get (detail view) and patch (search/list) for monitoring dispute records; update and compliance escalation features should be managed before considering hard deletion.","parameters":[{"name":"sellerDisputeId","description":"Unique identifier of the seller dispute to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","authorizationType":null,"name":"erase"},{"specification":"This operation performs a filtered, paginated search for products. It operates on the ai_commerce_products table, providing support for complex query parameters such as product name, status, seller/store association, category, and price range. The endpoint enables advanced product discovery and analytics for admin and platform merchandising teams. Incorporates sorting, pagination, and channel/section scoping as required. The returned data can be used for content moderation, analytics, bulk operations, or feed building.","description":"Retrieve a filtered and paginated list of products registered in the system. The operation utilizes the IAICommerceProduct.IRequest DTO for rich query capabilities including search by product name, code, store, seller, and channel association. This API enables searching by status (draft, active, paused, suspended, discontinued, deleted), pricing ranges, category or section bindings, and supports keyword-based quick searching.\n\nAccess to product search is generally restricted to admin users for management, moderation, and analytics. Security considerations include rate limiting and filtering of privileged information based on user authorization levels. Only admins can view full unmoderated details (including deleted products or compliance status); sellers or buyers may have limited visibility.\n\nUsing the ai_commerce_products table as the primary source, this operation joins relevant entities (seller, store, categories, variants) where necessary for filtering and aggregation. Pagination and sorting parameters are essential to ensure scalable high-volume queries. Error handling includes validation for out-of-range paging parameters, invalid filters, or unauthorized data exposure. Related endpoints include detail retrieval (GET /products/{productId}) and creation (POST /products).","summary":"Search, filter, and retrieve a filtered, paginated list of products (admin only) in ai_commerce_products.","parameters":[],"requestBody":{"description":"Filter and pagination criteria for product search, supporting keyword, status, category, seller, etc.","typeName":"IAiCommerceProduct.IRequest"},"responseBody":{"description":"Paginated list of product summaries matching criteria for admin interfaces.","typeName":"IPageIAiCommerceProduct.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/products","method":"patch"},{"specification":"This operation retrieves full detail for a single product by its unique identifier from the ai_commerce_products table. It gives access to all business, pricing, inventory, compliance, and product content fields, including related variants and options, based on role authorization. The endpoint enables admins and authorized sellers to inspect and manage individual product records, review compliance audits, and support business workflows.","description":"Fetch detailed information about a specific product, given its unique productId. The endpoint returns all data defined in the IAICommerceProduct DTO, which comprises business attributes (name, SKU, price, inventory), product status, option/variant configuration, and full content for frontend or admin interfaces. Also includes compliance/legal markers, attached assets, section/category assignments, and historical state if available.\n\nProduct detail is viewable by admins for all records. Sellers may access their own product details, including draft or paused listings. Buyers and visitors are restricted to approved/active products and are not exposed to internal fields or audit history.\n\nUses ai_commerce_products as the main record, joining with variants, compliance, store, and seller if needed. Error scenarios handled include invalid/absent productId, unauthorized access to unpublished or deleted products, and malformed queries. Complementary to PATCH /products (search), PUT/POST for create/update, and DELETE/erase endpoints.","summary":"Retrieve detailed information for a specific product by ID in ai_commerce_products.","parameters":[{"name":"productId","description":"Unique identifier (UUID) of the target product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete information of the specified product for authorized roles.","typeName":"IAiCommerceProduct"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/products/{productId}","method":"get"},{"specification":"This operation creates a new product record under the ai_commerce_products table. By posting product registration details, authorized sellers or administrators can add products, define their attributes (name, SKU, description, options, pricing, inventory), and assign categories/sections. All creation events trigger audit snapshots. Compliance with platform and regulatory requirements (category eligibility, documentation, pricing range) is validated.","description":"Register a new product to the system as a seller or admin. Input data must conform to IAiCommerceProduct.ICreate, including required business business attributes (name, description), seller and store association, product code/SKU, category assignments, base price, inventory details, and compliance fields as mandated by platform policy. Optional variant/option definitions may be specified at create time.\n\nCreated products are initially saved as draft or require admin approval depending on business workflow. The operation ensures all core validations: required fields are present, price and inventory are within allowed limits, SKU uniqueness is enforced, and regulatory requirements (certifications, compliance region) are satisfied. Compliance status, legal snapshots, and business rules are enforced according to the ai_commerce_products schema and associated tables.\n\nAudit trails are generated for create events and reference all actor/ownership information. The new product record is returned in detail (IAiCommerceProduct DTO) after successful creation. Related endpoints include product search (PATCH /products), detail (GET /products/{productId}), and update (PUT /products/{productId}).","summary":"Create a new product with business, inventory, and compliance details in ai_commerce_products.","parameters":[],"requestBody":{"description":"Required information for new product registration, including business fields, inventory, and compliance.","typeName":"IAiCommerceProduct.ICreate"},"responseBody":{"description":"Full product record as created, including all validated and generated fields.","typeName":"IAiCommerceProduct"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/products","method":"post"},{"specification":"This operation creates a new product record under the ai_commerce_products table. By posting product registration details, authorized sellers or administrators can add products, define their attributes (name, SKU, description, options, pricing, inventory), and assign categories/sections. All creation events trigger audit snapshots. Compliance with platform and regulatory requirements (category eligibility, documentation, pricing range) is validated.","description":"Register a new product to the system as a seller or admin. Input data must conform to IAiCommerceProduct.ICreate, including required business business attributes (name, description), seller and store association, product code/SKU, category assignments, base price, inventory details, and compliance fields as mandated by platform policy. Optional variant/option definitions may be specified at create time.\n\nCreated products are initially saved as draft or require admin approval depending on business workflow. The operation ensures all core validations: required fields are present, price and inventory are within allowed limits, SKU uniqueness is enforced, and regulatory requirements (certifications, compliance region) are satisfied. Compliance status, legal snapshots, and business rules are enforced according to the ai_commerce_products schema and associated tables.\n\nAudit trails are generated for create events and reference all actor/ownership information. The new product record is returned in detail (IAiCommerceProduct DTO) after successful creation. Related endpoints include product search (PATCH /products), detail (GET /products/{productId}), and update (PUT /products/{productId}).","summary":"Create a new product with business, inventory, and compliance details in ai_commerce_products.","parameters":[],"requestBody":{"description":"Required information for new product registration, including business fields, inventory, and compliance.","typeName":"IAiCommerceProduct.ICreate"},"responseBody":{"description":"Full product record as created, including all validated and generated fields.","typeName":"IAiCommerceProduct"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/products","method":"post"},{"specification":"This operation updates an existing product in the ai_commerce_products table. Accessible to product owners (sellers) or admins, it allows editing core business information, inventory, pricing, compliance fields, and optionally variants/options. Update events trigger full audit and snapshotting for legal compliance. Edits are validated for business rules and regulatory compatibility, including SKU and pricing checks.","description":"Edit or update fields of a product record identified by productId, using IAiCommerceProduct.IUpdate to specify modified values. All modifications are subject to role-based access control: sellers can only update their own products, while admins may edit any product for correction/audit. Supported fields include business attributes, pricing, inventory quantities, product content, attachments, category/section bindings, variant/option configurations, and compliance/certification fields.\n\nThe operation enforces SKU uniqueness, pricing and inventory limits, and legal compliance by validating updates per the ai_commerce_products schema and regulatory requirements. On successful update, an audit snapshot is captured for traceability. Error handling includes invalid productId, unauthorized access, edit attempts for locked or deleted products, or validation failures on submitted data. Related endpoints are GET /products/{productId} (read), POST /products (create), and DELETE /products/{productId} (deletion).","summary":"Update product information and attributes for a specific productId in ai_commerce_products.","parameters":[{"name":"productId","description":"Unique identifier (UUID) of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Product update information: only the fields to modify are required, others may be omitted.","typeName":"IAiCommerceProduct.IUpdate"},"responseBody":{"description":"Updated product record including all changes and validated fields.","typeName":"IAiCommerceProduct"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/products/{productId}","method":"put"},{"specification":"This operation updates an existing product in the ai_commerce_products table. Accessible to product owners (sellers) or admins, it allows editing core business information, inventory, pricing, compliance fields, and optionally variants/options. Update events trigger full audit and snapshotting for legal compliance. Edits are validated for business rules and regulatory compatibility, including SKU and pricing checks.","description":"Edit or update fields of a product record identified by productId, using IAiCommerceProduct.IUpdate to specify modified values. All modifications are subject to role-based access control: sellers can only update their own products, while admins may edit any product for correction/audit. Supported fields include business attributes, pricing, inventory quantities, product content, attachments, category/section bindings, variant/option configurations, and compliance/certification fields.\n\nThe operation enforces SKU uniqueness, pricing and inventory limits, and legal compliance by validating updates per the ai_commerce_products schema and regulatory requirements. On successful update, an audit snapshot is captured for traceability. Error handling includes invalid productId, unauthorized access, edit attempts for locked or deleted products, or validation failures on submitted data. Related endpoints are GET /products/{productId} (read), POST /products (create), and DELETE /products/{productId} (deletion).","summary":"Update product information and attributes for a specific productId in ai_commerce_products.","parameters":[{"name":"productId","description":"Unique identifier (UUID) of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Product update information: only the fields to modify are required, others may be omitted.","typeName":"IAiCommerceProduct.IUpdate"},"responseBody":{"description":"Updated product record including all changes and validated fields.","typeName":"IAiCommerceProduct"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/products/{productId}","method":"put"},{"specification":"This operation permanently erases (hard deletes, not soft deletes) a product record from the ai_commerce_products table by productId. Only admins may perform this action; all related audit logs and compliance records are retained for legal purposes. Deletion is rejected for products that are linked to historical orders or under active compliance lock. Associated variants, bundles, and audit logs are also addressed per business rules.","description":"Permanently remove the specified product from the database, given its productId. This is a hard delete operation—deleted_at is set for logical removal as per table schema (soft delete semantics), but the record is effectively excluded from all business logic and interfaces. Only users with admin privileges may perform product deletion.\n\nThe operation ensures data integrity by verifying that the target product is not referenced by any active or historical orders, audits, or compliance holds; if so, deletion is prevented and an error is returned. Otherwise, the product record is flagged as deleted, associated options/variants are handled according to policy, and an audit record is generated for compliance. Soft delete is implemented as standard platform policy, retaining all legal and compliance history. Error cases include invalid productId, unauthorized deletion attempt, or product currently in use.","summary":"Permanently erase (soft delete) a product by productId in ai_commerce_products (admin only).","parameters":[{"name":"productId","description":"Unique identifier (UUID) of the product to permanently erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/products/{productId}","method":"delete"},{"specification":"This operation searches option/variant records for a given product. Fetched from the ai_commerce_product_variants table, results are paginated and filtered by option summary, status, SKU, or price. Sellers (owners) may access their own product's variants, while admins may view all. Useful for management, analytics, and business workflow operations.","description":"List/search variants for a specific product, paginated and filtered by parameters provided in IAiCommerceProductVariant.IRequest. Includes support for search by SKU, option summary (e.g., 'Size: M / Color: Red'), status (active, paused, discontinued), price, and inventory. Results are intended for owner (seller) management, admin moderation, or analytics application. Each returned variant includes all business/operational fields and can reference parent product context.\n\nThis operation accesses the ai_commerce_product_variants table and may join parent product for authorization filtering. Sellers may only view variants linked to their own products. Admins can access all. Validation errors include non-existent or unauthorized productId reference, invalid filtering, or access to variants for products not owned by the user. Related endpoints include PUT/POST for variant creation and update, GET for detail retrieval, and DELETE if permitted.","summary":"Paginate and search product variants/options under a given product (admin or owner).","parameters":[{"name":"productId","description":"UUID of the parent product whose variants to search.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter/pagination criteria for variants of the target product.","typeName":"IAiCommerceProductVariant.IRequest"},"responseBody":{"description":"Paginated list of variant summaries for the specified product.","typeName":"IPageIAiCommerceProductVariant.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/products/{productId}/variants","method":"patch"},{"specification":"This operation searches option/variant records for a given product. Fetched from the ai_commerce_product_variants table, results are paginated and filtered by option summary, status, SKU, or price. Sellers (owners) may access their own product's variants, while admins may view all. Useful for management, analytics, and business workflow operations.","description":"List/search variants for a specific product, paginated and filtered by parameters provided in IAiCommerceProductVariant.IRequest. Includes support for search by SKU, option summary (e.g., 'Size: M / Color: Red'), status (active, paused, discontinued), price, and inventory. Results are intended for owner (seller) management, admin moderation, or analytics application. Each returned variant includes all business/operational fields and can reference parent product context.\n\nThis operation accesses the ai_commerce_product_variants table and may join parent product for authorization filtering. Sellers may only view variants linked to their own products. Admins can access all. Validation errors include non-existent or unauthorized productId reference, invalid filtering, or access to variants for products not owned by the user. Related endpoints include PUT/POST for variant creation and update, GET for detail retrieval, and DELETE if permitted.","summary":"Paginate and search product variants/options under a given product (admin or owner).","parameters":[{"name":"productId","description":"UUID of the parent product whose variants to search.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter/pagination criteria for variants of the target product.","typeName":"IAiCommerceProductVariant.IRequest"},"responseBody":{"description":"Paginated list of variant summaries for the specified product.","typeName":"IPageIAiCommerceProductVariant.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/variants","method":"patch"},{"specification":"This operation returns detail of a specific variant/option for a product. It looks up the ai_commerce_product_variants table by variantId scoped to the specified parent productId. Result contains all business fields, option summary, price, and inventory. Authorization is limited to product owners (sellers) and admins.","description":"Retrieve detail of a particular variant, given both parent productId and variantId (UUIDs). The returned DTO (IAiCommerceProductVariant) enumerates SKU, option summary, price, inventory, status, and business classification fields. Optionally includes parent product reference where required for business context or access checks.\n\nAdmins may view all variants; sellers may access only those belonging to their own products. The AI system validates both product and variant existence and matching. Errors returned for absent/invalid productId, variantId, or unauthorized access. Related endpoints include variant PATCH (search), PUT/POST for creation or update, and variant deletion if defined in further requirements.","summary":"Get full information of a specific product variant under a given product for admin/owner.","parameters":[{"name":"productId","description":"UUID of the product whose variant to retrieve.","schema":{"type":"string","format":"uuid"}},{"name":"variantId","description":"UUID of the target variant within the parent product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specific variant/option, including business fields and inventory.","typeName":"IAiCommerceProductVariant"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/products/{productId}/variants/{variantId}","method":"get"},{"specification":"This operation returns detail of a specific variant/option for a product. It looks up the ai_commerce_product_variants table by variantId scoped to the specified parent productId. Result contains all business fields, option summary, price, and inventory. Authorization is limited to product owners (sellers) and admins.","description":"Retrieve detail of a particular variant, given both parent productId and variantId (UUIDs). The returned DTO (IAiCommerceProductVariant) enumerates SKU, option summary, price, inventory, status, and business classification fields. Optionally includes parent product reference where required for business context or access checks.\n\nAdmins may view all variants; sellers may access only those belonging to their own products. The AI system validates both product and variant existence and matching. Errors returned for absent/invalid productId, variantId, or unauthorized access. Related endpoints include variant PATCH (search), PUT/POST for creation or update, and variant deletion if defined in further requirements.","summary":"Get full information of a specific product variant under a given product for admin/owner.","parameters":[{"name":"productId","description":"UUID of the product whose variant to retrieve.","schema":{"type":"string","format":"uuid"}},{"name":"variantId","description":"UUID of the target variant within the parent product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specific variant/option, including business fields and inventory.","typeName":"IAiCommerceProductVariant"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/products/{productId}/variants/{variantId}","method":"get"},{"specification":"This operation allows the creation of a new variant/option for a specific product in the ai_commerce_product_variants table. Sellers (product owners) or admins can register variants by specifying SKU, option summary, price, inventory, and status. The created variant is linked to the parent product, with all business and compliance constraints enforced. Generates audit/snapshot entries on creation.","description":"Register a new product variant/option under the specified product. Fields are provided via IAiCommerceProductVariant.ICreate, covering SKU, option summary, variant-specific price, inventory count, and operational status. Variant will inherit parent product context and can be referenced in analytics or downstream order flows.\n\nThis operation is restricted to product owners (seller) or admins. It enforces uniqueness of SKUs within product, validates all required fields, ensures input is compatible with product's current lifecycle status, and records an audit snapshot. Errors may occur for non-existent/mismatched productId, duplicate SKU, invalid parameters, or unauthorized creation.\n\nThe completed variant record (IAiCommerceProductVariant) is returned on success. Related endpoints cover variant searching (PATCH /products/{productId}/variants), detail (GET), and update flows.","summary":"Create a new variant/option under a given product for inventory/sales management.","parameters":[{"name":"productId","description":"UUID of the product to which the new variant will be linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Variant registration details (SKU, options summary, price, inventory, status).","typeName":"IAiCommerceProductVariant.ICreate"},"responseBody":{"description":"Created variant/option record with all validated and generated fields.","typeName":"IAiCommerceProductVariant"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/products/{productId}/variants","method":"post"},{"specification":"This operation allows the creation of a new variant/option for a specific product in the ai_commerce_product_variants table. Sellers (product owners) or admins can register variants by specifying SKU, option summary, price, inventory, and status. The created variant is linked to the parent product, with all business and compliance constraints enforced. Generates audit/snapshot entries on creation.","description":"Register a new product variant/option under the specified product. Fields are provided via IAiCommerceProductVariant.ICreate, covering SKU, option summary, variant-specific price, inventory count, and operational status. Variant will inherit parent product context and can be referenced in analytics or downstream order flows.\n\nThis operation is restricted to product owners (seller) or admins. It enforces uniqueness of SKUs within product, validates all required fields, ensures input is compatible with product's current lifecycle status, and records an audit snapshot. Errors may occur for non-existent/mismatched productId, duplicate SKU, invalid parameters, or unauthorized creation.\n\nThe completed variant record (IAiCommerceProductVariant) is returned on success. Related endpoints cover variant searching (PATCH /products/{productId}/variants), detail (GET), and update flows.","summary":"Create a new variant/option under a given product for inventory/sales management.","parameters":[{"name":"productId","description":"UUID of the product to which the new variant will be linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Variant registration details (SKU, options summary, price, inventory, status).","typeName":"IAiCommerceProductVariant.ICreate"},"responseBody":{"description":"Created variant/option record with all validated and generated fields.","typeName":"IAiCommerceProductVariant"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/products/{productId}/variants","method":"post"},{"specification":"Update an existing product variant in the ai_commerce_product_variants table. The operation is for sellers who need to update details (such as SKU code, option summary, variant price, inventory, and status) for a specific variant (option set) of a product. All updates are subject to validation as described in the schema: the parent product and variant must exist, and the requesting user must be the owner. Changes trigger audit snapshots and may impact current inventory and option availability. Related to ai_commerce_products and ai_commerce_product_variants tables in the schema.","description":"This operation updates a specific product variant belonging to a product in the marketplace. Sellers use this endpoint to update information such as SKU code, option summary, price (variant_price), inventory_quantity, and status of the variant. The provided variantId and productId must correspond to an existing record. \n\nThe update is only allowed if the authenticated user is the owner seller, and the variant is not in a 'deleted' state. All updates are tracked in the audit logs for compliance, ensuring that every change is traceable, including details of who performed the update and which fields were changed.  \n\nInput is strictly validated: SKU code must remain unique, price should not be negative, and inventory quantities are checked for business rules (e.g., cannot set negative inventory). Errors are returned for invalid references, forbidden actions, or failed business rules. See also: creating variants, erasing variants, and updating parent product information.","summary":"Update an existing product variant (ai_commerce_product_variants table).","parameters":[{"name":"productId","description":"The unique identifier (UUID) of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"variantId","description":"The unique identifier (UUID) of the variant to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the product variant: option summary, SKU, price, inventory, and status.","typeName":"IAiCommerceProductVariant.IUpdate"},"responseBody":{"description":"The updated variant entity with all relevant fields after modification.","typeName":"IAiCommerceProductVariant"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/products/{productId}/variants/{variantId}","method":"put"},{"specification":"Remove (hard delete or soft delete, depending on the deleted_at field) a product variant from the ai_commerce_product_variants table. Used by sellers to remove a variant they no longer wish to offer. Fully auditable and subject to business validation: cannot remove variants referenced in active orders.","description":"This operation deletes a specific product variant associated with a product. The request identifies the parent product and the target variant by UUID. The operation is available to sellers who own the product, subject to business constraints: deletion is blocked if the variant is referenced in active orders or in a state that disallows removal. \n\nIf the schema includes a deleted_at field, this is a soft delete: the record is retained for audit and compliance but is excluded from product listings and option selection. Actions are strictly logged for forensic purposes. \n\nRelated endpoints include: create, update, and get variant. Attempting to delete a non-existing or already deleted record returns an error.","summary":"Delete (soft or hard) an existing product variant (ai_commerce_product_variants table).","parameters":[{"name":"productId","description":"The UUID of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"variantId","description":"The UUID of the product variant to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/products/{productId}/variants/{variantId}","method":"delete"},{"specification":"List all bundles associated with a single product in the ai_commerce_product_bundles table, with support for advanced filtering, sorting, and pagination. Used by sellers or platform admins to discover and manage composite products (bundles) related to a given product.","description":"This operation retrieves a paginated list of bundles linked to the specified product. Bundles represent composite products that include multiple child items. Sellers utilize this endpoint to view all bundles under their product, with support for filtering by status, name, or other criteria.  \n\nThe list is paginated and may be filtered by active status, name, or other metadata as supported in the request DTO. The result includes summary information suitable for listing in UI or further management. Only authorized users (owners of the product or platform admins) can access this information. \n\nValidation includes checking product existence and seller/admin permissions. The ai_commerce_product_bundles table is the main reference, but relationships to child products/variants may be included in the summary DTO. Errors are raised for missing product or insufficient permissions.","summary":"Retrieve/paginate all bundles for a product (ai_commerce_product_bundles table).","parameters":[{"name":"productId","description":"UUID of the product whose bundles are being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query, filter, and pagination parameters for getting bundles.","typeName":"IAiCommerceProductBundle.IRequest"},"responseBody":{"description":"Page of product bundle summaries associated with the product.","typeName":"IPageIAiCommerceProductBundle.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/bundles","method":"patch"},{"specification":"Retrieve the details of a specific product bundle by its bundleId, associated with a particular productId, from the ai_commerce_product_bundles table. Used by sellers or admins for detailed view or editing workflows.","description":"This endpoint retrieves the complete details of a bundle, including all product/variant items, pricing, metadata, and status. Used in product detail pages, editing workflows, or for preparing updates. Sellers must own the parent product or have explicit permission to view. \n\nThe GET operation fully populates all relevant bundle fields per the ai_commerce_product_bundles schema and provides comprehensive information for decision making or editing. Errors are returned if the combination of productId and bundleId does not exist or if the requester lacks authorization. See also: update bundle, erase bundle, and bundle listing endpoints.","summary":"Get details for a specific product bundle (ai_commerce_product_bundles table).","parameters":[{"name":"productId","description":"The unique identifier of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"The unique identifier of the bundle to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed bundle entity with all related child items and metadata.","typeName":"IAiCommerceProductBundle"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/products/{productId}/bundles/{bundleId}","method":"get"},{"specification":"Create a new product bundle (composite product) under a specific product, in the ai_commerce_product_bundles table. Allows sellers to combine multiple SKUs/products into a purchasable set. Bundles are used for promotions, complex products, or deals.","description":"This operation enables a seller to create a new bundle for a product. The supplied data specifies bundle code, name, description, pricing, and constituent items (child products or variants and their quantities/order). Creation requests are validated for allowed number of bundles, uniqueness of bundle code, and required link to the parent product.\n\nThe input follows the schema and supports advanced use cases such as optional/required child items. Audit events are generated for compliance, and the association to the parent product is mandatory. Errors are returned for any violations of uniqueness, permissions, or data completeness. The operation is limited to sellers with ownership of the product.","summary":"Create a new product bundle for a product (ai_commerce_product_bundles table).","parameters":[{"name":"productId","description":"UUID of the parent product to which the bundle should be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Bundle creation fields, includes item composition and pricing.","typeName":"IAiCommerceProductBundle.ICreate"},"responseBody":{"description":"The created product bundle entity, including all bundle item details.","typeName":"IAiCommerceProductBundle"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/products/{productId}/bundles","method":"post"},{"specification":"Update an existing product bundle identified by bundleId under a specified product, in the ai_commerce_product_bundles table. Used for maintaining promotions, composite product updates, and correcting mistakes.","description":"This endpoint allows sellers to update bundle information, including metadata, price, bundle composition, and statuses for a specific bundle associated with a product. The seller must own the product/bundle. \n\nInput data is checked for validity in reference to the ai_commerce_product_bundles schema, and changes are subject to audit/snapshot processes. Uniqueness of bundle code, valid status transitions, and logical update of bundle items are checked. Errors are returned for invalid ids, lack of permission, or violations of business rules.","summary":"Update an existing product bundle for a product (ai_commerce_product_bundles table).","parameters":[{"name":"productId","description":"UUID of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"UUID of the bundle to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update fields for the bundle, including item composition, price, and status changes.","typeName":"IAiCommerceProductBundle.IUpdate"},"responseBody":{"description":"The updated product bundle entity with details and changes applied.","typeName":"IAiCommerceProductBundle"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/products/{productId}/bundles/{bundleId}","method":"put"},{"specification":"Delete (soft or hard based on schema) a product bundle identified by bundleId under the specified productId from the ai_commerce_product_bundles table. Sellers use this to remove obsolete deals or incorrect bundles.","description":"This operation deletes a bundle from a product, subject to verification of ownership and compliance with business rules. If the schema supports soft deletion (deleted_at field), the operation marks the bundle as deleted but does not physically erase it, retaining history for audit/compliance. If the bundle is referenced in active orders or promotions, deletion may be blocked.\n\nAll deletions are audit-logged, and the operation is allowed only for sellers who own the parent product and bundle. Deleting a non-existent or already deleted bundle returns an error. Related endpoints: create, update, at (get bundle).","summary":"Delete (soft/hard) a product bundle from a product (ai_commerce_product_bundles table).","parameters":[{"name":"productId","description":"UUID of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"UUID of the bundle to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/products/{productId}/bundles/{bundleId}","method":"delete"},{"specification":"Retrieve a paginated, filtered list of images for a product from the ai_commerce_product_images table. Allows querying and managing attachments associated with a product, with support for locale, order, and display options.","description":"This operation allows a seller to list or paginate through the images attached to a particular product. The result contains summary metadata (e.g., display order, attachment id, locale) and is suitable for use in file management UIs or for preparing image updates.\n\nSupports query/pagination parameters for status, order, locale, or other filters as exposed in the request DTO. Only sellers with permission on the product can access this data. The operation strictly validates the productId and user permissions, and errors are returned for invalid, missing, or unauthorized references. Use with product update, add image, or delete image operations for full image management lifecycle.","summary":"Paginate/list product images associated with a product (ai_commerce_product_images table).","parameters":[{"name":"productId","description":"UUID of the product to list or filter images for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination options for product images.","typeName":"IAiCommerceProductImage.IRequest"},"responseBody":{"description":"Paginated result of product image summaries for UI or image management.","typeName":"IPageIAiCommerceProductImage.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/images","method":"patch"},{"specification":"This operation retrieves a single product image associated with a specific product, enabling clients to view individual images for detailed display or editing scenarios. This operation utilizes the ai_commerce_product_images table from the Prisma schema, leveraging the productId as the parent product reference and imageId for the target image. It is intended for scenarios such as image gallery presentation, admin review, or seller UI image selection.","path":"/aiCommerce/seller/products/{productId}/images/{imageId}","method":"get","summary":"Retrieve a product image for a given productId and imageId from ai_commerce_product_images","description":"Fetch a single product image, including its display order, locale metadata, and attachment file reference, as defined in the ai_commerce_product_images schema. The operation is accessible to authorized sellers (for their own products) and platform admins; public access may be permitted for resources marked as active and public, per business requirements.\n\nThis endpoint fetches all columns for the identified image: id, product_id, attachment_id, display_order, and locale. Security checks should ensure that only the creator or authorized admin can view unpublished/archived images, while published images for public products may be accessible by any authenticated or public user. Error handling covers not found, access denied, and resource deletion scenarios.\n\nThis operation enables granular image management UI/UX and can be linked to attachment/download APIs for file retrieval.","parameters":[{"name":"productId","description":"Unique identifier of the parent product","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Unique identifier for the product image resource","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the specified product image including attachment reference and order metadata.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"This operation retrieves a single product image associated with a specific product, enabling clients to view individual images for detailed display or editing scenarios. This operation utilizes the ai_commerce_product_images table from the Prisma schema, leveraging the productId as the parent product reference and imageId for the target image. It is intended for scenarios such as image gallery presentation, admin review, or seller UI image selection.","path":"/aiCommerce/admin/products/{productId}/images/{imageId}","method":"get","summary":"Retrieve a product image for a given productId and imageId from ai_commerce_product_images","description":"Fetch a single product image, including its display order, locale metadata, and attachment file reference, as defined in the ai_commerce_product_images schema. The operation is accessible to authorized sellers (for their own products) and platform admins; public access may be permitted for resources marked as active and public, per business requirements.\n\nThis endpoint fetches all columns for the identified image: id, product_id, attachment_id, display_order, and locale. Security checks should ensure that only the creator or authorized admin can view unpublished/archived images, while published images for public products may be accessible by any authenticated or public user. Error handling covers not found, access denied, and resource deletion scenarios.\n\nThis operation enables granular image management UI/UX and can be linked to attachment/download APIs for file retrieval.","parameters":[{"name":"productId","description":"Unique identifier of the parent product","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Unique identifier for the product image resource","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the specified product image including attachment reference and order metadata.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation allows authorized sellers or admins to add a new image to a specific product by uploading attachment metadata and display information, utilizing the ai_commerce_product_images schema. It supports multi-image products, sequential ordering, and localization via an optional locale field.","path":"/aiCommerce/seller/products/{productId}/images","method":"post","summary":"Add a new image to an existing product in ai_commerce_product_images","description":"Creates a new image resource for a given product, collecting necessary fields including the attachment (file) reference, display order, and locale. The operation checks seller ownership or admin rights and validates that the product exists and is editable.\n\nThe request body corresponds to the IAiCommerceProductImage.ICreate DTO and must contain the attachment_id (for the uploaded file), optional locale, display_order, and productId path parameter. Image limits, file type/size, and localization policies should be enforced per business logic. If the image is associated with a product not owned by the seller or in an immutable state, the request should be rejected.\n\nOn success, returns the newly created image entity as response with full metadata for UI updates. This endpoint integrates with attachment storage APIs in file management flows.","parameters":[{"name":"productId","description":"Unique identifier of the target product to add an image to","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Image upload data including attachment reference and optional locale/order","typeName":"IAiCommerceProductImage.ICreate"},"responseBody":{"description":"The created product image record with all metadata as saved.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"seller","name":"create"},{"specification":"This operation allows authorized sellers or admins to add a new image to a specific product by uploading attachment metadata and display information, utilizing the ai_commerce_product_images schema. It supports multi-image products, sequential ordering, and localization via an optional locale field.","path":"/aiCommerce/admin/products/{productId}/images","method":"post","summary":"Add a new image to an existing product in ai_commerce_product_images","description":"Creates a new image resource for a given product, collecting necessary fields including the attachment (file) reference, display order, and locale. The operation checks seller ownership or admin rights and validates that the product exists and is editable.\n\nThe request body corresponds to the IAiCommerceProductImage.ICreate DTO and must contain the attachment_id (for the uploaded file), optional locale, display_order, and productId path parameter. Image limits, file type/size, and localization policies should be enforced per business logic. If the image is associated with a product not owned by the seller or in an immutable state, the request should be rejected.\n\nOn success, returns the newly created image entity as response with full metadata for UI updates. This endpoint integrates with attachment storage APIs in file management flows.","parameters":[{"name":"productId","description":"Unique identifier of the target product to add an image to","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Image upload data including attachment reference and optional locale/order","typeName":"IAiCommerceProductImage.ICreate"},"responseBody":{"description":"The created product image record with all metadata as saved.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"This operation updates the metadata of an existing image for a product, allowing changes to attachment files (if necessary), display order, or localization parameters. It refers to the ai_commerce_product_images schema and expects path parameters for product and image IDs.","path":"/aiCommerce/seller/products/{productId}/images/{imageId}","method":"put","summary":"Update an image's metadata for a specific product using ai_commerce_product_images","description":"Permits the owner (seller) of the product or platform admins to update fields for a product image such as the linked attachment (file), display order, or locale. Based on the IAiCommerceProductImage.IUpdate DTO, the request supports full or partial field replacement; it is not intended for image content modification but for metadata management only.\n\nAuthorization enforces seller ownership or admin role, and the existence and modifiability of the image/product. Changes should be audited and validated against product publishing status (e.g., published images may have change restrictions). A successful update returns the new image entity. Business logic includes checking for image asset existence, field validation, and external attachment verification with file management modules.","parameters":[{"name":"productId","description":"Product to which this image belongs","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Image record to modify","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for product image metadata updates","typeName":"IAiCommerceProductImage.IUpdate"},"responseBody":{"description":"Updated product image entity reflecting new metadata.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation updates the metadata of an existing image for a product, allowing changes to attachment files (if necessary), display order, or localization parameters. It refers to the ai_commerce_product_images schema and expects path parameters for product and image IDs.","path":"/aiCommerce/admin/products/{productId}/images/{imageId}","method":"put","summary":"Update an image's metadata for a specific product using ai_commerce_product_images","description":"Permits the owner (seller) of the product or platform admins to update fields for a product image such as the linked attachment (file), display order, or locale. Based on the IAiCommerceProductImage.IUpdate DTO, the request supports full or partial field replacement; it is not intended for image content modification but for metadata management only.\n\nAuthorization enforces seller ownership or admin role, and the existence and modifiability of the image/product. Changes should be audited and validated against product publishing status (e.g., published images may have change restrictions). A successful update returns the new image entity. Business logic includes checking for image asset existence, field validation, and external attachment verification with file management modules.","parameters":[{"name":"productId","description":"Product to which this image belongs","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Image record to modify","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for product image metadata updates","typeName":"IAiCommerceProductImage.IUpdate"},"responseBody":{"description":"Updated product image entity reflecting new metadata.","typeName":"IAiCommerceProductImage"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation removes a product image record from the database or logically deletes it (via deleted_at field) if supported by ai_commerce_product_images schema. This is used for image gallery housekeeping or when replacing images, and is controlled by seller/admin privileges.","path":"/aiCommerce/seller/products/{productId}/images/{imageId}","method":"delete","summary":"Delete a specific product image from ai_commerce_product_images","description":"Deletes or logically removes a product image for a specified product, ensuring only authorized sellers (for their products) or admins can execute the operation. This endpoint is used for cleaning up duplicate or outdated images, and supports compliance with gallery or publishing limits.\n\nPrior to deletion, checks are performed to ensure the image is not set as primary, used in a locked product state, or referenced by audit/history features. If soft deletion is implemented, the record is marked via the deleted_at column; otherwise, the row is permanently removed from the table. The operation will fail if the image does not exist or if access is not permitted.\n\nNo response body is provided on success, but an HTTP status code will indicate completion. Errors for not found, forbidden, or resource in use are expected and should be documented.","parameters":[{"name":"productId","description":"Owning product ID for the image","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Unique identifier of the image to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation removes a product image record from the database or logically deletes it (via deleted_at field) if supported by ai_commerce_product_images schema. This is used for image gallery housekeeping or when replacing images, and is controlled by seller/admin privileges.","path":"/aiCommerce/admin/products/{productId}/images/{imageId}","method":"delete","summary":"Delete a specific product image from ai_commerce_product_images","description":"Deletes or logically removes a product image for a specified product, ensuring only authorized sellers (for their products) or admins can execute the operation. This endpoint is used for cleaning up duplicate or outdated images, and supports compliance with gallery or publishing limits.\n\nPrior to deletion, checks are performed to ensure the image is not set as primary, used in a locked product state, or referenced by audit/history features. If soft deletion is implemented, the record is marked via the deleted_at column; otherwise, the row is permanently removed from the table. The operation will fail if the image does not exist or if access is not permitted.\n\nNo response body is provided on success, but an HTTP status code will indicate completion. Errors for not found, forbidden, or resource in use are expected and should be documented.","parameters":[{"name":"productId","description":"Owning product ID for the image","schema":{"type":"string","format":"uuid"}},{"name":"imageId","description":"Unique identifier of the image to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"Enables sellers or admins to search, sort, and paginate through all business/marketing content records for a specific product using ai_commerce_product_contents. This operation permits advanced filtering by content type, language/locale, or custom tags for content-rich products.","path":"/aiCommerce/seller/products/{productId}/contents","method":"patch","summary":"Search and paginate content records for a product from ai_commerce_product_contents","description":"Retrieves a filtered and paginated list of product content records for a specified product. The PATCH method with request body allows complex search queries: filter by content_type, locale, text, or sort_order as per IAiCommerceProductContent.IRequest DTO specification.\n\nAccessible to sellers and admins for their own products, this endpoint supports listing descriptions, specs, and other structured content. Pagination rules and search term filtering are applied, limiting result size per business requirements and performance constraints. Security requires seller ownership or admin rights, and logic validates product existence and permissions.\n\nThe response delivers a page object (IPageIAiCommerceProductContent) with pagination metadata and summary content for display or editing UIs. Errors for access denied or product not found are covered.","parameters":[{"name":"productId","description":"Target product's ID for searching content records","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria and pagination options for content record filtering","typeName":"IAiCommerceProductContent.IRequest"},"responseBody":{"description":"Paginated summary of matching product contents with metadata for UI.","typeName":"IPageIAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"Enables sellers or admins to search, sort, and paginate through all business/marketing content records for a specific product using ai_commerce_product_contents. This operation permits advanced filtering by content type, language/locale, or custom tags for content-rich products.","path":"/aiCommerce/admin/products/{productId}/contents","method":"patch","summary":"Search and paginate content records for a product from ai_commerce_product_contents","description":"Retrieves a filtered and paginated list of product content records for a specified product. The PATCH method with request body allows complex search queries: filter by content_type, locale, text, or sort_order as per IAiCommerceProductContent.IRequest DTO specification.\n\nAccessible to sellers and admins for their own products, this endpoint supports listing descriptions, specs, and other structured content. Pagination rules and search term filtering are applied, limiting result size per business requirements and performance constraints. Security requires seller ownership or admin rights, and logic validates product existence and permissions.\n\nThe response delivers a page object (IPageIAiCommerceProductContent) with pagination metadata and summary content for display or editing UIs. Errors for access denied or product not found are covered.","parameters":[{"name":"productId","description":"Target product's ID for searching content records","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria and pagination options for content record filtering","typeName":"IAiCommerceProductContent.IRequest"},"responseBody":{"description":"Paginated summary of matching product contents with metadata for UI.","typeName":"IPageIAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"Retrieves the details of a single content record for a product, such as a product description, detail section, or special highlight, referencing ai_commerce_product_contents in the schema. Used by seller/admin editing interfaces or for public product detail rendering.","path":"/aiCommerce/seller/products/{productId}/contents/{contentId}","method":"get","summary":"Retrieve a specific content record for a product from ai_commerce_product_contents","description":"Fetches a single structured business content entry for a product, which could be a marketing description, instruction, or technical detail, as outlined in the ai_commerce_product_contents table. Path parameters specify the parent product and content record.\n\nReturns the complete entity with fields including id, product_id, content_type, format, locale, content_body, and display_order. Security requires seller ownership or admin privileges for modification; public access is allowed for published content per business logic. Error handling covers not found, access denied, or deleted records. No request body is required.","parameters":[{"name":"productId","description":"Parent product for the content record","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Unique ID for the content record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed product content entity for presentation or editing.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"Retrieves the details of a single content record for a product, such as a product description, detail section, or special highlight, referencing ai_commerce_product_contents in the schema. Used by seller/admin editing interfaces or for public product detail rendering.","path":"/aiCommerce/admin/products/{productId}/contents/{contentId}","method":"get","summary":"Retrieve a specific content record for a product from ai_commerce_product_contents","description":"Fetches a single structured business content entry for a product, which could be a marketing description, instruction, or technical detail, as outlined in the ai_commerce_product_contents table. Path parameters specify the parent product and content record.\n\nReturns the complete entity with fields including id, product_id, content_type, format, locale, content_body, and display_order. Security requires seller ownership or admin privileges for modification; public access is allowed for published content per business logic. Error handling covers not found, access denied, or deleted records. No request body is required.","parameters":[{"name":"productId","description":"Parent product for the content record","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Unique ID for the content record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed product content entity for presentation or editing.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"Allows a seller or admin to add a new structured content section to a product, such as a localized description or instructional block, using ai_commerce_product_contents. The endpoint validates product existence and modifiability, and is intended for rich content management.","path":"/aiCommerce/seller/products/{productId}/contents","method":"post","summary":"Create a new structured content record for a given product in ai_commerce_product_contents","description":"Adds a new structured business content record to a product based on a POSTed IAiCommerceProductContent.ICreate DTO. The request captures required fields such as content_type, format, locale, content_body, and display_order. Sellers can thus manage multiple languages, detail blocks, or technical instructions under a product.\n\nAdmin/seller privileges are required for this action, and business logic checks for duplicate content types/locale per product. The operation ensures that the product is active and not locked. On success, returns the newly created entity for immediate UI rendering. Validation/enforcement of unique constraints and field lengths must follow the schema. Error scenarios cover access denied, failed validation, or immutable product state.","parameters":[{"name":"productId","description":"ID of the product to which content will be added","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New content record data for the target product","typeName":"IAiCommerceProductContent.ICreate"},"responseBody":{"description":"Created content entity with all business and display metadata.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"seller","name":"create"},{"specification":"Allows a seller or admin to add a new structured content section to a product, such as a localized description or instructional block, using ai_commerce_product_contents. The endpoint validates product existence and modifiability, and is intended for rich content management.","path":"/aiCommerce/admin/products/{productId}/contents","method":"post","summary":"Create a new structured content record for a given product in ai_commerce_product_contents","description":"Adds a new structured business content record to a product based on a POSTed IAiCommerceProductContent.ICreate DTO. The request captures required fields such as content_type, format, locale, content_body, and display_order. Sellers can thus manage multiple languages, detail blocks, or technical instructions under a product.\n\nAdmin/seller privileges are required for this action, and business logic checks for duplicate content types/locale per product. The operation ensures that the product is active and not locked. On success, returns the newly created entity for immediate UI rendering. Validation/enforcement of unique constraints and field lengths must follow the schema. Error scenarios cover access denied, failed validation, or immutable product state.","parameters":[{"name":"productId","description":"ID of the product to which content will be added","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New content record data for the target product","typeName":"IAiCommerceProductContent.ICreate"},"responseBody":{"description":"Created content entity with all business and display metadata.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"Enables updating an existing business content record of a product, supporting full or partial replacement of data fields including content_type, format, locale, and content_body, referencing the ai_commerce_product_contents table. Requires product/content ownership or admin privileges.","path":"/aiCommerce/seller/products/{productId}/contents/{contentId}","method":"put","summary":"Update a specific product content record in ai_commerce_product_contents","description":"Permits a seller or admin to fully update an existing structured product content record (such as a marketing description, usage instruction, or technical spec). The IAiCommerceProductContent.IUpdate DTO request body allows field-by-field replacement. Path parameters specify the product and the target content.\n\nBusiness logic validates that the product/content pair exists and is modifiable (not locked or published, if such restrictions exist). On success, a refreshed entity is returned to the client. Permission checks enforce that only the product owner or admin can update content. Validation covers uniqueness, required fields, and correct localization. Errors include not found, forbidden, or immutable state failures.","parameters":[{"name":"productId","description":"ID of the parent product for the content record","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Target content record's unique identifier","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Field data for updating a product content record","typeName":"IAiCommerceProductContent.IUpdate"},"responseBody":{"description":"Updated product content record including all business metadata.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"Enables updating an existing business content record of a product, supporting full or partial replacement of data fields including content_type, format, locale, and content_body, referencing the ai_commerce_product_contents table. Requires product/content ownership or admin privileges.","path":"/aiCommerce/admin/products/{productId}/contents/{contentId}","method":"put","summary":"Update a specific product content record in ai_commerce_product_contents","description":"Permits a seller or admin to fully update an existing structured product content record (such as a marketing description, usage instruction, or technical spec). The IAiCommerceProductContent.IUpdate DTO request body allows field-by-field replacement. Path parameters specify the product and the target content.\n\nBusiness logic validates that the product/content pair exists and is modifiable (not locked or published, if such restrictions exist). On success, a refreshed entity is returned to the client. Permission checks enforce that only the product owner or admin can update content. Validation covers uniqueness, required fields, and correct localization. Errors include not found, forbidden, or immutable state failures.","parameters":[{"name":"productId","description":"ID of the parent product for the content record","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Target content record's unique identifier","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Field data for updating a product content record","typeName":"IAiCommerceProductContent.IUpdate"},"responseBody":{"description":"Updated product content record including all business metadata.","typeName":"IAiCommerceProductContent"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation permanently deletes a specific product content entity from the ai_commerce_product_contents table. Product contents, such as descriptions or technical details, are managed by sellers or admins, and each content entity is associated with a product via productId. Only sellers who own the product or admins may remove product contents. Deletion also triggers compliance auditing with an immutable snapshot logged before removal. Hard deletion is performed since the product_contents table supports soft deletion via 'deleted_at', and this API will mark the content as deleted for traceability.","description":"The DELETE /products/{productId}/contents/{contentId} endpoint allows a seller or admin to remove a single product content entity (such as a detailed description, technical spec, or how-to guide) associated with the specified product.\n\nSecurity is enforced based on product ownership; only the seller who owns the product or an admin with global privileges can execute this operation.\n\nUpon invocation, the service identifies the target product and verifies the contentId exists and is associated with the productId. The content record is marked as deleted in the database (soft deletion performed by updating the deleted_at timestamp rather than physical removal), maintaining a full audit trail for compliance and recovery purposes.\n\nThis operation logs a compliance record, capturing a snapshot of the content before deletion for legal, regulatory, and dispute evidence. If the content is referenced by downstream flows such as SEO or merchandising, associated services are notified of the deletion event for real-time update propagation.\n\nIf the resource does not exist or is already deleted, the operation returns an appropriate error. The endpoint does not accept a request body and does not return any response body upon successful execution, returning a 204 No Content status code. Any errors trigger clearly defined error responses indicating missing resources or unauthorized action.","summary":"Soft delete a product content entity associated with a specific product in ai_commerce_product_contents.","parameters":[{"name":"productId","description":"Unique identifier for the target product whose content is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Unique identifier of the product content entity to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","path":"/aiCommerce/seller/products/{productId}/contents/{contentId}","method":"delete","authorizationRole":"seller","authorizationType":null},{"specification":"This operation permanently deletes a specific product content entity from the ai_commerce_product_contents table. Product contents, such as descriptions or technical details, are managed by sellers or admins, and each content entity is associated with a product via productId. Only sellers who own the product or admins may remove product contents. Deletion also triggers compliance auditing with an immutable snapshot logged before removal. Hard deletion is performed since the product_contents table supports soft deletion via 'deleted_at', and this API will mark the content as deleted for traceability.","description":"The DELETE /products/{productId}/contents/{contentId} endpoint allows a seller or admin to remove a single product content entity (such as a detailed description, technical spec, or how-to guide) associated with the specified product.\n\nSecurity is enforced based on product ownership; only the seller who owns the product or an admin with global privileges can execute this operation.\n\nUpon invocation, the service identifies the target product and verifies the contentId exists and is associated with the productId. The content record is marked as deleted in the database (soft deletion performed by updating the deleted_at timestamp rather than physical removal), maintaining a full audit trail for compliance and recovery purposes.\n\nThis operation logs a compliance record, capturing a snapshot of the content before deletion for legal, regulatory, and dispute evidence. If the content is referenced by downstream flows such as SEO or merchandising, associated services are notified of the deletion event for real-time update propagation.\n\nIf the resource does not exist or is already deleted, the operation returns an appropriate error. The endpoint does not accept a request body and does not return any response body upon successful execution, returning a 204 No Content status code. Any errors trigger clearly defined error responses indicating missing resources or unauthorized action.","summary":"Soft delete a product content entity associated with a specific product in ai_commerce_product_contents.","parameters":[{"name":"productId","description":"Unique identifier for the target product whose content is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"contentId","description":"Unique identifier of the product content entity to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","path":"/aiCommerce/admin/products/{productId}/contents/{contentId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves SEO and search meta-information for a specific product from the ai_commerce_product_seo table. Product SEO data is editable by product owners (seller) and admins, and read access is public. The endpoint returns all SEO metadata for the product, including page title, meta description, canonical URL, and tags for search optimization and compliance with analytics/reporting needs.","description":"The GET /products/{productId}/seo endpoint is used to retrieve SEO-related metadata for the specified product. This metadata includes fields such as SEO page title, meta description, canonical URL, keywords, and open graph image URL, which are essential for product discoverability on search engines and social platforms.\n\nThis operation is accessible publicly and does not require authentication or authorization; all visitors, buyers, sellers, and admins can read SEO metadata for a product. The endpoint supports wide integration for rendering product detail pages, external marketing, or analytics dashboards.\n\nInternally, the API calls the ai_commerce_product_seo table, looks up the row by productId, and returns the complete SEO record for the product. If the resource does not exist or SEO metadata is not configured, a null or not found response is returned. The operation enforces a hard limit of one SEO entry per product via a unique index.\n\nAny errors or missing records are handled gracefully with a detailed error response. No request body is required. The response returns the full SEO entity as defined in the OpenAPI schema.","summary":"Retrieve all SEO metadata for a specific product from ai_commerce_product_seo.","parameters":[{"name":"productId","description":"Unique identifier of the product for which to retrieve SEO metadata.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Product SEO metadata entity for the specified product.","typeName":"IAiCommerceProductSeo"},"authorizationRoles":[],"name":"at","path":"/aiCommerce/products/{productId}/seo","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"This operation updates or creates the SEO metadata associated with a specific product in the ai_commerce_product_seo table. SEO and search metadata management is restricted to product owners (sellers) and platform admins. The API accepts a full update payload, enforcing business validation (unique productId, meta fields correctness). On update, it overwrites any existing SEO record or creates one if absent. It ensures a unique SEO row per product and logs changes for audit and compliance.","description":"The PUT /products/{productId}/seo endpoint allows a seller or admin to set or update all SEO configuration fields for a specific product, including title, canonical URL, meta description, keywords, and open graph attributes. The operation supports both full update and creation (upsert): if metadata exists for the product, it is replaced; if not, a new record is created.\n\nBusiness logic validates ownership (sellers can update only their products), and admins may override globally. On success, the updated or created SEO entity is returned, ensuring only one SEO record per product (enforced by a unique constraint in ai_commerce_product_seo). All updates are compliance-logged, capturing before and after state for regulatory audit.\n\nThis operation is not accessible by the public or buyers; only authorized sellers (for their products) and admins may update SEO data. Audit logging supports SEO compliance and legal traceability. Invalid or non-existent productIds, or unauthorized attempts, return error responses as per business rule.\n\nRequest validation ensures input conforms to OpenAPI IAiCommerceProductSeo.IUpdate schema. Idempotent behavior returns the complete, current SEO entity upon success.","summary":"Update or create the SEO metadata for a specific product in ai_commerce_product_seo (upsert behavior).","parameters":[{"name":"productId","description":"Unique identifier of the product to update SEO metadata for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for product SEO fields (title, canonical URL, description, etc.).","typeName":"IAiCommerceProductSeo.IUpdate"},"responseBody":{"description":"The updated product SEO metadata entity after upsert.","typeName":"IAiCommerceProductSeo"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/seller/products/{productId}/seo","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates or creates the SEO metadata associated with a specific product in the ai_commerce_product_seo table. SEO and search metadata management is restricted to product owners (sellers) and platform admins. The API accepts a full update payload, enforcing business validation (unique productId, meta fields correctness). On update, it overwrites any existing SEO record or creates one if absent. It ensures a unique SEO row per product and logs changes for audit and compliance.","description":"The PUT /products/{productId}/seo endpoint allows a seller or admin to set or update all SEO configuration fields for a specific product, including title, canonical URL, meta description, keywords, and open graph attributes. The operation supports both full update and creation (upsert): if metadata exists for the product, it is replaced; if not, a new record is created.\n\nBusiness logic validates ownership (sellers can update only their products), and admins may override globally. On success, the updated or created SEO entity is returned, ensuring only one SEO record per product (enforced by a unique constraint in ai_commerce_product_seo). All updates are compliance-logged, capturing before and after state for regulatory audit.\n\nThis operation is not accessible by the public or buyers; only authorized sellers (for their products) and admins may update SEO data. Audit logging supports SEO compliance and legal traceability. Invalid or non-existent productIds, or unauthorized attempts, return error responses as per business rule.\n\nRequest validation ensures input conforms to OpenAPI IAiCommerceProductSeo.IUpdate schema. Idempotent behavior returns the complete, current SEO entity upon success.","summary":"Update or create the SEO metadata for a specific product in ai_commerce_product_seo (upsert behavior).","parameters":[{"name":"productId","description":"Unique identifier of the product to update SEO metadata for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for product SEO fields (title, canonical URL, description, etc.).","typeName":"IAiCommerceProductSeo.IUpdate"},"responseBody":{"description":"The updated product SEO metadata entity after upsert.","typeName":"IAiCommerceProductSeo"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/admin/products/{productId}/seo","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves legal and compliance-related data for a product from the ai_commerce_product_legal_compliance table. Only one compliance entity exists per product. The endpoint is public; any user may view regulatory tags such as certificates, restricted age, hazard status, and region-specific compliance details for the product.","description":"The GET /products/{productId}/legalCompliance endpoint is designed for retrieving legal and compliance information associated with a particular product. This data covers regulatory certificates, hazardous material flags, age restrictions, region of compliance, and approval status, as stored in the ai_commerce_product_legal_compliance table.\n\nPublic read access ensures buyers, visitors, and all user roles may check compliance status, supporting buyer trust and regulatory transparency. The endpoint will return the compliance entity for the indicated product, or a not found/null response if compliance data is not registered.\n\nThis API supports compliance audits, buyer-visible requirements (e.g., age limits, hazardous goods), and admin/analytics tracking without needing authentication for public viewing. Proper error handling occurs if the resource is missing or the productId is invalid. No request body is required, and the full compliance entity is returned in response following OA component schema.","summary":"Fetch legal and compliance information for a specific product from ai_commerce_product_legal_compliance.","parameters":[{"name":"productId","description":"Unique identifier for the product to fetch legal compliance data for.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Compliance and regulatory metadata for the target product.","typeName":"IAiCommerceProductLegalCompliance"},"authorizationRoles":[],"name":"at","path":"/aiCommerce/products/{productId}/legalCompliance","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"This operation updates or creates the legal compliance information for a product in ai_commerce_product_legal_compliance. Only sellers (product owners) and platform admins may perform this action. The API expects a complete payload for all compliance fields. On success, it upserts the product's compliance record, logging changes for audit, and returns the updated entity.","description":"The PUT /products/{productId}/legalCompliance endpoint enables authorized sellers or admins to update (or create) a full set of compliance data for a product. Data includes jurisdiction, certifications, restricted age, hazard flags, evidence, and review timestamps. If the product lacks compliance metadata, a new record is created (upsert semantics); otherwise, the existing entity is replaced.\n\nThe service enforces authorization, allowing only the product's seller or admins to modify compliance details. Successful execution updates the ai_commerce_product_legal_compliance table and returns the latest compliance entity. All modifications trigger compliance-logging, including snapshotting before/after state for legal evidence.\n\nIf the productId is invalid, not found, or unauthorized, appropriate error codes and messages are returned. The request body must comply with the IAiCommerceProductLegalCompliance.IUpdate OpenAPI schema. The endpoint is safe for idempotent repeated calls. Buyers and the public cannot update compliance records.","summary":"Update or create the legal compliance and regulatory metadata for a product in ai_commerce_product_legal_compliance.","parameters":[{"name":"productId","description":"Unique identifier for the product to update compliance info for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Complete legal compliance information to set on the product.","typeName":"IAiCommerceProductLegalCompliance.IUpdate"},"responseBody":{"description":"The updated compliance and regulatory entity after upsert.","typeName":"IAiCommerceProductLegalCompliance"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/seller/products/{productId}/legalCompliance","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"This operation updates or creates the legal compliance information for a product in ai_commerce_product_legal_compliance. Only sellers (product owners) and platform admins may perform this action. The API expects a complete payload for all compliance fields. On success, it upserts the product's compliance record, logging changes for audit, and returns the updated entity.","description":"The PUT /products/{productId}/legalCompliance endpoint enables authorized sellers or admins to update (or create) a full set of compliance data for a product. Data includes jurisdiction, certifications, restricted age, hazard flags, evidence, and review timestamps. If the product lacks compliance metadata, a new record is created (upsert semantics); otherwise, the existing entity is replaced.\n\nThe service enforces authorization, allowing only the product's seller or admins to modify compliance details. Successful execution updates the ai_commerce_product_legal_compliance table and returns the latest compliance entity. All modifications trigger compliance-logging, including snapshotting before/after state for legal evidence.\n\nIf the productId is invalid, not found, or unauthorized, appropriate error codes and messages are returned. The request body must comply with the IAiCommerceProductLegalCompliance.IUpdate OpenAPI schema. The endpoint is safe for idempotent repeated calls. Buyers and the public cannot update compliance records.","summary":"Update or create the legal compliance and regulatory metadata for a product in ai_commerce_product_legal_compliance.","parameters":[{"name":"productId","description":"Unique identifier for the product to update compliance info for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Complete legal compliance information to set on the product.","typeName":"IAiCommerceProductLegalCompliance.IUpdate"},"responseBody":{"description":"The updated compliance and regulatory entity after upsert.","typeName":"IAiCommerceProductLegalCompliance"},"authorizationRoles":["seller","admin"],"name":"update","path":"/aiCommerce/admin/products/{productId}/legalCompliance","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves all category bindings (mappings) for a given product, providing paginated and filterable results. Intended for sellers and admins for management of product-category relationships, supports advanced search criteria and pagination to handle large product catalogs efficiently.","description":"The PATCH /products/{productId}/categoryBindings endpoint returns a paginated list of all categories to which the specified product is currently bound. The service supports search criteria, filtering, pagination, and sorting via the request body. This enables sellers or admins to efficiently browse, audit, or update product-category relationships for catalog management or analytics integration.\n\nAuthorization is required—sellers can only access their own products' bindings, while admins may retrieve any product's category bindings. Security is enforced for catalog scope compliance.\n\nResults conform to the OpenAPI IPageIAiCommerceProductCategoryBindings component schema, providing standard pagination and metadata. If there are no category bindings, an empty list is returned. All interactions are logged for future audit and catalog change tracking. Appropriate error responses address missing productId, unauthorized access, or malformed queries.","summary":"List all category bindings for a product, with pagination, filtering, and search.","parameters":[{"name":"productId","description":"Unique identifier of the product for which to list category bindings.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and paging parameters for querying product-category bindings.","typeName":"IAiCommerceProductCategoryBindings.IRequest"},"responseBody":{"description":"Paginated result set of current product-category bindings.","typeName":"IPageIAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"index","path":"/aiCommerce/seller/products/{productId}/categoryBindings","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves all category bindings (mappings) for a given product, providing paginated and filterable results. Intended for sellers and admins for management of product-category relationships, supports advanced search criteria and pagination to handle large product catalogs efficiently.","description":"The PATCH /products/{productId}/categoryBindings endpoint returns a paginated list of all categories to which the specified product is currently bound. The service supports search criteria, filtering, pagination, and sorting via the request body. This enables sellers or admins to efficiently browse, audit, or update product-category relationships for catalog management or analytics integration.\n\nAuthorization is required—sellers can only access their own products' bindings, while admins may retrieve any product's category bindings. Security is enforced for catalog scope compliance.\n\nResults conform to the OpenAPI IPageIAiCommerceProductCategoryBindings component schema, providing standard pagination and metadata. If there are no category bindings, an empty list is returned. All interactions are logged for future audit and catalog change tracking. Appropriate error responses address missing productId, unauthorized access, or malformed queries.","summary":"List all category bindings for a product, with pagination, filtering, and search.","parameters":[{"name":"productId","description":"Unique identifier of the product for which to list category bindings.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and paging parameters for querying product-category bindings.","typeName":"IAiCommerceProductCategoryBindings.IRequest"},"responseBody":{"description":"Paginated result set of current product-category bindings.","typeName":"IPageIAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"index","path":"/aiCommerce/admin/products/{productId}/categoryBindings","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a specific category binding (association between product and category) by its identifier for a product. This allows catalog managers and admins to fetch details about the mapping between a product and a given category. Used for catalog review, audit, and product management workflows.","description":"The GET /products/{productId}/categoryBindings/{bindingId} endpoint fetches the details of a single product-category binding by its unique identifier, scoped to the parent product. This allows sellers/admins to review the specifics of the binding, such as associated category, timestamps, and metadata. The operation enforces that sellers may access only category bindings for their own products, while admins have global read access.\n\nThis is primarily used in catalog management flows for examining mapping details, auditing changes, or preparing further update/delete operations. All requests are audit-logged for catalog traceability. Missing or unauthorized access is handled with appropriate error codes, and a 404 is returned if the resource does not exist.","summary":"Get details of a specific product-category binding by its identifier for a product.","parameters":[{"name":"productId","description":"Unique identifier of the product to which the binding is attached.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"Unique identifier of the product-category binding to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detail of the specified product-category binding entity.","typeName":"IAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"at","path":"/aiCommerce/seller/products/{productId}/categoryBindings/{bindingId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a specific category binding (association between product and category) by its identifier for a product. This allows catalog managers and admins to fetch details about the mapping between a product and a given category. Used for catalog review, audit, and product management workflows.","description":"The GET /products/{productId}/categoryBindings/{bindingId} endpoint fetches the details of a single product-category binding by its unique identifier, scoped to the parent product. This allows sellers/admins to review the specifics of the binding, such as associated category, timestamps, and metadata. The operation enforces that sellers may access only category bindings for their own products, while admins have global read access.\n\nThis is primarily used in catalog management flows for examining mapping details, auditing changes, or preparing further update/delete operations. All requests are audit-logged for catalog traceability. Missing or unauthorized access is handled with appropriate error codes, and a 404 is returned if the resource does not exist.","summary":"Get details of a specific product-category binding by its identifier for a product.","parameters":[{"name":"productId","description":"Unique identifier of the product to which the binding is attached.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"Unique identifier of the product-category binding to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detail of the specified product-category binding entity.","typeName":"IAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"at","path":"/aiCommerce/admin/products/{productId}/categoryBindings/{bindingId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new association (binding) between a product and a category for catalog, merchandising, and discovery features. Only sellers owning the product or platform admins may add new category bindings. The request body must specify all fields necessary to establish the relationship, which is uniquely constrained by productId and categoryId. Successful creation returns the new product-category binding entity.","description":"The POST /products/{productId}/categoryBindings endpoint allows authorized sellers or admins to create a new product-category binding. This operation establishes a new mapping between the product and a category, controlling its visibility in searches and merchandising.\n\nUpon receiving the request, the service validates ownership (seller/admin) and the uniqueness of the binding (no duplicate product-category mapping is allowed). The request body must include a valid categoryId and any required metadata for the association, following the IAiCommerceProductCategoryBindings.ICreate schema. Successful creation returns the full binding entity for use in catalog navigation, analytics, or edits. Attempting to bind the same product and category more than once results in an error.\n\nAll operations are audit-logged for catalog integrity and security. Buyers and the public cannot add new product-category bindings.","summary":"Create a new product-category binding association for a product (catalog assignment).","parameters":[{"name":"productId","description":"Unique identifier of the product to categorize.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information about the category binding to create, including target category and metadata.","typeName":"IAiCommerceProductCategoryBindings.ICreate"},"responseBody":{"description":"The newly created product-category binding association entity.","typeName":"IAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"create","path":"/aiCommerce/seller/products/{productId}/categoryBindings","method":"post","authorizationRole":"seller","authorizationType":null},{"specification":"This operation creates a new association (binding) between a product and a category for catalog, merchandising, and discovery features. Only sellers owning the product or platform admins may add new category bindings. The request body must specify all fields necessary to establish the relationship, which is uniquely constrained by productId and categoryId. Successful creation returns the new product-category binding entity.","description":"The POST /products/{productId}/categoryBindings endpoint allows authorized sellers or admins to create a new product-category binding. This operation establishes a new mapping between the product and a category, controlling its visibility in searches and merchandising.\n\nUpon receiving the request, the service validates ownership (seller/admin) and the uniqueness of the binding (no duplicate product-category mapping is allowed). The request body must include a valid categoryId and any required metadata for the association, following the IAiCommerceProductCategoryBindings.ICreate schema. Successful creation returns the full binding entity for use in catalog navigation, analytics, or edits. Attempting to bind the same product and category more than once results in an error.\n\nAll operations are audit-logged for catalog integrity and security. Buyers and the public cannot add new product-category bindings.","summary":"Create a new product-category binding association for a product (catalog assignment).","parameters":[{"name":"productId","description":"Unique identifier of the product to categorize.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information about the category binding to create, including target category and metadata.","typeName":"IAiCommerceProductCategoryBindings.ICreate"},"responseBody":{"description":"The newly created product-category binding association entity.","typeName":"IAiCommerceProductCategoryBindings"},"authorizationRoles":["seller","admin"],"name":"create","path":"/aiCommerce/admin/products/{productId}/categoryBindings","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation removes an existing category binding from a specified product. It directly targets the 'ai_commerce_product_category_bindings' Prisma table, which links a product (ai_commerce_products) to a category (ai_commerce_categories) for multi-category assignment. Upon successful execution, the binding is permanently erased from the database. All deletions are performed as hard deletes (since the schema defines no soft delete for this table), severing the relationship between the product and the given category. This is essential for cases where sellers/admins need to reorganize, reclassify, or remove product category associations for merchandising, compliance, or business rule update reasons.","description":"This API operation allows an authorized seller or admin to remove a category binding from a specific product. Category bindings determine which categories a product is shown in, and their removal can directly impact product discoverability, search filters, and reporting.\n\nAuthorization is required: only the product's seller or a platform admin may erase a category binding. All actions are audit-logged for evidence and traceability. The operation hard-deletes the relationship, and any attempt to delete a binding that does not exist returns an appropriate error response with actionable feedback.\n\nRelated operations include adding or listing category bindings for a product, managed through corresponding POST or PATCH endpoints. No request body is required, but both productId and bindingId path parameters are strictly required to ensure the correct binding is targeted. The operation must be used carefully, as removing a binding may impact merchandising and analytics immediately.","summary":"Permanently remove a category binding between a product and a category (ai_commerce_product_category_bindings).","parameters":[{"name":"productId","description":"UUID of the target product for which to remove the category binding.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the product-category binding to be removed.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/products/{productId}/categoryBindings/{bindingId}","method":"delete"},{"specification":"This operation removes an existing category binding from a specified product. It directly targets the 'ai_commerce_product_category_bindings' Prisma table, which links a product (ai_commerce_products) to a category (ai_commerce_categories) for multi-category assignment. Upon successful execution, the binding is permanently erased from the database. All deletions are performed as hard deletes (since the schema defines no soft delete for this table), severing the relationship between the product and the given category. This is essential for cases where sellers/admins need to reorganize, reclassify, or remove product category associations for merchandising, compliance, or business rule update reasons.","description":"This API operation allows an authorized seller or admin to remove a category binding from a specific product. Category bindings determine which categories a product is shown in, and their removal can directly impact product discoverability, search filters, and reporting.\n\nAuthorization is required: only the product's seller or a platform admin may erase a category binding. All actions are audit-logged for evidence and traceability. The operation hard-deletes the relationship, and any attempt to delete a binding that does not exist returns an appropriate error response with actionable feedback.\n\nRelated operations include adding or listing category bindings for a product, managed through corresponding POST or PATCH endpoints. No request body is required, but both productId and bindingId path parameters are strictly required to ensure the correct binding is targeted. The operation must be used carefully, as removing a binding may impact merchandising and analytics immediately.","summary":"Permanently remove a category binding between a product and a category (ai_commerce_product_category_bindings).","parameters":[{"name":"productId","description":"UUID of the target product for which to remove the category binding.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the product-category binding to be removed.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/products/{productId}/categoryBindings/{bindingId}","method":"delete"},{"specification":"This API operation allows sellers or admins to search and retrieve all section bindings linked to a particular product. The 'ai_commerce_product_section_bindings' table is targeted, which establishes the relationships between products and merchandising sections in a channel. The response supports advanced filtering, sorting, and pagination using a request body referencing IAiCommerceProductSectionBinding.IRequest, and returns a paginated collection consistent with IPageIAiCommerceProductSectionBinding.","description":"This endpoint provides a way for authorized sellers or admins to list and search section bindings for a given product, which control the merchandising contexts within various storefront sections (e.g., \"Flash Sales\", \"Top Picks\"). \n\nSecurity is enforced so that only the product's seller or platform administrators can access the full list of bindings. The operation supports pagination, advanced search, and sorting, as well as filtering by section, display order, or status for detailed analytics and business management. The operation is critical for managing where and how products are presented throughout the sales channels.\n\nProper input validation and business rule enforcement must ensure that inappropriate disclosure of merchandising metadata is prevented for non-authorized users. Related operations allow binding creation and hard deletion for merchandising curation. No data is modified by this method; read-only access is provided.","summary":"Search and list product-section bindings for a product (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the product whose section bindings are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced filtering and pagination settings for retrieving product-section bindings.","typeName":"IAiCommerceProductSectionBinding.IRequest"},"responseBody":{"description":"Paginated list of product-section binding details for the specified product.","typeName":"IPageIAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/sectionBindings","method":"patch"},{"specification":"This API operation allows sellers or admins to search and retrieve all section bindings linked to a particular product. The 'ai_commerce_product_section_bindings' table is targeted, which establishes the relationships between products and merchandising sections in a channel. The response supports advanced filtering, sorting, and pagination using a request body referencing IAiCommerceProductSectionBinding.IRequest, and returns a paginated collection consistent with IPageIAiCommerceProductSectionBinding.","description":"This endpoint provides a way for authorized sellers or admins to list and search section bindings for a given product, which control the merchandising contexts within various storefront sections (e.g., \"Flash Sales\", \"Top Picks\"). \n\nSecurity is enforced so that only the product's seller or platform administrators can access the full list of bindings. The operation supports pagination, advanced search, and sorting, as well as filtering by section, display order, or status for detailed analytics and business management. The operation is critical for managing where and how products are presented throughout the sales channels.\n\nProper input validation and business rule enforcement must ensure that inappropriate disclosure of merchandising metadata is prevented for non-authorized users. Related operations allow binding creation and hard deletion for merchandising curation. No data is modified by this method; read-only access is provided.","summary":"Search and list product-section bindings for a product (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the product whose section bindings are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced filtering and pagination settings for retrieving product-section bindings.","typeName":"IAiCommerceProductSectionBinding.IRequest"},"responseBody":{"description":"Paginated list of product-section binding details for the specified product.","typeName":"IPageIAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/products/{productId}/sectionBindings","method":"patch"},{"specification":"This operation retrieves a detailed view of a specific section binding for a product, as recorded in the ai_commerce_product_section_bindings table. This is used for presenting contextual merchandising details (such as where in the store the product appears), and is critical for business monitoring by sellers and admins.","description":"The operation fetches the full details of a single binding between a product and a merchandising section using both the productId and bindingId as path parameters. Only authorized roles (the related seller or platform admin) may access this information to ensure merchandising controls and business privacy. The response provides all metadata of the binding, including display order and section context, and is essential for troubleshooting display issues or confirming merchandising setup.\n\nAttempts to retrieve non-existent bindings should result in an appropriate 404-like error. It does not modify any data and does not require a request body. Related endpoints enable listing all bindings or managing them via creation and deletion APIs. Care must be taken to return only the bindings relevant to the correct productId for data integrity.","summary":"Retrieve details of a specific section binding for a product (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the parent product of the binding.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the section binding to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full binding detail for a product-section relationship including display order and section context.","typeName":"IAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/products/{productId}/sectionBindings/{bindingId}","method":"get"},{"specification":"This operation retrieves a detailed view of a specific section binding for a product, as recorded in the ai_commerce_product_section_bindings table. This is used for presenting contextual merchandising details (such as where in the store the product appears), and is critical for business monitoring by sellers and admins.","description":"The operation fetches the full details of a single binding between a product and a merchandising section using both the productId and bindingId as path parameters. Only authorized roles (the related seller or platform admin) may access this information to ensure merchandising controls and business privacy. The response provides all metadata of the binding, including display order and section context, and is essential for troubleshooting display issues or confirming merchandising setup.\n\nAttempts to retrieve non-existent bindings should result in an appropriate 404-like error. It does not modify any data and does not require a request body. Related endpoints enable listing all bindings or managing them via creation and deletion APIs. Care must be taken to return only the bindings relevant to the correct productId for data integrity.","summary":"Retrieve details of a specific section binding for a product (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the parent product of the binding.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the section binding to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full binding detail for a product-section relationship including display order and section context.","typeName":"IAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/products/{productId}/sectionBindings/{bindingId}","method":"get"},{"specification":"Create a new section binding between a product and a merchandising section in the ai_commerce_product_section_bindings table. Authorized sellers or admins can use this endpoint to associate a product with a section, enabling advanced channel and merchandising logic.","description":"This operation enables a seller or admin to add a product to a specific merchandising section (such as 'Best Sellers' or 'Curated Picks'), which affect how products are presented to shoppers. It must validate that the requestor is authorized for the product in question and that the section exists and is active. The business rules require that a unique binding is maintained for each product-section pair, and attempts to create duplicates are rejected with a detailed error.\n\nThe operation is fully audited, supporting revert and compliance workflows. Related endpoints include deleting a binding, listing all bindings, or updating display order. Inputs and outputs reference IAiCommerceProductSectionBinding.ICreate and IAiCommerceProductSectionBinding, respectively.","summary":"Create a new product-section binding (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the product to be associated with a section.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new section binding for the product.","typeName":"IAiCommerceProductSectionBinding.ICreate"},"responseBody":{"description":"Details of the created product-section binding.","typeName":"IAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/products/{productId}/sectionBindings","method":"post"},{"specification":"Create a new section binding between a product and a merchandising section in the ai_commerce_product_section_bindings table. Authorized sellers or admins can use this endpoint to associate a product with a section, enabling advanced channel and merchandising logic.","description":"This operation enables a seller or admin to add a product to a specific merchandising section (such as 'Best Sellers' or 'Curated Picks'), which affect how products are presented to shoppers. It must validate that the requestor is authorized for the product in question and that the section exists and is active. The business rules require that a unique binding is maintained for each product-section pair, and attempts to create duplicates are rejected with a detailed error.\n\nThe operation is fully audited, supporting revert and compliance workflows. Related endpoints include deleting a binding, listing all bindings, or updating display order. Inputs and outputs reference IAiCommerceProductSectionBinding.ICreate and IAiCommerceProductSectionBinding, respectively.","summary":"Create a new product-section binding (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the product to be associated with a section.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new section binding for the product.","typeName":"IAiCommerceProductSectionBinding.ICreate"},"responseBody":{"description":"Details of the created product-section binding.","typeName":"IAiCommerceProductSectionBinding"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/products/{productId}/sectionBindings","method":"post"},{"specification":"Removes a product-section binding from the ai_commerce_product_section_bindings table. The operation targets a specific binding and permanently removes it from merchandising logic. Only authorized sellers or admins may perform this action, which directly affects how a product is merchandised in the store.","description":"Authorized sellers or platform administrators may use this endpoint to hard-delete a binding between a product and a section, thereby removing the product from that section's merchandising context. All deletion operations are hard deletes (no soft delete field is present in this schema for bindings), and must be strictly audited.\n\nAny attempt to delete a non-existent binding returns an error. The removal is immediate and may result in the product no longer appearing in related promotions or curated sections. Business logic ensures the requestor is authorized and that store consistency is maintained. Related endpoints provide binding creation and listing. Both productId and bindingId are strictly required for binding identification.","summary":"Remove a product's section binding (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the parent product whose section binding will be removed.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the section binding record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/products/{productId}/sectionBindings/{bindingId}","method":"delete"},{"specification":"Removes a product-section binding from the ai_commerce_product_section_bindings table. The operation targets a specific binding and permanently removes it from merchandising logic. Only authorized sellers or admins may perform this action, which directly affects how a product is merchandised in the store.","description":"Authorized sellers or platform administrators may use this endpoint to hard-delete a binding between a product and a section, thereby removing the product from that section's merchandising context. All deletion operations are hard deletes (no soft delete field is present in this schema for bindings), and must be strictly audited.\n\nAny attempt to delete a non-existent binding returns an error. The removal is immediate and may result in the product no longer appearing in related promotions or curated sections. Business logic ensures the requestor is authorized and that store consistency is maintained. Related endpoints provide binding creation and listing. Both productId and bindingId are strictly required for binding identification.","summary":"Remove a product's section binding (ai_commerce_product_section_bindings).","parameters":[{"name":"productId","description":"UUID of the parent product whose section binding will be removed.","schema":{"type":"string","format":"uuid"}},{"name":"bindingId","description":"UUID of the section binding record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/products/{productId}/sectionBindings/{bindingId}","method":"delete"},{"specification":"Search and retrieve paginated product snapshot audit trails for a specific product from ai_commerce_product_snapshots table. Supports detailed version history, legal evidence, and rollback reference for sellers and admins.","description":"This endpoint serves to provide a comprehensive history of all snapshots taken for a particular product, useful for compliance audits, version rollback, and business intelligence. The request body allows advanced filtering, search, pagination, and sorting, referencing IAiCommerceProductSnapshot.IRequest.\n\nThe operation returns IPageIAiCommerceProductSnapshot, giving a paginated list of immutable, append-only historical snapshots capturing product state at each edit/event. Only authorized sellers or admins may view this information. Attempts by unauthorized users must be denied with full audit logging. Related endpoints provide retrieval of a single snapshot and non-destructive version rollback actions.","summary":"Search product snapshot history for a product (ai_commerce_product_snapshots).","parameters":[{"name":"productId","description":"UUID of the product whose snapshot history is being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination parameters for retrieving product snapshots.","typeName":"IAiCommerceProductSnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical product snapshots with audit details.","typeName":"IPageIAiCommerceProductSnapshot"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/snapshots","method":"patch"},{"specification":"Search and retrieve paginated product snapshot audit trails for a specific product from ai_commerce_product_snapshots table. Supports detailed version history, legal evidence, and rollback reference for sellers and admins.","description":"This endpoint serves to provide a comprehensive history of all snapshots taken for a particular product, useful for compliance audits, version rollback, and business intelligence. The request body allows advanced filtering, search, pagination, and sorting, referencing IAiCommerceProductSnapshot.IRequest.\n\nThe operation returns IPageIAiCommerceProductSnapshot, giving a paginated list of immutable, append-only historical snapshots capturing product state at each edit/event. Only authorized sellers or admins may view this information. Attempts by unauthorized users must be denied with full audit logging. Related endpoints provide retrieval of a single snapshot and non-destructive version rollback actions.","summary":"Search product snapshot history for a product (ai_commerce_product_snapshots).","parameters":[{"name":"productId","description":"UUID of the product whose snapshot history is being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination parameters for retrieving product snapshots.","typeName":"IAiCommerceProductSnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical product snapshots with audit details.","typeName":"IPageIAiCommerceProductSnapshot"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/products/{productId}/snapshots","method":"patch"},{"specification":"Get the full details of a single historical product snapshot from ai_commerce_product_snapshots, for a given product and snapshot id. Used for legal compliance, audit, and version rollback inspection.","description":"This endpoint retrieves a single immutable snapshot representing a product's state at a specific point in time (such as after creation, update, compliance review). Only authorized sellers or admins may access this record. The returned IAiCommerceProductSnapshot object provides a denormalized view of all product attributes at the snapshot point. This is critical for audit, regulatory, and evidence purposes and supports dispute handling and forensic investigations.\n\nThe operation must strictly check both productId and snapshotId, returning an error if not found. No request body is needed. The endpoint does not allow modification; it is for forensic and business review only.","summary":"Retrieve a specific product snapshot (ai_commerce_product_snapshots).","parameters":[{"name":"productId","description":"UUID of the product whose snapshot is requested.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"UUID of the specific product snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed immutable snapshot of the product at the specified historical point.","typeName":"IAiCommerceProductSnapshot"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/products/{productId}/snapshots/{snapshotId}","method":"get"},{"specification":"Get the full details of a single historical product snapshot from ai_commerce_product_snapshots, for a given product and snapshot id. Used for legal compliance, audit, and version rollback inspection.","description":"This endpoint retrieves a single immutable snapshot representing a product's state at a specific point in time (such as after creation, update, compliance review). Only authorized sellers or admins may access this record. The returned IAiCommerceProductSnapshot object provides a denormalized view of all product attributes at the snapshot point. This is critical for audit, regulatory, and evidence purposes and supports dispute handling and forensic investigations.\n\nThe operation must strictly check both productId and snapshotId, returning an error if not found. No request body is needed. The endpoint does not allow modification; it is for forensic and business review only.","summary":"Retrieve a specific product snapshot (ai_commerce_product_snapshots).","parameters":[{"name":"productId","description":"UUID of the product whose snapshot is requested.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"UUID of the specific product snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed immutable snapshot of the product at the specified historical point.","typeName":"IAiCommerceProductSnapshot"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/products/{productId}/snapshots/{snapshotId}","method":"get"},{"specification":"Provides filtered and paginated retrieval of audit logs from the ai_commerce_product_audit_logs table for a specific product. Each audit log entry records the before/after state, event type, actor, and timestamp for all major product state changes, giving full traceability.","description":"This operation allows authorized sellers or admins to review the complete audit history for a product, using advanced search, filter, and pagination parameters passed in IAiCommerceProductAuditLog.IRequest. The endpoint returns IPageIAiCommerceProductAuditLog, detailing each audit event, its source/actor, what changed, and when.\n\nAll accesses must be logged as read operations for compliance. No data is modified by this method. Audit logs are critical for legal compliance, security, forensic analysis, and dispute investigations, so business logic must ensure only properly authorized users have access. When requested, highly sensitive or private changes may be subject to further masking or redaction based on platform compliance policy.","summary":"Search and retrieve audit logs of a product (ai_commerce_product_audit_logs).","parameters":[{"name":"productId","description":"UUID of the product whose audit logs will be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced filtering and pagination options for product audit logs retrieval.","typeName":"IAiCommerceProductAuditLog.IRequest"},"responseBody":{"description":"Paginated audit log entries with before/after state, actor, and event metadata.","typeName":"IPageIAiCommerceProductAuditLog"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/products/{productId}/auditLogs","method":"patch"},{"specification":"Provides filtered and paginated retrieval of audit logs from the ai_commerce_product_audit_logs table for a specific product. Each audit log entry records the before/after state, event type, actor, and timestamp for all major product state changes, giving full traceability.","description":"This operation allows authorized sellers or admins to review the complete audit history for a product, using advanced search, filter, and pagination parameters passed in IAiCommerceProductAuditLog.IRequest. The endpoint returns IPageIAiCommerceProductAuditLog, detailing each audit event, its source/actor, what changed, and when.\n\nAll accesses must be logged as read operations for compliance. No data is modified by this method. Audit logs are critical for legal compliance, security, forensic analysis, and dispute investigations, so business logic must ensure only properly authorized users have access. When requested, highly sensitive or private changes may be subject to further masking or redaction based on platform compliance policy.","summary":"Search and retrieve audit logs of a product (ai_commerce_product_audit_logs).","parameters":[{"name":"productId","description":"UUID of the product whose audit logs will be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced filtering and pagination options for product audit logs retrieval.","typeName":"IAiCommerceProductAuditLog.IRequest"},"responseBody":{"description":"Paginated audit log entries with before/after state, actor, and event metadata.","typeName":"IPageIAiCommerceProductAuditLog"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/products/{productId}/auditLogs","method":"patch"},{"specification":"Retrieve detailed information for a specific audit log belonging to a particular product. This operation directly accesses the ai_commerce_product_audit_logs table from the Prisma schema. It allows users, typically administrators or platform auditors, to pull the full details of an audit record, including before and after state, actor id, event type, and timestamps, for a targeted product. The interaction is essential for forensic evidence, compliance audits, or dispute investigations related to product changes. Any attempt to access nonexistent or non-authorized audit logs must be rejected gracefully, with clear error messaging, and all access is strictly logged for auditability.","description":"This endpoint retrieves a detailed audit log entry for a specific product by its unique identifiers. Audit logs in aiCommerce capture every critical event related to a product—such as creation, update, compliance reviews, price changes, and deletions. Each record includes the productId and auditLogId as path parameters, as well as information like event_type, actor_id, before_json, after_json, and created_at, ensuring full reconstructibility for legal, compliance, and business intelligence needs.\n\nStrict access control is enforced: only users with the admin role, or those granted explicit audit/review permissions may use this endpoint. The operation ties into the immutable, append-only audit trail for products defined in the Prisma schema, allowing robust inquiry into what changes were made, by whom, and when. This is vital for regulatory reporting, internal incident tracking, and restoring mission-critical history.\n\nPermission violations, invalid product or audit log IDs, and requests for missing logs must result in standardized error responses without revealing sensitive system information.","summary":"Get a specific product audit log entry by auditLogId from the ai_commerce_product_audit_logs table.","parameters":[{"name":"productId","description":"Unique identifier of the target product whose audit log is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"auditLogId","description":"Unique identifier of the audit log entry for the product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Audit log details for the specified product and auditLogId, including event type, actor id, before/after state, and timestamp.","typeName":"IAiCommerceProductAuditLog"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/products/{productId}/auditLogs/{auditLogId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a paginated, filtered, and sortable list of tags from ai_commerce_tags for product/discovery modules. This operation enables admin users to search across tags by various criteria such as name, status, creation/updated date, and description. It is powered by the Prisma schema's ai_commerce_tags table, supporting full faceted tag management and discovery analytics. Intended for large-scale platform moderation and curation workflows.","description":"Search and retrieve a list of tags used in product and discovery modules within the commerce platform. Each tag can be filtered by name, status (active, under_review, suspended, deleted), creation date, and other attributes. This operation supports advanced filtering, search, sorting, and pagination—essential for admin- or moderation-facing UIs with high data volume.\n\nThe ai_commerce_tags table provides critical tagging structure for products, inquiries, and analytics, and is referenced throughout discovery and recommendation engines. The response includes both tag summary and pagination metadata for streamlined UI usage. This operation is strictly accessible by admins or authorized moderators, supporting bulk curation, trend detection, and maintenance of the tag taxonomy.\n\nUsers lacking appropriate privilege must be denied access and notified politely, and all search/filter parameters must be validated for type and allowed values.","summary":"Search and list tags, with advanced filtering and pagination, from ai_commerce_tags.","parameters":[],"requestBody":{"description":"Search/filter and pagination parameters for tag listing and moderation.","typeName":"IAiCommerceTag.IRequest"},"responseBody":{"description":"Paginated result set of tag summaries, with filtering, searching, and sorting metadata.","typeName":"IPageIAiCommerceTag.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/tags","method":"patch"},{"specification":"Retrieve the detailed record of a single tag from the ai_commerce_tags table by tagId. This endpoint is leveraged for tag display, moderation decisions, or tag-based analytics drilldown. Returns the full tag information including name, status, description, timestamps, and relations to product tags/analytics.","description":"Get details of a specific tag by its unique tagId. The ai_commerce_tags model defines all major properties of a tag, such as tag identity (name), status (active, under_review, suspended, deleted), business description, creation and update timestamps, and its use in product/discovery analytics. This operation is exclusively accessible to admin or moderator accounts, who require complete information on the tag for moderation, search analytics, recommendations, or metadata management.\n\nThe API ensures only users with high-privilege roles may retrieve full tag information, and all lookups are logged to the audit trail. If tagId is invalid or does not exist, the operation must fail gracefully, delivering a consistent error response without revealing sensitive backend details.","summary":"Get details for a specific tag by tagId from ai_commerce_tags.","parameters":[{"name":"tagId","description":"Unique identifier of the tag to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full tag details from ai_commerce_tags for the given tagId, including metadata and status.","typeName":"IAiCommerceTag"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/tags/{tagId}","method":"get"},{"specification":"Create a new tag for use within product, discovery, or analytics modules. Inserts a record into ai_commerce_tags with properties supplied by the admin user. This operation is intended for platform curation, moderation onboarding, or bulk taxonomy building and is managed by platform admins or authorized moderators. Input validation, deduplication, and compliance with naming constraints from the ai_commerce_tags schema are enforced.","description":"Create a new tag entry in the ai_commerce_tags table. Admins or authorized moderators use this operation to define new searchable tags to be attached to products, inquiries, analytics, or promoted in discovery modules. Tag properties include name (unique, alphanumeric), status, description, and other metadata fields. Successful creation returns the detailed tag object that was inserted.\n\nThe operation enforces tag uniqueness, appropriate business rules (prohibitions, moderation), and audits create activity for compliance. If a duplicate name is detected or creation parameters fail schema/business validation, the endpoint returns a descriptive error, with all attempts recorded for administrator review and system monitoring.","summary":"Create a new tag, inserting into ai_commerce_tags as an admin.","parameters":[],"requestBody":{"description":"Tag creation input as defined by ai_commerce_tags, including name, status, and metadata.","typeName":"IAiCommerceTag.ICreate"},"responseBody":{"description":"The tag object that was created in ai_commerce_tags, including all relevant metadata.","typeName":"IAiCommerceTag"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/tags","method":"post"},{"specification":"Modify the properties of an existing tag identified by tagId. This is a full update endpoint (PUT), overwriting major tag properties (name, status, description). The operation targets ai_commerce_tags in the Prisma schema. Only admin/moderator users may update tags, and all actions are fully audit-logged for compliance and evidence. Input fields must pass all constraints and uniqueness checks as defined in the Prisma schema.","description":"Update an existing tag in ai_commerce_tags by tagId. This operation lets admins fully overwrite properties for a tag—including name, status, and description—effectively updating the tag for moderation, business taxonomy, or analytics improvement purposes. Tag uniqueness by name, enum validation for status, and business/format constraints are strictly enforced, and all update activity is traceable via audit logs.\n\nThe endpoint is restricted to high-privilege accounts and includes business logic for resolving naming collisions or attempts to apply invalid status/transition combinations. Errors in input, permissions, or tag mutability must result in standardized, actionable error messages for administrator awareness.","summary":"Update all major properties of an existing tag by tagId (admin/moderator only).","parameters":[{"name":"tagId","description":"The unique identifier of the tag to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All fields to replace on tag, as defined in ai_commerce_tags.","typeName":"IAiCommerceTag.IUpdate"},"responseBody":{"description":"The updated tag object reflecting post-update state and metadata.","typeName":"IAiCommerceTag"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/tags/{tagId}","method":"put"},{"specification":"Remove a tag from the ai_commerce_tags table according to platform rules. This operation performs a permanent delete as determined by the schema. Only admin or moderator roles may delete tags. All delete activity is logged, and appropriate referential integrity or dependency validation must be performed.","description":"Permanently delete a tag by its tagId. The ai_commerce_tags schema does not support a soft delete field, so this operation immediately and irrevocably removes the record from the database for that tagId. Referential integrity and dependency checks must be performed before deletion, and the operation is restricted to admin-level users.\n\nAll delete attempts are recorded in the audit trail for compliance and recoverability within backup systems. Unauthorized or invalid delete attempts must return clear, actionable errors, ensuring no accidental or malicious deletion occurs.","summary":"Permanently delete a tag record by tagId from ai_commerce_tags (hard delete).","parameters":[{"name":"tagId","description":"Unique identifier of the tag to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/tags/{tagId}","method":"delete"},{"specification":"Search and retrieve the moderation history/actions for a specific tag using patch on the /tags/{tagId}/moderation endpoint. Returns a paginated and filterable list of moderation records referencing ai_commerce_tag_moderation for the target tag. Used by admins and moderators for compliance, evidence review, or tag workflow management.","description":"Search the moderation log for a specific tag by tagId. All moderation activity—approvals, rejections, flags, suspensions—are recorded in ai_commerce_tag_moderation with references to the tag, moderator, reason, action, and timestamps. This operation supports filtering by action, time window, moderator identity, or result, and is paginated to support large moderation histories.\n\nAdmins or moderators may use this endpoint to review the moderation life-cycle of a tag, investigate disputes, and prepare compliance documentation. Unauthorized users must not have access to this data, and all accesses are recorded for trace/audit.","summary":"Search and list moderation events for a tag by tagId, supporting filtering, pagination, and evidence review.","parameters":[{"name":"tagId","description":"The unique identifier of the tag whose moderation history to search.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination controls for tag moderation event log listing.","typeName":"IAiCommerceTagModeration.IRequest"},"responseBody":{"description":"Paginated list of tag moderation actions with filtering and audit metadata.","typeName":"IPageIAiCommerceTagModeration"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/tags/{tagId}/moderation","method":"patch"},{"specification":"Get the details of a specific moderation event for a tag by moderationId. This endpoint retrieves an individual record from ai_commerce_tag_moderation, providing details such as action, result, moderator, reason, and timestamp. It is critical for compliance and full moderation audit trails. Access is restricted to admin roles. All lookups are logged for compliance, and permission/invalid id errors are handled gracefully.","description":"Retrieve a specific moderation log entry for a tag, identified by tagId and moderationId. The ai_commerce_tag_moderation schema captures every moderation action and is indexed by tag and unique moderation identifiers. The response includes the full moderation record—action type, outcome, moderator, reason, evidence snapshot reference, and timestamps.\n\nOnly admins may access this information for regulatory, evidence, or workflow purposes. All attempts are logged for traceability, and errors for invalid/faulty lookups or lack of privilege are handled with standard error protocols and without exposing unnecessary details about internal business logic.","summary":"Get a specific tag moderation log entry by tagId and moderationId.","parameters":[{"name":"tagId","description":"The tag whose moderation event is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"moderationId","description":"Unique identifier of the moderation event for the tag.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The moderation log entry for the tag and moderationId, with all audit and workflow metadata.","typeName":"IAiCommerceTagModeration"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/tags/{tagId}/moderation/{moderationId}","method":"get"},{"specification":"This operation searches for product-tag binding records with advanced filtering and pagination for use in search/discovery. It accesses the ai_commerce_product_tags table and returns paginated, filtered results. The endpoint supports complex search by tag or product and is vital for analytics and admin/tag discovery workflows.","description":"Search, filter, and paginate product-tag bindings recorded in the ai_commerce_product_tags table, which links tags to products for search and discovery. This enables discovery/admin users to locate products by tag, or audit product tagging for compliance and analytics.\n\nSearch criteria may include product ID, tag ID, tag status, or binding time. Pagination, sort order, and search by partial tag/product names may also be supported. The response is optimized for admin/search tools.\n\nSecurity: Admins may view all bindings, while other roles may be restricted to their own products. Error scenarios include invalid search criteria, overly broad or narrow filters, and permission errors.","summary":"Paginated search for product-tag bindings (ai_commerce_product_tags).","parameters":[],"requestBody":{"description":"Search and filter options for product-tag bindings (IDs, tags, pagination, etc.).","typeName":"IAiCommerceProductTag.IRequest"},"responseBody":{"description":"Paginated result of product-tag bindings matching search criteria.","typeName":"IPageIAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/productTags","method":"patch"},{"specification":"This operation retrieves detailed information for a specific product-tag binding by its unique identifier. It is associated with ai_commerce_product_tags and is used for analytics, tag audits, or discovery workflows.","description":"Get detailed information for a specific product-tag binding from the ai_commerce_product_tags table using its unique binding ID. This operation is common for admin or analytics workflows where information about tag-assignments needs to be reviewed or audited.\n\nThe endpoint is accessible only to admins or users with appropriate access. The result includes all key info about the tag-product relationship, tag status, product metadata, and audit references. Possible errors include invalid productTagId or lack of permission.","summary":"Get details for a specific product-tag binding (ai_commerce_product_tags).","parameters":[{"name":"productTagId","description":"The unique identifier of the product-tag binding record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the product-tag binding record.","typeName":"IAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/productTags/{productTagId}","method":"get"},{"specification":"This operation associates an existing tag with a product by creating a binding in ai_commerce_product_tags. Typically performed by admins or sellers to improve product discovery and categorization. Each binding must be unique for (productId, tagId), and is important for search and analytics.","description":"Create a new product-tag binding in the ai_commerce_product_tags table. This operation links a tag to a product, enhancing search/discovery features and supporting marketing or analytic initiatives.\n\nThe input includes identifiers for both product and tag, and may also include meta or business context. Permissions apply: sellers can only tag their own products; admins can create any binding. Error scenarios are duplicate bindings, non-existent product/tag, or permission errors.","summary":"Create a new product-tag binding (ai_commerce_product_tags).","parameters":[],"requestBody":{"description":"The product-tag binding creation payload with product, tag, and context info.","typeName":"IAiCommerceProductTag.ICreate"},"responseBody":{"description":"The created product-tag binding record.","typeName":"IAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/productTags","method":"post"},{"specification":"This operation updates an existing product-tag binding for a given record ID. Used to correct, reclassify, or annotate the product-tag relationship. It modifies ai_commerce_product_tags and supports admin, analytics, or advanced seller workflows. All changes are logged for audit.","description":"Update an existing product-tag binding in ai_commerce_product_tags. This is used to reclassify the tag or product association, update meta/context info, or correct earlier mistakes. Only admins or the owning seller may perform this action.\n\nAll changes are tracked and auditable for compliance and analytics history. The operation requires the unique productTagId, and the request body details the fields to update. Security: Only permitted users may update their own products' tag bindings; error handling includes lack of permission, invalid IDs, or data conflicts.","summary":"Update an existing product-tag binding (ai_commerce_product_tags).","parameters":[{"name":"productTagId","description":"The unique identifier of the product-tag binding to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the product-tag binding.","typeName":"IAiCommerceProductTag.IUpdate"},"responseBody":{"description":"The updated product-tag binding record.","typeName":"IAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/productTags/{productTagId}","method":"put"},{"specification":"This operation removes a product-tag binding, permanently erasing the association from ai_commerce_product_tags. It is required for compliance, data cleanup, or business context changes. Be cautious: this is a hard delete with no recovery. Only admins or owning sellers can erase their bindings.","description":"Delete (erase) a product-tag binding from the ai_commerce_product_tags table. This removes the tag-product association, affecting search/discovery on the platform. Only admins or owners can perform this.\n\nThe operation takes the unique productTagId. Once erased, the association is lost and cannot be immediately recovered unless re-created. Compliance and audit logging applies. Errors include invalid binding ID, insufficient permissions, or attempting to delete protected/tagged associations.","summary":"Erase a product-tag binding (ai_commerce_product_tags).","parameters":[{"name":"productTagId","description":"The unique identifier of the product-tag binding to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/productTags/{productTagId}","method":"delete"},{"specification":"This operation allows an administrator to perform a moderation action on a specific tag. It is associated with the ai_commerce_tags table, and enables recording actions such as approve, reject, or flag on tags used for product discovery, analytics, and moderation. Each moderation record links to an admin user, the tag, and includes notes and rationale for audit. Moderation is part of platform compliance and content quality assurance.","description":"Create a new moderation action for a tag in the ai_commerce_tags table. This endpoint is used by administrators to moderate tag usage and labeling. When a tag is reported or requires review, the admin can perform actions such as approve, reject, or suspend, all of which are recorded along with the admin identity and reasoning.\n\nPermissions are strictly limited to admins; all actions are logged for audit. Moderation links to business compliance, as improper tagging can affect product visibility and legal discoverability. The endpoint is part of a workflow where admins review tags flagged by the system, users, or through random sampling.\n\nIf the moderation is successful, a new moderation record is persisted with timestamps and references to both the tag and the acting admin.\n\nRelated operations are getting the tag for review or updating an existing moderation decision.","summary":"Admin creates a new moderation/action record for a specific tag (ai_commerce_tags).","parameters":[{"name":"tagId","description":"The unique identifier of the tag to be moderated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the moderation to perform, including action, rationale, and moderator identity.","typeName":"IAiCommerceTagModeration.ICreate"},"responseBody":{"description":"The created moderation record for the tag.","typeName":"IAiCommerceTagModeration"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/tags/{tagId}/moderation","method":"post"},{"specification":"This operation allows an admin to update an existing moderation record for a tag, such as changing the moderation result, reason, or notes. It relates to the ai_commerce_tag_moderation table and is part of the compliance and audit subsystem. Only admin users are permitted to update moderation decisions, with every action audited.","description":"Update an existing moderation entry for a specific tag in the ai_commerce_tag_moderation table. This may be needed if additional evidence is provided, an initial moderation decision is appealed, or for correction of prior mistakes.\n\nAdmins must provide the moderationId of the moderation entry and the updated action, result, or notes. Every change is tracked for compliance, audit, and traceability. Security is paramount, limited to admin roles only.\n\nChanges to moderation decisions can affect product search, visibility, and platform compliance, and must be handled with care. Error handling includes validation that the moderationId belongs to the tag and that only admins may update.","summary":"Admin updates an existing moderation record for a tag (ai_commerce_tag_moderation).","parameters":[{"name":"tagId","description":"The unique ID of the tag for which moderation is to be updated.","schema":{"type":"string","format":"uuid"}},{"name":"moderationId","description":"The ID of the moderation record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated moderation action details (e.g., new result, rationale).","typeName":"IAiCommerceTagModeration.IUpdate"},"responseBody":{"description":"The updated moderation record.","typeName":"IAiCommerceTagModeration"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/tags/{tagId}/moderation/{moderationId}","method":"put"},{"specification":"This operation allows an admin to permanently delete a moderation record associated with a specific tag, removing it from the business compliance/audit trail when necessary. It is related to the ai_commerce_tag_moderation table. This endpoint is for extreme circumstances (e.g., legal erasure) and all regular moderation records should typically be preserved.","description":"Permanently remove an existing moderation decision related to a specific tag from the ai_commerce_tag_moderation table. Admins can use this when a moderation record must be erased for legal, privacy, or error correction reasons.\n\nSecurity and compliance are essential, so only admins can execute this action and all deletion attempts are logged. There are strict controls in normal business operations to avoid unnecessary data loss. Typical use cases include compliance with right-to-be-forgotten requests or after an audit reveals a moderation entry was created in error.\n\nError cases include invalid moderationId, attempts from non-admin users, or trying to delete system-critical moderation records.","summary":"Admin deletes a moderation record for a tag (ai_commerce_tag_moderation).","parameters":[{"name":"tagId","description":"The unique ID of the tag whose moderation record is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"moderationId","description":"The unique ID of the moderation record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/tags/{tagId}/moderation/{moderationId}","method":"delete"},{"specification":"This operation associates an existing tag with a product by creating a binding in ai_commerce_product_tags. Typically performed by admins or sellers to improve product discovery and categorization. Each binding must be unique for (productId, tagId), and is important for search and analytics.","description":"Create a new product-tag binding in the ai_commerce_product_tags table. This operation links a tag to a product, enhancing search/discovery features and supporting marketing or analytic initiatives.\n\nThe input includes identifiers for both product and tag, and may also include meta or business context. Permissions apply: sellers can only tag their own products; admins can create any binding. Error scenarios are duplicate bindings, non-existent product/tag, or permission errors.","summary":"Create a new product-tag binding (ai_commerce_product_tags).","parameters":[],"requestBody":{"description":"The product-tag binding creation payload with product, tag, and context info.","typeName":"IAiCommerceProductTag.ICreate"},"responseBody":{"description":"The created product-tag binding record.","typeName":"IAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/productTags","method":"post"},{"specification":"This operation updates an existing product-tag binding for a given record ID. Used to correct, reclassify, or annotate the product-tag relationship. It modifies ai_commerce_product_tags and supports admin, analytics, or advanced seller workflows. All changes are logged for audit.","description":"Update an existing product-tag binding in ai_commerce_product_tags. This is used to reclassify the tag or product association, update meta/context info, or correct earlier mistakes. Only admins or the owning seller may perform this action.\n\nAll changes are tracked and auditable for compliance and analytics history. The operation requires the unique productTagId, and the request body details the fields to update. Security: Only permitted users may update their own products' tag bindings; error handling includes lack of permission, invalid IDs, or data conflicts.","summary":"Update an existing product-tag binding (ai_commerce_product_tags).","parameters":[{"name":"productTagId","description":"The unique identifier of the product-tag binding to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the product-tag binding.","typeName":"IAiCommerceProductTag.IUpdate"},"responseBody":{"description":"The updated product-tag binding record.","typeName":"IAiCommerceProductTag"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/productTags/{productTagId}","method":"put"},{"specification":"This operation removes a product-tag binding, permanently erasing the association from ai_commerce_product_tags. It is required for compliance, data cleanup, or business context changes. Be cautious: this is a hard delete with no recovery. Only admins or owning sellers can erase their bindings.","description":"Delete (erase) a product-tag binding from the ai_commerce_product_tags table. This removes the tag-product association, affecting search/discovery on the platform. Only admins or owners can perform this.\n\nThe operation takes the unique productTagId. Once erased, the association is lost and cannot be immediately recovered unless re-created. Compliance and audit logging applies. Errors include invalid binding ID, insufficient permissions, or attempting to delete protected/tagged associations.","summary":"Erase a product-tag binding (ai_commerce_product_tags).","parameters":[{"name":"productTagId","description":"The unique identifier of the product-tag binding to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/productTags/{productTagId}","method":"delete"},{"specification":"This API operation retrieves a paginated and filtered list of products currently marked as trending within the e-commerce discovery module. It operates on the ai_commerce_trending_products table, which references trending status, analytics score, and manual overrides for each product. This endpoint allows clients to search, filter, and sort trending products based on their analytics score, related product details, or trending metadata, and supports use cases for personalized recommendations, homepage feeds, and admin analytics.","description":"Retrieve a paginated and filtered list of trending products from ai_commerce_trending_products. This operation allows clients, admins, or end users to obtain the most up-to-date and relevant trending product data, supporting user-facing feeds, analytics dashboards, and trend monitoring workflows respectively.\n\nThe response includes essential details such as trending analytics score, whether the status is manually overridden, and product references for each entry. Proper pagination and sorting options ensure high-performance access for large catalogues. Sensitive or internal analytics data may be filtered or summarized depending on the requesting user's role and context as determined by authorization logic in the business layer.\n\nTrending status is determined by platform analytics and, optionally, can be manually overridden by administrators. This endpoint interacts closely with related product and discovery endpoints and should be used in conjunction with AI-powered personalization or homepage recommendation APIs when building consumer-facing surfaces.\n\nError handling includes proper status codes for query errors, unrecognized parameters, or internal analytics errors. Only summary information for each trending product is returned unless otherwise specified by request context.","summary":"Retrieve a paginated and filtered list of trending products (ai_commerce_trending_products).","parameters":[],"requestBody":{"description":"Filter, sorting, and pagination parameters for listing trending products.","typeName":"IAiCommerceTrendingProduct.IRequest"},"responseBody":{"description":"Paginated list of trending products including analytics score and product references.","typeName":"IPageIAiCommerceTrendingProduct.ISummary"},"authorizationType":null,"authorizationRole":null,"name":"index","path":"/aiCommerce/trendingProducts","method":"patch"},{"specification":"This API operation retrieves complete details of a specific trending product entry based on its unique trendingProductId from the ai_commerce_trending_products table. The endpoint provides analytics scoring, manual override information, related product metadata, and links to audit and trend-tracking records, serving user-facing discovery experiences and admin consoles needing detailed trending product inspection.","description":"Fetch the detailed information for a specific trending product entry in ai_commerce_trending_products by trendingProductId (UUID). This enables retrieval of trending analytics, product reference, score, override flag, and timestamp fields, with full support for both user-facing discovery and administrative inspection.\n\nSecurity and permissions are essential; sensitive analytics or audit trail fields may require elevated roles (e.g., admin) to access. Business logic may enforce broader or narrower field visibility depending on the context in which the API is called.\n\nThis operation should be used in conjunction with product detail and analytics endpoints for holistic trend monitoring and intervention workflows. Error handling includes not found, forbidden, and invalid parameter statuses as required.\n\nThe path parameter trendingProductId is a required UUID that identifies the target trending record. The endpoint merges information from trending, analytics, and linked product tables as appropriate.","summary":"Get detailed information for a specific trending product (ai_commerce_trending_products).","parameters":[{"name":"trendingProductId","description":"Unique identifier of the trending product record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested trending product including analytics and reference info.","typeName":"IAiCommerceTrendingProduct"},"authorizationType":null,"authorizationRole":null,"name":"at","path":"/aiCommerce/trendingProducts/{trendingProductId}","method":"get"},{"specification":"This API operation allows authorized admins to create a new trending product entry in the ai_commerce_trending_products table. It is used to directly set or override a product's trending status, either in response to analytics signals or for special business campaigns. Creation assigns a product reference, analytics score, manual override status, and initial timestamps.","description":"Create a new trending product entry in ai_commerce_trending_products, enabling an admin user to promote a product to trending status manually, override analytics, or seed initial trending campaigns. Required input includes product reference, analytics score, manual override flag, and timing information in accordance with business rules.\n\nOnly users with administrative privileges can access this operation. All creation actions are rigorously logged for compliance and future audit. Input validation ensures that only products eligible for trending are accepted (e.g., status, availability, non-duplication). Manual overrides are prominent, so downstream business rules show these entries with higher priority for the specified time period.\n\nThis endpoint may be used in conjunction with analytics engine outputs, automated recommendation triggers, or marketing campaigns. Failure scenarios include duplicate trending entries, ineligible product IDs, or invalid score/override states.","summary":"Create a new trending product entry (ai_commerce_trending_products).","parameters":[],"requestBody":{"description":"Trending product creation data including product reference, score, and override flags.","typeName":"IAiCommerceTrendingProduct.ICreate"},"responseBody":{"description":"The created trending product record including metadata and trending analytics state.","typeName":"IAiCommerceTrendingProduct"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/trendingProducts","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This API operation updates the analytics score, manual override status, or metadata of an existing trending product entry in ai_commerce_trending_products. Only admins may call this endpoint, enabling dynamic intervention, reweighting, or campaign management of trending products in user-facing discovery experiences. All updates require a valid trendingProductId and are recorded for audit.","description":"Update trending analytics, override status, or supplemental metadata for an existing entry in ai_commerce_trending_products. This API supports fine-tuned control over discovery, allowing admins to manually sustain or suppress product trending state beyond purely analytics-driven assignment.\n\nThe operation requires trendingProductId as a path parameter and a body containing the fields to update (e.g., updated score, override flag, rationale, and timing). All changes are logged for compliance and can have downstream effects on user feeds or homepage segments. Only users with admin role can access this operation, enforcing rigorous access control for trend manipulation.\n\nRelated API operations include trending product creation, detailed retrieval, and listing endpoints. Error handling covers not found, forbidden, invalid parameters, and update failures due to immutable or out-of-date records.","summary":"Update details of an existing trending product (ai_commerce_trending_products).","parameters":[{"name":"trendingProductId","description":"Unique identifier of the trending product record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the selected trending product, such as score or override flags.","typeName":"IAiCommerceTrendingProduct.IUpdate"},"responseBody":{"description":"The updated trending product record reflecting new state and metadata.","typeName":"IAiCommerceTrendingProduct"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/trendingProducts/{trendingProductId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This API operation removes a trending product entry from ai_commerce_trending_products by unique trendingProductId. This allows authorized admins to unmark or remove a product from trending, reflecting in real-time in user discovery and analytics modules. Deletion is logged for compliance and cannot be undone, as removed entries may impact recommendation and feed operations immediately.","description":"Delete a trending product record identified by trendingProductId from ai_commerce_trending_products. This action immediately removes the trending status from the associated product and propagates changes to related discovery channels and analytics flows. Only admins have access, and actions are logged for audit. Permanent deletion may have cascading implications for current and historical analytics, recommendation results, and business reporting.\n\nThe trendingProductId is a required UUID path parameter that uniquely identifies the trending entry to be deleted. Associated analytics and discovery modules may respond by recalculating feed inputs following deletion. Common error cases include not found, forbidden, and attempted deletion of protected records.","summary":"Delete a trending product entry by ID (ai_commerce_trending_products).","parameters":[{"name":"trendingProductId","description":"Unique identifier of the trending product record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/trendingProducts/{trendingProductId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This API operation retrieves a paginated, filtered list of highlighted products from the ai_commerce_highlighted_products table. It enables clients and admin users to browse current and scheduled product highlights, accessing metadata such as scheduling, highlight reasons, and curator. Supports use cases including consumer-facing homepage banners, promotional events, and campaign management.","description":"List current and scheduled highlighted product entries from ai_commerce_highlighted_products. This endpoint allows filtering, sorting, and paginated access, ensuring scalable performance and responsive UI. Output includes highlight timing (start/end), reason, manually assigned curator, and associated product references.\n\nThe endpoint addresses business needs for promoted content, featured product selections, and homepage campaign management. Non-admin users receive only public, currently live highlights, whereas admins may request broader scope or historical records. Related operations include creation, update, and deletion of highlights, often combined with real-time campaign monitoring or analytics dashboards.\n\nError handling covers range queries, out-of-bounds pagination, and access violations where historic or non-public highlights are requested by unauthorized roles.","summary":"List paginated and filtered highlighted products (ai_commerce_highlighted_products).","parameters":[],"requestBody":{"description":"Highlight filter, sort, and page options for highlighted product search.","typeName":"IAiCommerceHighlightedProduct.IRequest"},"responseBody":{"description":"Paginated list of highlighted products with display and campaign metadata.","typeName":"IPageIAiCommerceHighlightedProduct.ISummary"},"authorizationType":null,"authorizationRole":null,"name":"index","path":"/aiCommerce/highlightedProducts","method":"patch"},{"specification":"Get the detailed information of a single highlighted product entry using the specified highlightedProductId from ai_commerce_highlighted_products. This API provides all metadata, including schedule, creator, and business reason, as well as product references for UI rendering and campaign auditing. Intended for both user-facing popups and internal curation dashboards.","description":"Retrieve details of a specific highlighted product in ai_commerce_highlighted_products by its highlightedProductId. The endpoint covers highlight timing, curator identity, manual notes, status, and product links. Permissions may restrict sensitive scheduling or administrative campaign notes to elevated roles. Path parameter highlightedProductId is a required UUID.\n\nThis operation supports detailed configuration screens, consumer-facing highlight banners with extended info, or campaign retrospectives for business stakeholders. Coupled with highlight creation and update APIs for full lifecycle management. Error cases return standard not found, unauthorized, or parameterization errors with full traceability.","summary":"Get details of a specific highlighted product by ID (ai_commerce_highlighted_products).","parameters":[{"name":"highlightedProductId","description":"Unique identifier of the highlighted product record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full highlighted product record with scheduling and manual notes.","typeName":"IAiCommerceHighlightedProduct"},"authorizationType":null,"authorizationRole":null,"name":"at","path":"/aiCommerce/highlightedProducts/{highlightedProductId}","method":"get"},{"specification":"This API operation allows admins or authorized sellers to create a new highlighted product in ai_commerce_highlighted_products. Highlights are used for campaign spotlights, homepage banners, or seasonal promotional selection, combining schedule info, manual curator identity, and business rationale. Creation is subject to business rules and full audit logging for compliance.","description":"Add a new highlighted product record to ai_commerce_highlighted_products, specifying product, schedule, curation reason, and creator identity. Only users with sufficient privileges may access this operation. Input validation ensures that a valid, promoted product is selected with appropriate schedule (start/end), and that duplication or overlap with other campaigns is prevented.\n\nHighlights may power homepage rotations, promotional events, or curated category spotlights. All operations are logged for compliance, and actions may trigger downstream campaign processes or analytics updates. Failures may include date conflicts, ineligible product IDs, or access control violations.","summary":"Create a new highlighted product record (ai_commerce_highlighted_products).","parameters":[],"requestBody":{"description":"Data to create a new highlighted product, including product and schedule info.","typeName":"IAiCommerceHighlightedProduct.ICreate"},"responseBody":{"description":"Created highlighted product record with campaign and display metadata.","typeName":"IAiCommerceHighlightedProduct"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/highlightedProducts","method":"post"},{"specification":"This API operation allows admins or authorized sellers to create a new highlighted product in ai_commerce_highlighted_products. Highlights are used for campaign spotlights, homepage banners, or seasonal promotional selection, combining schedule info, manual curator identity, and business rationale. Creation is subject to business rules and full audit logging for compliance.","description":"Add a new highlighted product record to ai_commerce_highlighted_products, specifying product, schedule, curation reason, and creator identity. Only users with sufficient privileges may access this operation. Input validation ensures that a valid, promoted product is selected with appropriate schedule (start/end), and that duplication or overlap with other campaigns is prevented.\n\nHighlights may power homepage rotations, promotional events, or curated category spotlights. All operations are logged for compliance, and actions may trigger downstream campaign processes or analytics updates. Failures may include date conflicts, ineligible product IDs, or access control violations.","summary":"Create a new highlighted product record (ai_commerce_highlighted_products).","parameters":[],"requestBody":{"description":"Data to create a new highlighted product, including product and schedule info.","typeName":"IAiCommerceHighlightedProduct.ICreate"},"responseBody":{"description":"Created highlighted product record with campaign and display metadata.","typeName":"IAiCommerceHighlightedProduct"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/highlightedProducts","method":"post"},{"specification":"This operation updates a highlighted product entry in the discovery system. It operates on the ai_commerce_highlighted_products table, which is used for business-driven curation and scheduling of products to be prominent in discovery and marketing flows. The update allows admins or sellers to modify highlight time windows, reasons, and related metadata, ensuring real-time campaign adjustment and business tracking.","path":"/aiCommerce/admin/highlightedProducts/{highlightedProductId}","method":"put","summary":"Update a specific highlighted product entry in the discovery business table","description":"This operation modifies an existing highlighted product, allowing changes to the highlight time frame, manual highlight reasons, and related campaign or business context data.\n\nSecurity is enforced so that only users with appropriate admin or seller privileges can update highlights that were created by them or that belong to their marketplace segment. Each update is audit-logged according to compliance and marketing rules.\n\nInputs are validated against the business schema for correct scheduling (start and end times), reason annotation, and relational integrity with product and curator. Conflicting updates, such as overlapping scheduled highlights, are rejected with actionable errors.\n\nFor recovery and evidence, every update produces a new audit trail entry and updates the status of any related notifications or analytics dashboards.","parameters":[{"name":"highlightedProductId","description":"Unique identifier for the highlighted product record being updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the highlighted product (window, curator ID, reason, etc.)","typeName":"IAiCommerceHighlightedProduct.IUpdate"},"responseBody":{"description":"Updated highlighted product information post-patch, including scheduling and business context","typeName":"IAiCommerceHighlightedProduct"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation updates a highlighted product entry in the discovery system. It operates on the ai_commerce_highlighted_products table, which is used for business-driven curation and scheduling of products to be prominent in discovery and marketing flows. The update allows admins or sellers to modify highlight time windows, reasons, and related metadata, ensuring real-time campaign adjustment and business tracking.","path":"/aiCommerce/seller/highlightedProducts/{highlightedProductId}","method":"put","summary":"Update a specific highlighted product entry in the discovery business table","description":"This operation modifies an existing highlighted product, allowing changes to the highlight time frame, manual highlight reasons, and related campaign or business context data.\n\nSecurity is enforced so that only users with appropriate admin or seller privileges can update highlights that were created by them or that belong to their marketplace segment. Each update is audit-logged according to compliance and marketing rules.\n\nInputs are validated against the business schema for correct scheduling (start and end times), reason annotation, and relational integrity with product and curator. Conflicting updates, such as overlapping scheduled highlights, are rejected with actionable errors.\n\nFor recovery and evidence, every update produces a new audit trail entry and updates the status of any related notifications or analytics dashboards.","parameters":[{"name":"highlightedProductId","description":"Unique identifier for the highlighted product record being updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the highlighted product (window, curator ID, reason, etc.)","typeName":"IAiCommerceHighlightedProduct.IUpdate"},"responseBody":{"description":"Updated highlighted product information post-patch, including scheduling and business context","typeName":"IAiCommerceHighlightedProduct"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation deletes a highlighted product record from the ai_commerce_highlighted_products table. As highlighted products are curated for business needs, their removal is a privileged action, restricted to those with administrative or seller curation rights. The operation enforces logical (soft) deletion, retaining auditability, historical evidence, and scheduled campaign tracking.","path":"/aiCommerce/admin/highlightedProducts/{highlightedProductId}","method":"delete","summary":"Remove a highlighted product from discovery curation registry","description":"This endpoint performs a logical deletion on a highlighted product record: the entry is marked as deleted (timestamped), but not physically removed, to preserve historical and analytic integrity.\n\nOnly authorized admins or the original seller curator (with sufficient privileges) may perform this operation. Every removal is audit-logged with timestamp, actor, and the pre-deletion state for compliance and recovery. The audit trail ensures the recovery path, and analytic dashboards are updated to exclude deleted highlights from live curation views but retain history.\n\nDeletion requests that violate campaign schedule requirements or attempt to delete active/in-use highlights may be rejected with detailed error messaging. All soft-deleted records remain available for evidence, rollback, or audit queries by authorized personnel.","parameters":[{"name":"highlightedProductId","description":"Unique identifier for the highlighted product to remove from the registry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"This operation deletes a highlighted product record from the ai_commerce_highlighted_products table. As highlighted products are curated for business needs, their removal is a privileged action, restricted to those with administrative or seller curation rights. The operation enforces logical (soft) deletion, retaining auditability, historical evidence, and scheduled campaign tracking.","path":"/aiCommerce/seller/highlightedProducts/{highlightedProductId}","method":"delete","summary":"Remove a highlighted product from discovery curation registry","description":"This endpoint performs a logical deletion on a highlighted product record: the entry is marked as deleted (timestamped), but not physically removed, to preserve historical and analytic integrity.\n\nOnly authorized admins or the original seller curator (with sufficient privileges) may perform this operation. Every removal is audit-logged with timestamp, actor, and the pre-deletion state for compliance and recovery. The audit trail ensures the recovery path, and analytic dashboards are updated to exclude deleted highlights from live curation views but retain history.\n\nDeletion requests that violate campaign schedule requirements or attempt to delete active/in-use highlights may be rejected with detailed error messaging. All soft-deleted records remain available for evidence, rollback, or audit queries by authorized personnel.","parameters":[{"name":"highlightedProductId","description":"Unique identifier for the highlighted product to remove from the registry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation retrieves a paginated and filtered list of user search histories from the ai_commerce_search_histories table, supporting analytics, personalized experience optimization, and compliance review. Operates with advanced filtering on query string, timestamps, user, and contextual facets for real-time backend insights and AI feedback loops.","path":"/aiCommerce/admin/searchHistories","method":"patch","summary":"Search, filter, and paginate user search histories for discovery analytics","description":"This endpoint enables analytics teams or authorized admins to query search histories by text query, user, filter context (e.g. device, locale), and date range, supporting rich business insights about discovery behavior and trends.\n\nBecause of the sensitivity of search histories, especially those tied to PII, access is restricted to admins with analytics, support, or compliance needs—it is not available to general users. Advanced parameters support filtering by user, anonymization state, and aggregate calculation when paginated over larger datasets.\n\nThe response is a paginated, filtered dataset with summary stats as well as individual logs for inspection or downstream analysis. Failed or unauthorized access attempts are recorded, and rate-limiting/batch controls are enforced for system stability.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination criteria to search discovery histories","typeName":"IAiCommerceSearchHistory.IRequest"},"responseBody":{"description":"Paginated list of search history entries meeting search/filter criteria","typeName":"IPageIAiCommerceSearchHistory"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves detailed information for a specific user search history log by its unique identifier from the ai_commerce_search_histories table. Used for supporting compliance analysis, support troubleshooting, or advanced analytics tracing. Each entry contains query string, user context, timestamps, and analytic information.","path":"/aiCommerce/admin/searchHistories/{searchHistoryId}","method":"get","summary":"Retrieve detail of a specific user search history event for analytics or compliance review","description":"This endpoint retrieves a single search history event, identified by its unique ID, including all relevant metadata: query string, filters used, result count, timestamps, and user/session context.\n\nAccess is strictly limited to admin users for compliance and analytic traceability. All accesses are audit-logged with timestamp and identity of reviewer to meet privacy and legal requirements. User context information is only included when the corresponding legal basis exists (e.g., PII access rights for compliance responds to legitimate business needs).\n\nThe operation may redact or anonymize sensitive fields, depending on the requesting user's permission and system configuration. Error handling includes not found, unauthorized, or redacted scenarios, and all read accesses are tracked for evidence and reporting.","parameters":[{"name":"searchHistoryId","description":"Unique identifier for the search history event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested search history entry","typeName":"IAiCommerceSearchHistory"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation searches the ai_commerce_recommendation_snapshots table to retrieve AI-driven, point-in-time product recommendation logs for users. The endpoint is used in analytics, compliance, and AI model audit/validation activities and supports filtering by user, date range, and recommendation context for robust backend review.","path":"/aiCommerce/admin/recommendationSnapshots","method":"patch","summary":"Search and filter recommendation snapshot logs for audit and AI analysis","description":"Authorized analytics teams and admins can query recommendation snapshots generated by the personalized AI engine. Snapshots include linked user context, full recommendation data, computed reason/ranking, and contextual evidence for model explainability and compliance audits.\n\nAdvanced search supports filtering by user, snapshot timestamp, and rank/context filters. The operation ensures all returned data is tied to audit trails for privacy and compliance. Results may be redacted to anonymize personal information as required by business logic and legal obligations.\n\nThe endpoint enforces rate limits and logging for access control, and returns a paginated, detailed summary set for further inspection or evidence gathering.","parameters":[],"requestBody":{"description":"Complex filters and pagination options for recommendation snapshot query","typeName":"IAiCommerceRecommendationSnapshot.IRequest"},"responseBody":{"description":"Paginated set of recommendation snapshot logs for inspection","typeName":"IPageIAiCommerceRecommendationSnapshot"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves detailed information for a specific AI recommendation snapshot by unique ID from the ai_commerce_recommendation_snapshots table, supporting analytics, business debugging, and compliance review. These logs contain the list of recommended products, context at the time, user/session linkage, and ranking information for audit purposes.","path":"/aiCommerce/admin/recommendationSnapshots/{recommendationSnapshotId}","method":"get","summary":"Retrieve the detail of a specific recommendation snapshot entry for model audit or compliance","description":"Retrieves a full snapshot event log for a specific recommendation issued to a user, identified by its unique recommendationSnapshotId. Includes context, full output, AI model scoring, and user linkage for explainability, audit, and legal trace.\n\nThe operation is only accessible to analytics team members or admins with proper audit rights, and every access is recorded in the security audit log. Personal information in the snapshot is anonymized or redacted in accordance with data privacy policies and audit requirements.\n\nIf the requested snapshot is not found, was already redacted, or access is denied, the API returns actionable error feedback, and all such queries are monitored for compliance reporting.","parameters":[{"name":"recommendationSnapshotId","description":"ID of the recommendation snapshot to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail and context captured for the requested recommendation snapshot event","typeName":"IAiCommerceRecommendationSnapshot"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation retrieves a paginated and filtered set of platform search analytics from the ai_commerce_search_analytics table. Analytics may be aggregated by query string, date, filter/facet, or segmentation key. The endpoint supports advanced analytics dashboards and backend optimization of search and discovery business logic.","path":"/aiCommerce/admin/searchAnalytics","method":"patch","summary":"Search, aggregate, and paginate discovery search analytics for backend monitoring and optimization","description":"Enables authorized users to fetch search-related KPIs, statistics, and analytics events for the discovery system, filtered by query, aggregation type, timeframe, or custom dashboard segmentation. The endpoint is essential for BI teams, admin analysis, and platform recommendation optimization.\n\nAccess is restricted to admin roles with permission to analytics dashboards or BI modules. Results are paginated and can be aggregated for trend, segment, or dashboard reporting. Security controls prevent excessive loads or data exfiltration, and all accesses are monitored for compliance.\n\nResponses return summarized, aggregate analytics datasets designed for integration into data dashboards and optimization routines.","parameters":[],"requestBody":{"description":"Filtering and aggregation criteria for search analytics query, plus pagination if required","typeName":"IAiCommerceSearchAnalytics.IRequest"},"responseBody":{"description":"Paginated analytics summary matching the dashboard or analyst query","typeName":"IPageIAiCommerceSearchAnalytics"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation fetches a detailed, point-in-time search analytics entry by its unique searchAnalyticsId from the ai_commerce_search_analytics table. Each analytics result includes the aggregated query, sub-faceted KPIs, and analytic time window. Used for compliance, BI dashboard drilldowns, and backend optimization traceability.","path":"/aiCommerce/admin/searchAnalytics/{searchAnalyticsId}","method":"get","summary":"Retrieve detail for a specific search analytics entry by ID","description":"Fetches a single, detailed analytics record referenced by dashboard or analyst for reporting and optimization. Includes aggregated query information, KPI breakdowns, filter/facet state, and analytic interval windows.\n\nOnly admin users can access or drill into individual analytics records; all such actions are tracked in the compliance audit logs for evidence. Related errors—such as record not found, access denied, or incomplete data—are reported with actionable error messages. Access to drilldown data may vary by system configuration/policy.","parameters":[{"name":"searchAnalyticsId","description":"Unique ID for the analytics entry to view detail","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed analytics event record including query definition, KPIs, and aggregation context","typeName":"IAiCommerceSearchAnalytics"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"Retrieves a paginated, filterable list of shopping carts, supporting advanced buyer queries on cart status, quantity, creation/update timestamps, and store associations. Operates on the ai_commerce_carts table, reflecting both authenticated and guest carts, with optional search by buyer, status, or store. Fully aligns with privacy and audit trail rules, returning summary information suitable for management and user experience flows.","path":"/aiCommerce/buyer/carts","method":"patch","summary":"Search and retrieve a paginated list of shopping carts (ai_commerce_carts) with advanced filtering.","description":"This operation returns a paginated, optionally filtered collection of shopping cart records from the ai_commerce_carts table. Carts may belong to registered buyers or represent guest/anonymous sessions, with data filtered according to the user's role and permissions. \n\nSupports searching by status (active, draft, checked_out, expired), total quantity, store association, timestamps, and buyer identity (where permitted). Multiple query filters and sorting can be applied for analytics or cross-device cart management. \n\nThe response provides summary information (cart id, status, total items, associated store and buyer if applicable, timestamps) to support shopping experiences and administrative management. Security is handled to ensure no unauthorized cart cross-access; buyers may view only their own carts, admins can search across all records. \n\nAudit trails and data privacy policies are enforced in the query logic, in accordance with platform rules.","parameters":[],"requestBody":{"description":"Filtering and pagination options for searching shopping carts.","typeName":"IAiCommerceCart.IRequest"},"responseBody":{"description":"Paginated search results for shopping carts matching filter criteria.","typeName":"IPageIAiCommerceCart.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"Retrieves a single shopping cart and its full detail, by primary cart ID key. Operates on ai_commerce_carts with relations (buyer, store, cart items, timestamps) loaded, enforcing privacy and access control according to the acting user. Supports cart details review, recovery after login/cart-merge, and member shopping experiences.","path":"/aiCommerce/buyer/carts/{cartId}","method":"get","summary":"Retrieve a single shopping cart detail by ID (ai_commerce_carts) for owner or admin.","description":"This operation returns the full shopping cart record for a given cartId (ai_commerce_carts primary key), including buyer details (if present), associated store info, cart item list, and audit-compliant timestamps. Intended for enabling the buyer's multi-session shopping continuity, cross-device recovery, or admin purposes.\n\nBuyers may use this endpoint to resume, review, or recover their own pending/active cart. Admins may use it for diagnostics or support. Strict access control ensures cart data remains private to the owner; guest carts require secure session tracking. Inactive/deleted/expired carts are presented only if platform policy allows. \n\nRelations—cart items, buyer/store references—are eager-loaded to minimize round trips in client UX.\n\nSecurity, privacy consent, and audit logging are followed in line with platform compliance. Errors are returned for unauthorized access, missing or invalid cart IDs.","parameters":[{"name":"cartId","description":"UUID of the shopping cart to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the requested cart and all relevant relations.","typeName":"IAiCommerceCart"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"Creates a new shopping cart record. For authenticated buyers, associates with their account. For guests, launches a new anonymous cart session. Handles cart initialization, optional store or template linkage, and respect platform-wide constraints (unique per buyer, status defaults, etc). Primary operation on ai_commerce_carts, initializing all required relations and audit entries.","path":"/aiCommerce/buyer/carts","method":"post","summary":"Create a new shopping cart (ai_commerce_carts) for buyer or guest session.","description":"This operation initializes a new shopping cart in the ai_commerce_carts table for either an authenticated buyer (user) or a guest (using session tracking). Optionally, the request may specify a linked store for store-centric checkout. \n\nCarts automatically attach default status and timestamps, and are unique per buyer session. For guests, device/cookie/session token associations are provisioned. Cart creation logic includes audit record and supports cart merging if a previous draft exists for this user/session. \n\nUpon successful creation, returns the full cart model, including primary key and relevant metadata. Access, privacy, and session logic follow platform data protections and audit trails.","parameters":[],"requestBody":{"description":"Shopping cart creation request—may include buyer/store/session references as needed.","typeName":"IAiCommerceCart.ICreate"},"responseBody":{"description":"The newly created shopping cart object, with primary key and all relevant metadata.","typeName":"IAiCommerceCart"},"authorizationType":null,"authorizationRole":"buyer","name":"create"},{"specification":"Updates an existing shopping cart (ai_commerce_carts table) by primary cartId. Allows changing status, item count (non-item-level edit), and linked store in accordance with allowed business rules. Enforces owner-only updates for buyers or admin access. Generates audit trail and ensures data integrity on concurrent modifications.","path":"/aiCommerce/buyer/carts/{cartId}","method":"put","summary":"Update attributes of an existing shopping cart (ai_commerce_carts) by ID.","description":"This operation updates the main properties of an existing cart (ai_commerce_carts) including status (e.g., activating, expiring), associated store reference, or cart-level notes (if platform supports). Not intended for adding/removing items—use item endpoints for those actions.\n\nOnly the cart owner (buyer) or an admin may update their cart. Platform rules enforce that only valid status transitions, and denial of concurrent conflicting changes, are permitted. All updates produce audit log entries for legal and troubleshooting purposes. Error responses are returned for unauthorized updates, invalid status transitions, or data constraint violations.","parameters":[{"name":"cartId","description":"UUID of the shopping cart to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the shopping cart (status, store, or allowed modifications).","typeName":"IAiCommerceCart.IUpdate"},"responseBody":{"description":"The updated shopping cart object after modification.","typeName":"IAiCommerceCart"},"authorizationType":null,"authorizationRole":"buyer","name":"update"},{"specification":"Deletes (soft-deletes) a shopping cart record (ai_commerce_carts) by cartId. Marks the cart as deleted for privacy and audit, not physical removal. Requires ownership or admin privilege. Preserves entity for recovery/legal compliance, following right-to-be-forgotten and audit protocols.","path":"/aiCommerce/buyer/carts/{cartId}","method":"delete","summary":"Soft-delete (logical removal) of a shopping cart (ai_commerce_carts) by ID, preserving for audit/compliance.","description":"This operation marks a shopping cart as deleted (ai_commerce_carts), performing a soft delete by setting the deleted_at timestamp without physically erasing the row from the database. Only the cart's owner (buyer) or a platform admin may initiate this removal. \n\nThe logical deletion preserves the cart for possible recovery, platform analytics, and legal evidence retention per privacy law. All delete operations are entered into the audit log with actor and before/after state snapshots. If a cart is referenced by orders, merges, or other entities, deletion is allowed only if business integrity is unaffected. Errors result for unauthorized or invalid delete actions.","parameters":[{"name":"cartId","description":"UUID of the shopping cart to delete (soft-delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"Advanced query for listing all items in a specified shopping cart. Loads details on each item (product, variant, quantity, price, status), with pagination/filtering for large carts. Operates on ai_commerce_cart_items, constrained by cartId. Enforces owner viewing rights and supports analytics, bulk update, and checkout flows.","path":"/aiCommerce/buyer/carts/{cartId}/items","method":"patch","summary":"Retrieve a paginated, filterable list of cart items (ai_commerce_cart_items) from a specific cart.","description":"This operation lists or searches the set of items present in the specified shopping cart (specified by cartId, referencing ai_commerce_cart_items for that cart). Returns paginated detail including item product/variant associations, selected options, quantity, price snapshot, and status. \n\nUseful for client UIs, analytics, pre-checkout validation, or cart content auditing. Query filters (by product, variant, status) and pagination controls support performance for carts with large item counts. Buyers see only their own cart's contents; admins may use for diagnostics. Errors are returned for ownership mismatch or invalid cart reference.","parameters":[{"name":"cartId","description":"UUID of the cart whose items you want to list.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query parameters and filters for cart item search or paging.","typeName":"IAiCommerceCartItem.IRequest"},"responseBody":{"description":"Paginated list of cart items for the target cart.","typeName":"IPageIAiCommerceCartItem.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"Retrieve details for a single item in a shopping cart, by cartId and cartItemId. Loads all product/variant, selected options, quantity and price. Operates on ai_commerce_cart_items and relations, enforcing ownership and cart visibility. Used for item inspection, update preview, or checkout calculations.","path":"/aiCommerce/buyer/carts/{cartId}/items/{cartItemId}","method":"get","summary":"Get a single cart item detail (ai_commerce_cart_items) by cartId/itemId.","description":"Returns a detailed record for one cart item, by cartId and cartItemId. Includes product/variant data, selected options, pricing at time of addition, quantity, and audit timestamps. Owner (buyer) or admin can fetch their own cart's item. Use for rendering cart item inspection screens or preparing for item update/deletion.\n\nAccess is limited to the cart owner (buyer) or admins. Error cases include invalid IDs, mismatched cart ownership, or unauthorized access. The operation loads all relevant relations, so clients need not fetch product separately.","parameters":[{"name":"cartId","description":"UUID of the cart which owns the item.","schema":{"type":"string","format":"uuid"}},{"name":"cartItemId","description":"UUID of the cart item to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested cart item including product and options.","typeName":"IAiCommerceCartItem"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"Add a new item to a shopping cart by cartId, specifying product and options. Appends the item to ai_commerce_cart_items, updates cart totals and status, and performs inventory/pricing validation. Handles business logic for duplicates, merged quantities, and session integrity. Requires item option/variant, quantity, and snapshot of price.","path":"/aiCommerce/buyer/carts/{cartId}/items","method":"post","summary":"Add a new item (ai_commerce_cart_items) to a shopping cart by cartId (ai_commerce_carts).","description":"Creates a new cart item in ai_commerce_cart_items for a specified cart (by cartId). Request specifies product/variant, quantity, and option selections if applicable. The operation validates product existence, inventory, cart status (must be open), and merges with existing item if same product/variant/options already present, incrementing quantity up to limits. \n\nTriggers cart-level recalculation for total quantity and status, returns the newly created/merged cart item as confirmation. Only the cart's owner (buyer) or admin can add items. Audit trails, error scenarios (insufficient inventory/invalid product) handled as per business logic.","parameters":[{"name":"cartId","description":"UUID of the cart to add the item to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the item to add to the cart, including product/variant reference, options, and quantity.","typeName":"IAiCommerceCartItem.ICreate"},"responseBody":{"description":"The newly added (or updated/incremented) cart item data.","typeName":"IAiCommerceCartItem"},"authorizationType":null,"authorizationRole":"buyer","name":"create"},{"specification":"This operation updates an individual item in a shopping cart, allowing buyers to modify product variants and quantity for a cart item. It applies to the ai_commerce_cart_items table, using the buyer role for authenticated users. Input validation covers product/variant reference, inventory checks, and correct status. Path and body strictly follow the schema specification.","description":"Buyers can update a specific cart item by providing both the parent cart ID and the cart item ID as path parameters. Modifiable fields generally include variant (if applicable) and quantity. Validation ensures the cart and item are active, ownership is correct, and that the new product/variant/quantity are allowed and available. Errors result if the references are invalid, the item is no longer editable (e.g., already checked out/deleted), or the buyer does not have ownership. The operation produces a fully updated cart item on success. All business and audit rules are respected.","summary":"Update a specific shopping cart item (ai_commerce_cart_items) for a buyer.","parameters":[{"name":"cartId","description":"Unique ID of the parent shopping cart to which the item belongs.","schema":{"type":"string","format":"uuid"}},{"name":"cartItemId","description":"Unique ID of the cart item to update within the cart.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload containing fields to update in the cart item, such as variant ID and quantity.","typeName":"IAiCommerceCartItem.IUpdate"},"responseBody":{"description":"Details of the updated cart item after successful modification.","typeName":"IAiCommerceCartItem"},"authorizationType":null,"authorizationRole":"buyer","name":"update","path":"/aiCommerce/buyer/carts/{cartId}/items/{cartItemId}","method":"put"},{"specification":"This operation logically (soft) deletes a specific cart item in ai_commerce_cart_items for a given shopping cart. Restricted to the authenticated buyer (role: buyer), it marks the item as deleted for audit/compliance. Path and access strictly follow the schema.","description":"Buyers can remove an item from their shopping cart by specifying both cart ID and cart item ID. The operation marks the item as deleted, does not physically remove it (supports audit traceability/compliance), and only succeeds if the cart/item are valid and actively owned by the buyer. Errors and denials occur for invalid references, unauthorized access, or business-rule violations such as trying to delete already checked out items. Maintains audit logs as required.","summary":"Remove (soft delete) a cart item from a shopping cart (ai_commerce_cart_items).","parameters":[{"name":"cartId","description":"Unique ID of the shopping cart.","schema":{"type":"string","format":"uuid"}},{"name":"cartItemId","description":"Unique ID of the cart item to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase","path":"/aiCommerce/buyer/carts/{cartId}/items/{cartItemId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated, and optionally sorted list of all item option selections (ai_commerce_cart_item_options) for a buyer's cart. Role: buyer. It enables buyers to browse or search all their current option selections for further item editing or order review.","description":"Given a cart ID, an authenticated buyer can fetch a paginated/searchable list of item option selections. Filtering and sorting logic are supplied in a request body object per schema (IAiCommerceCartItemOption.IRequest). Enforces buyer ownership, cart status, and security. The endpoint uses ai_commerce_cart_item_options for the result, with audit-compliant business logic. Proper path parameters, types, and role assignment ensure schema conformance.","summary":"Search and list cart item options (ai_commerce_cart_item_options) for a specific cart.","parameters":[{"name":"cartId","description":"Identifier of the shopping cart to retrieve item options from.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for listing cart item options.","typeName":"IAiCommerceCartItemOption.IRequest"},"responseBody":{"description":"Paginated list of cart item options matching the search criteria.","typeName":"IPageIAiCommerceCartItemOption"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/carts/{cartId}/itemOptions","method":"patch"},{"specification":"This operation retrieves details for a single cart item option row for a buyer (by cartId and itemOptionId). It supports review, editing, or further item operations. It applies strict buyer-role access.","description":"A buyer can look up details for a specific item option in their cart by providing both the parent cartId and optionId. The handler validates cart existence, option presence, and buyer ownership. Returns full option data if found and accessible. Denies or errors if the references are invalid, item is deleted, or the buyer is unauthorized. All structure, access, and output types match schema requirements.","summary":"Get details for a specific cart item option (ai_commerce_cart_item_options) by ID.","parameters":[{"name":"cartId","description":"Identifier of the shopping cart containing the option.","schema":{"type":"string","format":"uuid"}},{"name":"itemOptionId","description":"Identifier of the specific cart item option to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested cart item option.","typeName":"IAiCommerceCartItemOption"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/carts/{cartId}/itemOptions/{itemOptionId}","method":"get"},{"specification":"This operation creates a new cart item option selection for a buyer, writing to ai_commerce_cart_item_options for the target cart. It validates that the cart is valid, owned, and that the option parameters are allowed for the product or variant. Strictly assigned to the buyer role.","description":"Buyers can add a new cart item option (e.g., size/color) by posting to their cart's itemOptions subroute. The body (IAiCommerceCartItemOption.ICreate) provides option details (option name, value, associated cartItem, etc.). Security: only the cart owner may use this, and product/option validations are enforced. Errors for unauthorized access, invalid options, or business-rule conflicts. On success, returns the newly created option object as defined in schema.","summary":"Add a new cart item option (ai_commerce_cart_item_options) for a specific cart.","parameters":[{"name":"cartId","description":"Identifier of the shopping cart to which the option is being added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information about the cart item option to be created (option name/value, associated cart item, etc.).","typeName":"IAiCommerceCartItemOption.ICreate"},"responseBody":{"description":"Details of the newly created cart item option.","typeName":"IAiCommerceCartItemOption"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/carts/{cartId}/itemOptions","method":"post"},{"specification":"This endpoint allows buyers to update a cart item option row (ai_commerce_cart_item_options) by its optionId, ensuring new data is valid for the item/product and buyer owns the cart. It validates presence, access, and business logic, and is strictly assigned to buyers.","description":"Buyers may update a specific cart item option, such as changing value or name (e.g., from 'Red' to 'Blue' for color, or updating size). Requires both cartId and optionId as path params, verifies identities, and enforces buyer-only access. Only allowed option names/values (per item/product) are accepted. Output is the fully updated item option record, all structure/statistics per schema.","summary":"Update a cart item option (ai_commerce_cart_item_options) in a specific cart.","parameters":[{"name":"cartId","description":"Identifier of the cart containing the option.","schema":{"type":"string","format":"uuid"}},{"name":"itemOptionId","description":"Identifier of the cart item option to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the cart item option (option name, value, etc.).","typeName":"IAiCommerceCartItemOption.IUpdate"},"responseBody":{"description":"Details of the updated cart item option.","typeName":"IAiCommerceCartItemOption"},"authorizationType":null,"authorizationRole":"buyer","name":"update","path":"/aiCommerce/buyer/carts/{cartId}/itemOptions/{itemOptionId}","method":"put"},{"specification":"Buyers can remove (soft delete) a cart item option row from their cart by specifying both cartId and itemOptionId. Uses ai_commerce_cart_item_options and enforces strict buyer security. Soft deletion marks the row for audit/logs, not physical removal.","description":"Buyers may delete a previously chosen cart item option by providing the cartId and itemOptionId. The item is soft-deleted for compliance/audit (preserved, not erased). Must be a valid cart/option and owned by the buyer. Deny if ID invalid, ownership not present, or already deleted/checked out. Confirms deletion by status (no body).","summary":"Remove (soft delete) a cart item option (ai_commerce_cart_item_options) from a cart.","parameters":[{"name":"cartId","description":"ID of the shopping cart containing the option.","schema":{"type":"string","format":"uuid"}},{"name":"itemOptionId","description":"ID of the cart item option to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase","path":"/aiCommerce/buyer/carts/{cartId}/itemOptions/{itemOptionId}","method":"delete"},{"specification":"Buyers can search, paginate, and manage their cart session records (ai_commerce_cart_sessions) via this endpoint. Submission requires a request body per IAiCommerceCartSession.IRequest for filtering, and returns a paginated session list per schema. Buyer role enforced strictly.","description":"Authenticated buyers can list/search all their cart sessions (including history, active, or expired) for cross-device or session analysis. The request body (IAiCommerceCartSession.IRequest) controls query/filtering/pagination. Security protocols ensure only the authenticated buyer sees their own data. Business rules/compliance follow schema; the response is a paginated list of IAiCommerceCartSession records.","summary":"Search and list cart session entities (ai_commerce_cart_sessions) for a user.","parameters":[],"requestBody":{"description":"Search and pagination parameters for filtering cart sessions.","typeName":"IAiCommerceCartSession.IRequest"},"responseBody":{"description":"Paginated list of matching cart session records.","typeName":"IPageIAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/cartSessions","method":"patch"},{"specification":"Retrieve detailed information for a specific cart session by its unique identifier from ai_commerce_cart_sessions. Provides properties such as buyer association, cart linkage, session token, status, expiration, and relevant timestamps. This endpoint is used for reviewing session activity, auditing, and cart recovery workflows. Buyers may only access their sessions; administrators can audit all, with sensitive session data withheld based on role.","path":"/aiCommerce/buyer/cartSessions/{cartSessionId}","method":"get","summary":"Get cart session details by cartSessionId from ai_commerce_cart_sessions.","description":"This endpoint retrieves a cart session record from ai_commerce_cart_sessions, as identified by cartSessionId in the path parameter.\n\nPurpose: Enables buyers or administrators to review session state, which is vital for validating device merges, troubleshooting persistent carts, detecting guest-to-member transitions, and supporting compliance audits.\n\nBuyers may only see their sessions. Admins may view all for audit/troubleshooting. Sensitive attributes (e.g., session token) only returned when suitably authenticated.\n\nReturns all session properties (including references) as present in the schema. If the record doesn't exist or access is unauthorized, a standard error is returned.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to retrieve, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Cart session record with buyer association, cart linkage, token, status, expiration, and timestamps.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"Retrieve detailed information for a specific cart session by its unique identifier from ai_commerce_cart_sessions. Provides properties such as buyer association, cart linkage, session token, status, expiration, and relevant timestamps. This endpoint is used for reviewing session activity, auditing, and cart recovery workflows. Buyers may only access their sessions; administrators can audit all, with sensitive session data withheld based on role.","path":"/aiCommerce/admin/cartSessions/{cartSessionId}","method":"get","summary":"Get cart session details by cartSessionId from ai_commerce_cart_sessions.","description":"This endpoint retrieves a cart session record from ai_commerce_cart_sessions, as identified by cartSessionId in the path parameter.\n\nPurpose: Enables buyers or administrators to review session state, which is vital for validating device merges, troubleshooting persistent carts, detecting guest-to-member transitions, and supporting compliance audits.\n\nBuyers may only see their sessions. Admins may view all for audit/troubleshooting. Sensitive attributes (e.g., session token) only returned when suitably authenticated.\n\nReturns all session properties (including references) as present in the schema. If the record doesn't exist or access is unauthorized, a standard error is returned.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to retrieve, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Cart session record with buyer association, cart linkage, token, status, expiration, and timestamps.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"Create a new cart session for a logged-in buyer or anonymous session (guest). This writes a row to ai_commerce_cart_sessions, specifying the buyer (if any), cart reference, session token, status, expiration, and timestamps. Uniqueness for session_token and cart_id is enforced. Used for guest cart initialization, persistent buyer carts, and cart recovery flows. Sellers and admins should not use this endpoint for their non-buyer accounts.","path":"/aiCommerce/buyer/cartSessions","method":"post","summary":"Create a new cart session in ai_commerce_cart_sessions.","description":"Creates and persists a new cart session, tied to either an authenticated buyer or as an anonymous/guest session. Populates ai_commerce_cart_sessions with unique session token and links to the relevant cart. Ensures session_token and cart_id adhere to uniqueness constraints. Buyers can create sessions for their own cart; admins may perform this for testing or recovery.\n\nRequest provides required associations and configuration; response returns persisted entity. Seller/admin non-buyer accounts should not use this endpoint.","parameters":[],"requestBody":{"description":"Creation fields for new cart session: buyer (optional), cart reference, session token, status, expiration, timestamps.","typeName":"IAiCommerceCartSession.ICreate"},"responseBody":{"description":"Persisted cart session record, with unique identifiers and timestamps.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"buyer","name":"create"},{"specification":"Create a new cart session for a logged-in buyer or anonymous session (guest). This writes a row to ai_commerce_cart_sessions, specifying the buyer (if any), cart reference, session token, status, expiration, and timestamps. Uniqueness for session_token and cart_id is enforced. Used for guest cart initialization, persistent buyer carts, and cart recovery flows. Sellers and admins should not use this endpoint for their non-buyer accounts.","path":"/aiCommerce/admin/cartSessions","method":"post","summary":"Create a new cart session in ai_commerce_cart_sessions.","description":"Creates and persists a new cart session, tied to either an authenticated buyer or as an anonymous/guest session. Populates ai_commerce_cart_sessions with unique session token and links to the relevant cart. Ensures session_token and cart_id adhere to uniqueness constraints. Buyers can create sessions for their own cart; admins may perform this for testing or recovery.\n\nRequest provides required associations and configuration; response returns persisted entity. Seller/admin non-buyer accounts should not use this endpoint.","parameters":[],"requestBody":{"description":"Creation fields for new cart session: buyer (optional), cart reference, session token, status, expiration, timestamps.","typeName":"IAiCommerceCartSession.ICreate"},"responseBody":{"description":"Persisted cart session record, with unique identifiers and timestamps.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"Update an existing cart session in ai_commerce_cart_sessions by its cartSessionId. Enables updates to expiration, associated cart, status, or session token. Permissible only for owning buyer or administrator. Enforces business logic for integrity and valid status transitions.","path":"/aiCommerce/buyer/cartSessions/{cartSessionId}","method":"put","summary":"Update an existing cart session in ai_commerce_cart_sessions by cartSessionId.","description":"Updates session fields (expiration, status, cart link, session token) for session identified by cartSessionId. Only the buyer who owns the session or an administrator may update. Updates must adhere to business rules and not permit unauthorized user cross-session updates. All updates are audited.\n\nReturns updated session object on success. Validates all incoming field updates and returns error if the request is invalid or not allowed.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to update, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating cart session: supports partial or full update. Follows IAiCommerceCartSession.IUpdate schema.","typeName":"IAiCommerceCartSession.IUpdate"},"responseBody":{"description":"Updated cart session record after modification.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"buyer","name":"update"},{"specification":"Update an existing cart session in ai_commerce_cart_sessions by its cartSessionId. Enables updates to expiration, associated cart, status, or session token. Permissible only for owning buyer or administrator. Enforces business logic for integrity and valid status transitions.","path":"/aiCommerce/admin/cartSessions/{cartSessionId}","method":"put","summary":"Update an existing cart session in ai_commerce_cart_sessions by cartSessionId.","description":"Updates session fields (expiration, status, cart link, session token) for session identified by cartSessionId. Only the buyer who owns the session or an administrator may update. Updates must adhere to business rules and not permit unauthorized user cross-session updates. All updates are audited.\n\nReturns updated session object on success. Validates all incoming field updates and returns error if the request is invalid or not allowed.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to update, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating cart session: supports partial or full update. Follows IAiCommerceCartSession.IUpdate schema.","typeName":"IAiCommerceCartSession.IUpdate"},"responseBody":{"description":"Updated cart session record after modification.","typeName":"IAiCommerceCartSession"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"Soft delete (erase) a cart session by its unique identifier in ai_commerce_cart_sessions. Sets the deleted_at timestamp; record is retained for compliance/audit. Only the session owner (buyer) or an administrator may delete.","path":"/aiCommerce/buyer/cartSessions/{cartSessionId}","method":"delete","summary":"Soft delete (erase) a cart session by cartSessionId from ai_commerce_cart_sessions.","description":"Marks a cart session as deleted by populating deleted_at, so the session persists for logs/audit/compliance. Only the owning buyer or admin may trigger this. Used on logout, account deletion, and privacy workflows. Attempting to erase unauthorized sessions is denied.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to erase (soft delete), as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"Soft delete (erase) a cart session by its unique identifier in ai_commerce_cart_sessions. Sets the deleted_at timestamp; record is retained for compliance/audit. Only the session owner (buyer) or an administrator may delete.","path":"/aiCommerce/admin/cartSessions/{cartSessionId}","method":"delete","summary":"Soft delete (erase) a cart session by cartSessionId from ai_commerce_cart_sessions.","description":"Marks a cart session as deleted by populating deleted_at, so the session persists for logs/audit/compliance. Only the owning buyer or admin may trigger this. Used on logout, account deletion, and privacy workflows. Attempting to erase unauthorized sessions is denied.","parameters":[{"name":"cartSessionId","description":"Unique identifier for the cart session to erase (soft delete), as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"Returns a paginated, filtered list of cart templates from ai_commerce_cart_templates for the requesting seller or administrator. Sellers see only their templates; admins can view all system-wide. Templates can be filtered by creator, store, name, status, etc. Used for campaign, marketing, or quick checkout experiences.","path":"/aiCommerce/admin/cartTemplates","method":"patch","summary":"Search, filter, and paginate ai_commerce_cart_templates (cart templates).","description":"Searches, filters, and paginates cart templates using criteria like name, creator, store, and status from ai_commerce_cart_templates. Sellers only see their own; admins have global audit access. Supports partial matches and sort order. Pagination metadata in response. Intended for template management, campaign support, or troubleshooting rollouts.","parameters":[],"requestBody":{"description":"Request body with filters/pagination for searching cart templates, per IAiCommerceCartTemplate.IRequest.","typeName":"IAiCommerceCartTemplate.IRequest"},"responseBody":{"description":"Paginated result: summary list of cart templates and pagination state information.","typeName":"IPageIAiCommerceCartTemplate.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"Returns a paginated, filtered list of cart templates from ai_commerce_cart_templates for the requesting seller or administrator. Sellers see only their templates; admins can view all system-wide. Templates can be filtered by creator, store, name, status, etc. Used for campaign, marketing, or quick checkout experiences.","path":"/aiCommerce/seller/cartTemplates","method":"patch","summary":"Search, filter, and paginate ai_commerce_cart_templates (cart templates).","description":"Searches, filters, and paginates cart templates using criteria like name, creator, store, and status from ai_commerce_cart_templates. Sellers only see their own; admins have global audit access. Supports partial matches and sort order. Pagination metadata in response. Intended for template management, campaign support, or troubleshooting rollouts.","parameters":[],"requestBody":{"description":"Request body with filters/pagination for searching cart templates, per IAiCommerceCartTemplate.IRequest.","typeName":"IAiCommerceCartTemplate.IRequest"},"responseBody":{"description":"Paginated result: summary list of cart templates and pagination state information.","typeName":"IPageIAiCommerceCartTemplate.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"Get full cart template details by cartTemplateId from ai_commerce_cart_templates. Only available to administrative users or the seller who owns the template. Used to review/edit template before deployment.","path":"/aiCommerce/admin/cartTemplates/{cartTemplateId}","method":"get","summary":"Get detailed cart template by cartTemplateId from ai_commerce_cart_templates.","description":"Returns all properties of the ai_commerce_cart_templates row for the cartTemplateId. If a seller, they must own the template; admins can retrieve any. Used for review, configuration, edit flows. Returns error on not-found or unauthorized access.","parameters":[{"name":"cartTemplateId","description":"Unique identifier of the cart template to fetch, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed cart template object as persisted in ai_commerce_cart_templates.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"Get full cart template details by cartTemplateId from ai_commerce_cart_templates. Only available to administrative users or the seller who owns the template. Used to review/edit template before deployment.","path":"/aiCommerce/seller/cartTemplates/{cartTemplateId}","method":"get","summary":"Get detailed cart template by cartTemplateId from ai_commerce_cart_templates.","description":"Returns all properties of the ai_commerce_cart_templates row for the cartTemplateId. If a seller, they must own the template; admins can retrieve any. Used for review, configuration, edit flows. Returns error on not-found or unauthorized access.","parameters":[{"name":"cartTemplateId","description":"Unique identifier of the cart template to fetch, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed cart template object as persisted in ai_commerce_cart_templates.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"Create a new cart template by POST to ai_commerce_cart_templates. Available to sellers or admins. Requires unique template name, owner, optional store reference, configuration, and metadata fields. Audited for all changes; ownership and naming checked per role constraints.","path":"/aiCommerce/admin/cartTemplates","method":"post","summary":"Create a new cart template in ai_commerce_cart_templates.","description":"Registers a new cart template for a seller or administrator in ai_commerce_cart_templates. All fields validated for requiredness, uniqueness, and role constraints. Buyers may not use this endpoint. Success returns the complete new template as created.","parameters":[],"requestBody":{"description":"Request body for cart template creation (IAiCommerceCartTemplate.ICreate), defining all template and association fields.","typeName":"IAiCommerceCartTemplate.ICreate"},"responseBody":{"description":"Detailed persisted cart template, containing all assigned identifiers and configuration.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"Create a new cart template by POST to ai_commerce_cart_templates. Available to sellers or admins. Requires unique template name, owner, optional store reference, configuration, and metadata fields. Audited for all changes; ownership and naming checked per role constraints.","path":"/aiCommerce/seller/cartTemplates","method":"post","summary":"Create a new cart template in ai_commerce_cart_templates.","description":"Registers a new cart template for a seller or administrator in ai_commerce_cart_templates. All fields validated for requiredness, uniqueness, and role constraints. Buyers may not use this endpoint. Success returns the complete new template as created.","parameters":[],"requestBody":{"description":"Request body for cart template creation (IAiCommerceCartTemplate.ICreate), defining all template and association fields.","typeName":"IAiCommerceCartTemplate.ICreate"},"responseBody":{"description":"Detailed persisted cart template, containing all assigned identifiers and configuration.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"seller","name":"create"},{"specification":"Update an existing cart template from ai_commerce_cart_templates by its unique identifier. Only callable by the owning seller or administrative user. Permits update of name, description, configuration, store, or active status. Audit and compliance rules enforced.","path":"/aiCommerce/admin/cartTemplates/{cartTemplateId}","method":"put","summary":"Update properties of an existing cart template by cartTemplateId.","description":"Permits the updater (admin or owning seller) to change template properties (name, description, config, assignment, status) for an entity in ai_commerce_cart_templates. Handles audit, naming, uniqueness, and ownership per business rules. Denies requests lacking permission or validity.","parameters":[{"name":"cartTemplateId","description":"Unique identifier for cart template update, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the target template (IAiCommerceCartTemplate.IUpdate).","typeName":"IAiCommerceCartTemplate.IUpdate"},"responseBody":{"description":"The updated ai_commerce_cart_templates record with modifications applied.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"Update an existing cart template from ai_commerce_cart_templates by its unique identifier. Only callable by the owning seller or administrative user. Permits update of name, description, configuration, store, or active status. Audit and compliance rules enforced.","path":"/aiCommerce/seller/cartTemplates/{cartTemplateId}","method":"put","summary":"Update properties of an existing cart template by cartTemplateId.","description":"Permits the updater (admin or owning seller) to change template properties (name, description, config, assignment, status) for an entity in ai_commerce_cart_templates. Handles audit, naming, uniqueness, and ownership per business rules. Denies requests lacking permission or validity.","parameters":[{"name":"cartTemplateId","description":"Unique identifier for cart template update, as UUID.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the target template (IAiCommerceCartTemplate.IUpdate).","typeName":"IAiCommerceCartTemplate.IUpdate"},"responseBody":{"description":"The updated ai_commerce_cart_templates record with modifications applied.","typeName":"IAiCommerceCartTemplate"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation permanently deletes an existing cart template based on the specified cartTemplateId. It operates on the ai_commerce_cart_templates table in the Prisma schema, ensuring that only templates not in use can be deleted. The deletion process adheres to business rules for permission, audit, and data integrity.","description":"This operation enables administrators or sellers, depending on template ownership, to permanently delete a cart template identified by its unique cartTemplateId. The ai_commerce_cart_templates table in the Prisma schema manages reusable cart configurations for promotion, presets, or rapid purchase flows. \n\nDeletion is only permitted for templates not actively in use by ongoing campaigns or carts. The operation checks for dependencies prior to removal, and an audit trail is recorded detailing who performed the erase action, when, and for what reason. This operation is irreversible and must confirm that the template is not needed by other operations or schedules.\n\nError handling includes rejecting deletion requests for templates that are linked to active user carts, reporting a clear error code and message. Successful erase operations log the state of the template prior to removal for compliance and forensics. Only users with sufficient administrative or template ownership privileges are allowed to perform this action, in line with the permission model enforced by the backend's business logic.","summary":"Permanently delete a specific cart template from ai_commerce_cart_templates.","parameters":[{"name":"cartTemplateId","description":"Unique identifier of the cart template to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/cartTemplates/{cartTemplateId}","method":"delete"},{"specification":"This operation searches and retrieves a filtered, paginated list of cart merge records using advanced search, filtering, and sorting options for auditing, analytics, or troubleshooting. It accesses the ai_commerce_cart_merges table, respecting business constraints and audit logging.","description":"Retrieve a comprehensive list of cart merges based on complex filtering criteria such as merge type, actor, reason, and timestamp range. The ai_commerce_cart_merges table provides a historical record of all cart merge events, including guest-to-member, device switch, and administrative merges. \n\nThis operation aids administrators and support roles in tracking user sessions, detecting recovery flows, understanding anonymized user behavior, or forensic investigation. The request body supports structured query parameters including actor ID, date ranges, merge reasons, and ordering, and supports standard pagination controls.\n\nSecurity controls ensure that only users with proper auditing or support privileges can access cart merge histories with full context. Error handling returns appropriate codes if filter parameters are invalid. Only records matching the search criteria are returned, and access to PII data within merge records is masked for compliance.","summary":"Search, filter, and retrieve paginated cart merge records from ai_commerce_cart_merges.","parameters":[],"requestBody":{"description":"Request parameters for searching and paginating cart merge records. Includes filters such as actor ID, reason, timestamp range, and sort options.","typeName":"IAiCommerceCartMerge.IRequest"},"responseBody":{"description":"Paginated list of cart merge summary records matching the query.","typeName":"IPageIAiCommerceCartMerge.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/cartMerges","method":"patch"},{"specification":"This operation retrieves detailed information for a single cart merge record specified by cartMergeId. It accesses the ai_commerce_cart_merges table for audit, debugging, or analytics.","description":"Fetch full details about a single cart merge event using its unique cartMergeId. The ai_commerce_cart_merges table logs each cart merge for audit, user support, or session recovery analysis. The returned data includes the source and target cart IDs, actor, reason, and merge timestamp.\n\nThis operation is essential for forensic troubleshooting, understanding merge outcomes, or reconstructing user sessions in compliance or support incidents. Strict authorization ensures only users with administrative or support rights can access this level of detail. If the cart merge record does not exist, the operation returns a clear not-found error.\n\nPersonal data is masked as required by privacy policy, and all access attempts are logged for compliance monitoring.","summary":"Retrieve detailed information about a specific cart merge using cartMergeId.","parameters":[{"name":"cartMergeId","description":"Unique identifier of the cart merge record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the targeted cart merge record.","typeName":"IAiCommerceCartMerge"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/cartMerges/{cartMergeId}","method":"get"},{"specification":"This operation creates a new cart merge record in the ai_commerce_cart_merges table. It is primarily for internal, administrative, or recovery purposes and collects data including source/target carts, actor, and merge reason.","description":"Create a new cart merge entry by specifying the involved source cart, target cart, merging actor (if known), and merge reason. The ai_commerce_cart_merges table captures all individual merge events for persistent audit, analytics, and session troubleshooting. \n\nCreation is typically initiated by background logic during user login, device switch, or administrative actions requiring consolidation of cart contents. The request body includes all necessary fields, with business logic enforcing that merge events are valid and do not conflict with active cart sessions. The resulting record is returned in full for confirmation and audit registration.\n\nErrors during creation (such as invalid cart relationships or actor IDs) are reported with actionable error codes. All operations are strictly logged for compliance, and only users with sufficient administrative authority are allowed to perform manual merges using this operation.","summary":"Create a new cart merge record linking source and target carts by business logic.","parameters":[],"requestBody":{"description":"Creation information specifying source/target cart IDs, actor (if any), reason, and relevant details for the cart merge event.","typeName":"IAiCommerceCartMerge.ICreate"},"responseBody":{"description":"Full details of the newly created cart merge record.","typeName":"IAiCommerceCartMerge"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/cartMerges","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates a specific cart merge record in the ai_commerce_cart_merges table by cartMergeId. Updates are constrained to mutable/annotatable properties like business notes or tags; historical audit fields are immutable.","description":"Modify an existing cart merge record by cartMergeId, allowing updates to annotatable or business-related fields that do not compromise historical integrity. Cart merge records are intended to be immutable for audit core fields such as actors, carts, and merge reason; only supplemental information (for example, investigation result, internal notes, or tagging) is allowed to be updated.\n\nThe API validates that only updatable fields are included in the request, and all changes are logged with before/after snapshots. This operation supports internal compliance, data curation, or administrative error correction scenarios. Mutation attempts against immutable core merge fields are rejected with explicit errors, maintaining audit reliability and compliance.\n\nAccess is limited to administrators or authorized support users, and all updates are included in the audit log trail for forensics and regulatory purposes.","summary":"Update limited annotatable fields of a cart merge record.","parameters":[{"name":"cartMergeId","description":"Unique identifier of the cart merge record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable/annotatable fields for the given cart merge record (e.g., business notes, investigation flags).","typeName":"IAiCommerceCartMerge.IUpdate"},"responseBody":{"description":"Updated representation of the targeted cart merge record.","typeName":"IAiCommerceCartMerge"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/cartMerges/{cartMergeId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes a cart merge record identified by cartMergeId from ai_commerce_cart_merges. This is a sensitive audit operation; deletion should be rare and only for data rectification with proper compliance justification.","description":"Permanently remove an existing cart merge record using cartMergeId. The ai_commerce_cart_merges table stores historical references for all cart merge events; as such, deletion is generally restricted for only data rectification, error correction, or regulatory obligations. \n\nAll erase operations are strictly permissioned, require administrative privileges, and are subject to compliance pre-conditions (such as evidentiary record retention and justification). An audit log entry is generated for every deletion. Core business and compliance policies discourage or prohibit deletions unless explicitly authorized. No recoverable soft-delete is provided; the operation irreversibly removes the record on success, after verifying all required preconditions.","summary":"Permanently erase a cart merge record (admin compliance only).","parameters":[{"name":"cartMergeId","description":"Unique identifier of the cart merge record to permanently erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/cartMerges/{cartMergeId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves and searches a paginated list of cart expiration records from ai_commerce_cart_expirations, supporting time window, event type, and actor-based filtering. Applicable for operational audit, support, or analytics cases.","description":"Retrieve a filtered and paginated collection of cart expiration and recovery records. This operation interfaces with ai_commerce_cart_expirations to support business insights, troubleshooting, and compliance reporting. \n\nFilters include expiration type (expiration, recovery, retry, auto_reopen), cart ID, actor ID, and date/time range. All outputs are structured in a paginated format and conform to system audit policies. Authorization is required for access to privacy-sensitive fields, and only users with audit or support privileges are permitted to use this endpoint.\n\nSearches with invalid input parameters, or requests exceeding result size limits, are properly rejected with errors conforming to platform policies. All relevant queries and results are logged for compliance and evidence purposes.","summary":"Search and retrieve paginated cart expiration/recovery event records.","parameters":[],"requestBody":{"description":"Request parameters for filtered search and pagination of cart expiration records, supporting event type, cart ID, actor ID, and temporal window.","typeName":"IAiCommerceCartExpiration.IRequest"},"responseBody":{"description":"Paginated list of cart expiration or recovery event records in summary format.","typeName":"IPageIAiCommerceCartExpiration.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/cartExpirations","method":"patch"},{"specification":"This operation retrieves full details of a single cart expiration or recovery record using cartExpirationId. It operates over the ai_commerce_cart_expirations table for audits, compliance, or operational support.","description":"Fetch detailed information for a specific cart expiration or recovery event by cartExpirationId. The ai_commerce_cart_expirations table holds append-only audit records for expiration logic enforcement, user support, and compliance.\n\nRole-based permissions restrict this operation to audit or administrative users. The returned data includes the event type, cart ID, actor (if any), business reason, and a timestamp. If no record is found, a descriptive not-found error is returned. All access attempts are audit-logged for later review.\n\nOutput fields will mask or redact sensitive details as necessary for compliance or data privacy regulation, and underlying storage of audit/log data ensures data integrity and non-repudiation.","summary":"Retrieve detailed information about a specific cart expiration/recovery event.","parameters":[{"name":"cartExpirationId","description":"Unique identifier of the cart expiration or recovery event record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested cart expiration or recovery record.","typeName":"IAiCommerceCartExpiration"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/cartExpirations/{cartExpirationId}","method":"get"},{"specification":"This operation retrieves a paginated list of orders with advanced filtering, searching, and sorting capabilities. It operates on the ai_commerce_orders table from the Prisma schema and supports complex queries to find orders based on various criteria including order code, buyer information, status, payment, amount, date range, and channel. It is essential for order management, analytics, compliance monitoring, and supporting multi-channel e-commerce workflows.","description":"Retrieve a filtered and paginated list of orders from the system. This operation provides advanced search capabilities to locate orders based on order code, status, buyer information, channel, payment status, amount, period, and other attributes as defined in the ai_commerce_orders table.\n\nComprehensive pagination is supported, enabling configurable page sizes and sorting by creation date, status, channel, or amount in either ascending or descending order. This endpoint is used by admins and authorized staff to monitor, audit, or act upon orders at every stage in their business lifecycle.\n\nSecurity considerations include strict role-based access controls to limit visibility and manipulation of order data to authorized personnel only, with all search and retrieval activities needing to be recorded for compliance and audit.\n\nThe operation works against the ai_commerce_orders schema and includes all available order fields and relations necessary for operational transparency and decision-making.","summary":"Advanced search and retrieval of a filtered, paginated list of orders (ai_commerce_orders)","parameters":[],"requestBody":{"description":"Search and filter criteria, pagination, and sorting parameters for retrieving orders.","typeName":"IAiCommerceOrder.IRequest"},"responseBody":{"description":"Paginated list of orders matching the search and filter criteria provided.","typeName":"IPageIAiCommerceOrder"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/orders","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detailed information on a single order by its unique identifier (orderId). This corresponds to the ai_commerce_orders table and expands on all references to buyer, channel, address snapshot, items, and transaction data. It is used for order tracking, process management, after-sales requests, or admin review.","description":"Get all detailed information about a specific order identified by an orderId. This operation is essential for order management and customer support, enabling in-depth inspection of the order's lifecycle, status, payment, delivery, and history.\n\nPermission to access this endpoint is restricted to admins or authorized staff, as the operation may expose sensitive buyer and transaction details. Proper logging and compliance monitoring are enforced for every request.\n\nReturned data is fully aligned with the ai_commerce_orders schema, populating all available relations, including items, status history, payments, refunds, fulfillments, and compliance audit entries for the specified order.","summary":"Get details on a single order (ai_commerce_orders) by orderId","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the specified order and all its relationships as defined in the schema.","typeName":"IAiCommerceOrder"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/orders/{orderId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new order record, corresponding to order placement at the end of the checkout flow. It targets ai_commerce_orders and enforces all required business logic: stock validation, payment status, address snapshotting, and multi-vendor split logic. The system will initiate all related sub-orders, items, payments, and audit trails per the requirements. Transactional, compliance, and data integrity rules are strictly applied.","description":"Create a new order with all provided details and line items. This operation is invoked at checkout, processing the purchase request, generating a global and channel order code, assigning items to sellers, and locking in price, currency, and address snapshot in ai_commerce_orders.\n\nIntegrated checks enforce business requirements, such as item and variant availability (inventory), compliance with purchase policy, payment amount calculation, and address/data snapshotting. After success, the operation returns the created order as per the defined schema, with all linked data.\n\nAdmin-level permissions are required, and the entire creation process is strictly audited. Error handling covers invalid cart, insufficient stock, expired address, or payment failure. This is the canonical endpoint for order placement and lifecycle initiation.","summary":"Place (create) a new order through checkout (ai_commerce_orders)","parameters":[],"requestBody":{"description":"Order creation request including buyer, channel, item detail, payment, and address snapshot references.","typeName":"IAiCommerceOrder.ICreate"},"responseBody":{"description":"The newly created order record including all relationships and generated order code.","typeName":"IAiCommerceOrder"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/orders","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates a specific order based on its orderId. It works with ai_commerce_orders to allow updating certain mutable fields, such as business status, address (in permitted stages), or workflow automation steps. It strictly enforces state transition and business validation rules to ensure order integrity. Permission is strictly limited to admins or workflow automations as per business rules. All changes are tracked in audit logs for full traceability.","description":"Update an existing order by its unique orderId, making permitted changes to address, business status, or workflow fields as allowed by the order status and the ai_commerce_orders schema. This endpoint is essential for compliance actions (e.g., after-sales acceptance, admin status change, address correction before fulfillment).\n\nThis endpoint is secured for admin use, with all transition validation performed according to the latest state of the order, and with a full audit trail. Integration with related tables ensures business logic is enforced across all referenced data (items, payments, fulfillment, snapshots). Rejected updates and error cases, such as addressing immutable fields after fulfillment or compliance violation, will provide actionable feedback for resolution.","summary":"Update an existing order (ai_commerce_orders) by orderId","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order update request (only allowed fields per status/logic)","typeName":"IAiCommerceOrder.IUpdate"},"responseBody":{"description":"The updated order entity with changed fields.","typeName":"IAiCommerceOrder"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/orders/{orderId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes a specific order record from ai_commerce_orders based on orderId. As per the schema, deleted_at provides soft deletion support. This operation marks the order as deleted by setting the deleted_at timestamp, preserving the record for audit, compliance, and legal evidence. Physical erasure is not performed to maintain audit trails.","description":"Mark an order as deleted in the system by setting the deleted_at field using the orderId, while retaining data for compliance, audit, and historical review. This is a soft delete operation as defined by the ai_commerce_orders schema, and it does not remove the order from storage but marks it as logically deleted.\n\nThis operation is permissioned for admin roles, with all deletion requests being recorded in compliance/audit logs, including reason, actor, and timing. The operation will return a confirmation upon successful soft deletion. Orders involved in payment, after-sales, or dispute flows cannot be physically removed but will be marked deleted for access/recovery workflows.","summary":"Soft-delete (mark deleted) an order (ai_commerce_orders) by orderId","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order to mark as deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/orders/{orderId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of purchase orders using advanced filtering, searching, and sorting. It operates on the ai_commerce_orders table and supports finding orders by buyer, status, date, and channel, with pagination and summary data for dashboards or user order history screens.","description":"Retrieve a filtered and paginated list of purchase orders from the aiCommerce system, supporting advanced search capabilities by order status, buyer, channel, and date. This operation provides both buyers and administrators the ability to locate orders based on a wide range of criteria, including but not limited to order codes, creation/update time, fulfillment states, price ranges, and specific buyer or channel linkage.\n\nPaging parameters ensure manageable result sets for large datasets, and sorting options are available for recency, order value, or delivery status in either direction. The response returns a list of order summaries with key details optimized for history or management screen display.\n\nSecurity considerations include restricting access to one's own orders for buyers and unrestricted access for admins, with all queries subject to rate limiting and audit logging for compliance. This operation is based on the ai_commerce_orders Prisma schema and returns summary information only – detailed views must use the 'at' operation.\n\nValidation ensures that all search parameters conform with business requirements; unsupported or malformed requests are rejected with actionable errors.","summary":"Retrieve a filtered, paginated list of purchase orders (ai_commerce_orders table)","parameters":[],"requestBody":{"description":"Advanced search and pagination parameters for order retrieval.","typeName":"IAiCommerceOrder.IRequest"},"responseBody":{"description":"Paginated list of purchase order summaries based on specified search and paging criteria.","typeName":"IPageIAiCommerceOrder.ISummary"},"authorizationRoles":["buyer"],"name":"index","path":"/aiCommerce/buyer/orders","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves the detailed information for a specific purchase order, as identified by its UUID. It operates on the ai_commerce_orders table and provides all attributes and relationships necessary for order review, including buyer, items, status, pricing, channel, and fulfillment details.","description":"Get full details of a specific purchase order by its unique orderId, including all relational data such as buyer, associated items, statuses, pricing, and fulfillment steps. This operation provides a complete view of the given order, necessary for display in detailed order screens, dispute management, audit, and after-sales support workflows. \n\nAuthorization is enforced: buyers may only access their own orders; admins have global access. All access attempts are logged for compliance, especially regarding sensitive fields (address snapshots, payment references, after-sales states).\n\nBased on the ai_commerce_orders Prisma schema, this operation validates the provided UUID, ensures the record exists and is accessible by the authenticated user. Malformed identifiers or unauthorized access are rejected with appropriate error messages. Returns the complete order object for downstream application needs.","summary":"Retrieve detailed information of a specific order (ai_commerce_orders table) by UUID","parameters":[{"name":"orderId","description":"The UUID of the target purchase order to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested order including all relational and child entities.","typeName":"IAiCommerceOrder"},"authorizationRoles":["buyer"],"name":"at","path":"/aiCommerce/buyer/orders/{orderId}","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation creates a new purchase order based on the current buyer's cart. It operates on the ai_commerce_orders table and triggers initial status, pricing lock, and address snapshotting as per business rules. Cart validation, inventory locking, and order line creation occur atomically within the workflow.","description":"Create a new purchase order for the buyer, using their current cart and supplied checkout information (address, payment, channel). This operation validates cart contents for availability, compliance, and pricing, then locks in the snapshot of products and prices for legal evidence and fulfillment. An address snapshot is stored to guarantee delivery integrity regardless of future updates. Fulfillment status is initialized as per the business workflow.\n\nBuyers must be authenticated to create orders; visitors are required to register first. Security is handled to ensure only legitimate, non-expired sessions can create orders. The creation request body is validated against the full requirements for initial order setup, and actionable errors are provided on failure, e.g., insufficient stock, pricing changes, or policy violations.\n\nUpon success, the complete order record is returned for confirmation, payment, and user tracking. This operation is based on ai_commerce_orders and related child schema tables.","summary":"Create a new purchase order from cart (ai_commerce_orders table)","parameters":[],"requestBody":{"description":"Complete checkout and order creation payload including cart reference, address, payment, and buyer info.","typeName":"IAiCommerceOrder.ICreate"},"responseBody":{"description":"The newly created order with all initial state and references locked for fulfillment.","typeName":"IAiCommerceOrder"},"authorizationRoles":["buyer"],"name":"create","path":"/aiCommerce/buyer/orders","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation updates an existing purchase order record, supporting address updates, payment changes, or business status escalation. Modifications are restricted to permitted status transitions per the order lifecycle logic and only accessible by the order's owner or an admin. Applies to the ai_commerce_orders table.","description":"Update fields on an existing order by its UUID, such as recipient address, payment method, scheduled delivery, or business status as permitted at the current status stage. All modifications are validated to ensure only allowed transitions (e.g., no edits after fulfillment, only allowed fields per order status).\n\nOnly the owner (buyer) or administrators can execute this operation. All updates are logged, and any field with legal or compliance impact is snapshotted prior to mutation. Unauthorized or improper update attempts return actionable errors depending on context (e.g., invalid transition, locked order, missing permissions).\n\nBased on field-level update logic in ai_commerce_orders; operation ensures strict business compliance and full audit trail.","summary":"Update permitted details of a specific order (ai_commerce_orders table) by UUID","parameters":[{"name":"orderId","description":"The UUID of the target order to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload containing allowed updates for the specified order according to its current lifecycle status.","typeName":"IAiCommerceOrder.IUpdate"},"responseBody":{"description":"Updated detailed order entity record post-modification.","typeName":"IAiCommerceOrder"},"authorizationRoles":["buyer"],"name":"update","path":"/aiCommerce/buyer/orders/{orderId}","method":"put","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation deletes an existing purchase order (soft delete), as identified by its unique UUID. Operates on the ai_commerce_orders table and marks the order as logically removed for privacy and retention, while preventing future business use. Actual deletion occurs only if permitted by business rules (e.g., unfulfilled, not paid).","description":"Permanently remove an order record identified by a UUID by marking its deleted_at timestamp, retaining the record for historical, audit, and compliance purposes. The order must not have settled payment, fulfilled shipping, or compliance holds; business logic validation will reject any attempt to erase orders that are not eligible.\n\nDeletion is restricted to the owner (buyer) or administrators, following the platform lifecycle management rules. All delete actions are snapshotted prior to marking as deleted. Unauthorized, invalid, or unsuccessful attempts are returned with clear error messages. The deletion process ensures that no business integrity is lost and compliance auditability is maintained at all times.\n\nBased on ai_commerce_orders schema, this operation upholds full data integrity, evidence policy, and regulatory conformance for archival.","summary":"Logically (soft) delete a specific order by UUID (ai_commerce_orders table)","parameters":[{"name":"orderId","description":"The UUID of the target order to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["buyer"],"name":"erase","path":"/aiCommerce/buyer/orders/{orderId}","method":"delete","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of order items associated with a specific order. It leverages the ai_commerce_order_items table related to the parent order in the ai_commerce_orders table as defined in the Prisma DB schema. The endpoint allows buyers to search, filter, and page through their order items using advanced criteria, and is primarily used for showing a breakdown of products within a single order in the buyer's order details page or admin support views.","description":"This API operation enables retrieval of a paginated list of order items under a specific order by its unique orderId. It supports advanced searching and filtering on fields such as product name, status, seller, and quantity. Access control applies based on the user's role and ownership: buyers may only access their own orders, admins may access any order items, and sellers are restricted to their own segments of a split order, depending on business implementation.\n\nThe underlying ai_commerce_order_items table captures each product or variant within an order, including associated product/variant references, seller information for multi-vendor use cases, item status, pricing at purchase, and related analytics. Pagination and filtering are supported by supplying a structured request body.\n\nBusiness rules enforce referential integrity to the parent order, return only items belonging to the specified orderId, and optionally restrict access based on account role (buyer, seller, admin). Error handling and validation ensure valid UUIDs and respect for row-level permissions and privacy rules.\n\nThis operation supports order item histories, analytics, after-sales eligibility, and is typically paired with GET /orders/{orderId}/items/{itemId} for details; buyers and sellers use this to track, manage, and resolve issues with specific order items.","summary":"Search and retrieve a paginated, filtered list of order items for a specific order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the order whose items are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order item retrieval.","typeName":"IAiCommerceOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order items for the specified order, filtered by the request criteria.","typeName":"IPageIAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/orders/{orderId}/items","method":"patch"},{"specification":"This operation retrieves a paginated and filtered list of order items associated with a specific order. It leverages the ai_commerce_order_items table related to the parent order in the ai_commerce_orders table as defined in the Prisma DB schema. The endpoint allows buyers to search, filter, and page through their order items using advanced criteria, and is primarily used for showing a breakdown of products within a single order in the buyer's order details page or admin support views.","description":"This API operation enables retrieval of a paginated list of order items under a specific order by its unique orderId. It supports advanced searching and filtering on fields such as product name, status, seller, and quantity. Access control applies based on the user's role and ownership: buyers may only access their own orders, admins may access any order items, and sellers are restricted to their own segments of a split order, depending on business implementation.\n\nThe underlying ai_commerce_order_items table captures each product or variant within an order, including associated product/variant references, seller information for multi-vendor use cases, item status, pricing at purchase, and related analytics. Pagination and filtering are supported by supplying a structured request body.\n\nBusiness rules enforce referential integrity to the parent order, return only items belonging to the specified orderId, and optionally restrict access based on account role (buyer, seller, admin). Error handling and validation ensure valid UUIDs and respect for row-level permissions and privacy rules.\n\nThis operation supports order item histories, analytics, after-sales eligibility, and is typically paired with GET /orders/{orderId}/items/{itemId} for details; buyers and sellers use this to track, manage, and resolve issues with specific order items.","summary":"Search and retrieve a paginated, filtered list of order items for a specific order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the order whose items are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order item retrieval.","typeName":"IAiCommerceOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order items for the specified order, filtered by the request criteria.","typeName":"IPageIAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/orders/{orderId}/items","method":"patch"},{"specification":"This operation retrieves a paginated and filtered list of order items associated with a specific order. It leverages the ai_commerce_order_items table related to the parent order in the ai_commerce_orders table as defined in the Prisma DB schema. The endpoint allows buyers to search, filter, and page through their order items using advanced criteria, and is primarily used for showing a breakdown of products within a single order in the buyer's order details page or admin support views.","description":"This API operation enables retrieval of a paginated list of order items under a specific order by its unique orderId. It supports advanced searching and filtering on fields such as product name, status, seller, and quantity. Access control applies based on the user's role and ownership: buyers may only access their own orders, admins may access any order items, and sellers are restricted to their own segments of a split order, depending on business implementation.\n\nThe underlying ai_commerce_order_items table captures each product or variant within an order, including associated product/variant references, seller information for multi-vendor use cases, item status, pricing at purchase, and related analytics. Pagination and filtering are supported by supplying a structured request body.\n\nBusiness rules enforce referential integrity to the parent order, return only items belonging to the specified orderId, and optionally restrict access based on account role (buyer, seller, admin). Error handling and validation ensure valid UUIDs and respect for row-level permissions and privacy rules.\n\nThis operation supports order item histories, analytics, after-sales eligibility, and is typically paired with GET /orders/{orderId}/items/{itemId} for details; buyers and sellers use this to track, manage, and resolve issues with specific order items.","summary":"Search and retrieve a paginated, filtered list of order items for a specific order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the order whose items are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order item retrieval.","typeName":"IAiCommerceOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order items for the specified order, filtered by the request criteria.","typeName":"IPageIAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/orders/{orderId}/items","method":"patch"},{"specification":"This operation retrieves the full details of a specific order item by itemId, within a given order identified by orderId. Both the orderId and itemId are required to ensure strict foreign key integrity and ownership verification. The underlying ai_commerce_order_items table includes detailed information on the product/variant, buyer, seller, quantities, fulfillment state, and pricing context.","description":"This API operation fetches a single order item's details, including quantities, pricing, seller information, variant/product references, fulfillment and delivery status, and linked after-sales eligibility. The operation enforces that only authorized users—buyers who own the parent order, relevant sellers tied to the ordered item, or platform admins—may access the record.\n\nThe ai_commerce_order_items table anchors the response, joined by foreign keys to product, variant, and seller details for context (not expanded inline unless specified in the response DTO). If either the orderId or itemId does not correspond to a valid order or item, or if the user lacks permission, the operation returns a not-found or unauthorized error.\n\nRelated APIs include PATCH /orders/{orderId}/items for item search and access, and PUT or DELETE for updates and removals. This endpoint is critical for after-sales processes, dispute resolution, and customer support.","summary":"Retrieve the full details of a specific order item within an order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the target order item.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified order item's full business detail and analytics record.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/orders/{orderId}/items/{itemId}","method":"get"},{"specification":"This operation retrieves the full details of a specific order item by itemId, within a given order identified by orderId. Both the orderId and itemId are required to ensure strict foreign key integrity and ownership verification. The underlying ai_commerce_order_items table includes detailed information on the product/variant, buyer, seller, quantities, fulfillment state, and pricing context.","description":"This API operation fetches a single order item's details, including quantities, pricing, seller information, variant/product references, fulfillment and delivery status, and linked after-sales eligibility. The operation enforces that only authorized users—buyers who own the parent order, relevant sellers tied to the ordered item, or platform admins—may access the record.\n\nThe ai_commerce_order_items table anchors the response, joined by foreign keys to product, variant, and seller details for context (not expanded inline unless specified in the response DTO). If either the orderId or itemId does not correspond to a valid order or item, or if the user lacks permission, the operation returns a not-found or unauthorized error.\n\nRelated APIs include PATCH /orders/{orderId}/items for item search and access, and PUT or DELETE for updates and removals. This endpoint is critical for after-sales processes, dispute resolution, and customer support.","summary":"Retrieve the full details of a specific order item within an order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the target order item.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified order item's full business detail and analytics record.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/orders/{orderId}/items/{itemId}","method":"get"},{"specification":"This operation retrieves the full details of a specific order item by itemId, within a given order identified by orderId. Both the orderId and itemId are required to ensure strict foreign key integrity and ownership verification. The underlying ai_commerce_order_items table includes detailed information on the product/variant, buyer, seller, quantities, fulfillment state, and pricing context.","description":"This API operation fetches a single order item's details, including quantities, pricing, seller information, variant/product references, fulfillment and delivery status, and linked after-sales eligibility. The operation enforces that only authorized users—buyers who own the parent order, relevant sellers tied to the ordered item, or platform admins—may access the record.\n\nThe ai_commerce_order_items table anchors the response, joined by foreign keys to product, variant, and seller details for context (not expanded inline unless specified in the response DTO). If either the orderId or itemId does not correspond to a valid order or item, or if the user lacks permission, the operation returns a not-found or unauthorized error.\n\nRelated APIs include PATCH /orders/{orderId}/items for item search and access, and PUT or DELETE for updates and removals. This endpoint is critical for after-sales processes, dispute resolution, and customer support.","summary":"Retrieve the full details of a specific order item within an order (ai_commerce_order_items).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the target order item.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified order item's full business detail and analytics record.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/orders/{orderId}/items/{itemId}","method":"get"},{"specification":"This operation creates a new order item for an existing order (by orderId), representing the purchase of a new product variant/option. The operation writes to the ai_commerce_order_items table, enforcing all required validations: parent order existence, product/variant/quantity/price input, business status rules, and permission checks. Typically used by internal system flows for order augmentation (e.g., admin~initiated edits or split shipments) rather than end-user flows, as customer-facing order item creation is generally managed via the main order creation endpoint.","description":"A new order item is added to a specified order, for example in admin-controlled or automated workflow use cases (such as order corrections, additional shipments, or post-processing within the fulfillment lifecycle). The request body supplies the necessary product/variant/quantity/pricing and seller information, following the IAiCommerceOrderItem.ICreate request structure. The ai_commerce_order_items table captures one record for each new item, always linked to a valid existing order and product variant.\n\nSecurity is paramount—orders can only have new items added if permitted by business status and role: typically admins or system automation only, never by buyers post-checkout. Validation covers proper UUIDs, sufficient inventory, valid pricing, and duplicate prevention for the same product/variant combination. Any failure in validation, such as referencing a completed or locked order, results in a rejection.\n\nRelated endpoints include PATCH /orders/{orderId}/items for index, and GET for item detail. This API exists for completeness within admin/operational flows, not for end-customer cart operations.","summary":"Create a new order item under a given order (ai_commerce_order_items) — admin/system/internal only.","parameters":[{"name":"orderId","description":"Unique identifier of the parent order to which the item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order item creation information: product/variant, quantities, pricing, and seller references.","typeName":"IAiCommerceOrderItem.ICreate"},"responseBody":{"description":"Created order item as recorded, including all computed fields and audit context.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/orders/{orderId}/items","method":"post"},{"specification":"This operation updates the fields of an existing order item (by itemId) within a specified order, supporting administrative correction or fulfillment updates. The operation acts on the ai_commerce_order_items table, allowing editing of fields such as delivery status, quantities, pricing adjustment (in edge cases), and after-sales references. Field level restrictions apply based on business logic and order lifecycle state; typically only admins or system flows may update items in completed or locked orders.","description":"Used to modify one or more fields (such as delivery status, quantity, price, or fulfillment details) of an existing order item. Enables administrative corrections, split-fulfillment adjustments, or edge-case after-sales actions. The operation requires the caller to provide both orderId and itemId as path parameters, and an IAiCommerceOrderItem.IUpdate request body specifying changes.\n\nBusiness rules limit which fields may be updated depending on the status of the parent order and the item itself (e.g., item cannot have quantities edited after delivery is marked complete). Edits are tracked in the audit/log subsystems. Only users with sufficient permissions—typically admin, or possibly seller for their own items in status-limited windows—can perform updates. All input is strictly validated for permission and referential integrity.\n\nShould the item or order not exist, or the update not be permitted by workflow state, validation errors are returned. Related endpoints include GET for item detail, PATCH for index, and DELETE for removals.","summary":"Update the fields of a specific order item (ai_commerce_order_items) — admin/seller only.","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the order item to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating the selected order item, according to business rules and audit requirements.","typeName":"IAiCommerceOrderItem.IUpdate"},"responseBody":{"description":"Updated order item as it is currently recorded, including full audit context.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/orders/{orderId}/items/{itemId}","method":"put"},{"specification":"This operation updates the fields of an existing order item (by itemId) within a specified order, supporting administrative correction or fulfillment updates. The operation acts on the ai_commerce_order_items table, allowing editing of fields such as delivery status, quantities, pricing adjustment (in edge cases), and after-sales references. Field level restrictions apply based on business logic and order lifecycle state; typically only admins or system flows may update items in completed or locked orders.","description":"Used to modify one or more fields (such as delivery status, quantity, price, or fulfillment details) of an existing order item. Enables administrative corrections, split-fulfillment adjustments, or edge-case after-sales actions. The operation requires the caller to provide both orderId and itemId as path parameters, and an IAiCommerceOrderItem.IUpdate request body specifying changes.\n\nBusiness rules limit which fields may be updated depending on the status of the parent order and the item itself (e.g., item cannot have quantities edited after delivery is marked complete). Edits are tracked in the audit/log subsystems. Only users with sufficient permissions—typically admin, or possibly seller for their own items in status-limited windows—can perform updates. All input is strictly validated for permission and referential integrity.\n\nShould the item or order not exist, or the update not be permitted by workflow state, validation errors are returned. Related endpoints include GET for item detail, PATCH for index, and DELETE for removals.","summary":"Update the fields of a specific order item (ai_commerce_order_items) — admin/seller only.","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the order item to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating the selected order item, according to business rules and audit requirements.","typeName":"IAiCommerceOrderItem.IUpdate"},"responseBody":{"description":"Updated order item as it is currently recorded, including full audit context.","typeName":"IAiCommerceOrderItem"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/orders/{orderId}/items/{itemId}","method":"put"},{"specification":"This operation permanently removes a specific order item (by itemId) from its parent order (orderId), operating on the ai_commerce_order_items table. Removal is allowed only when business rules are met (e.g., item is not delivered or in active after-sales/dispute). This is a hard delete operation with full audit trail, only allowed for admins or designated system processes.","description":"The erase (delete) operation allows an authorized admin to remove an order item record when permitted by order lifecycle, status, and compliance/audit requirements. Soft delete is not supported as the ai_commerce_order_items table relies on a hard delete (no deleted_at column); once removed, the item record is permanently erased and all dependent relations (e.g., after-sales records) are optionally handled per implementation policy.\n\nCritical business validations prevent deletion if the item is already delivered, under after-sales processing, or if the parent order is locked. Only administrators may perform this operation in normal circumstances. All deletions are recorded in the audit history for traceability. Attempts to delete protected items result in error responses; a successful operation returns HTTP 204 No Content or equivalent result depending on framework.\n\nAdministrators should use this endpoint only for true data correction or compliance resets; misuse of the erase operation may cause loss of business/audit data. No response body is returned by design, but success/failure codes and error context are provided per convention.","summary":"Permanently delete an order item from an order (ai_commerce_order_items) — admin only, hard delete.","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the order item to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/orders/{orderId}/items/{itemId}","method":"delete"},{"specification":"This operation retrieves a paginated and filtered list of sub-orders associated with a specific order, using the ai_commerce_sub_orders table. Useful in multi-seller, split-shipment, and administrative business flows for managing fulfillment or vendor-specific sub-processes. Supports advanced filtering, search, and paging for operational dashboards and support tools.","description":"This API retrieves a filtered and paginated list of sub-orders belonging to the parent order indicated by orderId. Sub-orders correspond to segmented fulfillment units—such as by seller, warehouse, or shipping method—generated automatically or administratively during order processing.\n\nThe ai_commerce_sub_orders table records the linkage between the primary order and its sub-entities, including independent status, pricing, and fulfillment details. The operation aids buyers and administrators in tracking partial shipments, seller-specific delivery, and vendor resolution cases. Filtering and paging options are passed in the request body following the IAiCommerceSubOrder.IRequest DTO, and strict security ensures only authorized actors (buyers for their own orders, sellers for their own sub-orders, admins globally) can access these lists.\n\nRelated APIs include GET for individual sub-order detail and POST for administering new segments. Typical business rules limit creation to the system or administrator roles, not end users, for compliance and operational clarity.","summary":"Retrieve a paginated, filtered list of sub-orders for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order for which sub-orders are listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and paging parameters for sub-order retrieval.","typeName":"IAiCommerceSubOrder.IRequest"},"responseBody":{"description":"Paginated list of sub-orders matching the request criteria for the parent order.","typeName":"IPageIAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/orders/{orderId}/subOrders","method":"patch"},{"specification":"This operation retrieves a paginated and filtered list of sub-orders associated with a specific order, using the ai_commerce_sub_orders table. Useful in multi-seller, split-shipment, and administrative business flows for managing fulfillment or vendor-specific sub-processes. Supports advanced filtering, search, and paging for operational dashboards and support tools.","description":"This API retrieves a filtered and paginated list of sub-orders belonging to the parent order indicated by orderId. Sub-orders correspond to segmented fulfillment units—such as by seller, warehouse, or shipping method—generated automatically or administratively during order processing.\n\nThe ai_commerce_sub_orders table records the linkage between the primary order and its sub-entities, including independent status, pricing, and fulfillment details. The operation aids buyers and administrators in tracking partial shipments, seller-specific delivery, and vendor resolution cases. Filtering and paging options are passed in the request body following the IAiCommerceSubOrder.IRequest DTO, and strict security ensures only authorized actors (buyers for their own orders, sellers for their own sub-orders, admins globally) can access these lists.\n\nRelated APIs include GET for individual sub-order detail and POST for administering new segments. Typical business rules limit creation to the system or administrator roles, not end users, for compliance and operational clarity.","summary":"Retrieve a paginated, filtered list of sub-orders for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order for which sub-orders are listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and paging parameters for sub-order retrieval.","typeName":"IAiCommerceSubOrder.IRequest"},"responseBody":{"description":"Paginated list of sub-orders matching the request criteria for the parent order.","typeName":"IPageIAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/orders/{orderId}/subOrders","method":"patch"},{"specification":"This operation retrieves a paginated and filtered list of sub-orders associated with a specific order, using the ai_commerce_sub_orders table. Useful in multi-seller, split-shipment, and administrative business flows for managing fulfillment or vendor-specific sub-processes. Supports advanced filtering, search, and paging for operational dashboards and support tools.","description":"This API retrieves a filtered and paginated list of sub-orders belonging to the parent order indicated by orderId. Sub-orders correspond to segmented fulfillment units—such as by seller, warehouse, or shipping method—generated automatically or administratively during order processing.\n\nThe ai_commerce_sub_orders table records the linkage between the primary order and its sub-entities, including independent status, pricing, and fulfillment details. The operation aids buyers and administrators in tracking partial shipments, seller-specific delivery, and vendor resolution cases. Filtering and paging options are passed in the request body following the IAiCommerceSubOrder.IRequest DTO, and strict security ensures only authorized actors (buyers for their own orders, sellers for their own sub-orders, admins globally) can access these lists.\n\nRelated APIs include GET for individual sub-order detail and POST for administering new segments. Typical business rules limit creation to the system or administrator roles, not end users, for compliance and operational clarity.","summary":"Retrieve a paginated, filtered list of sub-orders for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order for which sub-orders are listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and paging parameters for sub-order retrieval.","typeName":"IAiCommerceSubOrder.IRequest"},"responseBody":{"description":"Paginated list of sub-orders matching the request criteria for the parent order.","typeName":"IPageIAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/orders/{orderId}/subOrders","method":"patch"},{"specification":"This operation retrieves the details of a specific sub-order by subOrderId within a specified parent order (orderId). The ai_commerce_sub_orders table acts as the resource anchor, containing fulfillment, status, pricing, seller, and segment context used in split or multi-vendor order flows. This API supports business workflows for tracking, vendor management, fulfillment status, and dispute resolution.","description":"The endpoint fetches all business-relevant details for a single sub-order, identified by both the parent orderId and the subOrderId. These may include fulfillment status, pricing breakdown, seller and channel context, and shipping/tracking references. Business rules enforce permissions based on account type and order relationship. Buyers may access their own sub-orders, sellers only their own, and administrators any, with role-specific views for sensitive/aggregated fields.\n\nUnderlying storage comes from the ai_commerce_sub_orders table, which links each segmented order to its top-level order and responsible seller. Not found or permission errors are handled according to privacy and compliance policies. Use with PATCH for sub-order index and POST for creation. This operation is required for operational tracking, partial fulfillment, and customer care representing complex orders.","summary":"Retrieve details of a specific sub-order for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Unique identifier of the target sub-order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified sub-order, including status, pricing, and fulfillment info.","typeName":"IAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/orders/{orderId}/subOrders/{subOrderId}","method":"get"},{"specification":"This operation retrieves the details of a specific sub-order by subOrderId within a specified parent order (orderId). The ai_commerce_sub_orders table acts as the resource anchor, containing fulfillment, status, pricing, seller, and segment context used in split or multi-vendor order flows. This API supports business workflows for tracking, vendor management, fulfillment status, and dispute resolution.","description":"The endpoint fetches all business-relevant details for a single sub-order, identified by both the parent orderId and the subOrderId. These may include fulfillment status, pricing breakdown, seller and channel context, and shipping/tracking references. Business rules enforce permissions based on account type and order relationship. Buyers may access their own sub-orders, sellers only their own, and administrators any, with role-specific views for sensitive/aggregated fields.\n\nUnderlying storage comes from the ai_commerce_sub_orders table, which links each segmented order to its top-level order and responsible seller. Not found or permission errors are handled according to privacy and compliance policies. Use with PATCH for sub-order index and POST for creation. This operation is required for operational tracking, partial fulfillment, and customer care representing complex orders.","summary":"Retrieve details of a specific sub-order for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Unique identifier of the target sub-order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified sub-order, including status, pricing, and fulfillment info.","typeName":"IAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/orders/{orderId}/subOrders/{subOrderId}","method":"get"},{"specification":"This operation retrieves the details of a specific sub-order by subOrderId within a specified parent order (orderId). The ai_commerce_sub_orders table acts as the resource anchor, containing fulfillment, status, pricing, seller, and segment context used in split or multi-vendor order flows. This API supports business workflows for tracking, vendor management, fulfillment status, and dispute resolution.","description":"The endpoint fetches all business-relevant details for a single sub-order, identified by both the parent orderId and the subOrderId. These may include fulfillment status, pricing breakdown, seller and channel context, and shipping/tracking references. Business rules enforce permissions based on account type and order relationship. Buyers may access their own sub-orders, sellers only their own, and administrators any, with role-specific views for sensitive/aggregated fields.\n\nUnderlying storage comes from the ai_commerce_sub_orders table, which links each segmented order to its top-level order and responsible seller. Not found or permission errors are handled according to privacy and compliance policies. Use with PATCH for sub-order index and POST for creation. This operation is required for operational tracking, partial fulfillment, and customer care representing complex orders.","summary":"Retrieve details of a specific sub-order for an order (ai_commerce_sub_orders).","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Unique identifier of the target sub-order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified sub-order, including status, pricing, and fulfillment info.","typeName":"IAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/orders/{orderId}/subOrders/{subOrderId}","method":"get"},{"specification":"This operation creates a new sub-order record under a parent order (orderId), writing to the ai_commerce_sub_orders table. This is typically required in split-order scenarios such as vendor assignment, fulfillment channels, or partial shipment business rules. The API should only be accessible to admin roles or system services to protect business workflow integrity.","description":"A new sub-order is created for a given order, enabling advanced fulfillment strategies or correction/segmentation by the administrator. The IAiCommerceSubOrder.ICreate request body supplies essential creation fields, including seller assignment, fulfillment details, and pricing breakdown. Only platform admins (not end buyers or sellers) may invoke this operation for data consistency and compliance.\n\nThe ai_commerce_sub_orders table records the parent linkage, seller ownership, independent fulfillment, and status. The API enforces referential integrity for the parent order, validates seller existence, checks business status, and records full audit context for compliance. Duplicate control prevents double-creation of the same segment. Misuse or violations of business workflow are guarded with strict validation and permission enforcement.\n\nThis endpoint complements PATCH for sub-order listing and GET for individual sub-order retrieval, and forms a building block for operational support and system-level automation.","summary":"Create a new sub-order for a given order (ai_commerce_sub_orders) — admin only.","parameters":[{"name":"orderId","description":"Unique identifier of the parent order to which the sub-order is attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Sub-order creation data, specifying all seller, pricing, and fulfillment context required.","typeName":"IAiCommerceSubOrder.ICreate"},"responseBody":{"description":"Created sub-order record with business context and audit fields.","typeName":"IAiCommerceSubOrder"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/orders/{orderId}/subOrders","method":"post"},{"specification":"This operation updates the details of a sub-order belonging to a specific order. It allows sellers or admins to change shipping status, fulfillment method, tracking number, and other updateable fields of ai_commerce_sub_orders per business logic, ensuring auditability and compliance. The endpoint supports transition of sub-order status in multi-vendor split order processing. The operation references the ai_commerce_orders and ai_commerce_sub_orders tables. Only authorized sellers (for their own sub-orders) and admins may use this endpoint. All changes are audit-logged in the order audit trail.","description":"This operation enables authorized sellers or administrators to update the details of a specific sub-order within a parent order. The targeted sub-order is identified by its subOrderId, while the orderId parameter gives the context of the parent order. The operation covers business flows such as marking a sub-order as shipped, updating fulfillment status, assigning shipping methods or tracking numbers, or updating price allocations as needed for split/multi-vendor scenarios.\n\nUser authentication and authorization are strictly enforced: only the seller owning the sub-order or an admin may perform updates. On update, status changes and modifications are logged to the ai_commerce_order_audit_logs table for legal/audit review. Attempting to update a sub-order with an invalid state transition (e.g., attempting to deliver before payment confirmation) will result in a business logic error.\n\nFields not relevant to sellers (e.g., payment or refund states) cannot be edited via this endpoint. Related endpoints: sub-order retrieval (GET), sub-order erasure (DELETE). All updates are validated for correctness and business policy compliance.","summary":"Update the details and status of a sub-order (ai_commerce_sub_orders) in a given order.","parameters":[{"name":"orderId","description":"Parent order's unique ID (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Unique sub-order ID to update (ai_commerce_sub_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the sub-order, specifying status, fulfillment data, and allowed business properties.","typeName":"IAiCommerceSubOrders.IUpdate"},"responseBody":{"description":"The updated sub-order details after the modification.","typeName":"IAiCommerceSubOrders"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/orders/{orderId}/subOrders/{subOrderId}","method":"put"},{"specification":"This operation updates the details of a sub-order belonging to a specific order. It allows sellers or admins to change shipping status, fulfillment method, tracking number, and other updateable fields of ai_commerce_sub_orders per business logic, ensuring auditability and compliance. The endpoint supports transition of sub-order status in multi-vendor split order processing. The operation references the ai_commerce_orders and ai_commerce_sub_orders tables. Only authorized sellers (for their own sub-orders) and admins may use this endpoint. All changes are audit-logged in the order audit trail.","description":"This operation enables authorized sellers or administrators to update the details of a specific sub-order within a parent order. The targeted sub-order is identified by its subOrderId, while the orderId parameter gives the context of the parent order. The operation covers business flows such as marking a sub-order as shipped, updating fulfillment status, assigning shipping methods or tracking numbers, or updating price allocations as needed for split/multi-vendor scenarios.\n\nUser authentication and authorization are strictly enforced: only the seller owning the sub-order or an admin may perform updates. On update, status changes and modifications are logged to the ai_commerce_order_audit_logs table for legal/audit review. Attempting to update a sub-order with an invalid state transition (e.g., attempting to deliver before payment confirmation) will result in a business logic error.\n\nFields not relevant to sellers (e.g., payment or refund states) cannot be edited via this endpoint. Related endpoints: sub-order retrieval (GET), sub-order erasure (DELETE). All updates are validated for correctness and business policy compliance.","summary":"Update the details and status of a sub-order (ai_commerce_sub_orders) in a given order.","parameters":[{"name":"orderId","description":"Parent order's unique ID (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Unique sub-order ID to update (ai_commerce_sub_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the sub-order, specifying status, fulfillment data, and allowed business properties.","typeName":"IAiCommerceSubOrders.IUpdate"},"responseBody":{"description":"The updated sub-order details after the modification.","typeName":"IAiCommerceSubOrders"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/orders/{orderId}/subOrders/{subOrderId}","method":"put"},{"specification":"This operation permanently deletes a specified sub-order from a parent order. The sub-order must be deleted in accordance with business rules—e.g., only allowed if the sub-order is in a deletable state and not yet processed for fulfillment or payment. The operation acts on the ai_commerce_sub_orders table. Only admins and the seller responsible for the sub-order can perform deletion. All deletions are hard (since no soft delete field), and a full audit log is generated. Attempting to delete a sub-order after any fulfillment action is rejected for business compliance.","description":"Allows an authorized seller or administrator to permanently remove a sub-order belonging to a specific parent order. The operation can only be performed if the sub-order is in a state that allows deletion (e.g., not fulfilled, not shipped, and with no completed payments). If these conditions are not met, an error is returned.\n\nThe operation uses the ai_commerce_sub_orders and ai_commerce_orders tables as the data sources, enforcing that only owners of the sub-order (seller), or platform administrators may perform this action. Hard deletion (record is removed from the database) is performed, and an entry is made in ai_commerce_order_audit_logs for evidence preservation.\n\nDeletions are not permitted after the sub-order is shipped or paid, to comply with financial and legal recordkeeping. Business logic and relationship constraints are validated before deletion, and error details are provided on failure.","summary":"Permanently delete a sub-order (ai_commerce_sub_orders) from an order if allowed by business rules.","parameters":[{"name":"orderId","description":"Unique parent order ID (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Sub-order ID to delete (ai_commerce_sub_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/orders/{orderId}/subOrders/{subOrderId}","method":"delete"},{"specification":"This operation permanently deletes a specified sub-order from a parent order. The sub-order must be deleted in accordance with business rules—e.g., only allowed if the sub-order is in a deletable state and not yet processed for fulfillment or payment. The operation acts on the ai_commerce_sub_orders table. Only admins and the seller responsible for the sub-order can perform deletion. All deletions are hard (since no soft delete field), and a full audit log is generated. Attempting to delete a sub-order after any fulfillment action is rejected for business compliance.","description":"Allows an authorized seller or administrator to permanently remove a sub-order belonging to a specific parent order. The operation can only be performed if the sub-order is in a state that allows deletion (e.g., not fulfilled, not shipped, and with no completed payments). If these conditions are not met, an error is returned.\n\nThe operation uses the ai_commerce_sub_orders and ai_commerce_orders tables as the data sources, enforcing that only owners of the sub-order (seller), or platform administrators may perform this action. Hard deletion (record is removed from the database) is performed, and an entry is made in ai_commerce_order_audit_logs for evidence preservation.\n\nDeletions are not permitted after the sub-order is shipped or paid, to comply with financial and legal recordkeeping. Business logic and relationship constraints are validated before deletion, and error details are provided on failure.","summary":"Permanently delete a sub-order (ai_commerce_sub_orders) from an order if allowed by business rules.","parameters":[{"name":"orderId","description":"Unique parent order ID (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"subOrderId","description":"Sub-order ID to delete (ai_commerce_sub_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/orders/{orderId}/subOrders/{subOrderId}","method":"delete"},{"specification":"Retrieves a paginated list of all status transition events for a given order. The operation supports filtering, searching, and sorting the ai_commerce_order_status_history records. Only authorized actors (order buyer, seller tied to any sub-order, or admin) may view the full status trail. This endpoint uses the ai_commerce_order_status_history table and supports pagination for audit and compliance scenarios.","description":"This operation provides a paginated, filterable, and searchable list of all status change events for a particular order, drawing from the ai_commerce_order_status_history table. These status transitions include every lifecycle state change for the order, including status, business_status, notes, and the actor responsible.\n\nAuthorized access is allowed for the buyer (who placed the order), sellers linked to any parts of the order, or admins. The information enables end-users and administrators to trace order evolution for support, compliance, or audit purposes. Pagination is provided to support long-lived orders with many transitions. Sorting by change time and advanced filtering (by status, actor, etc.) are also supported.\n\nThe API response summarizes the status history events and supports efficient browsing of complex order histories. Errors may occur if the orderId is invalid or the requester lacks sufficient privileges.","summary":"Paginated search of status history (ai_commerce_order_status_history) for a specific order.","parameters":[{"name":"orderId","description":"Order whose status history to list (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request parameters for paginated, filtered status history retrieval.","typeName":"IAiCommerceOrderStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of order status history records matching the criteria.","typeName":"IPageIAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/orders/{orderId}/statusHistory","method":"patch"},{"specification":"Retrieves a paginated list of all status transition events for a given order. The operation supports filtering, searching, and sorting the ai_commerce_order_status_history records. Only authorized actors (order buyer, seller tied to any sub-order, or admin) may view the full status trail. This endpoint uses the ai_commerce_order_status_history table and supports pagination for audit and compliance scenarios.","description":"This operation provides a paginated, filterable, and searchable list of all status change events for a particular order, drawing from the ai_commerce_order_status_history table. These status transitions include every lifecycle state change for the order, including status, business_status, notes, and the actor responsible.\n\nAuthorized access is allowed for the buyer (who placed the order), sellers linked to any parts of the order, or admins. The information enables end-users and administrators to trace order evolution for support, compliance, or audit purposes. Pagination is provided to support long-lived orders with many transitions. Sorting by change time and advanced filtering (by status, actor, etc.) are also supported.\n\nThe API response summarizes the status history events and supports efficient browsing of complex order histories. Errors may occur if the orderId is invalid or the requester lacks sufficient privileges.","summary":"Paginated search of status history (ai_commerce_order_status_history) for a specific order.","parameters":[{"name":"orderId","description":"Order whose status history to list (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request parameters for paginated, filtered status history retrieval.","typeName":"IAiCommerceOrderStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of order status history records matching the criteria.","typeName":"IPageIAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/orders/{orderId}/statusHistory","method":"patch"},{"specification":"Retrieves a paginated list of all status transition events for a given order. The operation supports filtering, searching, and sorting the ai_commerce_order_status_history records. Only authorized actors (order buyer, seller tied to any sub-order, or admin) may view the full status trail. This endpoint uses the ai_commerce_order_status_history table and supports pagination for audit and compliance scenarios.","description":"This operation provides a paginated, filterable, and searchable list of all status change events for a particular order, drawing from the ai_commerce_order_status_history table. These status transitions include every lifecycle state change for the order, including status, business_status, notes, and the actor responsible.\n\nAuthorized access is allowed for the buyer (who placed the order), sellers linked to any parts of the order, or admins. The information enables end-users and administrators to trace order evolution for support, compliance, or audit purposes. Pagination is provided to support long-lived orders with many transitions. Sorting by change time and advanced filtering (by status, actor, etc.) are also supported.\n\nThe API response summarizes the status history events and supports efficient browsing of complex order histories. Errors may occur if the orderId is invalid or the requester lacks sufficient privileges.","summary":"Paginated search of status history (ai_commerce_order_status_history) for a specific order.","parameters":[{"name":"orderId","description":"Order whose status history to list (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request parameters for paginated, filtered status history retrieval.","typeName":"IAiCommerceOrderStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of order status history records matching the criteria.","typeName":"IPageIAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/orders/{orderId}/statusHistory","method":"patch"},{"specification":"Retrieves a single ai_commerce_order_status_history event for a given order by orderId and historyId. It provides complete detail for one status change event, including actor, timestamps, old/new status, and note. Only accessible to the order's buyer, associated seller(s), or admins. Serves for deep audit of specific state changes within an order’s lifecycle.","description":"This operation returns the details of a single status history record for a specific order, identifying both the order (orderId) and history record (historyId). It queries the ai_commerce_order_status_history table to provide a full snapshot of the status change: the actor, time of transition, previous and new status values, workflow context, and any notes attached.\n\nPermission to retrieve this data is granted to the buyer (who placed the order), sellers associated with any related sub-orders, or administrators. This operation supports support workflows and regulatory audit requirements, enabling investigation of specific lifecycle transitions in the order's record.\n\nIf the specified historyId does not exist for the orderId, or the user is not authorized, an error is returned. Related endpoints allow retrieval of full order status history or searching among events.","summary":"Get a single order status history event (ai_commerce_order_status_history) by orderId and historyId.","parameters":[{"name":"orderId","description":"Order whose status history is being accessed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"historyId","description":"Unique ID of the status history event (ai_commerce_order_status_history.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the status change event for audit or support use.","typeName":"IAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/orders/{orderId}/statusHistory/{historyId}","method":"get"},{"specification":"Retrieves a single ai_commerce_order_status_history event for a given order by orderId and historyId. It provides complete detail for one status change event, including actor, timestamps, old/new status, and note. Only accessible to the order's buyer, associated seller(s), or admins. Serves for deep audit of specific state changes within an order’s lifecycle.","description":"This operation returns the details of a single status history record for a specific order, identifying both the order (orderId) and history record (historyId). It queries the ai_commerce_order_status_history table to provide a full snapshot of the status change: the actor, time of transition, previous and new status values, workflow context, and any notes attached.\n\nPermission to retrieve this data is granted to the buyer (who placed the order), sellers associated with any related sub-orders, or administrators. This operation supports support workflows and regulatory audit requirements, enabling investigation of specific lifecycle transitions in the order's record.\n\nIf the specified historyId does not exist for the orderId, or the user is not authorized, an error is returned. Related endpoints allow retrieval of full order status history or searching among events.","summary":"Get a single order status history event (ai_commerce_order_status_history) by orderId and historyId.","parameters":[{"name":"orderId","description":"Order whose status history is being accessed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"historyId","description":"Unique ID of the status history event (ai_commerce_order_status_history.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the status change event for audit or support use.","typeName":"IAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/orders/{orderId}/statusHistory/{historyId}","method":"get"},{"specification":"Retrieves a single ai_commerce_order_status_history event for a given order by orderId and historyId. It provides complete detail for one status change event, including actor, timestamps, old/new status, and note. Only accessible to the order's buyer, associated seller(s), or admins. Serves for deep audit of specific state changes within an order’s lifecycle.","description":"This operation returns the details of a single status history record for a specific order, identifying both the order (orderId) and history record (historyId). It queries the ai_commerce_order_status_history table to provide a full snapshot of the status change: the actor, time of transition, previous and new status values, workflow context, and any notes attached.\n\nPermission to retrieve this data is granted to the buyer (who placed the order), sellers associated with any related sub-orders, or administrators. This operation supports support workflows and regulatory audit requirements, enabling investigation of specific lifecycle transitions in the order's record.\n\nIf the specified historyId does not exist for the orderId, or the user is not authorized, an error is returned. Related endpoints allow retrieval of full order status history or searching among events.","summary":"Get a single order status history event (ai_commerce_order_status_history) by orderId and historyId.","parameters":[{"name":"orderId","description":"Order whose status history is being accessed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}},{"name":"historyId","description":"Unique ID of the status history event (ai_commerce_order_status_history.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the status change event for audit or support use.","typeName":"IAiCommerceOrderStatusHistory"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/orders/{orderId}/statusHistory/{historyId}","method":"get"},{"specification":"Initiates payment for an order by submitting payment details. References ai_commerce_orders to validate order state, amount, and buyer eligibility before creating payment records. Creates a new payment entry via ai_commerce_payments, linked to the order. Only the buyer who owns the order may use this endpoint. Auditable via payment- and order-level logs. Operation is rejected if order is not eligible for payment or the payload is invalid.","description":"This operation starts the payment process for a specific order. The endpoint is intended for the buyer who owns the order (ai_commerce_orders.buyer_id). The buyer submits payment information (method, amount, provider details) that is then validated against order status (only allowed when order is in a 'payment_pending' state), amount, and business rules.\n\nUpon valid request, a new ai_commerce_payments entry is created and linked to the order via ai_commerce_order_payments. The operation is audit-logged for compliance and traceability. If the order is ineligible for payment (already paid, cancelled, etc.), an error is returned with a descriptive business reason.\n\nAll payment attempts, successes, and failures are recorded for legal evidence and refund/audit purposes. Only the owner (buyer) of the order may submit payment using this endpoint.","summary":"Initiate payment for an order by creating a payment record (ai_commerce_payments).","parameters":[{"name":"orderId","description":"Order ID for which payment is being initiated (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payment initiation payload: method, amount, provider info, and related fields.","typeName":"IAiCommercePayments.ICreate"},"responseBody":{"description":"The resulting payment record linked to the order.","typeName":"IAiCommercePayments"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/orders/{orderId}/pay","method":"post"},{"specification":"Provides a paginated list and advanced search of all fulfillment actions (ai_commerce_order_fulfillments) performed against a given order. Supports filtering by sub-order, fulfillment status, carrier, and time. Enables tracking of multi-step, split, or staged delivery in complex orders. Only accessible to the order's buyer, relevant sellers or admins. Relies on ai_commerce_order_fulfillments. Audit logs support compliance and support scenarios.","description":"This operation lists the fulfillment actions for a specific order, supporting advanced filtering, search, and pagination for cases of staged, split, or partial deliveries. Queries the ai_commerce_order_fulfillments table, presenting events such as shipping, delivery, returns, or failed attempts. The operation enables buyers to track shipments and their statuses, and allows sellers/admins to monitor and audit fulfillment performance.\n\nThe endpoint supports filters for sub-order, carrier, fulfillment status, and date/time. Pagination is implemented for efficiency on large/long-running orders. Access is granted to the buyer (who placed the order), sellers who own relevant sub-orders, and administrators. Audit logging of all queries ensures support and regulatory evidence is maintained.","summary":"List and search fulfillment actions (ai_commerce_order_fulfillments) for an order.","parameters":[{"name":"orderId","description":"Order ID for which to retrieve fulfillment events (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search and filter parameters for fulfillment actions, including pagination.","typeName":"IAiCommerceOrderFulfillments.IRequest"},"responseBody":{"description":"Paginated list of fulfillment events and details for the order.","typeName":"IPageIAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/orders/{orderId}/fulfillments","method":"patch"},{"specification":"Provides a paginated list and advanced search of all fulfillment actions (ai_commerce_order_fulfillments) performed against a given order. Supports filtering by sub-order, fulfillment status, carrier, and time. Enables tracking of multi-step, split, or staged delivery in complex orders. Only accessible to the order's buyer, relevant sellers or admins. Relies on ai_commerce_order_fulfillments. Audit logs support compliance and support scenarios.","description":"This operation lists the fulfillment actions for a specific order, supporting advanced filtering, search, and pagination for cases of staged, split, or partial deliveries. Queries the ai_commerce_order_fulfillments table, presenting events such as shipping, delivery, returns, or failed attempts. The operation enables buyers to track shipments and their statuses, and allows sellers/admins to monitor and audit fulfillment performance.\n\nThe endpoint supports filters for sub-order, carrier, fulfillment status, and date/time. Pagination is implemented for efficiency on large/long-running orders. Access is granted to the buyer (who placed the order), sellers who own relevant sub-orders, and administrators. Audit logging of all queries ensures support and regulatory evidence is maintained.","summary":"List and search fulfillment actions (ai_commerce_order_fulfillments) for an order.","parameters":[{"name":"orderId","description":"Order ID for which to retrieve fulfillment events (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search and filter parameters for fulfillment actions, including pagination.","typeName":"IAiCommerceOrderFulfillments.IRequest"},"responseBody":{"description":"Paginated list of fulfillment events and details for the order.","typeName":"IPageIAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/orders/{orderId}/fulfillments","method":"patch"},{"specification":"Provides a paginated list and advanced search of all fulfillment actions (ai_commerce_order_fulfillments) performed against a given order. Supports filtering by sub-order, fulfillment status, carrier, and time. Enables tracking of multi-step, split, or staged delivery in complex orders. Only accessible to the order's buyer, relevant sellers or admins. Relies on ai_commerce_order_fulfillments. Audit logs support compliance and support scenarios.","description":"This operation lists the fulfillment actions for a specific order, supporting advanced filtering, search, and pagination for cases of staged, split, or partial deliveries. Queries the ai_commerce_order_fulfillments table, presenting events such as shipping, delivery, returns, or failed attempts. The operation enables buyers to track shipments and their statuses, and allows sellers/admins to monitor and audit fulfillment performance.\n\nThe endpoint supports filters for sub-order, carrier, fulfillment status, and date/time. Pagination is implemented for efficiency on large/long-running orders. Access is granted to the buyer (who placed the order), sellers who own relevant sub-orders, and administrators. Audit logging of all queries ensures support and regulatory evidence is maintained.","summary":"List and search fulfillment actions (ai_commerce_order_fulfillments) for an order.","parameters":[{"name":"orderId","description":"Order ID for which to retrieve fulfillment events (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search and filter parameters for fulfillment actions, including pagination.","typeName":"IAiCommerceOrderFulfillments.IRequest"},"responseBody":{"description":"Paginated list of fulfillment events and details for the order.","typeName":"IPageIAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/orders/{orderId}/fulfillments","method":"patch"},{"specification":"Retrieves a single ai_commerce_order_fulfillments event for a specific order and fulfillmentId. Provides complete shipping/delivery details, status, carrier, and metadata for the event, useful for tracking and audit. Access limited to buyer, related seller, or admin only. Operates on ai_commerce_order_fulfillments and referenced entities.","description":"Returns complete details for a fulfillment action on a specific order, selecting by orderId and fulfillmentId. Queries ai_commerce_order_fulfillments for all relevant attributes, such as carrier, delivery status, carrier contact, and event times. Designed for tracking, support, and regulatory audit scenarios.\n\nAccess is limited to the buyer who owns the order, the seller responsible for the sub-order being fulfilled, or an administrator. Helps users trace parcel and delivery state, resolve issues, and support compliance. If the fulfillmentId does not exist for the order, or the user is unauthorized, an error is returned. Complements the list/search endpoint for order fulfillments.","summary":"Get a single fulfillment event (ai_commerce_order_fulfillments) for an order by orderId and fulfillmentId.","parameters":[{"name":"orderId","description":"Order ID (ai_commerce_orders.id) whose fulfillment is being viewed.","schema":{"type":"string","format":"uuid"}},{"name":"fulfillmentId","description":"Unique ID of the fulfillment event (ai_commerce_order_fulfillments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the targeted fulfillment/shipping event.","typeName":"IAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/orders/{orderId}/fulfillments/{fulfillmentId}","method":"get"},{"specification":"Retrieves a single ai_commerce_order_fulfillments event for a specific order and fulfillmentId. Provides complete shipping/delivery details, status, carrier, and metadata for the event, useful for tracking and audit. Access limited to buyer, related seller, or admin only. Operates on ai_commerce_order_fulfillments and referenced entities.","description":"Returns complete details for a fulfillment action on a specific order, selecting by orderId and fulfillmentId. Queries ai_commerce_order_fulfillments for all relevant attributes, such as carrier, delivery status, carrier contact, and event times. Designed for tracking, support, and regulatory audit scenarios.\n\nAccess is limited to the buyer who owns the order, the seller responsible for the sub-order being fulfilled, or an administrator. Helps users trace parcel and delivery state, resolve issues, and support compliance. If the fulfillmentId does not exist for the order, or the user is unauthorized, an error is returned. Complements the list/search endpoint for order fulfillments.","summary":"Get a single fulfillment event (ai_commerce_order_fulfillments) for an order by orderId and fulfillmentId.","parameters":[{"name":"orderId","description":"Order ID (ai_commerce_orders.id) whose fulfillment is being viewed.","schema":{"type":"string","format":"uuid"}},{"name":"fulfillmentId","description":"Unique ID of the fulfillment event (ai_commerce_order_fulfillments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the targeted fulfillment/shipping event.","typeName":"IAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/orders/{orderId}/fulfillments/{fulfillmentId}","method":"get"},{"specification":"Retrieves a single ai_commerce_order_fulfillments event for a specific order and fulfillmentId. Provides complete shipping/delivery details, status, carrier, and metadata for the event, useful for tracking and audit. Access limited to buyer, related seller, or admin only. Operates on ai_commerce_order_fulfillments and referenced entities.","description":"Returns complete details for a fulfillment action on a specific order, selecting by orderId and fulfillmentId. Queries ai_commerce_order_fulfillments for all relevant attributes, such as carrier, delivery status, carrier contact, and event times. Designed for tracking, support, and regulatory audit scenarios.\n\nAccess is limited to the buyer who owns the order, the seller responsible for the sub-order being fulfilled, or an administrator. Helps users trace parcel and delivery state, resolve issues, and support compliance. If the fulfillmentId does not exist for the order, or the user is unauthorized, an error is returned. Complements the list/search endpoint for order fulfillments.","summary":"Get a single fulfillment event (ai_commerce_order_fulfillments) for an order by orderId and fulfillmentId.","parameters":[{"name":"orderId","description":"Order ID (ai_commerce_orders.id) whose fulfillment is being viewed.","schema":{"type":"string","format":"uuid"}},{"name":"fulfillmentId","description":"Unique ID of the fulfillment event (ai_commerce_order_fulfillments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the targeted fulfillment/shipping event.","typeName":"IAiCommerceOrderFulfillments"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/orders/{orderId}/fulfillments/{fulfillmentId}","method":"get"},{"specification":"Provides a paginated list and advanced filter/search for after-sales service events (ai_commerce_order_after_sales) for a given order. This endpoint enables buyers, sellers, and admins to see all returns, exchanges, disputes, or service flows after purchase. Query parameters support filtering by type, status, actor, and time. The operation is key for tracking returns, warranty, customer support, and regulatory compliance. Uses ai_commerce_order_after_sales for data retrieval.","description":"This operation fetches a paginated, optionally filtered list of all after-sales service events for a particular order using ai_commerce_order_after_sales. Buyers can monitor return/exchange requests and their progression. Sellers/admins have full visibility for resolving cases, providing support, and ensuring legal compliance.\n\nAdvanced search fields allow filtering by event type (return, exchange, dispute, warranty, etc.), status, actor, and creation/closing time. The endpoint enables stakeholders to monitor, audit, and act on after-sales events efficiently. Each response contains summary and detail for event state, context note, and temporal fields, and is accessible based on authorization as buyer of the order, seller involved in fulfillment, or platform admin. Audit logging ensures evidence preservation for compliance.","summary":"Search and list after-sales service events (ai_commerce_order_after_sales) linked to an order.","parameters":[{"name":"orderId","description":"Order ID whose after-sales events are being listed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Paginated and filtered search parameters for after-sales events.","typeName":"IAiCommerceOrderAfterSales.IRequest"},"responseBody":{"description":"Paginated and filtered list of after-sales events for the order.","typeName":"IPageIAiCommerceOrderAfterSales"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/orders/{orderId}/afterSales","method":"patch"},{"specification":"Provides a paginated list and advanced filter/search for after-sales service events (ai_commerce_order_after_sales) for a given order. This endpoint enables buyers, sellers, and admins to see all returns, exchanges, disputes, or service flows after purchase. Query parameters support filtering by type, status, actor, and time. The operation is key for tracking returns, warranty, customer support, and regulatory compliance. Uses ai_commerce_order_after_sales for data retrieval.","description":"This operation fetches a paginated, optionally filtered list of all after-sales service events for a particular order using ai_commerce_order_after_sales. Buyers can monitor return/exchange requests and their progression. Sellers/admins have full visibility for resolving cases, providing support, and ensuring legal compliance.\n\nAdvanced search fields allow filtering by event type (return, exchange, dispute, warranty, etc.), status, actor, and creation/closing time. The endpoint enables stakeholders to monitor, audit, and act on after-sales events efficiently. Each response contains summary and detail for event state, context note, and temporal fields, and is accessible based on authorization as buyer of the order, seller involved in fulfillment, or platform admin. Audit logging ensures evidence preservation for compliance.","summary":"Search and list after-sales service events (ai_commerce_order_after_sales) linked to an order.","parameters":[{"name":"orderId","description":"Order ID whose after-sales events are being listed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Paginated and filtered search parameters for after-sales events.","typeName":"IAiCommerceOrderAfterSales.IRequest"},"responseBody":{"description":"Paginated and filtered list of after-sales events for the order.","typeName":"IPageIAiCommerceOrderAfterSales"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/orders/{orderId}/afterSales","method":"patch"},{"specification":"Provides a paginated list and advanced filter/search for after-sales service events (ai_commerce_order_after_sales) for a given order. This endpoint enables buyers, sellers, and admins to see all returns, exchanges, disputes, or service flows after purchase. Query parameters support filtering by type, status, actor, and time. The operation is key for tracking returns, warranty, customer support, and regulatory compliance. Uses ai_commerce_order_after_sales for data retrieval.","description":"This operation fetches a paginated, optionally filtered list of all after-sales service events for a particular order using ai_commerce_order_after_sales. Buyers can monitor return/exchange requests and their progression. Sellers/admins have full visibility for resolving cases, providing support, and ensuring legal compliance.\n\nAdvanced search fields allow filtering by event type (return, exchange, dispute, warranty, etc.), status, actor, and creation/closing time. The endpoint enables stakeholders to monitor, audit, and act on after-sales events efficiently. Each response contains summary and detail for event state, context note, and temporal fields, and is accessible based on authorization as buyer of the order, seller involved in fulfillment, or platform admin. Audit logging ensures evidence preservation for compliance.","summary":"Search and list after-sales service events (ai_commerce_order_after_sales) linked to an order.","parameters":[{"name":"orderId","description":"Order ID whose after-sales events are being listed (ai_commerce_orders.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Paginated and filtered search parameters for after-sales events.","typeName":"IAiCommerceOrderAfterSales.IRequest"},"responseBody":{"description":"Paginated and filtered list of after-sales events for the order.","typeName":"IPageIAiCommerceOrderAfterSales"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/orders/{orderId}/afterSales","method":"patch"},{"specification":"This operation retrieves detailed information about a specific after-sales service case for a given order. It is associated with the ai_commerce_order_after_sales table from the Prisma schema. The fetched data includes all attributes of the after-sales case, such as its type, status, related order or item IDs, the actor, note, and timestamps. Security checks are enforced to ensure only authorized users (buyer of the order, seller involved, or admin) can access the data. Used for enabling buyers, sellers, or admins to view and track the state, history, and resolution process of any after-sales request tied to an order.","path":"/aiCommerce/buyer/orders/{orderId}/afterSales/{afterSalesId}","method":"get","summary":"Retrieve a specific after-sales case for an order (ai_commerce_order_after_sales).","description":"This endpoint allows authorized users to retrieve the complete details of a single after-sales case (e.g., return, exchange, dispute) for a specific order using both the order ID and after-sales case ID. The operation references the ai_commerce_order_after_sales table and returns all relevant fields, such as order linkage, order item reference, actor, after-sales type, case status, timestamps, and any notes provided.\n\nPermission checks ensure that only the order's buyer, the involved seller (when applicable), or a system admin can obtain this information. The operation incorporates logic to return only after-sales cases relevant to the requested order, minimizing leakage of other users' data.\n\nValidation includes confirming existence of both the order and after-sales case, as well as correct association between them. Error handling covers not-found, unauthorized access, and association mismatch cases. Successful responses deliver all record fields as defined in the Prisma model.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed after-sales service record for the given order and after-sales case.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"buyer","authorizationType":null,"name":"at"},{"specification":"This operation retrieves detailed information about a specific after-sales service case for a given order. It is associated with the ai_commerce_order_after_sales table from the Prisma schema. The fetched data includes all attributes of the after-sales case, such as its type, status, related order or item IDs, the actor, note, and timestamps. Security checks are enforced to ensure only authorized users (buyer of the order, seller involved, or admin) can access the data. Used for enabling buyers, sellers, or admins to view and track the state, history, and resolution process of any after-sales request tied to an order.","path":"/aiCommerce/seller/orders/{orderId}/afterSales/{afterSalesId}","method":"get","summary":"Retrieve a specific after-sales case for an order (ai_commerce_order_after_sales).","description":"This endpoint allows authorized users to retrieve the complete details of a single after-sales case (e.g., return, exchange, dispute) for a specific order using both the order ID and after-sales case ID. The operation references the ai_commerce_order_after_sales table and returns all relevant fields, such as order linkage, order item reference, actor, after-sales type, case status, timestamps, and any notes provided.\n\nPermission checks ensure that only the order's buyer, the involved seller (when applicable), or a system admin can obtain this information. The operation incorporates logic to return only after-sales cases relevant to the requested order, minimizing leakage of other users' data.\n\nValidation includes confirming existence of both the order and after-sales case, as well as correct association between them. Error handling covers not-found, unauthorized access, and association mismatch cases. Successful responses deliver all record fields as defined in the Prisma model.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed after-sales service record for the given order and after-sales case.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"seller","authorizationType":null,"name":"at"},{"specification":"This operation retrieves detailed information about a specific after-sales service case for a given order. It is associated with the ai_commerce_order_after_sales table from the Prisma schema. The fetched data includes all attributes of the after-sales case, such as its type, status, related order or item IDs, the actor, note, and timestamps. Security checks are enforced to ensure only authorized users (buyer of the order, seller involved, or admin) can access the data. Used for enabling buyers, sellers, or admins to view and track the state, history, and resolution process of any after-sales request tied to an order.","path":"/aiCommerce/admin/orders/{orderId}/afterSales/{afterSalesId}","method":"get","summary":"Retrieve a specific after-sales case for an order (ai_commerce_order_after_sales).","description":"This endpoint allows authorized users to retrieve the complete details of a single after-sales case (e.g., return, exchange, dispute) for a specific order using both the order ID and after-sales case ID. The operation references the ai_commerce_order_after_sales table and returns all relevant fields, such as order linkage, order item reference, actor, after-sales type, case status, timestamps, and any notes provided.\n\nPermission checks ensure that only the order's buyer, the involved seller (when applicable), or a system admin can obtain this information. The operation incorporates logic to return only after-sales cases relevant to the requested order, minimizing leakage of other users' data.\n\nValidation includes confirming existence of both the order and after-sales case, as well as correct association between them. Error handling covers not-found, unauthorized access, and association mismatch cases. Successful responses deliver all record fields as defined in the Prisma model.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed after-sales service record for the given order and after-sales case.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"admin","authorizationType":null,"name":"at"},{"specification":"This operation creates a new after-sales case (return, exchange, warranty claim, or dispute) for an existing order, as recorded in the ai_commerce_order_after_sales table. It requires the order ID and complete after-sales request data. Only authorized buyers (who placed the order) or the involved seller can submit such requests. The operation enforces strong validation of input—type, references, note, and initial status. Upon a successful call, a new after-sales record is created, audit trails are updated, and workflow for follow-up is launched.","path":"/aiCommerce/buyer/orders/{orderId}/afterSales","method":"post","summary":"Create a new after-sales case for an order (ai_commerce_order_after_sales).","description":"Allows an authenticated buyer (owner of the order) or the corresponding seller to submit a new after-sales request for a particular order. Based on the ai_commerce_order_after_sales Prisma schema, the request may cover various after-sales case types, such as return, exchange, dispute, or warranty claim. The input is validated to ensure the order exists and belongs to the caller, that the type/status/actor/notes are correct, and that business logic (e.g., eligible item or period) is satisfied.\n\nThis operation creates a new case record linked to the order, the requesting actor, and optionally an order item. Triggers audit and compliance workflows as per business requirements. Permission checks prevent unauthorized users from creating after-sales cases for orders they are not involved with. Upon successful creation, responds with the complete after-sales record as persisted.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order for which after-sales service is being requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"After-sales case creation payload as per IAiCommerceOrderAfterSales.ICreate DTO structure.","typeName":"IAiCommerceOrderAfterSales.ICreate"},"responseBody":{"description":"The newly created after-sales case record for the requested order.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"buyer","authorizationType":null,"name":"create"},{"specification":"This operation creates a new after-sales case (return, exchange, warranty claim, or dispute) for an existing order, as recorded in the ai_commerce_order_after_sales table. It requires the order ID and complete after-sales request data. Only authorized buyers (who placed the order) or the involved seller can submit such requests. The operation enforces strong validation of input—type, references, note, and initial status. Upon a successful call, a new after-sales record is created, audit trails are updated, and workflow for follow-up is launched.","path":"/aiCommerce/seller/orders/{orderId}/afterSales","method":"post","summary":"Create a new after-sales case for an order (ai_commerce_order_after_sales).","description":"Allows an authenticated buyer (owner of the order) or the corresponding seller to submit a new after-sales request for a particular order. Based on the ai_commerce_order_after_sales Prisma schema, the request may cover various after-sales case types, such as return, exchange, dispute, or warranty claim. The input is validated to ensure the order exists and belongs to the caller, that the type/status/actor/notes are correct, and that business logic (e.g., eligible item or period) is satisfied.\n\nThis operation creates a new case record linked to the order, the requesting actor, and optionally an order item. Triggers audit and compliance workflows as per business requirements. Permission checks prevent unauthorized users from creating after-sales cases for orders they are not involved with. Upon successful creation, responds with the complete after-sales record as persisted.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order for which after-sales service is being requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"After-sales case creation payload as per IAiCommerceOrderAfterSales.ICreate DTO structure.","typeName":"IAiCommerceOrderAfterSales.ICreate"},"responseBody":{"description":"The newly created after-sales case record for the requested order.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"seller","authorizationType":null,"name":"create"},{"specification":"Update the details of a specific after-sales case (such as changing status, note, or type) for a given order. Linked to the ai_commerce_order_after_sales table. Permission checks restrict updates to authorized actors (usually the original requester, the involved seller, or admin). Complete validation is performed to ensure that the after-sales case belongs to the target order, and the caller is permitted to perform the update. This supports workflow changes (e.g., status progression, providing more details, or resolving the after-sales case).","path":"/aiCommerce/buyer/orders/{orderId}/afterSales/{afterSalesId}","method":"put","summary":"Update an after-sales case for an order (ai_commerce_order_after_sales).","description":"Permits authorized actors—such as the buyer who raised the after-sales request, the responsible seller, or an admin—to submit updates to a specific after-sales record. This endpoint is tied to the ai_commerce_order_after_sales schema and ensures full association integrity between the given order and the after-sales case.\n\nFields like status, note, type, or order item reference may be updated per business rules. Permission logic enforces that only permitted workflow actions (by role and status) are accepted. Full audit/trace of all updates is maintained for compliance. The operation returns the record with updated data post-modification.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the after-sales case.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the after-sales case, using IAiCommerceOrderAfterSales.IUpdate DTO structure.","typeName":"IAiCommerceOrderAfterSales.IUpdate"},"responseBody":{"description":"The updated after-sales case record for the given order.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"buyer","authorizationType":null,"name":"update"},{"specification":"Update the details of a specific after-sales case (such as changing status, note, or type) for a given order. Linked to the ai_commerce_order_after_sales table. Permission checks restrict updates to authorized actors (usually the original requester, the involved seller, or admin). Complete validation is performed to ensure that the after-sales case belongs to the target order, and the caller is permitted to perform the update. This supports workflow changes (e.g., status progression, providing more details, or resolving the after-sales case).","path":"/aiCommerce/seller/orders/{orderId}/afterSales/{afterSalesId}","method":"put","summary":"Update an after-sales case for an order (ai_commerce_order_after_sales).","description":"Permits authorized actors—such as the buyer who raised the after-sales request, the responsible seller, or an admin—to submit updates to a specific after-sales record. This endpoint is tied to the ai_commerce_order_after_sales schema and ensures full association integrity between the given order and the after-sales case.\n\nFields like status, note, type, or order item reference may be updated per business rules. Permission logic enforces that only permitted workflow actions (by role and status) are accepted. Full audit/trace of all updates is maintained for compliance. The operation returns the record with updated data post-modification.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the after-sales case.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the after-sales case, using IAiCommerceOrderAfterSales.IUpdate DTO structure.","typeName":"IAiCommerceOrderAfterSales.IUpdate"},"responseBody":{"description":"The updated after-sales case record for the given order.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"seller","authorizationType":null,"name":"update"},{"specification":"Update the details of a specific after-sales case (such as changing status, note, or type) for a given order. Linked to the ai_commerce_order_after_sales table. Permission checks restrict updates to authorized actors (usually the original requester, the involved seller, or admin). Complete validation is performed to ensure that the after-sales case belongs to the target order, and the caller is permitted to perform the update. This supports workflow changes (e.g., status progression, providing more details, or resolving the after-sales case).","path":"/aiCommerce/admin/orders/{orderId}/afterSales/{afterSalesId}","method":"put","summary":"Update an after-sales case for an order (ai_commerce_order_after_sales).","description":"Permits authorized actors—such as the buyer who raised the after-sales request, the responsible seller, or an admin—to submit updates to a specific after-sales record. This endpoint is tied to the ai_commerce_order_after_sales schema and ensures full association integrity between the given order and the after-sales case.\n\nFields like status, note, type, or order item reference may be updated per business rules. Permission logic enforces that only permitted workflow actions (by role and status) are accepted. Full audit/trace of all updates is maintained for compliance. The operation returns the record with updated data post-modification.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the after-sales case.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales case to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the after-sales case, using IAiCommerceOrderAfterSales.IUpdate DTO structure.","typeName":"IAiCommerceOrderAfterSales.IUpdate"},"responseBody":{"description":"The updated after-sales case record for the given order.","typeName":"IAiCommerceOrderAfterSales"},"authorizationRole":"admin","authorizationType":null,"name":"update"},{"specification":"Permanently removes a specific after-sales case record linked to an order. Connected to the ai_commerce_order_after_sales table, this operation deletes (hard delete) the after-sales record. Only actioned by users with sufficient privilege—typically admins, or potentially the original creator before the case is processed. Proper checks ensure the after-sales case and order are associated, and deletion does not violate business/compliance policies.","path":"/aiCommerce/admin/orders/{orderId}/afterSales/{afterSalesId}","method":"delete","summary":"Delete an after-sales case for an order (ai_commerce_order_after_sales, hard delete).","description":"Enables authorized users (normally admin or owners under specific business rules) to permanently remove an after-sales case record for an order. Based on the ai_commerce_order_after_sales schema, and reflecting that there is no soft-delete column, this operation executes a hard delete.\n\nBefore removing, the function checks association between the order and after-sales record, verifies role/ownership or admin privilege, and ensures no policy or compliance prohibits deletion (such as being within audit window or pending workflow). Upon irrevocable removal, no response body is returned.\n\nError handling manages cases of non-existence, unauthorized attempt, or violations of system rules.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the after-sales record.","schema":{"type":"string","format":"uuid"}},{"name":"afterSalesId","description":"Unique identifier (UUID) of the after-sales record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","authorizationType":null,"name":"erase"},{"specification":"Searches and retrieves a paginated list of all cancellation requests tied to a specific order, with optional filtering and sorting. Linked to the ai_commerce_order_cancellations table. This operation allows for advanced queries, incorporates search criteria, filters by status, time window, actor, and supports full pagination. Used by buyers monitoring their own cancellation requests, sellers for related items, and admins for compliance/audit.","path":"/aiCommerce/buyer/orders/{orderId}/cancellations","method":"patch","summary":"Search and list order cancellations for an order (ai_commerce_order_cancellations).","description":"This operation enables users (order owner, involved seller, or admin) to search, filter, paginate, and sort cancellation requests associated with a specific order. Leveraging the ai_commerce_order_cancellations schema, search criteria can include status, requester, creation/approval/finalization times, and free-text in reason fields.\n\nAdvanced search supports flexible queries as per business needs, including full or partial field matching, time range, and status logic. Permission logic restricts access to users authorized for the target order. The response is a paginated list, structured for efficient UI display, analytics, or workflow follow-up.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) for the parent order whose cancellations are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, sorting, and pagination info as per IAiCommerceOrderCancellation.IRequest DTO structure.","typeName":"IAiCommerceOrderCancellation.IRequest"},"responseBody":{"description":"Paginated list of matching cancellation requests for order.","typeName":"IPageIAiCommerceOrderCancellation"},"authorizationRole":"buyer","authorizationType":null,"name":"index"},{"specification":"Searches and retrieves a paginated list of all cancellation requests tied to a specific order, with optional filtering and sorting. Linked to the ai_commerce_order_cancellations table. This operation allows for advanced queries, incorporates search criteria, filters by status, time window, actor, and supports full pagination. Used by buyers monitoring their own cancellation requests, sellers for related items, and admins for compliance/audit.","path":"/aiCommerce/seller/orders/{orderId}/cancellations","method":"patch","summary":"Search and list order cancellations for an order (ai_commerce_order_cancellations).","description":"This operation enables users (order owner, involved seller, or admin) to search, filter, paginate, and sort cancellation requests associated with a specific order. Leveraging the ai_commerce_order_cancellations schema, search criteria can include status, requester, creation/approval/finalization times, and free-text in reason fields.\n\nAdvanced search supports flexible queries as per business needs, including full or partial field matching, time range, and status logic. Permission logic restricts access to users authorized for the target order. The response is a paginated list, structured for efficient UI display, analytics, or workflow follow-up.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) for the parent order whose cancellations are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, sorting, and pagination info as per IAiCommerceOrderCancellation.IRequest DTO structure.","typeName":"IAiCommerceOrderCancellation.IRequest"},"responseBody":{"description":"Paginated list of matching cancellation requests for order.","typeName":"IPageIAiCommerceOrderCancellation"},"authorizationRole":"seller","authorizationType":null,"name":"index"},{"specification":"Searches and retrieves a paginated list of all cancellation requests tied to a specific order, with optional filtering and sorting. Linked to the ai_commerce_order_cancellations table. This operation allows for advanced queries, incorporates search criteria, filters by status, time window, actor, and supports full pagination. Used by buyers monitoring their own cancellation requests, sellers for related items, and admins for compliance/audit.","path":"/aiCommerce/admin/orders/{orderId}/cancellations","method":"patch","summary":"Search and list order cancellations for an order (ai_commerce_order_cancellations).","description":"This operation enables users (order owner, involved seller, or admin) to search, filter, paginate, and sort cancellation requests associated with a specific order. Leveraging the ai_commerce_order_cancellations schema, search criteria can include status, requester, creation/approval/finalization times, and free-text in reason fields.\n\nAdvanced search supports flexible queries as per business needs, including full or partial field matching, time range, and status logic. Permission logic restricts access to users authorized for the target order. The response is a paginated list, structured for efficient UI display, analytics, or workflow follow-up.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) for the parent order whose cancellations are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, sorting, and pagination info as per IAiCommerceOrderCancellation.IRequest DTO structure.","typeName":"IAiCommerceOrderCancellation.IRequest"},"responseBody":{"description":"Paginated list of matching cancellation requests for order.","typeName":"IPageIAiCommerceOrderCancellation"},"authorizationRole":"admin","authorizationType":null,"name":"index"},{"specification":"Retrieve detail data for a specific cancellation request bound to an order, using its unique cancellationId. Refers to ai_commerce_order_cancellations. Ensures proper association, permissions, and returns full record (status, reason, timestamps, actor IDs, etc). Used by buyers, sellers, or admins to view single cancellation workflows or for compliance/legal purposes.","path":"/aiCommerce/buyer/orders/{orderId}/cancellations/{cancellationId}","method":"get","summary":"Retrieve a specific order cancellation record (ai_commerce_order_cancellations).","description":"Allows an authorized user (order buyer, associated seller for item(s), or admin) to fetch complete information for a particular order cancellation record. The ai_commerce_order_cancellations table is the backing schema. Enforces strict validation: verifies the cancellation record exists, matches the requested order, and that the caller is entitled (as owner, seller, or admin) to view it.\n\nReturned data includes all business fields—status, time markers, actor and order IDs, reason for cancellation, and related workflow/context fields. Used for timeline and audit review in service and compliance flows or UI detail pages.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order which the cancellation is tied to.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) of the cancellation record being requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The cancellation record details as per ai_commerce_order_cancellations.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"buyer","authorizationType":null,"name":"at"},{"specification":"Retrieve detail data for a specific cancellation request bound to an order, using its unique cancellationId. Refers to ai_commerce_order_cancellations. Ensures proper association, permissions, and returns full record (status, reason, timestamps, actor IDs, etc). Used by buyers, sellers, or admins to view single cancellation workflows or for compliance/legal purposes.","path":"/aiCommerce/seller/orders/{orderId}/cancellations/{cancellationId}","method":"get","summary":"Retrieve a specific order cancellation record (ai_commerce_order_cancellations).","description":"Allows an authorized user (order buyer, associated seller for item(s), or admin) to fetch complete information for a particular order cancellation record. The ai_commerce_order_cancellations table is the backing schema. Enforces strict validation: verifies the cancellation record exists, matches the requested order, and that the caller is entitled (as owner, seller, or admin) to view it.\n\nReturned data includes all business fields—status, time markers, actor and order IDs, reason for cancellation, and related workflow/context fields. Used for timeline and audit review in service and compliance flows or UI detail pages.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order which the cancellation is tied to.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) of the cancellation record being requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The cancellation record details as per ai_commerce_order_cancellations.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"seller","authorizationType":null,"name":"at"},{"specification":"Retrieve detail data for a specific cancellation request bound to an order, using its unique cancellationId. Refers to ai_commerce_order_cancellations. Ensures proper association, permissions, and returns full record (status, reason, timestamps, actor IDs, etc). Used by buyers, sellers, or admins to view single cancellation workflows or for compliance/legal purposes.","path":"/aiCommerce/admin/orders/{orderId}/cancellations/{cancellationId}","method":"get","summary":"Retrieve a specific order cancellation record (ai_commerce_order_cancellations).","description":"Allows an authorized user (order buyer, associated seller for item(s), or admin) to fetch complete information for a particular order cancellation record. The ai_commerce_order_cancellations table is the backing schema. Enforces strict validation: verifies the cancellation record exists, matches the requested order, and that the caller is entitled (as owner, seller, or admin) to view it.\n\nReturned data includes all business fields—status, time markers, actor and order IDs, reason for cancellation, and related workflow/context fields. Used for timeline and audit review in service and compliance flows or UI detail pages.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order which the cancellation is tied to.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) of the cancellation record being requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The cancellation record details as per ai_commerce_order_cancellations.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"admin","authorizationType":null,"name":"at"},{"specification":"Create a new cancellation request for a given order. Based on ai_commerce_order_cancellations, this operation inserts a new cancellation event for an order. Only authorized order owners (buyers) or participating sellers can trigger this operation. Requires input including reason, item(s), and initial status, validated for eligibility, workflow state, and association. Upon success, creates the cancellation record and returns it.","path":"/aiCommerce/buyer/orders/{orderId}/cancellations","method":"post","summary":"Create a new order cancellation request (ai_commerce_order_cancellations).","description":"Allows an eligible actor (order buyer, or associated seller) to submit a new cancellation for an order as per the ai_commerce_order_cancellations schema. All input fields are validated: association between order, items, actor is checked, and business/permissions logic ensures duplicates or erroneous states are rejected.\n\nThe input includes cancellation reason, relevant item info, and is created with proper linkage. Upon creation, returns the full record with associated IDs, status, time markers, and rationale. Audit records and workflow triggers are updated as required by compliance.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order for which a cancellation is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order cancellation creation data, as per IAiCommerceOrderCancellation.ICreate DTO structure.","typeName":"IAiCommerceOrderCancellation.ICreate"},"responseBody":{"description":"Newly created order cancellation record.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"buyer","authorizationType":null,"name":"create"},{"specification":"Create a new cancellation request for a given order. Based on ai_commerce_order_cancellations, this operation inserts a new cancellation event for an order. Only authorized order owners (buyers) or participating sellers can trigger this operation. Requires input including reason, item(s), and initial status, validated for eligibility, workflow state, and association. Upon success, creates the cancellation record and returns it.","path":"/aiCommerce/seller/orders/{orderId}/cancellations","method":"post","summary":"Create a new order cancellation request (ai_commerce_order_cancellations).","description":"Allows an eligible actor (order buyer, or associated seller) to submit a new cancellation for an order as per the ai_commerce_order_cancellations schema. All input fields are validated: association between order, items, actor is checked, and business/permissions logic ensures duplicates or erroneous states are rejected.\n\nThe input includes cancellation reason, relevant item info, and is created with proper linkage. Upon creation, returns the full record with associated IDs, status, time markers, and rationale. Audit records and workflow triggers are updated as required by compliance.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order for which a cancellation is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order cancellation creation data, as per IAiCommerceOrderCancellation.ICreate DTO structure.","typeName":"IAiCommerceOrderCancellation.ICreate"},"responseBody":{"description":"Newly created order cancellation record.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"seller","authorizationType":null,"name":"create"},{"specification":"Update an existing order cancellation request for a given order. Refers to ai_commerce_order_cancellations. Only permissible for authorized owners, sellers, or admins. Input data includes updatable fields (status, reason, item linkage, etc.), checked for state integrity and role allowance. Upon acceptance, the record is updated and returned.","path":"/aiCommerce/buyer/orders/{orderId}/cancellations/{cancellationId}","method":"put","summary":"Update an order cancellation request (ai_commerce_order_cancellations).","description":"Permits an authorized user (owner, associated seller, or admin) to update fields in a specific order cancellation record for a given order. The ai_commerce_order_cancellations schema supports updates to status, reason, workflow data, subject to business validation (e.g., cannot update after finalization).\n\nPermission logic restricts modifications to appropriate states and roles. Full validation ensures record exists, is associated with the order, caller is allowed, and update complies with workflow. The updated record is returned upon success, with audit trace.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order associated with the cancellation being updated.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) for the cancellation record being modified.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the cancellation record (IAiCommerceOrderCancellation.IUpdate DTO structure).","typeName":"IAiCommerceOrderCancellation.IUpdate"},"responseBody":{"description":"Updated order cancellation record for the order.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"buyer","authorizationType":null,"name":"update"},{"specification":"Update an existing order cancellation request for a given order. Refers to ai_commerce_order_cancellations. Only permissible for authorized owners, sellers, or admins. Input data includes updatable fields (status, reason, item linkage, etc.), checked for state integrity and role allowance. Upon acceptance, the record is updated and returned.","path":"/aiCommerce/seller/orders/{orderId}/cancellations/{cancellationId}","method":"put","summary":"Update an order cancellation request (ai_commerce_order_cancellations).","description":"Permits an authorized user (owner, associated seller, or admin) to update fields in a specific order cancellation record for a given order. The ai_commerce_order_cancellations schema supports updates to status, reason, workflow data, subject to business validation (e.g., cannot update after finalization).\n\nPermission logic restricts modifications to appropriate states and roles. Full validation ensures record exists, is associated with the order, caller is allowed, and update complies with workflow. The updated record is returned upon success, with audit trace.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order associated with the cancellation being updated.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) for the cancellation record being modified.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the cancellation record (IAiCommerceOrderCancellation.IUpdate DTO structure).","typeName":"IAiCommerceOrderCancellation.IUpdate"},"responseBody":{"description":"Updated order cancellation record for the order.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"seller","authorizationType":null,"name":"update"},{"specification":"Update an existing order cancellation request for a given order. Refers to ai_commerce_order_cancellations. Only permissible for authorized owners, sellers, or admins. Input data includes updatable fields (status, reason, item linkage, etc.), checked for state integrity and role allowance. Upon acceptance, the record is updated and returned.","path":"/aiCommerce/admin/orders/{orderId}/cancellations/{cancellationId}","method":"put","summary":"Update an order cancellation request (ai_commerce_order_cancellations).","description":"Permits an authorized user (owner, associated seller, or admin) to update fields in a specific order cancellation record for a given order. The ai_commerce_order_cancellations schema supports updates to status, reason, workflow data, subject to business validation (e.g., cannot update after finalization).\n\nPermission logic restricts modifications to appropriate states and roles. Full validation ensures record exists, is associated with the order, caller is allowed, and update complies with workflow. The updated record is returned upon success, with audit trace.","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order associated with the cancellation being updated.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier (UUID) for the cancellation record being modified.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the cancellation record (IAiCommerceOrderCancellation.IUpdate DTO structure).","typeName":"IAiCommerceOrderCancellation.IUpdate"},"responseBody":{"description":"Updated order cancellation record for the order.","typeName":"IAiCommerceOrderCancellation"},"authorizationRole":"admin","authorizationType":null,"name":"update"},{"specification":"This operation permanently removes a specific refund record related to an order. It targets the ai_commerce_order_refunds table in the Prisma schema. The refund to be deleted is identified by cancellationId and orderId. Only administrators have the authority to perform this hard delete operation, which is typically for correction of errant entries or compliance with legal/audit instructions. Since the order refunds table lacks any soft delete or retention field, this operation will result in a hard removal, with no possibility of recovery after execution. All delete actions are audit-logged for compliance and traceability, and related entities (such as the order record and refund audit logs) are updated to reflect the deletion.","description":"This API endpoint is used to permanently remove a specific refund associated with a given order. The operation uses cancellationId and orderId as path parameters, corresponding to the ai_commerce_order_refunds.id and ai_commerce_orders.id fields, respectively. Execution enforces access control: only platform administrators can perform this operation, in accordance with business compliance protocols.\n\nSecurity and compliance are primary concerns in the lifecycle of a refund, and all delete events are logged in the system audit tables to support legal and forensic audits. There is no soft-delete or retention in this table; deletion is hard and irreversible. All dependencies (including refund history, audit trails, or financial reconciliations) must be updated or checked during business execution.\n\nThis operation is typically only performed following administrative review, dispute resolution, or compliance investigation. Any errors, such as attempt to delete a non-existent or active refund, will result in descriptive business error codes. For deletions related to transaction rollbacks or fraud, further administrative action and notification may be required.","summary":"Permanently delete a specific refund for an order from the ai_commerce_order_refunds table.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"cancellationId","description":"Unique identifier of the refund/cancellation to delete. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/orders/{orderId}/cancellations/{cancellationId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of refund records for a specific order. It operates on the ai_commerce_order_refunds table within the Prisma schema, allowing buyers, sellers, or admins (with proper authorization) to search for and review refunds tied to a specific order by orderId. Advanced filtering and pagination capabilities are included to support large refund histories and analytics/reporting requirements.","description":"Retrieve a filtered, paginated list of order refunds using advanced search, filter, and sort capabilities. The operation uses orderId as the primary path parameter and leverages POST body parameters for complex querying, corresponding directly to ai_commerce_order_refunds attributes such as refund_code, reason, status, and amount.\n\nThis endpoint is critical for customer support, compliance review, and financial operations, as it enables authorized users to review historic, active, and pending refunds in detail. Security controls ensure that only users with an appropriate business relationship to the order—the buyer, seller, or relevant admin—can access refund history for the order. Business logic supports result pagination, complex search criteria, and customizable sort orders.\n\nThe operation integrates with backend business logic to ensure that only refunds actually belonging to the given order are returned, and that sensitive financial metadata is appropriately masked or filtered according to user authorization. Errors for invalid order IDs or unauthorized access are handled gracefully, with explicit error messages and audit logging of all result requests.","summary":"List all refunds for a specific order with search and pagination from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for refund list retrieval, matching IAiCommerceOrderRefund.IRequest schema.","typeName":"IAiCommerceOrderRefund.IRequest"},"responseBody":{"description":"Paginated list of refunds matching search and filter criteria for the given order.","typeName":"IPageIAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/buyer/orders/{orderId}/refunds","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a paginated list of refund records for a specific order. It operates on the ai_commerce_order_refunds table within the Prisma schema, allowing buyers, sellers, or admins (with proper authorization) to search for and review refunds tied to a specific order by orderId. Advanced filtering and pagination capabilities are included to support large refund histories and analytics/reporting requirements.","description":"Retrieve a filtered, paginated list of order refunds using advanced search, filter, and sort capabilities. The operation uses orderId as the primary path parameter and leverages POST body parameters for complex querying, corresponding directly to ai_commerce_order_refunds attributes such as refund_code, reason, status, and amount.\n\nThis endpoint is critical for customer support, compliance review, and financial operations, as it enables authorized users to review historic, active, and pending refunds in detail. Security controls ensure that only users with an appropriate business relationship to the order—the buyer, seller, or relevant admin—can access refund history for the order. Business logic supports result pagination, complex search criteria, and customizable sort orders.\n\nThe operation integrates with backend business logic to ensure that only refunds actually belonging to the given order are returned, and that sensitive financial metadata is appropriately masked or filtered according to user authorization. Errors for invalid order IDs or unauthorized access are handled gracefully, with explicit error messages and audit logging of all result requests.","summary":"List all refunds for a specific order with search and pagination from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for refund list retrieval, matching IAiCommerceOrderRefund.IRequest schema.","typeName":"IAiCommerceOrderRefund.IRequest"},"responseBody":{"description":"Paginated list of refunds matching search and filter criteria for the given order.","typeName":"IPageIAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/seller/orders/{orderId}/refunds","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a paginated list of refund records for a specific order. It operates on the ai_commerce_order_refunds table within the Prisma schema, allowing buyers, sellers, or admins (with proper authorization) to search for and review refunds tied to a specific order by orderId. Advanced filtering and pagination capabilities are included to support large refund histories and analytics/reporting requirements.","description":"Retrieve a filtered, paginated list of order refunds using advanced search, filter, and sort capabilities. The operation uses orderId as the primary path parameter and leverages POST body parameters for complex querying, corresponding directly to ai_commerce_order_refunds attributes such as refund_code, reason, status, and amount.\n\nThis endpoint is critical for customer support, compliance review, and financial operations, as it enables authorized users to review historic, active, and pending refunds in detail. Security controls ensure that only users with an appropriate business relationship to the order—the buyer, seller, or relevant admin—can access refund history for the order. Business logic supports result pagination, complex search criteria, and customizable sort orders.\n\nThe operation integrates with backend business logic to ensure that only refunds actually belonging to the given order are returned, and that sensitive financial metadata is appropriately masked or filtered according to user authorization. Errors for invalid order IDs or unauthorized access are handled gracefully, with explicit error messages and audit logging of all result requests.","summary":"List all refunds for a specific order with search and pagination from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for refund list retrieval, matching IAiCommerceOrderRefund.IRequest schema.","typeName":"IAiCommerceOrderRefund.IRequest"},"responseBody":{"description":"Paginated list of refunds matching search and filter criteria for the given order.","typeName":"IPageIAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/admin/orders/{orderId}/refunds","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the detailed information for a specific refund associated with an order. It works on ai_commerce_order_refunds in the Prisma schema. Only authorized users (the order's buyer, the seller associated with the order item, or an admin) can view full details, which include refund status, amounts, reasons, and audit fields. Path parameters orderId and refundId uniquely identify the refund record.","description":"Retrieve full detail of a specific order refund record by orderId and refundId. The operation corresponds directly to ai_commerce_order_refunds and is used by customer support, buyers, sellers, and compliance administrators to view refund status, amount, currency, request/resolve timestamps, actor, and business notes.\n\nSecurity logic ensures only stakeholders authorized by business rules can access the refund: this includes the buyer involved in the order, the seller responsible for the product, and platform administrators. The API returns sensitive financial and process details according to the role of the requester, masking or filtering fields if needed.\n\nIf either the order or refund ID is not found, or access is attempted by an unauthorized party, the system responds with explicit error codes and explanations. Refund detail retrieval is also monitored for compliance and audit logging purposes.","summary":"Get detailed information for a specific refund associated with an order from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the target refund record. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the specific refund record, matching IAiCommerceOrderRefund schema.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/buyer/orders/{orderId}/refunds/{refundId}","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves the detailed information for a specific refund associated with an order. It works on ai_commerce_order_refunds in the Prisma schema. Only authorized users (the order's buyer, the seller associated with the order item, or an admin) can view full details, which include refund status, amounts, reasons, and audit fields. Path parameters orderId and refundId uniquely identify the refund record.","description":"Retrieve full detail of a specific order refund record by orderId and refundId. The operation corresponds directly to ai_commerce_order_refunds and is used by customer support, buyers, sellers, and compliance administrators to view refund status, amount, currency, request/resolve timestamps, actor, and business notes.\n\nSecurity logic ensures only stakeholders authorized by business rules can access the refund: this includes the buyer involved in the order, the seller responsible for the product, and platform administrators. The API returns sensitive financial and process details according to the role of the requester, masking or filtering fields if needed.\n\nIf either the order or refund ID is not found, or access is attempted by an unauthorized party, the system responds with explicit error codes and explanations. Refund detail retrieval is also monitored for compliance and audit logging purposes.","summary":"Get detailed information for a specific refund associated with an order from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the target refund record. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the specific refund record, matching IAiCommerceOrderRefund schema.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/seller/orders/{orderId}/refunds/{refundId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves the detailed information for a specific refund associated with an order. It works on ai_commerce_order_refunds in the Prisma schema. Only authorized users (the order's buyer, the seller associated with the order item, or an admin) can view full details, which include refund status, amounts, reasons, and audit fields. Path parameters orderId and refundId uniquely identify the refund record.","description":"Retrieve full detail of a specific order refund record by orderId and refundId. The operation corresponds directly to ai_commerce_order_refunds and is used by customer support, buyers, sellers, and compliance administrators to view refund status, amount, currency, request/resolve timestamps, actor, and business notes.\n\nSecurity logic ensures only stakeholders authorized by business rules can access the refund: this includes the buyer involved in the order, the seller responsible for the product, and platform administrators. The API returns sensitive financial and process details according to the role of the requester, masking or filtering fields if needed.\n\nIf either the order or refund ID is not found, or access is attempted by an unauthorized party, the system responds with explicit error codes and explanations. Refund detail retrieval is also monitored for compliance and audit logging purposes.","summary":"Get detailed information for a specific refund associated with an order from ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the target refund record. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the specific refund record, matching IAiCommerceOrderRefund schema.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/admin/orders/{orderId}/refunds/{refundId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new refund request for a specific order. It operates on the ai_commerce_order_refunds table of the Prisma schema. The refund is created with the provided details (amount, status, reason, actor) tied to the specified orderId. Only buyers (for self-initiated refunds), authorized sellers, and admins may create a new refund for a corresponding order, subject to business validation on order/refund status, eligibility, limits, and compliance constraints.","description":"Create a new refund record associated with an order by providing the necessary data in the request body, as defined by the IAiCommerceOrderRefund.ICreate schema. This operation appends a new row to ai_commerce_order_refunds, linking it to orderId and setting initial statuses and amounts per the submitted refund request data. This API is a critical part of customer support and after-sales flows.\n\nRole-specific business logic is enforced: only the buyer who placed the order, a seller for products related to the order (where permitted by policy/business logic), or an admin can create a refund. Refund eligibility, requested amount, status, and reason are validated against the order/payment status. Compliance logic may block or require further escalation for orders that are not eligible for refund or are already fully refunded. The system creates required audit logs, both for the creation action and for compliance tracking of all refund activity.\n\nErrors resulting from invalid orderId, bad input, or ineligible status result in explicit business error codes, and all failed creation attempts are logged. The created refund is returned in the response on success.","summary":"Create a refund record for a specific order in ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New refund request data for the order, matching IAiCommerceOrderRefund.ICreate schema.","typeName":"IAiCommerceOrderRefund.ICreate"},"responseBody":{"description":"The created refund record including all fields as defined by IAiCommerceOrderRefund.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"create","path":"/aiCommerce/buyer/orders/{orderId}/refunds","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation creates a new refund request for a specific order. It operates on the ai_commerce_order_refunds table of the Prisma schema. The refund is created with the provided details (amount, status, reason, actor) tied to the specified orderId. Only buyers (for self-initiated refunds), authorized sellers, and admins may create a new refund for a corresponding order, subject to business validation on order/refund status, eligibility, limits, and compliance constraints.","description":"Create a new refund record associated with an order by providing the necessary data in the request body, as defined by the IAiCommerceOrderRefund.ICreate schema. This operation appends a new row to ai_commerce_order_refunds, linking it to orderId and setting initial statuses and amounts per the submitted refund request data. This API is a critical part of customer support and after-sales flows.\n\nRole-specific business logic is enforced: only the buyer who placed the order, a seller for products related to the order (where permitted by policy/business logic), or an admin can create a refund. Refund eligibility, requested amount, status, and reason are validated against the order/payment status. Compliance logic may block or require further escalation for orders that are not eligible for refund or are already fully refunded. The system creates required audit logs, both for the creation action and for compliance tracking of all refund activity.\n\nErrors resulting from invalid orderId, bad input, or ineligible status result in explicit business error codes, and all failed creation attempts are logged. The created refund is returned in the response on success.","summary":"Create a refund record for a specific order in ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New refund request data for the order, matching IAiCommerceOrderRefund.ICreate schema.","typeName":"IAiCommerceOrderRefund.ICreate"},"responseBody":{"description":"The created refund record including all fields as defined by IAiCommerceOrderRefund.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"create","path":"/aiCommerce/seller/orders/{orderId}/refunds","method":"post","authorizationRole":"seller","authorizationType":null},{"specification":"This operation creates a new refund request for a specific order. It operates on the ai_commerce_order_refunds table of the Prisma schema. The refund is created with the provided details (amount, status, reason, actor) tied to the specified orderId. Only buyers (for self-initiated refunds), authorized sellers, and admins may create a new refund for a corresponding order, subject to business validation on order/refund status, eligibility, limits, and compliance constraints.","description":"Create a new refund record associated with an order by providing the necessary data in the request body, as defined by the IAiCommerceOrderRefund.ICreate schema. This operation appends a new row to ai_commerce_order_refunds, linking it to orderId and setting initial statuses and amounts per the submitted refund request data. This API is a critical part of customer support and after-sales flows.\n\nRole-specific business logic is enforced: only the buyer who placed the order, a seller for products related to the order (where permitted by policy/business logic), or an admin can create a refund. Refund eligibility, requested amount, status, and reason are validated against the order/payment status. Compliance logic may block or require further escalation for orders that are not eligible for refund or are already fully refunded. The system creates required audit logs, both for the creation action and for compliance tracking of all refund activity.\n\nErrors resulting from invalid orderId, bad input, or ineligible status result in explicit business error codes, and all failed creation attempts are logged. The created refund is returned in the response on success.","summary":"Create a refund record for a specific order in ai_commerce_order_refunds.","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund is attached. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New refund request data for the order, matching IAiCommerceOrderRefund.ICreate schema.","typeName":"IAiCommerceOrderRefund.ICreate"},"responseBody":{"description":"The created refund record including all fields as defined by IAiCommerceOrderRefund.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["buyer","seller","admin"],"name":"create","path":"/aiCommerce/admin/orders/{orderId}/refunds","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing refund record associated with an order. It updates fields such as amount, status, reason, or notes based on business rules. The modification is written to ai_commerce_order_refunds in the Prisma schema, with both refundId and orderId required for identification. Only platform administrators may perform updates, supporting corrective or escalated actions during after-sales, compliance, or error correction workflows. Every update creates an audit log entry for legal/compliance requirements.","description":"Update a refund record identified by orderId and refundId by providing new refund data that matches the IAiCommerceOrderRefund.IUpdate schema. This operation enables correction or escalation for refund records—such as adjusting amounts, changing status, or adding compliance notes—under strict administrative control. All changes are written to ai_commerce_order_refunds, and a fully detailed audit record is automatically generated.\n\nBusiness logic restricts this operation to admins, supporting scenarios like regulatory changes, error correction, or compliance requests. Normal users and sellers are not permitted to update existing refund records. The update operation validates field values according to the schema and business/financial rules, including that the refund must actually belong to the specified order, and that the update does not violate refund status, currency, or payment settlement conditions.\n\nConcurrent updates, invalid refund/order IDs, or validation failures result in clear business error codes and do not result in partial writes. The fully updated refund record is returned in the response for confirmation and any post-processing.","summary":"Update an existing refund for an order in ai_commerce_order_refunds (admin-only).","parameters":[{"name":"orderId","description":"Unique identifier of the order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated refund data as defined in IAiCommerceOrderRefund.IUpdate schema.","typeName":"IAiCommerceOrderRefund.IUpdate"},"responseBody":{"description":"The fully updated refund record, as defined in IAiCommerceOrderRefund.","typeName":"IAiCommerceOrderRefund"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/orders/{orderId}/refunds/{refundId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes a specific refund record attached to an order. It operates on ai_commerce_order_refunds in the Prisma schema. Only admins are authorized to perform this hard delete due to the compliance and financial impact. As with most transaction records, this deletion is irreversible and fully audit-logged. Both orderId and refundId are required.","description":"Permanently erase the refund record identified by orderId and refundId from the ai_commerce_order_refunds table. This operation is specifically restricted to admins due to the sensitive nature of refund removal (affecting financial, compliance, and auditor records).\n\nThe deletion is a hard remove (no soft delete present in this table), and it is handled with system-wide audit logging of the operation and all dependent changes. Use of this operation is very limited outside administrative correction, compliance, or error remediation scenarios. All other refunds are retained for legal/business evidence.\n\nAttempts to delete non-existent or locked refunds (those attached to closed/settled orders or in the compliance hold state) will result in clear business error responses. This ensures both data integrity and full traceability through post-operation logs.","summary":"Hard delete a specific refund record from ai_commerce_order_refunds for an order (admin only).","parameters":[{"name":"orderId","description":"Unique identifier of the order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record to be deleted. Must be a UUID string referencing ai_commerce_order_refunds.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/orders/{orderId}/refunds/{refundId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves analytics and key performance metrics for a specific order. It is implemented on the ai_commerce_order_analytics table in the Prisma schema. Only the buyer who placed the order, the associated seller, or platform admins are authorized to retrieve analytics. Returns detailed metrics such as order value, items count, refunds, after-sales, completion time, and last status.","description":"Retrieve the analytics information and performance statistics for a given order, based on orderId. The API returns aggregated and real-time metrics including order value, item count, total refunds, after-sales incidents, completion timing, and the last known order status. The ai_commerce_order_analytics table is the data source but output is filtered based on role: the buyer, related seller, or admin can retrieve metrics suitable to business needs.\n\nAnalytics endpoints support after-sales decision making, compliance reviews, operational analysis, and customer reporting. Data is filtered to ensure privacy (e.g., only the buyer can access their own order, sellers only see their own fulfillment analytics, and only admins can retrieve full analytics).\n\nIf the order ID does not exist or is not associated with the requester, explicit business error responses are returned. All access is audit-logged to meet compliance and performance requirements.","summary":"Get order analytics and performance statistics by orderId from ai_commerce_order_analytics.","parameters":[{"name":"orderId","description":"Unique identifier of the order whose analytics are being requested. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed analytics and performance metrics for the order, as defined in IAiCommerceOrderAnalytics.","typeName":"IAiCommerceOrderAnalytics"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/buyer/orders/{orderId}/analytics","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves analytics and key performance metrics for a specific order. It is implemented on the ai_commerce_order_analytics table in the Prisma schema. Only the buyer who placed the order, the associated seller, or platform admins are authorized to retrieve analytics. Returns detailed metrics such as order value, items count, refunds, after-sales, completion time, and last status.","description":"Retrieve the analytics information and performance statistics for a given order, based on orderId. The API returns aggregated and real-time metrics including order value, item count, total refunds, after-sales incidents, completion timing, and the last known order status. The ai_commerce_order_analytics table is the data source but output is filtered based on role: the buyer, related seller, or admin can retrieve metrics suitable to business needs.\n\nAnalytics endpoints support after-sales decision making, compliance reviews, operational analysis, and customer reporting. Data is filtered to ensure privacy (e.g., only the buyer can access their own order, sellers only see their own fulfillment analytics, and only admins can retrieve full analytics).\n\nIf the order ID does not exist or is not associated with the requester, explicit business error responses are returned. All access is audit-logged to meet compliance and performance requirements.","summary":"Get order analytics and performance statistics by orderId from ai_commerce_order_analytics.","parameters":[{"name":"orderId","description":"Unique identifier of the order whose analytics are being requested. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed analytics and performance metrics for the order, as defined in IAiCommerceOrderAnalytics.","typeName":"IAiCommerceOrderAnalytics"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/seller/orders/{orderId}/analytics","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves analytics and key performance metrics for a specific order. It is implemented on the ai_commerce_order_analytics table in the Prisma schema. Only the buyer who placed the order, the associated seller, or platform admins are authorized to retrieve analytics. Returns detailed metrics such as order value, items count, refunds, after-sales, completion time, and last status.","description":"Retrieve the analytics information and performance statistics for a given order, based on orderId. The API returns aggregated and real-time metrics including order value, item count, total refunds, after-sales incidents, completion timing, and the last known order status. The ai_commerce_order_analytics table is the data source but output is filtered based on role: the buyer, related seller, or admin can retrieve metrics suitable to business needs.\n\nAnalytics endpoints support after-sales decision making, compliance reviews, operational analysis, and customer reporting. Data is filtered to ensure privacy (e.g., only the buyer can access their own order, sellers only see their own fulfillment analytics, and only admins can retrieve full analytics).\n\nIf the order ID does not exist or is not associated with the requester, explicit business error responses are returned. All access is audit-logged to meet compliance and performance requirements.","summary":"Get order analytics and performance statistics by orderId from ai_commerce_order_analytics.","parameters":[{"name":"orderId","description":"Unique identifier of the order whose analytics are being requested. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed analytics and performance metrics for the order, as defined in IAiCommerceOrderAnalytics.","typeName":"IAiCommerceOrderAnalytics"},"authorizationRoles":["buyer","seller","admin"],"name":"at","path":"/aiCommerce/admin/orders/{orderId}/analytics","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of historical snapshots of an order. It operates on the ai_commerce_order_snapshot_logs table in the Prisma schema. The client can specify filter, search, and pagination options in the request body. Access is allowed for the buyer, related seller, and admin. Returns a paginated list of order snapshot logs, each containing full state capture of the order (as JSON) at a mutation event.","description":"Retrieve historical order state snapshots for a given orderId, supporting compliance, audit, and advanced troubleshooting. This endpoint allows for search, filter, sort, and pagination through POST body query parameters as defined in IAiCommerceOrderSnapshotLog.IRequest. The output matches IPageIAiCommerceOrderSnapshotLog structure, including all required order snapshot data.\n\nHistorical snapshots are used for forensics, compliance review, order recovery, dispute investigation, and business analytics. Only authorized stakeholders (buyer, seller, or admin) can access the snapshot log. All accesses are audit-logged. Error conditions—such as non-existent orders or unauthorized access—produce appropriate error codes and descriptive messages, with no exposure of sensitive snapshot content to unauthenticated or unauthorized users.","summary":"Search and list all historical snapshot logs for a specific order from ai_commerce_order_snapshot_logs.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order snapshot log list, matching IAiCommerceOrderSnapshotLog.IRequest schema.","typeName":"IAiCommerceOrderSnapshotLog.IRequest"},"responseBody":{"description":"Paginated list of historical order snapshot logs for the target order, matching IPageIAiCommerceOrderSnapshotLog schema.","typeName":"IPageIAiCommerceOrderSnapshotLog"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/buyer/orders/{orderId}/snapshots","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a paginated list of historical snapshots of an order. It operates on the ai_commerce_order_snapshot_logs table in the Prisma schema. The client can specify filter, search, and pagination options in the request body. Access is allowed for the buyer, related seller, and admin. Returns a paginated list of order snapshot logs, each containing full state capture of the order (as JSON) at a mutation event.","description":"Retrieve historical order state snapshots for a given orderId, supporting compliance, audit, and advanced troubleshooting. This endpoint allows for search, filter, sort, and pagination through POST body query parameters as defined in IAiCommerceOrderSnapshotLog.IRequest. The output matches IPageIAiCommerceOrderSnapshotLog structure, including all required order snapshot data.\n\nHistorical snapshots are used for forensics, compliance review, order recovery, dispute investigation, and business analytics. Only authorized stakeholders (buyer, seller, or admin) can access the snapshot log. All accesses are audit-logged. Error conditions—such as non-existent orders or unauthorized access—produce appropriate error codes and descriptive messages, with no exposure of sensitive snapshot content to unauthenticated or unauthorized users.","summary":"Search and list all historical snapshot logs for a specific order from ai_commerce_order_snapshot_logs.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order snapshot log list, matching IAiCommerceOrderSnapshotLog.IRequest schema.","typeName":"IAiCommerceOrderSnapshotLog.IRequest"},"responseBody":{"description":"Paginated list of historical order snapshot logs for the target order, matching IPageIAiCommerceOrderSnapshotLog schema.","typeName":"IPageIAiCommerceOrderSnapshotLog"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/seller/orders/{orderId}/snapshots","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a paginated list of historical snapshots of an order. It operates on the ai_commerce_order_snapshot_logs table in the Prisma schema. The client can specify filter, search, and pagination options in the request body. Access is allowed for the buyer, related seller, and admin. Returns a paginated list of order snapshot logs, each containing full state capture of the order (as JSON) at a mutation event.","description":"Retrieve historical order state snapshots for a given orderId, supporting compliance, audit, and advanced troubleshooting. This endpoint allows for search, filter, sort, and pagination through POST body query parameters as defined in IAiCommerceOrderSnapshotLog.IRequest. The output matches IPageIAiCommerceOrderSnapshotLog structure, including all required order snapshot data.\n\nHistorical snapshots are used for forensics, compliance review, order recovery, dispute investigation, and business analytics. Only authorized stakeholders (buyer, seller, or admin) can access the snapshot log. All accesses are audit-logged. Error conditions—such as non-existent orders or unauthorized access—produce appropriate error codes and descriptive messages, with no exposure of sensitive snapshot content to unauthenticated or unauthorized users.","summary":"Search and list all historical snapshot logs for a specific order from ai_commerce_order_snapshot_logs.","parameters":[{"name":"orderId","description":"Unique identifier of the target order. Must be a UUID string referencing ai_commerce_orders.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for order snapshot log list, matching IAiCommerceOrderSnapshotLog.IRequest schema.","typeName":"IAiCommerceOrderSnapshotLog.IRequest"},"responseBody":{"description":"Paginated list of historical order snapshot logs for the target order, matching IPageIAiCommerceOrderSnapshotLog schema.","typeName":"IPageIAiCommerceOrderSnapshotLog"},"authorizationRoles":["buyer","seller","admin"],"name":"index","path":"/aiCommerce/admin/orders/{orderId}/snapshots","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the audit logs associated with a single order. This operation pertains to the 'ai_commerce_order_audit_logs' table in the Prisma schema, which stores an immutable, append-only record of every critical action for orders, items, refunds, after-sales, or fulfillments. This API returns a paginated list of audit log entries such as event type, actor, note, and timestamp, for comprehensive traceability and compliance checks.","description":"This API operation allows clients to retrieve a paginated, filterable list of all audit logs connected to a specific order. Audit logs document every critical order-related action—creation, update, payment, refund, fulfillment, cancellation, after-sales, and associated notes—ensuring full compliance with business traceability, legal evidence preservation, and transparent auditability per the ai_commerce_order_audit_logs table.\n\nEach audit log entry contains details such as the type of action performed, the actor (buyer, seller, admin), contextual notes, and the precise timestamp. This is foundational for compliance, forensic analysis, and regulatory reporting, enabling both admins and business users to reconstruct the complete lifecycle of an order.\n\nData access is typically restricted based on authorization level (e.g., admin access required for sensitive audit data) and may include pagination, filtering by event type, and date ranges. This endpoint is fundamental for legal dispute support, operational analytics, and system integrity monitoring.","summary":"Retrieve a paginated list of audit logs for a specific order from the ai_commerce_order_audit_logs table.","parameters":[{"name":"orderId","description":"Unique identifier for the target order whose audit logs are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Audit log search, pagination, and filter criteria for a given order.","typeName":"IAiCommerceOrderAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit log entries related to the specified order, as defined in the audit logs table.","typeName":"IPageIAiCommerceOrderAuditLog"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/orders/{orderId}/auditLogs","method":"patch","authorizationType":null,"authorizationRole":"admin"},{"specification":"Retrieve a paginated, filterable list of payment records from the Payment subsystem. This endpoint operates on the ai_commerce_payments table, enabling authorized admin to search historic payment records by status, method, date, or amount for financial analytics, fraud detection, or operational troubleshooting.","description":"This API retrieves a paginated and filterable list of payments recorded in the ai_commerce_payments table. Each payment entry includes details such as payment status, amount, currency, associated order/payment reference, method, issued and confirmed timestamps, and failure reasons as applicable.\n\nAdmins can apply filters to search payments by date range, method, currency, and status (pending, paid, failed, refunded, etc.), as well as sort and page through results. This function is crucial for back-office finance teams conducting audits, reviewing settlement activity, analyzing transaction history, and responding to suspected fraud or system issues.\n\nSensitive fields such as user references, failure reasons, or gateway responses are included in the dataset, so admin-level role is typically required. This endpoint is core to compliance, reporting, and advanced payment analytics modules.","summary":"List and search payment records with advanced filtering and pagination from the ai_commerce_payments table.","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for listing payment records.","typeName":"IAiCommercePayment.IRequest"},"responseBody":{"description":"Paginated list of payments matching the provided filters and search parameters.","typeName":"IPageIAiCommercePayment"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/payments","method":"patch","authorizationType":null,"authorizationRole":"admin"},{"specification":"Retrieve payment details for a specific payment event. This operation interfaces with the ai_commerce_payments table and provides a detailed view of payment status, amount, order linkage, currency, and relevant gateway details for a single transaction, supporting compliance, finance, and troubleshooting workflows.","description":"This endpoint returns the detailed record for a specified payment, as managed by the ai_commerce_payments schema model. The retrieved information includes payment status, reference code, amount, issued and confirmation times, any failure reason, and related order or user linkage.\n\nThis operation supports compliance with financial reporting, helps admin review payment settlement status, troubleshoot failed transactions, or provide resolution for refunds and disputes. Data access is limited to authorized administrative users and may be used synergistically with payment audit, refund, or order management endpoints for deeper financial operations and system integrity.","summary":"Retrieve full detail for a specific payment event from the ai_commerce_payments table.","parameters":[{"name":"paymentId","description":"Identifier of the payment record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All details stored for the requested payment transaction, as per the payments table, including status, timestamps, and failure information.","typeName":"IAiCommercePayment"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/payments/{paymentId}","method":"get","authorizationType":null,"authorizationRole":"admin"},{"specification":"Create a new payment transaction record in the ai_commerce_payments table. Invoked by the payment gateway or client upon payment initiation, this operation creates a canonical log of the payment event, recording status, reference, amount, method, currency, and issue timestamp. It triggers subsequent payment verification, settlement, and audit processes within the AI Commerce payments system.","description":"This API allows for the creation of a new payment entry in the ai_commerce_payments table. All business logic regarding uniqueness of the payment reference, initial status, amount, currency, and linkage to orders or users is handled according to the schema definitions.\n\nUpon POST, the system logs the payment with a unique payment_reference, issued_at timestamp, and status (e.g., 'pending'), capturing all essential data for future confirmation, refund, and compliance audit. The creation of a payment is a trigger for further processing, including confirmation by payment gateways, potential fraud checks, and linking to downstream order fulfillment.\n\nAccess to this endpoint is restricted (typically admin or system users) to prevent unauthorized payment entries. Validation ensures compliance with transaction recording standards, and errors returned for duplication, referencing inexistent orders, or invalid amounts. Integrates with the broader financial subsystem for complete integrity in transaction processing.","summary":"Create a new payment record (pending or issued) in the ai_commerce_payments subsystem for transaction tracking and settlement.","parameters":[],"requestBody":{"description":"Details and metadata for the new payment to be created, including reference, amount, currency, status, and related order info.","typeName":"IAiCommercePayment.ICreate"},"responseBody":{"description":"Resulting detailed payment record after creation, as stored in ai_commerce_payments.","typeName":"IAiCommercePayment"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/payments","method":"post","authorizationType":null,"authorizationRole":"admin"},{"specification":"Update the details for a specified payment transaction in the ai_commerce_payments table. This operation permits updates to payment status, confirmation, or audit details, supporting reconciliation of payment status with external gateways or administrative correction of payment logs when justified for compliance.","description":"This endpoint allows an authorized admin to modify a payment record, updating details such as status (settled, refunded, failed), confirmation time, failure reasons, or audit/correction notes in the ai_commerce_payments table. Typical uses include reconciling payment states after external gateway callbacks, correcting payment errors, or performing compliance-related status changes documented in audit trails.\n\nAll updates must comply with payment reconciliation and compliance policies, ensuring no double-spend or inconsistency with related order status. The endpoint checks for concurrency, authorized admin action, and logs all changes for audit purposes. Incorrect updates are rejected with validation or business error messages.","summary":"Update an existing payment transaction's details/status in the ai_commerce_payments table.","parameters":[{"name":"paymentId","description":"Identifier of the payment record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for payment status, timestamps, or other reconciled values.","typeName":"IAiCommercePayment.IUpdate"},"responseBody":{"description":"Updated payment record post-modification.","typeName":"IAiCommercePayment"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/payments/{paymentId}","method":"put","authorizationType":null,"authorizationRole":"admin"},{"specification":"Permanently remove a payment transaction record from the ai_commerce_payments table. Intended only for administrative or compliance use, this operation performs a hard delete, fully erasing the specified payment record, subject to business and audit constraints. This operation cannot be reversed and should be used cautiously with proper audit justification.","description":"This endpoint performs an irreversible hard delete of a payment record identified by paymentId from the ai_commerce_payments table. Unlike soft deletes elsewhere, this fully erases the record from the system, making it unrecoverable. The operation is restricted to admin users to prevent accidental or malicious removal of financial records.\n\nDeletion is permitted only on payments not tied to settled or legally owned transactions, in strict conformance with business, legal, and audit rules. The operation verifies target eligibility and records the deletion action for forensic/audit evidence. Invalid requests (such as deletion of finalized or linked payments) are rejected with explicit error reporting.","summary":"Hard delete a specific payment record from the ai_commerce_payments subsystem (irreversible).","parameters":[{"name":"paymentId","description":"UUID of the payment transaction to delete permanently.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/payments/{paymentId}","method":"delete","authorizationType":null,"authorizationRole":"admin"},{"specification":"Retrieve a paginated and filterable list of supported payment methods from the ai_commerce_payment_methods table, with full metadata for each method such as code, display name, activation, and configuration. Used by admins for payment configuration, analytics, and troubleshooting.","description":"This operation allows admins to search and page through all currently defined payment methods, as captured in the ai_commerce_payment_methods table. Results include method codes, display names, activation flags, and (optionally) gateway integration or configuration metadata.\n\nUsed for configuring payment options, managing system status, or diagnosing payment setup issues. The list can be filtered by active status, method code, or configuration, and supports analytics about payment method usage on the platform. Typical admin-only endpoint, supporting both operational and financial configuration needs.","summary":"List and filter all payment methods with full metadata from the ai_commerce_payment_methods table.","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for listing payment methods.","typeName":"IAiCommercePaymentMethod.IRequest"},"responseBody":{"description":"Paginated list of payment method definitions matching the filter/search criteria.","typeName":"IPageIAiCommercePaymentMethod"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/paymentMethods","method":"patch","authorizationType":null,"authorizationRole":"admin"},{"specification":"Retrieve full details for a specific payment method configuration, as managed in ai_commerce_payment_methods. The API returns all metadata for the target payment method, supporting admin review and payment method analytics.","description":"This endpoint returns the metadata and configuration details for a single payment method identified by paymentMethodId in the ai_commerce_payment_methods table. Data includes method code, name, activation, configuration, and audit fields for administrative review and troubleshooting.\n\nThis is useful for platform admins reviewing payment integrations, updating gateways, or analyzing usage of specific payment methods. Data access is admin-restricted and may link to further system configuration or payment analytics endpoints.","summary":"Retrieve metadata/details for a single payment method from the ai_commerce_payment_methods table.","parameters":[{"name":"paymentMethodId","description":"ID of the payment method to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full data and configuration for the indicated payment method.","typeName":"IAiCommercePaymentMethod"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/paymentMethods/{paymentMethodId}","method":"get","authorizationType":null,"authorizationRole":"admin"},{"specification":"This operation creates a new payment method for the aiCommerce platform. It acts on the ai_commerce_payment_methods table and allows administrators to register a new payment method (such as credit card, bank transfer, mobile pay, coupons, or mileage) that buyers can then select for making payments. Required fields include a unique method code, a display name, and an optional configuration for advanced payment integrations. The operation is available only to admin users and enforces uniqueness for method codes. The business logic supports the onboarding of new payment methods as the payment ecosystem evolves.","description":"This operation allows an administrator to create a new payment method, which is added to the ai_commerce_payment_methods table. The provided method code must be unique across all payment methods, as it will be used for referencing this method in payment flows, analytics, and configuration mapping. Administrators need to provide a clear display name for the payment method, enabling buyers to identify the method in UI forms.\n\nInternally, if external API or gateway configuration is needed, details are stored in the configuration field for future use. Active status is set to true by default for new methods but can later be toggled with the update endpoint.\n\nOnly administrators can perform this action, supporting strict control of which payment methods are exposed to users and ensuring platform compliance. Errors are raised if a duplicate method_code is provided. All creation events are audit logged for platform compliance, enabling traceability for all changes in available payment methods.","summary":"Create a new payment method in the ai_commerce_payment_methods table.","parameters":[],"requestBody":{"description":"Payment method creation details, including unique method code, display name, and optional configuration.","typeName":"IAiCommercePaymentMethod.ICreate"},"responseBody":{"description":"Returns the created payment method entity with all properties.","typeName":"IAiCommercePaymentMethod"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentMethods","method":"post","name":"create"},{"specification":"This operation updates an existing payment method, referenced by its unique paymentMethodId (UUID primary key in ai_commerce_payment_methods table). Admin users can change the display name, toggle activation status, or update advanced configuration. The action is restricted to administrators to ensure integrity of supported payment methods across the platform.","description":"An administrator can update the properties of an existing payment method in the ai_commerce_payment_methods table. Changing the display_name allows for improved buyer understanding, while setting is_active can disable methods that are being retired. Complex configuration changes (for example, credentials or integration details) are performed by providing a new configuration payload.\n\nThe endpoint performs validation on incoming configuration and status, checks for unique constraints, and will return detailed errors on any violation. All updates are strictly logged for compliance, preserving before and after states for audit requirements. Only users with admin authority can perform this operation, and any attempt to update a non-existent paymentMethodId will return an appropriate error.","summary":"Update an existing payment method in the ai_commerce_payment_methods table.","parameters":[{"name":"paymentMethodId","description":"Unique identifier of the payment method to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the payment method, such as display name, status, or configuration.","typeName":"IAiCommercePaymentMethod.IUpdate"},"responseBody":{"description":"Returns the updated payment method entity with new properties.","typeName":"IAiCommercePaymentMethod"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentMethods/{paymentMethodId}","method":"put","name":"update"},{"specification":"This operation permanently deletes a payment method by its paymentMethodId UUID from the ai_commerce_payment_methods table. Only administrators have permission to execute this operation. The payment method and its related usage will no longer be available for new payments, but related data may be retained for audit or completed transactions compliance.","description":"When an admin invokes this API to delete a payment method, the payment method is permanently removed from the ai_commerce_payment_methods table. This removal is a hard delete since the deleted_at field is present for compliance and auditing but does not prevent complete deletion if business policy requires. The operation enforces referential integrity, ensuring active payments linked to this method must be resolved or migrated before deletion.\n\nAll deletions are audit logged, including the actor, timestamp, and affected payment method. Attempts to delete a non-existent paymentMethodId yield an error. Only administrative users have access to delete payment method definitions.","summary":"Delete an existing payment method by paymentMethodId (hard delete) from ai_commerce_payment_methods.","parameters":[{"name":"paymentMethodId","description":"Unique identifier for the payment method to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentMethods/{paymentMethodId}","method":"delete","name":"erase"},{"specification":"This operation enables administrators to search and filter payment gateway configurations in the ai_commerce_payment_gateways table. It provides powerful features for listing configured gateways, filtering by status, currency support, or display name, and performing paginated search by admin users. It is used for gateway management and analytics oversight.","description":"Administrators can retrieve a paginated, searchable list of payment gateway definitions and configurations with complex filters for status, supported currencies, display name, or region. The endpoint leverages JSON query and full-text search on the ai_commerce_payment_gateways table, supporting advanced administration and oversight of the payment gateway ecosystem.\n\nThe search request body enables specifying multiple criteria, plus sorting and pagination for efficiency when many gateway configurations exist. This endpoint is restricted to admin users due to the sensitive nature of gateway management (as changes may affect system payment flows). All query operations are logged for security and traceability. The results include detailed gateway configuration and status fields optimized for management UIs.","summary":"Search and list payment gateway configurations in ai_commerce_payment_gateways (admin-only).","parameters":[],"requestBody":{"description":"Search criteria, filtering, and pagination information for payment gateway query.","typeName":"IAiCommercePaymentGateway.IRequest"},"responseBody":{"description":"Paginated list of payment gateway configurations matching criteria.","typeName":"IPageIAiCommercePaymentGateway"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentGateways","method":"patch","name":"index"},{"specification":"This operation retrieves the full details of a specific payment gateway by its unique paymentGatewayId (UUID from the ai_commerce_payment_gateways table). Restricted to administrator users, it is used for fine-grained management and oversight. The response includes all configuration and metadata necessary for system integration.","description":"An admin user can obtain the details of a single payment gateway from the ai_commerce_payment_gateways table using its paymentGatewayId. The response returns all fields including gateway code, display name, API endpoint, supported currencies, and status. This data is used for managing and auditing payment systems as well as diagnosing integration or business problems.\n\nSecurity: Only admin users may access this endpoint due to the sensitivity of payment gateway configurational data. All access, including query time and user, is logged for compliance. Errors delivered if the specified paymentGatewayId does not reference an existing record, or if the admin lacks permission. This endpoint is read-only, and results are optimized for system management UIs.","summary":"Retrieve details of a specific payment gateway by paymentGatewayId (admin-only).","parameters":[{"name":"paymentGatewayId","description":"Unique identifier of the payment gateway to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full payment gateway details with all configuration fields.","typeName":"IAiCommercePaymentGateway"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentGateways/{paymentGatewayId}","method":"get","name":"at"},{"specification":"This operation creates a new payment gateway definition in the ai_commerce_payment_gateways table, restricted to administrators. It registers a new payment gateway with necessary configuration for processing payments, including display name, gateway code, API endpoint, region, supported currencies, and status. Only admins can perform this operation for integrity and compliance reasons.","description":"An administrator can register a new payment gateway to the platform by providing all required details for integration: unique gateway code, descriptive display name, endpoint URL for payment API, activation status, supported currency codes (comma-separated), and other configuration as needed. The operation ensures the code and display name are unique, raising errors on constraint violations.\n\nAll payment gateway creations are audit logged for legal and compliance traceability, specifying the actor, timestamp, and created configuration. Successful creation enables the gateway for platform payment operations, subject to activation status. Only admin users have access to perform this operation.","summary":"Create a new payment gateway configuration (admin only) in ai_commerce_payment_gateways.","parameters":[],"requestBody":{"description":"Complete payment gateway configuration and identifiers for creation. Requires unique gateway_code, display name, endpoint, activation, and currency list.","typeName":"IAiCommercePaymentGateway.ICreate"},"responseBody":{"description":"Returns the full information for the newly created payment gateway.","typeName":"IAiCommercePaymentGateway"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentGateways","method":"post","name":"create"},{"specification":"This operation allows administrators to update an existing payment gateway by paymentGatewayId (UUID primary key in ai_commerce_payment_gateways). It supports changes to display name, activation status, api_endpoint, supported currencies, and other configuration. Strictly restricted to admin users to ensure integrity of the platform's payment ecosystem.","description":"When invoked by an admin, this endpoint updates the configuration or status of an existing payment gateway in the ai_commerce_payment_gateways table. Fields such as display_name, API endpoint, active state, and supported currency codes can be altered to reflect new business requirements or integration changes.\n\nAll changes are validated for configuration correctness and referential integrity. Attempts to update a gateway with a duplicate code or invalid settings result in detailed error messages. Updates are logged to maintain a non-repudiable compliance trail. Only administrators can perform these updates, and a permission error is raised otherwise. If the specified gateway does not exist, an appropriate error is returned.","summary":"Update properties of an existing payment gateway (admin only) in ai_commerce_payment_gateways.","parameters":[{"name":"paymentGatewayId","description":"Unique identifier for the payment gateway to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated payment gateway fields/artifacts including status, configuration, and endpoint.","typeName":"IAiCommercePaymentGateway.IUpdate"},"responseBody":{"description":"Returns the newly updated payment gateway entry with all properties.","typeName":"IAiCommercePaymentGateway"},"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentGateways/{paymentGatewayId}","method":"put","name":"update"},{"specification":"This operation deletes a payment gateway definition identified by its paymentGatewayId (UUID), permanently removing it from the ai_commerce_payment_gateways table. Only admin users are allowed to perform deletions. Related payment flows must be handled outside before invocation. The operation is a hard delete: the gateway will no longer exist for future payments but records may persist for audit purposes.","description":"On execution by an admin, this endpoint permanently deletes the targeted payment gateway from the ai_commerce_payment_gateways table by identifying the UUID. Referential integrity is checked to ensure no live payment flows are attached to the gateway. The deleted_at field indicates logical removal, enabling compliance with core business rules and regulations about record retention.\n\nAll deletion actions are strictly audit logged, capturing the user, timestamp, and target configuration. Only administrators have permission to delete payment gateways, and attempts to delete non-existent gateways result in an error response. The action is irreversible and removes the gateway from all future payment routing.","summary":"Delete an existing payment gateway configuration from ai_commerce_payment_gateways (admin only).","parameters":[{"name":"paymentGatewayId","description":"Unique identifier of the payment gateway to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","authorizationType":null,"path":"/aiCommerce/admin/paymentGateways/{paymentGatewayId}","method":"delete","name":"erase"},{"specification":"This operation retrieves a paginated and filterable list of payment transaction records from the ai_commerce_payment_transactions table. It allows searching, filtering, sorting, and viewing payment transaction metadata including gateway, status, amount, timestamps, and related payment and order references. This endpoint is designed for admins to investigate payment flow, reconcile financial operations, and monitor transaction performance and error patterns.","description":"Retrieve a filtered and paginated list of payment transactions from the ai_commerce_payment_transactions table. This endpoint provides advanced query options such as searching by payment status, gateway, date range, and user/account, as well as sorting by transaction date or amount. Users can analyze exposure to failed, pending, or successful transactions and track reconciliation needs.\n\nSecurity: Only admin users have access to the full transaction list. Sensitive fields and raw gateway response data are restricted.\n\nUnderlying Entity: ai_commerce_payment_transactions, with relations to ai_commerce_payments (gateway, payment method, order linkage).\n\nValidation: Supports full filtering and pagination per platform standard. Input must conform to search schema and access will be permission-checked.\n\nThis operation is often paired with detail retrieval and status update endpoints for investigation or reporting workflows. Errors in filtering or unauthorized access return clear feedback and audit logging.","summary":"Retrieve a paginated, filterable list of payment transactions for admin investigation","parameters":[],"requestBody":{"description":"Search and filter parameters for querying payment transactions","typeName":"IAiCommercePaymentTransaction.IRequest"},"responseBody":{"description":"Paginated set of payment transaction records matching the search criteria, including summary transaction fields and pagination metadata.","typeName":"IPageIAiCommercePaymentTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/paymentTransactions","method":"patch"},{"specification":"This operation retrieves detailed information about a single payment transaction from the ai_commerce_payment_transactions table, identified by its unique transaction ID. It is used for transaction auditing, investigating payment workflow issues, and confirming transaction states for compliance and reporting. The operation exposes all business-relevant metadata and links to related payment, gateway, and order data.","description":"Retrieve complete payment transaction details given a valid payment transaction ID. The operation returns all metadata, status, monetary amounts, linked payment and gateway entities, relevant timestamps, and associated raw gateway payloads.\n\nSecurity: Only admins may access raw and sensitive transaction metadata, including gateway response bodies. All actions are logged for compliance.\n\nUnderlying Entity: ai_commerce_payment_transactions, with references to ai_commerce_payments and related tables.\n\nValidation: Transaction IDs are validated for existence and permission; any not found or unauthorized attempts return error or access denied responses.\n\nCancellation or refund investigation typically uses this detail endpoint alongside related payment and order data queries.","summary":"Retrieve full detail of a specific payment transaction by its transaction ID","parameters":[{"name":"paymentTransactionId","description":"Unique identifier of the target payment transaction","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed payment transaction object, including metadata and gateway/related payment info.","typeName":"IAiCommercePaymentTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/paymentTransactions/{paymentTransactionId}","method":"get"},{"specification":"This operation is for creating a new payment transaction record for a payment event. Payment transactions are system- or gateway-generated, but this endpoint allows admins to manually record a transaction for reconciliation, troubleshooting, or compliance correction. It is not for buyer-initiated normal payments, which are handled programmatically.","description":"Create a new payment transaction record in the ai_commerce_payment_transactions table. This is intended for back-office/admin users who need to insert a transaction for exception handling, platform reconciliation, or correcting gateway transaction history. Required fields include transaction reference, payment linkage, payment method and gateway, amount, status, timestamps, and supporting data.\n\nSecurity: Only admins have privilege to create transactions directly. This API must never be exposed to buyers or sellers.\n\nUnderlying Entity: ai_commerce_payment_transactions, with strict schema enforcement and audit logging for compliance and operational recovery workflows. All actions are monitored and subject to security review.","summary":"Manually create a payment transaction record for reconciliation or admin purposes","parameters":[],"requestBody":{"description":"Required data to create a new payment transaction record, such as transaction reference, payment linkage, amount, status, and metadata.","typeName":"IAiCommercePaymentTransaction.ICreate"},"responseBody":{"description":"Created payment transaction record with full metadata and identifiers.","typeName":"IAiCommercePaymentTransaction"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/paymentTransactions","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing payment transaction record. Only admin users are allowed to make changes, such as status correction, adding gateway information, or adjusting reconciliation details in the ai_commerce_payment_transactions table. Used for correcting records after gateway errors or when dispute resolution requires manual intervention.","description":"Update payment transaction record fields by ID. Allows admins to modify details such as transaction status, timestamps, gateway response, and linkages to associated payments/orders. This is intended for reconciliation, audit, and error-correction. Operation is strictly access-controlled and all changes are tracked for compliance audit.\n\nSecurity: Only admin users may update payment transaction records due to sensitive financial data. Modifications are logged and versioned for audit.\n\nUnderlying Entity: ai_commerce_payment_transactions. Validation ensures only valid transaction IDs are updated, and required fields must be present as per the update schema.\n\nErrors may arise if the transaction is not found, not allowed to update (locked, settled, etc.), or inputs violate business validation rules.","summary":"Update a payment transaction record by ID for reconciliation, error correction, or compliance","parameters":[{"name":"paymentTransactionId","description":"Unique identifier of the target payment transaction","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating fields in the payment transaction, such as status or metadata.","typeName":"IAiCommercePaymentTransaction.IUpdate"},"responseBody":{"description":"Updated payment transaction record after changes applied.","typeName":"IAiCommercePaymentTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/paymentTransactions/{paymentTransactionId}","method":"put"},{"specification":"This operation deletes a payment transaction record, identified by its transaction ID, from the ai_commerce_payment_transactions table. This is only available to admin users and should only be used for correction of erroneously created transactions, not regular payment events. Action is logged for compliance and the row is hard-deleted if schema lacks soft delete.","description":"Permanently remove a payment transaction record given its transaction ID. Only admins may execute this action. This is generally reserved for exceptional administrative corrections and is never intended for normal payment lifecycle management. All operations are recorded in audit logs and a compliance review is required before use.\n\nSecurity: Restricted admin access. Attempts outside of permissions are denied and logged.\n\nUnderlying Entity: ai_commerce_payment_transactions. If the schema does not specify a soft delete, this performs a complete hard delete.\n\nUsage is rare and should be governed by business process exceptions and compliance guidelines.","summary":"Permanently delete a payment transaction record by ID (admin only)","parameters":[{"name":"paymentTransactionId","description":"Unique identifier of the payment transaction to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/paymentTransactions/{paymentTransactionId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of user deposit accounts from the ai_commerce_deposit_accounts table. Accounts are used for managing buyer/seller deposit balances within the platform, supporting financial incentives and refunds. Admins can filter by user, status, balance ranges, and account codes.","description":"Fetch a paginated list of deposit accounts in the system, with filter and search support. Admins can use this endpoint to review account status, investigate user balances, and generate reports on active, suspended, or high-balance accounts. Supports robust pagination, filtering, and sorting capabilities.\n\nSecurity: Only admins are allowed to access the platform-wide account list. User/depositor privacy is respected according to compliance rules, and sensitive metadata is restricted in the output.\n\nUnderlying Entity: ai_commerce_deposit_accounts. Supports relational search (by user ID, currency, account code) and aggregate operation for financial reporting.\n\nUsed together with account detail, adjustment/transaction creation, and closing endpoints. Any inconsistent access or search errors are clearly reported for remediation and audit.","summary":"Admin-restricted query for paginated, filterable list of deposit accounts","parameters":[],"requestBody":{"description":"Search/filter/request parameters for deposit account listing and query.","typeName":"IAiCommerceDepositAccount.IRequest"},"responseBody":{"description":"Paginated data and summary records on deposit accounts, with meta and list fields for each account.","typeName":"IPageIAiCommerceDepositAccount"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/depositAccounts","method":"patch"},{"specification":"This operation retrieves the full detailed view of a specific deposit account by its account ID from the ai_commerce_deposit_accounts table. It is used by admin users to investigate account status, verify balances, track user identity, and check compliance and transaction audit history.","description":"Retrieve comprehensive data about a deposit account using its unique account ID. Returns business-critical balance, status, identifiers, user linkages, audit and transaction reference, and compliance and account details.\n\nSecurity: Only accessible to admin users for audit, investigation, and reporting. Sensitive fields and related detail are shielded in the response for non-authorized users.\n\nUnderlying Entity: ai_commerce_deposit_accounts, linked to users and payment transaction history for full background.\n\nAny failed or unauthorized attempts to retrieve account details are logged for compliance.","summary":"Show a specific deposit account record by its ID (admin only)","parameters":[{"name":"depositAccountId","description":"Unique identifier of the target deposit account","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete data object for the targeted deposit account, including identifiers, balances, and user link.","typeName":"IAiCommerceDepositAccount"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/depositAccounts/{depositAccountId}","method":"get"},{"specification":"This operation creates a new platform deposit account for a user. Only admins have permission to create and initialize deposit accounts from this endpoint. This is typically used for exception handling, recovery, or administrative migration of balance accounts. Normal account creation is system-triggered on buyer registration.","description":"Manually create a new user (buyer/seller) deposit account from the admin interface. The operation requires user ID, initial balance, currency, and status. All records are created with audit, and use-case must conform to platform compliance. User-triggered creation is not permitted, and this operation should not be exposed to buyers or sellers directly.\n\nSecurity: Only admin role permitted. Input validation is strictly enforced, and records are linked to user compliance and transaction audit trails. Each action is logged for evidence and troubleshooting.\n\nUnderlying Entity: ai_commerce_deposit_accounts, with references to user identity and audit snapshot for balance initialization or migration.\n\nErrors include duplicate account, invalid user, or status/validation failures. Compliance audit and review procedures must be followed when using this operation.","summary":"Create a new user deposit account administratively (admin only)","parameters":[],"requestBody":{"description":"Required data for new deposit account creation, including user, initial balance, and status.","typeName":"IAiCommerceDepositAccount.ICreate"},"responseBody":{"description":"Complete account object for the newly created deposit account.","typeName":"IAiCommerceDepositAccount"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/depositAccounts","method":"post"},{"specification":"Update a specific deposit account in the aiCommerce platform. This operation allows modifying existing fields (such as account status, balance, or metadata) for a deposit account entry identified by its UUID. The deposit account entity is defined in the ai_commerce_deposit_accounts table, used for managing buyer/seller wallet balances. Appropriate validation (account existence, data integrity, permission checks) is enforced. Audit trails are generated on every update for compliance. Only admins or authorized actors can perform updates. If the account is soft-deleted, updating is not permitted.","description":"This operation updates an existing deposit account record using the account's unique identifier.\n\nThe record is located in the ai_commerce_deposit_accounts table, which manages e-wallet balances for buyers and sellers for transactional purposes. Update actions may include changing account status (active or suspended), modifying metadata, or other permissible field changes not breaking the integrity of financial records.\n\nSecurity context: Only platform administrators or privileged support staff may perform this update, following strict business rules and permission matrix defined in system documentation. Attempts by unauthorized users are logged and rejected.\n\nAll updates are fully audited, and a historical record is maintained for compliance with payment regulations and financial auditing standards. If a target account is soft-deleted, no modifications are allowed.\n\nRelated operations: Account status checks, deposit transaction creation, account soft-deletion (suspension/closure), and audit log queries may be performed in conjunction with this update.","summary":"Update a deposit account by its unique identifier (UUID) in aiCommerce's deposit account table.","parameters":[{"name":"depositAccountId","description":"Unique identifier (UUID) of the deposit account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated deposit account data fields (status, metadata, etc).","typeName":"IAiCommerceDepositAccount.IUpdate"},"responseBody":{"description":"The updated deposit account details after applying changes.","typeName":"IAiCommerceDepositAccount"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/depositAccounts/{depositAccountId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Delete (logically remove) a specific deposit account from the aiCommerce platform. This operation performs a soft-delete of the deposit account matching the incoming UUID, updating the deleted_at field. AI Commerce never physically deletes financial records for compliance. Based on the ai_commerce_deposit_accounts table. Only admins are allowed to perform delete. All actions are logged in the audit trail for legal and forensic tracking.","description":"This operation logically deletes (soft-removes) a deposit account identified by its UUID from the ai_commerce_deposit_accounts table.\n\nIt sets the deleted_at timestamp instead of physical removal, aligning with strict financial compliance requirements around data retention. Physical deletion is never implemented for deposit accounts as per regulatory expectations and fraud/tampering auditability.\n\nOnly administrators have permission to execute this action; all delete operations are tracked in an immutable audit log, with before/after state snapshots preserved for compliance and recovery.\n\nIf the account does not exist or is already soft-deleted, the operation returns an appropriate error. Related operations for account recovery or audit may be used by compliance or admin staff when needed.","summary":"Soft-delete a deposit account (by UUID) for compliance audit using aiCommerce's deposit account schema.","parameters":[{"name":"depositAccountId","description":"UUID of the deposit account to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/depositAccounts/{depositAccountId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"Search, filter, and retrieve paginated deposit transaction records from the ai_commerce_deposit_transactions table. This API supports complex queries based on transaction type, account, status, time range, and other filters. It is used for financial review, account history, and compliance in the aiCommerce system. Access may be restricted to account owners and finance/admin roles for privacy and security.","description":"This operation searches for deposit transactions using advanced filtering criteria and returns a paginated result set of transactions from ai_commerce_deposit_transactions.\n\nSupported query parameters include account ID, transaction type (recharge, withdraw, payment, refund), status, date ranges, and search keywords. Pagination and sorting options are required for high-volume account histories.\n\nSecurity: Buyers or account owners may view their own transaction history; finance staff and admins have broader access. Role-based field masking and permission checks are enforced.\n\nFull audit is available via the transaction's immutable records, with every transaction tied to a specific account and event. Error handling is based on invalid filters, type errors, or exceeding permitted result window sizes.","summary":"Retrieve a paginated, filtered list of deposit transactions using search criteria (for account, type, date, etc).","parameters":[],"requestBody":{"description":"Criteria for deposit transaction search (account, type, period, status, etc).","typeName":"IAiCommerceDepositTransaction.IRequest"},"responseBody":{"description":"Paginated result of deposit transactions matching filter parameters.","typeName":"IPageIAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"index","path":"/aiCommerce/buyer/depositTransactions","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"Search, filter, and retrieve paginated deposit transaction records from the ai_commerce_deposit_transactions table. This API supports complex queries based on transaction type, account, status, time range, and other filters. It is used for financial review, account history, and compliance in the aiCommerce system. Access may be restricted to account owners and finance/admin roles for privacy and security.","description":"This operation searches for deposit transactions using advanced filtering criteria and returns a paginated result set of transactions from ai_commerce_deposit_transactions.\n\nSupported query parameters include account ID, transaction type (recharge, withdraw, payment, refund), status, date ranges, and search keywords. Pagination and sorting options are required for high-volume account histories.\n\nSecurity: Buyers or account owners may view their own transaction history; finance staff and admins have broader access. Role-based field masking and permission checks are enforced.\n\nFull audit is available via the transaction's immutable records, with every transaction tied to a specific account and event. Error handling is based on invalid filters, type errors, or exceeding permitted result window sizes.","summary":"Retrieve a paginated, filtered list of deposit transactions using search criteria (for account, type, date, etc).","parameters":[],"requestBody":{"description":"Criteria for deposit transaction search (account, type, period, status, etc).","typeName":"IAiCommerceDepositTransaction.IRequest"},"responseBody":{"description":"Paginated result of deposit transactions matching filter parameters.","typeName":"IPageIAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"index","path":"/aiCommerce/admin/depositTransactions","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a single deposit transaction by its unique UUID as defined in ai_commerce_deposit_transactions. This API is used for financial detail review, transaction evidence, and compliance checks. It supports access control: only the account owner or authorized finance/admin users may access the full record.","description":"This API returns full details for one deposit transaction, uniquely identified by its UUID primary key.\n\nThe transaction is sourced from the ai_commerce_deposit_transactions table, containing all business metadata, links to account, event type, time, and status. Intended use cases include transaction detail presentation, evidence for audits or disputes, and system financial reporting.\n\nAccess is limited by role: the account owner may view their own data; admins and finance roles may access any transaction. Security and privacy are strictly enforced, with all lookups generating audit trail entries.\n\nIf the record is not found or is soft-deleted, an error or not-found response is returned. Related operations: transaction search, account retrieval, transaction audit log query.","summary":"Get detailed information for one deposit transaction (by UUID) from the ai_commerce_deposit_transactions table.","parameters":[{"name":"depositTransactionId","description":"UUID identifier for the deposit transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full record for the requested deposit transaction.","typeName":"IAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"at","path":"/aiCommerce/buyer/depositTransactions/{depositTransactionId}","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"Retrieve a single deposit transaction by its unique UUID as defined in ai_commerce_deposit_transactions. This API is used for financial detail review, transaction evidence, and compliance checks. It supports access control: only the account owner or authorized finance/admin users may access the full record.","description":"This API returns full details for one deposit transaction, uniquely identified by its UUID primary key.\n\nThe transaction is sourced from the ai_commerce_deposit_transactions table, containing all business metadata, links to account, event type, time, and status. Intended use cases include transaction detail presentation, evidence for audits or disputes, and system financial reporting.\n\nAccess is limited by role: the account owner may view their own data; admins and finance roles may access any transaction. Security and privacy are strictly enforced, with all lookups generating audit trail entries.\n\nIf the record is not found or is soft-deleted, an error or not-found response is returned. Related operations: transaction search, account retrieval, transaction audit log query.","summary":"Get detailed information for one deposit transaction (by UUID) from the ai_commerce_deposit_transactions table.","parameters":[{"name":"depositTransactionId","description":"UUID identifier for the deposit transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full record for the requested deposit transaction.","typeName":"IAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"at","path":"/aiCommerce/admin/depositTransactions/{depositTransactionId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new deposit transaction (recharge, withdrawal, payment, or refund) in the aiCommerce platform. This uses the ai_commerce_deposit_transactions table for secure, immutable event records. The operation validates user authority, deposit account linkage, and amount rules, logs all actions for evidence, and updates related account balances atomically. Only authenticated users (owners or admins) can create transactions. Admins may create for any account.","description":"This endpoint creates a new deposit transaction, such as a top-up (recharge), withdrawal, payment, or refund, and adds the corresponding entry in the ai_commerce_deposit_transactions table.\n\nEach creation is subject to business rule validation: only supported transaction types are allowed, the affected deposit account must exist and be active, balances are checked for withdrawals/payments, and excessive operations are prevented for anti-fraud and abuse safeguard.\n\nInsertions generate an immutable, auditable event, with full details such as type, account, amount, time, and counterparty reference. All actions are logged and propagate updates to account balances atomically. Admins can create transactions for any account; authenticated users can create transactions for their linked account, subject to business logic.\n\nExpected error cases: insufficient balance, invalid account, unsupported type, or business rule violation. Related APIs: transaction list/search, account management, transaction audit.","summary":"Create a new deposit transaction (recharge, withdrawal, payment, refund) for an account with proper validation and audit.","parameters":[],"requestBody":{"description":"Deposit transaction creation data, including account, type, amount, and context.","typeName":"IAiCommerceDepositTransaction.ICreate"},"responseBody":{"description":"Details of the newly created deposit transaction record.","typeName":"IAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"create","path":"/aiCommerce/buyer/depositTransactions","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"Create a new deposit transaction (recharge, withdrawal, payment, or refund) in the aiCommerce platform. This uses the ai_commerce_deposit_transactions table for secure, immutable event records. The operation validates user authority, deposit account linkage, and amount rules, logs all actions for evidence, and updates related account balances atomically. Only authenticated users (owners or admins) can create transactions. Admins may create for any account.","description":"This endpoint creates a new deposit transaction, such as a top-up (recharge), withdrawal, payment, or refund, and adds the corresponding entry in the ai_commerce_deposit_transactions table.\n\nEach creation is subject to business rule validation: only supported transaction types are allowed, the affected deposit account must exist and be active, balances are checked for withdrawals/payments, and excessive operations are prevented for anti-fraud and abuse safeguard.\n\nInsertions generate an immutable, auditable event, with full details such as type, account, amount, time, and counterparty reference. All actions are logged and propagate updates to account balances atomically. Admins can create transactions for any account; authenticated users can create transactions for their linked account, subject to business logic.\n\nExpected error cases: insufficient balance, invalid account, unsupported type, or business rule violation. Related APIs: transaction list/search, account management, transaction audit.","summary":"Create a new deposit transaction (recharge, withdrawal, payment, refund) for an account with proper validation and audit.","parameters":[],"requestBody":{"description":"Deposit transaction creation data, including account, type, amount, and context.","typeName":"IAiCommerceDepositTransaction.ICreate"},"responseBody":{"description":"Details of the newly created deposit transaction record.","typeName":"IAiCommerceDepositTransaction"},"authorizationRoles":["buyer","admin"],"name":"create","path":"/aiCommerce/admin/depositTransactions","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"Update an existing deposit transaction identified by its UUID in the ai_commerce_deposit_transactions table. Allows modifying editable business fields (such as status, reference, or metadata) as permitted by finance/business rules. All updates are strictly audited and only permitted for finance/admin roles or account owner where applicable. Critical state fields (amount, account binding) cannot be modified post-creation for financial integrity.","description":"This endpoint allows updating certain editable fields on a deposit transaction, such as status, references, or auxiliary metadata, as business logic permits.\n\nAvailable only to finance administrators or account owners in cases where business rules and data integrity allow updates after creation (e.g., status correction or reference updates in case of error). Attempts to change immutable fields (transaction type, amount, account linkage) are always rejected by the operation and will trigger error responses and audit logs.\n\nAll operations are fully audited for each before/after snapshot for compliance, and soft-deleted transactions cannot be modified. Common use-cases are for correcting failed/pending statuses or adding reference links (e.g., for reconciliation, fraud notes).\n\nPerforming this action requires suitable authority and audit will be maintained.","summary":"Update permitted fields of a deposit transaction (by UUID), strictly audited and business-rule constrained.","parameters":[{"name":"depositTransactionId","description":"UUID of the deposit transaction to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Editable business fields to update (status, references, etc).","typeName":"IAiCommerceDepositTransaction.IUpdate"},"responseBody":{"description":"Updated deposit transaction data (editable fields).","typeName":"IAiCommerceDepositTransaction"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/depositTransactions/{depositTransactionId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Soft-delete (mark as deleted, not physical removal) a deposit transaction record given by UUID. This sets the deleted_at field on the matching transaction entry in ai_commerce_deposit_transactions for compliance, audit, and recovery/trace purposes. Only admin or account owner may perform. Physical deletion is never permitted for financial records.","description":"This operation marks a deposit transaction as deleted by setting the deleted_at timestamp in the ai_commerce_deposit_transactions table.\n\nFinancial record-keeping and audit requirements make physical deletion forbidden; only a logical deletion is permitted. The operation ensures the transaction exists and is not already deleted. Soft-deleted transactions show as removed in standard queries but remain available for audit and compliance.\n\nOnly users with sufficient permissions (admin or account owner) can initiate this operation; all deletions are logged with full state snapshots. Any attempt to remove a non-existent or already deleted transaction is rejected with appropriate error messaging.","summary":"Soft-delete (logically remove) a deposit transaction by UUID for compliance and audit purposes.","parameters":[{"name":"depositTransactionId","description":"UUID of the deposit transaction to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/depositTransactions/{depositTransactionId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"Search, filter, and retrieve paginated results for mileage accounts from the ai_commerce_mileage_accounts table. This endpoint enables advanced queries based on user, status, creation or update periods, and other fields, providing both buyers and admins with summary lists of mileages for loyalty point balances. Results support paging, sorting, and field-specific access control for privacy.","description":"Retrieve a paginated, filtered list of mileage accounts associated with users from ai_commerce_mileage_accounts.\n\nQuery parameters include user ID, account status, creation/update date range, and balance filters. The endpoint supports advanced analytics actions for admins and lets authenticated users review their own loyalty balances, with field masking and row-level permissions according to role.\n\nSecurity is strictly enforced: only users may access their own mileage accounts; admins have unrestricted analytics access. All search criteria and results are auditable, and access is logged for fraud/compliance review.\n\nUse cases include loyalty point review, reward analytics, and admin audit/compliance activities. Related operations: account detail view, transaction history for a mileage account, account management, and account auditing.","summary":"Paginated and filtered search of mileage accounts for loyalty point balances, by user or admin.","parameters":[],"requestBody":{"description":"Criteria and paging controls for mileage account search.","typeName":"IAiCommerceMileageAccount.IRequest"},"responseBody":{"description":"Paginated results: mileage account summaries and details.","typeName":"IPageIAiCommerceMileageAccount"},"authorizationRoles":["buyer","admin"],"name":"index","path":"/aiCommerce/buyer/mileageAccounts","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"Search, filter, and retrieve paginated results for mileage accounts from the ai_commerce_mileage_accounts table. This endpoint enables advanced queries based on user, status, creation or update periods, and other fields, providing both buyers and admins with summary lists of mileages for loyalty point balances. Results support paging, sorting, and field-specific access control for privacy.","description":"Retrieve a paginated, filtered list of mileage accounts associated with users from ai_commerce_mileage_accounts.\n\nQuery parameters include user ID, account status, creation/update date range, and balance filters. The endpoint supports advanced analytics actions for admins and lets authenticated users review their own loyalty balances, with field masking and row-level permissions according to role.\n\nSecurity is strictly enforced: only users may access their own mileage accounts; admins have unrestricted analytics access. All search criteria and results are auditable, and access is logged for fraud/compliance review.\n\nUse cases include loyalty point review, reward analytics, and admin audit/compliance activities. Related operations: account detail view, transaction history for a mileage account, account management, and account auditing.","summary":"Paginated and filtered search of mileage accounts for loyalty point balances, by user or admin.","parameters":[],"requestBody":{"description":"Criteria and paging controls for mileage account search.","typeName":"IAiCommerceMileageAccount.IRequest"},"responseBody":{"description":"Paginated results: mileage account summaries and details.","typeName":"IPageIAiCommerceMileageAccount"},"authorizationRoles":["buyer","admin"],"name":"index","path":"/aiCommerce/admin/mileageAccounts","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve detailed information about a single mileage account by its unique identifier. This operation targets the ai_commerce_mileage_accounts table in the Prisma schema and is designed to provide account details such as account code, user assignment, balance, currency, and current account status. Intended for use by the account owner (buyer or seller) and platform administrators, this function returns all audit and legal compliance information for the specified mileage account.","description":"This operation retrieves the full set of details for a specific mileage account, referenced by its unique identifier (mileageAccountId). It includes all fields as defined in the ai_commerce_mileage_accounts table: account_code, user_id, balance, currency_code, status, created_at, updated_at, and deleted_at if present.\n\nThe function is permissioned such that only the account owner, relevant seller, or platform administrator can access this information. This ensures privacy and security for sensitive account data.\n\nMileage account data is critical for both business operations and regulatory compliance, as the account maintains a running history of all reward/incentive points, deductions, and status changes. Any queries to this endpoint should be carefully audited and logged for security purposes.","summary":"Retrieve detailed information for a specific mileage account by its unique identifier.","parameters":[{"name":"mileageAccountId","description":"Unique identifier for the target mileage account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified mileage account, including all fields and compliance data.","typeName":"IAiCommerceMileageAccount"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/mileageAccounts/{mileageAccountId}","method":"get"},{"specification":"Retrieve detailed information about a single mileage account by its unique identifier. This operation targets the ai_commerce_mileage_accounts table in the Prisma schema and is designed to provide account details such as account code, user assignment, balance, currency, and current account status. Intended for use by the account owner (buyer or seller) and platform administrators, this function returns all audit and legal compliance information for the specified mileage account.","description":"This operation retrieves the full set of details for a specific mileage account, referenced by its unique identifier (mileageAccountId). It includes all fields as defined in the ai_commerce_mileage_accounts table: account_code, user_id, balance, currency_code, status, created_at, updated_at, and deleted_at if present.\n\nThe function is permissioned such that only the account owner, relevant seller, or platform administrator can access this information. This ensures privacy and security for sensitive account data.\n\nMileage account data is critical for both business operations and regulatory compliance, as the account maintains a running history of all reward/incentive points, deductions, and status changes. Any queries to this endpoint should be carefully audited and logged for security purposes.","summary":"Retrieve detailed information for a specific mileage account by its unique identifier.","parameters":[{"name":"mileageAccountId","description":"Unique identifier for the target mileage account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified mileage account, including all fields and compliance data.","typeName":"IAiCommerceMileageAccount"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/mileageAccounts/{mileageAccountId}","method":"get"},{"specification":"Retrieve detailed information about a single mileage account by its unique identifier. This operation targets the ai_commerce_mileage_accounts table in the Prisma schema and is designed to provide account details such as account code, user assignment, balance, currency, and current account status. Intended for use by the account owner (buyer or seller) and platform administrators, this function returns all audit and legal compliance information for the specified mileage account.","description":"This operation retrieves the full set of details for a specific mileage account, referenced by its unique identifier (mileageAccountId). It includes all fields as defined in the ai_commerce_mileage_accounts table: account_code, user_id, balance, currency_code, status, created_at, updated_at, and deleted_at if present.\n\nThe function is permissioned such that only the account owner, relevant seller, or platform administrator can access this information. This ensures privacy and security for sensitive account data.\n\nMileage account data is critical for both business operations and regulatory compliance, as the account maintains a running history of all reward/incentive points, deductions, and status changes. Any queries to this endpoint should be carefully audited and logged for security purposes.","summary":"Retrieve detailed information for a specific mileage account by its unique identifier.","parameters":[{"name":"mileageAccountId","description":"Unique identifier for the target mileage account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified mileage account, including all fields and compliance data.","typeName":"IAiCommerceMileageAccount"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/mileageAccounts/{mileageAccountId}","method":"get"},{"specification":"Create a new mileage account for a buyer or seller. This operation is executed against the ai_commerce_mileage_accounts table and allows the platform to assign an incentive account for tracking reward points, loyalty balances, and their status. Input details must specify associated user information and initial settings following business rules.","description":"This operation allows an authorized actor to create a new mileage account, most commonly at the time of user onboarding or role escalation (e.g., becoming a seller). The request body must conform to the IAiCommerceMileageAccount.ICreate structure, capturing data such as user_id (buyer or seller), initial balance, currency_code, account_code (if specified per business logic), and account status.\n\nBusiness rules typically enforce one active account per user for each currency. Duplicate or redundant accounts should be prevented unless explicitly required. Upon creation, all compliance, KPIs, and incentive logic are initialized.\n\nAll mileage account creation events are strictly audited, as these accounts may impact financial settlement and user-facing rewards. Only permitted system or admin actors can trigger account creation for another user.","summary":"Create a new mileage account for a user with essential setup information.","parameters":[],"requestBody":{"description":"Parameters for creating a new mileage account, including user association, currency, and any initial balance.","typeName":"IAiCommerceMileageAccount.ICreate"},"responseBody":{"description":"The created mileage account entity, with assigned fields and compliance metadata.","typeName":"IAiCommerceMileageAccount"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/mileageAccounts","method":"post"},{"specification":"Update the details of an existing mileage account using its unique identifier. This enables administrative correction or account suspension, status changes, or balance adjustment operations as defined in IAiCommerceMileageAccount.IUpdate. The operation targets the ai_commerce_mileage_accounts table.","description":"This operation updates the core fields of an existing mileage account, including account status (e.g., suspended/active), currency, or other allowed changes based on business rules. Balance adjustment is restricted to specific business processes and usually performed via transaction records.\n\nRequest data must follow the IAiCommerceMileageAccount.IUpdate type, ensuring only modifiable fields in schema can be altered. All inputs are validated for regulatory compliance and consistency with user/account business rules.\n\nMileage account updates are strictly audited: every state change, especially those affecting user-facing balances or account status, is tracked for compliance and legal evidence. Only admins or compliance-authorized roles are permitted to update another user's mileage account.","summary":"Update details for an existing mileage account by unique ID.","parameters":[{"name":"mileageAccountId","description":"Unique identifier for the mileage account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update fields for the specified mileage account following business and audit rules.","typeName":"IAiCommerceMileageAccount.IUpdate"},"responseBody":{"description":"The updated mileage account with all changes applied as per compliance.","typeName":"IAiCommerceMileageAccount"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/mileageAccounts/{mileageAccountId}","method":"put"},{"specification":"Permanently erase (hard delete) a mileage account identified by its unique UUID. This operation removes the account from the user-accessible entities but preserves legal and compliance audit trails as required. Executes against the ai_commerce_mileage_accounts table.","description":"The operation performs a permanent removal (hard delete) of a specified mileage account from active records in the ai_commerce_mileage_accounts table, identified by mileageAccountId. This is typically allowed only for accounts with zero balance and not under legal/financial hold.\n\nBefore deletion, all dependent records and transactional references are validated for compliance. The operation will fail if the account is non-empty or involved in an open dispute or compliance freeze. Post-deletion, only audit logs and compliance evidence are retained for regulatory and legal purposes.\n\nAccess to deletion functionality is strictly limited to administrative or compliance officers, and every action is fully logged with actor, timestamp, and justification.","summary":"Permanently remove a mileage account by its unique ID (hard delete, not reversible).","parameters":[{"name":"mileageAccountId","description":"Unique identifier for the mileage account to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/mileageAccounts/{mileageAccountId}","method":"delete"},{"specification":"Retrieve a filtered and paginated list of mileage transaction records. This endpoint enables searching, analytics, and auditing of individual mileage earning and redemption events, as stored in ai_commerce_mileage_transactions. Supports advanced querying, filtering by transaction type, status, time, and reference fields.","description":"This operation searches and returns a paginated list of mileage transactions, including accrual, redemption, adjustment, and expiration events. It leverages parameters specified in IAiCommerceMileageTransaction.IRequest to filter by type, date, user/account, status, and reference entity as appropriate.\n\nDesigned for both user self-audit and administrative/business use, this operation supports compliance and account analytics use cases. Role-based filtering is applied to ensure that users only see their own transactions, while admins may filter globally or per user.\n\nResults are tailored for performance and summary, and detailed event or audit data may be included based on role and business rule logic. Standard pagination and sorting fields are supported.","summary":"List and search mileage transactions with filtering and pagination.","parameters":[],"requestBody":{"description":"Query criteria for mileage transactions, including filtering and pagination parameters.","typeName":"IAiCommerceMileageTransaction.IRequest"},"responseBody":{"description":"Paginated list of mileage transactions matching the query criteria.","typeName":"IPageIAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/mileageTransactions","method":"patch"},{"specification":"Retrieve a filtered and paginated list of mileage transaction records. This endpoint enables searching, analytics, and auditing of individual mileage earning and redemption events, as stored in ai_commerce_mileage_transactions. Supports advanced querying, filtering by transaction type, status, time, and reference fields.","description":"This operation searches and returns a paginated list of mileage transactions, including accrual, redemption, adjustment, and expiration events. It leverages parameters specified in IAiCommerceMileageTransaction.IRequest to filter by type, date, user/account, status, and reference entity as appropriate.\n\nDesigned for both user self-audit and administrative/business use, this operation supports compliance and account analytics use cases. Role-based filtering is applied to ensure that users only see their own transactions, while admins may filter globally or per user.\n\nResults are tailored for performance and summary, and detailed event or audit data may be included based on role and business rule logic. Standard pagination and sorting fields are supported.","summary":"List and search mileage transactions with filtering and pagination.","parameters":[],"requestBody":{"description":"Query criteria for mileage transactions, including filtering and pagination parameters.","typeName":"IAiCommerceMileageTransaction.IRequest"},"responseBody":{"description":"Paginated list of mileage transactions matching the query criteria.","typeName":"IPageIAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/mileageTransactions","method":"patch"},{"specification":"Retrieve a filtered and paginated list of mileage transaction records. This endpoint enables searching, analytics, and auditing of individual mileage earning and redemption events, as stored in ai_commerce_mileage_transactions. Supports advanced querying, filtering by transaction type, status, time, and reference fields.","description":"This operation searches and returns a paginated list of mileage transactions, including accrual, redemption, adjustment, and expiration events. It leverages parameters specified in IAiCommerceMileageTransaction.IRequest to filter by type, date, user/account, status, and reference entity as appropriate.\n\nDesigned for both user self-audit and administrative/business use, this operation supports compliance and account analytics use cases. Role-based filtering is applied to ensure that users only see their own transactions, while admins may filter globally or per user.\n\nResults are tailored for performance and summary, and detailed event or audit data may be included based on role and business rule logic. Standard pagination and sorting fields are supported.","summary":"List and search mileage transactions with filtering and pagination.","parameters":[],"requestBody":{"description":"Query criteria for mileage transactions, including filtering and pagination parameters.","typeName":"IAiCommerceMileageTransaction.IRequest"},"responseBody":{"description":"Paginated list of mileage transactions matching the query criteria.","typeName":"IPageIAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/mileageTransactions","method":"patch"},{"specification":"Retrieve details for a specific mileage transaction by its unique identifier. The operation queries ai_commerce_mileage_transactions to provide full event history, type, amount, counterparty, and compliance metadata.","description":"This operation fetches the details of an individual mileage transaction, such as accrual, usage/redemption, adjustment, or expiration events for audit or user self-service purposes. Data fields include transaction type (accrual, redemption, adjustment), amount, status, date, reference entity, and audit metadata as stored in the ai_commerce_mileage_transactions table.\n\nAccess is limited to the transaction owner (buyer or seller) and administrator roles, with privacy and compliance strictly enforced. All query actions are logged for security and auditability. Results include all business-critical metadata and fields established in the database schema.","summary":"Retrieve full details of a mileage transaction by unique ID.","parameters":[{"name":"mileageTransactionId","description":"Unique identifier for the mileage transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record for the specified mileage transaction including type, amount, status, and audit/analytics metadata.","typeName":"IAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/mileageTransactions/{mileageTransactionId}","method":"get"},{"specification":"Retrieve details for a specific mileage transaction by its unique identifier. The operation queries ai_commerce_mileage_transactions to provide full event history, type, amount, counterparty, and compliance metadata.","description":"This operation fetches the details of an individual mileage transaction, such as accrual, usage/redemption, adjustment, or expiration events for audit or user self-service purposes. Data fields include transaction type (accrual, redemption, adjustment), amount, status, date, reference entity, and audit metadata as stored in the ai_commerce_mileage_transactions table.\n\nAccess is limited to the transaction owner (buyer or seller) and administrator roles, with privacy and compliance strictly enforced. All query actions are logged for security and auditability. Results include all business-critical metadata and fields established in the database schema.","summary":"Retrieve full details of a mileage transaction by unique ID.","parameters":[{"name":"mileageTransactionId","description":"Unique identifier for the mileage transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record for the specified mileage transaction including type, amount, status, and audit/analytics metadata.","typeName":"IAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/mileageTransactions/{mileageTransactionId}","method":"get"},{"specification":"Retrieve details for a specific mileage transaction by its unique identifier. The operation queries ai_commerce_mileage_transactions to provide full event history, type, amount, counterparty, and compliance metadata.","description":"This operation fetches the details of an individual mileage transaction, such as accrual, usage/redemption, adjustment, or expiration events for audit or user self-service purposes. Data fields include transaction type (accrual, redemption, adjustment), amount, status, date, reference entity, and audit metadata as stored in the ai_commerce_mileage_transactions table.\n\nAccess is limited to the transaction owner (buyer or seller) and administrator roles, with privacy and compliance strictly enforced. All query actions are logged for security and auditability. Results include all business-critical metadata and fields established in the database schema.","summary":"Retrieve full details of a mileage transaction by unique ID.","parameters":[{"name":"mileageTransactionId","description":"Unique identifier for the mileage transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record for the specified mileage transaction including type, amount, status, and audit/analytics metadata.","typeName":"IAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/mileageTransactions/{mileageTransactionId}","method":"get"},{"specification":"Create a new mileage transaction record in the system, such as accrual, redemption, adjustment, or expiration. The operation writes to the ai_commerce_mileage_transactions table, enforcing compliance, business logic, and audit rules.","description":"This operation enables authorized actors (typically admin or compliance/business processes) to create a new mileage transaction entry for a user’s account. Accepts all schema-required fields through the IAiCommerceMileageTransaction.ICreate DTO, including mileage_account_id, type, amount, status, reference_entity, and timestamps.\n\nTransaction creation is subject to business rule validations: only appropriate types (accrual, redemption, adjustment, expiration) are accepted, and balance changes are computed accordingly. The endpoint is strictly audited to prevent abuse or unauthorized changes to mileages.\n\nTypically, user self-service is limited, and most creation is via business logic triggers, admin, or reward campaign logic. The created transaction is linked to audit, ledger, and compliance reporting.","summary":"Create a new mileage transaction record (accrual, redemption, adjustment, or expiration).","parameters":[],"requestBody":{"description":"New mileage transaction details including account, type, amount, and event context.","typeName":"IAiCommerceMileageTransaction.ICreate"},"responseBody":{"description":"Created mileage transaction record with unique identifiers and all relevant field assignments.","typeName":"IAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/mileageTransactions","method":"post"},{"specification":"Update (correct or adjust) an existing mileage transaction event in the system. This operation allows correction of metadata or operational status for compliance, under admin or compliance authorization, in ai_commerce_mileage_transactions.","description":"This operation updates an existing mileage transaction entry identified by mileageTransactionId. Update actions are highly restricted—used solely for correction of erroneous metadata, operational status, or compliance justification. It does not allow direct modification of amounts for finalized transactions except by official audit/correction.\n\nAccepts request body formatted as IAiCommerceMileageTransaction.IUpdate, supporting changes only to allowed schema fields. Attempts to update immutable or business-critical fields will result in errors.\n\nAll changes must be audit-logged, including actor, timestamp, before/after state, and rationale for correction. Only administrators and compliance-authorized actors may use this endpoint, and its use may require justification in practice.","summary":"Update/correct metadata or status of a specific mileage transaction event.","parameters":[{"name":"mileageTransactionId","description":"Unique identifier for the mileage transaction to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating mileage transaction metadata, status, or compliance reason.","typeName":"IAiCommerceMileageTransaction.IUpdate"},"responseBody":{"description":"The updated mileage transaction record with all compliance changes logged.","typeName":"IAiCommerceMileageTransaction"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/mileageTransactions/{mileageTransactionId}","method":"put"},{"specification":"This operation provides advanced, filtered, and paginated search capabilities for issued coupons in the aiCommerce platform. It targets the 'ai_commerce_coupons' table for complex lookup and analytics use-cases, supporting multiple search and filter criteria such as validity, type, status, or code. Only admin users are authorized to access the complete set of coupon data.","description":"Retrieve a paginated, searchable list of coupons from the platform's coupon master table. This operation returns coupon metadata, issuance, validity periods, usage limits, status, and other business properties, filtered and sorted using powerful query capabilities.\n\nAdmin users can search by fields such as type, status, validity period, or partial code/name. Paging and sorting are supported, enabling large-scale analytics and reporting for management and campaign performance reviews. This operation operates on the ai_commerce_coupons table in the Prisma schema.\n\nPermissions are restricted to admin users, as coupon intelligence could expose commercial strategy data. Attempts by unauthorized users receive access denied errors; empty search results are handled gracefully.","summary":"Search and list platform coupons with filtering and pagination (admin only) from ai_commerce_coupons","parameters":[],"requestBody":{"description":"Search and filter criteria for querying coupon records","typeName":"IAiCommerceCoupon.IRequest"},"responseBody":{"description":"Paginated list of coupon summary records matching the search criteria","typeName":"IPageIAiCommerceCoupon.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/coupons","method":"patch"},{"specification":"This operation retrieves the detailed information for a single coupon, based on its unique identifier. It queries the 'ai_commerce_coupons' table to return fields such as coupon code, type, restriction, status, validity window, and configuration. This endpoint is admin-restricted for business-sensitive information.","description":"Provides full detail for a coupon from the 'ai_commerce_coupons' table, retrieved by couponId. Information returned includes code, issuance and expiry, coupon type (amount/percent/shipping), usage limits, conditions, campaign info, and the business logic fields used for validation and auditing.\n\nFull coupon details are sensitive and valuable for evaluating promotion campaign efficacy or compliance. Only admin users are authorized to access single coupon details. Error handling includes not found, permission denied, or deleted records by validating couponId accurately.\n\nRelies on the underlying coupon entity and all its data for further downstream operations (such as update, usage audit, or campaign reporting).","summary":"Retrieve detailed information for a single coupon from ai_commerce_coupons (admin only)","parameters":[{"name":"couponId","description":"The unique identifier of the coupon to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete coupon detail including business rule fields, restrictions, and campaign links","typeName":"IAiCommerceCoupon"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/coupons/{couponId}","method":"get"},{"specification":"This operation creates a new coupon in the platform's coupon master table. It inserts a new row into the 'ai_commerce_coupons' table according to the provided creation parameters, covering business rules, usage limits, type, and validity. Only admin users may create new coupons due to the financial impact and business policy.","description":"Register a new coupon in the 'ai_commerce_coupons' table, fully defining its campaign, business rules, and configuration. The creation request provides type (amount, percent, shipping, etc.), usage limits, validity periods, assigned issuer (admin or seller), code generation rules, and validation logic.\n\nOnly admin users are permitted to create coupons, as coupons affect financial liability and cross-platform incentives. Errors arise if invalid details are entered, such as date collisions, overlimit values, or duplicating codes. Coupon creation events are fully audited for compliance and review.\n\nThe new coupon will become available for issuance once validation passes and business rules are confirmed. Response includes the created coupon entity in full detail.","summary":"Create a new coupon entry in ai_commerce_coupons (admin only)","parameters":[],"requestBody":{"description":"Coupon creation business logic covering code, validity, limits, and rules","typeName":"IAiCommerceCoupon.ICreate"},"responseBody":{"description":"Created coupon entity as persisted in the system","typeName":"IAiCommerceCoupon"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/coupons","method":"post"},{"specification":"This operation updates an existing coupon based on its unique identifier. It writes to the 'ai_commerce_coupons' table, allowing admins to edit properties like validity, status, type, or limits. Only admin users are permitted to update coupon master records, and changes are fully tracked for audit and compliance.","description":"Edit an existing coupon in the 'ai_commerce_coupons' table, referenced by couponId. Permissible updates include changing campaign settings, business rules, limits, effective periods, or revising the coupon status for governance.\n\nAdmin users can only update coupons that are not expired or deleted. All update actions are logged for business records and compliance. Update process performs full validation to ensure the coupon remains within platform and legal limits.\n\nPermission checks and audit logging ensure only authorized staff can edit coupons, and that rollback/history is available for compliance or reconciliation.","summary":"Update an existing coupon entry in ai_commerce_coupons (admin only)","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated business and configuration data for the coupon","typeName":"IAiCommerceCoupon.IUpdate"},"responseBody":{"description":"Updated coupon entity as it exists after the update operation","typeName":"IAiCommerceCoupon"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/coupons/{couponId}","method":"put"},{"specification":"This operation deletes a specific coupon, identified by its unique couponId. It operates on the 'ai_commerce_coupons' table and performs a soft delete by setting the deleted_at column, so business and compliance records are preserved but coupon entry is no longer active. Only admin users are authorized to erase coupons.","description":"Remove a coupon from active use by setting its soft delete field ('deleted_at') in the 'ai_commerce_coupons' table, found via couponId. The action is restricted to admin users, and the record remains available for business auditing or compliance reviews.\n\nCoupons may be erased due to campaign closure, error in issuance, or legal requirements. The soft delete maintains all references and evidence, supporting full rollback or legal inquiry as required.\n\nNon-admin users will receive access denied errors. Record not found errors or already-deleted coupons return appropriate error responses.","summary":"Erase a coupon record from ai_commerce_coupons (admin only, soft delete)","parameters":[{"name":"couponId","description":"The unique identifier of the coupon to erase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/coupons/{couponId}","method":"delete"},{"specification":"Returns a filtered, paginated list of coupon issues (i.e., coupons assigned to users) from the 'ai_commerce_coupon_issues' table. Supports query by status, issuance period, target user, and coupon properties for analytics and campaign reporting. Accessible only by admin users due to sensitive data and audit requirements.","description":"Search and retrieve coupon issues (user-assigned coupons), supporting advanced filtering and pagination for analytics and compliance reviews. The operation allows admins to see which users have been issued specific coupons, their usage, expiration, and redemption status.\n\nCoupon issues represent the individual assignment of platform or seller coupons to buyers or accounts, and are linked to campaign details and business events. Supports searching by coupon attributes, user/account, status (issued, redeemed, expired, revoked), and by issuance or usage period.\n\nResponse is paginated and returns summary records only. Only admin users may call this operation to protect sensitive financial and analytics records.","summary":"Search and list coupon issues to users (admin only) from ai_commerce_coupon_issues","parameters":[],"requestBody":{"description":"Criteria for searching coupon issue records including status, period, and user/coupon relation","typeName":"IAiCommerceCouponIssue.IRequest"},"responseBody":{"description":"Paginated summary list of user coupon issues matched by the request criteria","typeName":"IPageIAiCommerceCouponIssue.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/couponIssues","method":"patch"},{"specification":"Retrieves the details of a single coupon issue entry assigned to a user, based on its unique identifier (couponIssueId). Operates on the 'ai_commerce_coupon_issues' table, returning all metadata, assignment details, and status fields for an individual coupon-user relationship. Only admin users may use this endpoint.","description":"Returns a specific coupon issue record (user-assigned coupon) from the 'ai_commerce_coupon_issues' table, found by couponIssueId. Information includes coupon entity reference, user/account, issuance/expiry dates, redemption status, and relevant campaign attribution or batch info.\n\nThis endpoint is vital for support, compliance, and business investigation scenarios where an individual coupon's journey through issuance and usage must be audited and traced. Only admin users may access per-issue detail, as assignment and redemption pathways are sensitive.\n\nHandles not found, permission, and record status errors gracefully for robust operational integration.","summary":"Retrieve full detail for a coupon issue (admin only) from ai_commerce_coupon_issues","parameters":[{"name":"couponIssueId","description":"The unique identifier of the coupon issue to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete coupon issue detail including user, coupon, assignment, and redemption state","typeName":"IAiCommerceCouponIssue"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/couponIssues/{couponIssueId}","method":"get"},{"specification":"This operation deletes a single mileage transaction record by its unique identifier. It operates on the 'ai_commerce_mileage_transactions' table in the Prisma schema. Hard deletion is performed since there is a soft delete field ('deleted_at') available.\n\nOnly admin users are authorized to erase mileage transaction records, typically for cases of compliance audits or exceptional risk/fraud incidents. Normal users do not have access to this function as it relates to sensitive, financial platform records.\n\nA valid UUID for the mileage transaction must be provided in the request path. Standard error handling applies if the record is not found or already deleted.","description":"This operation deletes a specific mileage transaction from the 'ai_commerce_mileage_transactions' table, identified by the mileageTransactionId parameter.\n\nMileage transactions include all events that increase or decrease a user's mileage/points balance (such as accrual, redemption, adjustment, or expiration) and are critical for loyalty and compliance tracking. Only authorized admin personnel may erase a transaction. Erasure should be used strictly for compliance, audit correction, or fraud remediation; all actions are audit-logged.\n\nThe soft delete field 'deleted_at' is set, and the record is removed from normal querying contexts, but full recovery and audit evidence are preserved in the backend. Non-admin attempts or missing transactionId will result in access denied or not found errors.","summary":"Delete a specific mileage transaction (admin only) from ai_commerce_mileage_transactions","parameters":[{"name":"mileageTransactionId","description":"The unique identifier of the mileage transaction to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/mileageTransactions/{mileageTransactionId}","method":"delete"},{"specification":"This operation issues a new coupon to a target user for the aiCommerce platform. It inserts a unique coupon issue record in the ai_commerce_coupon_issues table, specifying the coupon to be issued, the recipient user's ID, status, and relevant expiry information. The endpoint supports automated or admin-triggered allocation of coupons, including campaign-based or on-demand issuance. Upon creation, all coupon eligibility rules and restrictions are applied to ensure the coupon is valid for the user, and issuance is logged for audit and redemption tracing. If the requested coupon is ineligible for the user or campaign constraints are violated, the operation rejects the request with a descriptive error.","description":"This operation enables platform administrators, sellers (for their own coupons), or the automated incentive engine to grant a coupon to a specific user by creating a new record in the ai_commerce_coupon_issues table.\n\nThe request enforces business rules such as coupon validity period, max usage/quota, restrictions on overlapping coupon campaigns, and user eligibility. Only coupons presently active and not expired may be issued. The operation ensures that a single coupon cannot be issued multiple times to the same user beyond quota constraints.\n\nError scenarios include invalid coupon codes, user not found or not eligible, quota/issuance limit exceeded, expired coupons, or violation of business restrictions. All successful and failed issuance attempts are audit-logged for compliance and analytics.\n\nRelated operations include coupon usage/redeem (couponUses), coupon issue update (e.g., status adjustment), and searching existing issues for a given user or campaign. All coupon issue data is ultimately linked to coupon usage for tracking and incentive analytics.\n\nUser role permissions restrict coupon issuance to admins for all coupons and sellers for coupons they own, while public users cannot invoke this operation directly. System-dispatched automated issuance must comply with full business validation rules.","summary":"Issue a new coupon to a user (ai_commerce_coupon_issues table) for admin or seller campaigns","parameters":[],"requestBody":{"description":"Details of the coupon issuance to a user account, including coupon, recipient, issuance status, expiry, and campaign info.","typeName":"IAiCommerceCouponIssue.ICreate"},"responseBody":{"description":"Issued coupon record as persisted to ai_commerce_coupon_issues, reflecting issuance status, expiry date, and campaign reference.","typeName":"IAiCommerceCouponIssue"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/couponIssues","method":"post"},{"specification":"This operation issues a new coupon to a target user for the aiCommerce platform. It inserts a unique coupon issue record in the ai_commerce_coupon_issues table, specifying the coupon to be issued, the recipient user's ID, status, and relevant expiry information. The endpoint supports automated or admin-triggered allocation of coupons, including campaign-based or on-demand issuance. Upon creation, all coupon eligibility rules and restrictions are applied to ensure the coupon is valid for the user, and issuance is logged for audit and redemption tracing. If the requested coupon is ineligible for the user or campaign constraints are violated, the operation rejects the request with a descriptive error.","description":"This operation enables platform administrators, sellers (for their own coupons), or the automated incentive engine to grant a coupon to a specific user by creating a new record in the ai_commerce_coupon_issues table.\n\nThe request enforces business rules such as coupon validity period, max usage/quota, restrictions on overlapping coupon campaigns, and user eligibility. Only coupons presently active and not expired may be issued. The operation ensures that a single coupon cannot be issued multiple times to the same user beyond quota constraints.\n\nError scenarios include invalid coupon codes, user not found or not eligible, quota/issuance limit exceeded, expired coupons, or violation of business restrictions. All successful and failed issuance attempts are audit-logged for compliance and analytics.\n\nRelated operations include coupon usage/redeem (couponUses), coupon issue update (e.g., status adjustment), and searching existing issues for a given user or campaign. All coupon issue data is ultimately linked to coupon usage for tracking and incentive analytics.\n\nUser role permissions restrict coupon issuance to admins for all coupons and sellers for coupons they own, while public users cannot invoke this operation directly. System-dispatched automated issuance must comply with full business validation rules.","summary":"Issue a new coupon to a user (ai_commerce_coupon_issues table) for admin or seller campaigns","parameters":[],"requestBody":{"description":"Details of the coupon issuance to a user account, including coupon, recipient, issuance status, expiry, and campaign info.","typeName":"IAiCommerceCouponIssue.ICreate"},"responseBody":{"description":"Issued coupon record as persisted to ai_commerce_coupon_issues, reflecting issuance status, expiry date, and campaign reference.","typeName":"IAiCommerceCouponIssue"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/couponIssues","method":"post"},{"specification":"This operation updates an existing coupon issue entry in the ai_commerce_coupon_issues table by couponIssueId. Administrators or authorized sellers may update fields such as status (e.g., revoke, expire), expiry, or campaign association for a previously issued coupon. This supports revocation, expiry extension, quota adjustment, and recovery from administrative errors. All updates are audited and rollback is supported where allowed. The endpoint validates update eligibility to prevent changes to redeemed, expired, or system-locked coupon issues.","description":"The operation allows an authorized administrator or the owning seller to update fields of a coupon issue, identified by its couponIssueId. Typical use cases include manual revocation of unredeemed coupons, expiry extension due to campaign adjustments, or correction of campaign metadata.\n\nUpdate actions are governed by business rules: only coupons in specific states (e.g., issued, not yet redeemed or expired) may be updated. Attempting to update redeemed, revoked, or expired coupon issues is rejected with a validation error, and all update attempts are recorded in the audit log for compliance and evidence.\n\nThe operation carefully validates date and status transitions to avoid retroactive benefit extension or unauthorized coupon reactivation. Related APIs include coupon issuance, coupon usage, and querying coupon status for given users.","summary":"Update an issued coupon's status or expiry by couponIssueId (ai_commerce_coupon_issues table)","parameters":[{"name":"couponIssueId","description":"The unique identifier of the coupon issue to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the issued coupon, such as status, expiry, or batch association.","typeName":"IAiCommerceCouponIssue.IUpdate"},"responseBody":{"description":"The updated coupon issue record after applying status, expiry, or metadata changes.","typeName":"IAiCommerceCouponIssue"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/couponIssues/{couponIssueId}","method":"put"},{"specification":"This operation updates an existing coupon issue entry in the ai_commerce_coupon_issues table by couponIssueId. Administrators or authorized sellers may update fields such as status (e.g., revoke, expire), expiry, or campaign association for a previously issued coupon. This supports revocation, expiry extension, quota adjustment, and recovery from administrative errors. All updates are audited and rollback is supported where allowed. The endpoint validates update eligibility to prevent changes to redeemed, expired, or system-locked coupon issues.","description":"The operation allows an authorized administrator or the owning seller to update fields of a coupon issue, identified by its couponIssueId. Typical use cases include manual revocation of unredeemed coupons, expiry extension due to campaign adjustments, or correction of campaign metadata.\n\nUpdate actions are governed by business rules: only coupons in specific states (e.g., issued, not yet redeemed or expired) may be updated. Attempting to update redeemed, revoked, or expired coupon issues is rejected with a validation error, and all update attempts are recorded in the audit log for compliance and evidence.\n\nThe operation carefully validates date and status transitions to avoid retroactive benefit extension or unauthorized coupon reactivation. Related APIs include coupon issuance, coupon usage, and querying coupon status for given users.","summary":"Update an issued coupon's status or expiry by couponIssueId (ai_commerce_coupon_issues table)","parameters":[{"name":"couponIssueId","description":"The unique identifier of the coupon issue to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the issued coupon, such as status, expiry, or batch association.","typeName":"IAiCommerceCouponIssue.IUpdate"},"responseBody":{"description":"The updated coupon issue record after applying status, expiry, or metadata changes.","typeName":"IAiCommerceCouponIssue"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/couponIssues/{couponIssueId}","method":"put"},{"specification":"This operation permanently deletes a coupon issue entry from the ai_commerce_coupon_issues table, identified by couponIssueId. Only unused and unredeemed coupon issues may be deleted; attempts to remove used or expired coupons are denied. Physical deletion is enforced for compliance; this is an irreversible action. Only privileged users can invoke this permanent removal.","description":"Authorized users (admin or the issuer seller) may delete a coupon issue. This ensures compliance with privacy and audit policies while preserving historical records elsewhere for regulatory review and analytics.\n\nBefore performing deletion, the system checks that the coupon issue is unused (not redeemed) and not already expired. Attempts to delete already used, redeemed, or expired coupons are rejected to maintain auditability. Audit trails of all deletion actions are maintained, including actor, timestamp, and associated campaign/context metadata.\n\nEnd users cannot delete coupon issues directly; only privileged roles can initiate revocation. Related API operations include issuing, updating, and redeeming coupons, each of which enforces business rules for legal and audit compliance.","summary":"Permanently delete an unredeemed, unexpired coupon issue by couponIssueId (ai_commerce_coupon_issues)","parameters":[{"name":"couponIssueId","description":"The unique ID of the coupon issue to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/couponIssues/{couponIssueId}","method":"delete"},{"specification":"This operation permanently deletes a coupon issue entry from the ai_commerce_coupon_issues table, identified by couponIssueId. Only unused and unredeemed coupon issues may be deleted; attempts to remove used or expired coupons are denied. Physical deletion is enforced for compliance; this is an irreversible action. Only privileged users can invoke this permanent removal.","description":"Authorized users (admin or the issuer seller) may delete a coupon issue. This ensures compliance with privacy and audit policies while preserving historical records elsewhere for regulatory review and analytics.\n\nBefore performing deletion, the system checks that the coupon issue is unused (not redeemed) and not already expired. Attempts to delete already used, redeemed, or expired coupons are rejected to maintain auditability. Audit trails of all deletion actions are maintained, including actor, timestamp, and associated campaign/context metadata.\n\nEnd users cannot delete coupon issues directly; only privileged roles can initiate revocation. Related API operations include issuing, updating, and redeeming coupons, each of which enforces business rules for legal and audit compliance.","summary":"Permanently delete an unredeemed, unexpired coupon issue by couponIssueId (ai_commerce_coupon_issues)","parameters":[{"name":"couponIssueId","description":"The unique ID of the coupon issue to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/couponIssues/{couponIssueId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated list of coupon usage events (redemptions) from the ai_commerce_coupon_uses table, supporting complex search by user, coupon, order, status, redemption period, and campaign/activity attributes. Used for auditing coupon impact, tracking abuse, or campaign performance reporting. Returns each redemption event with linked coupon issue details and order associations for full traceability.","description":"Authenticated administrators or sellers can query coupon redemption events with advanced filters: user, coupon code, order reference, status, redemption date, campaign reference, or usage window. The operation supports sorting, pagination, and status breakdowns to surface trends, redemption velocity, and anomalies.\n\nSensitive details (such as user IDs and campaign linkage) are only shown to privileged users. Returned records include linked coupon issuance data, the affected user/account, and a summary of redemption context. Error handling includes validation for non-existent filter keys, excessive search window size, or unauthorized filter scopes.\n\nTypical use cases include tracking which coupons were redeemed in a campaign, investigating coupon abuse, and reviewing redemption history for a given buyer or order. All query actions are logged for audit, and real-time performance is optimized. Updates and deletions must use separate endpoints.\n\nBusiness logic enforces that only active, valid coupon usage events are included for general use; deleted or revoked uses appear only to admins for compliance analysis.","summary":"Search and retrieve paginated coupon use events from ai_commerce_coupon_uses for admin/seller analytics","parameters":[],"requestBody":{"description":"Search criteria—user, coupon, order, status, or campaign—plus pagination/sort fields.","typeName":"IAiCommerceCouponUse.IRequest"},"responseBody":{"description":"Paginated result of coupon use/redemption records matching the query and filters.","typeName":"IPageIAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/couponUses","method":"patch"},{"specification":"This operation retrieves a filtered, paginated list of coupon usage events (redemptions) from the ai_commerce_coupon_uses table, supporting complex search by user, coupon, order, status, redemption period, and campaign/activity attributes. Used for auditing coupon impact, tracking abuse, or campaign performance reporting. Returns each redemption event with linked coupon issue details and order associations for full traceability.","description":"Authenticated administrators or sellers can query coupon redemption events with advanced filters: user, coupon code, order reference, status, redemption date, campaign reference, or usage window. The operation supports sorting, pagination, and status breakdowns to surface trends, redemption velocity, and anomalies.\n\nSensitive details (such as user IDs and campaign linkage) are only shown to privileged users. Returned records include linked coupon issuance data, the affected user/account, and a summary of redemption context. Error handling includes validation for non-existent filter keys, excessive search window size, or unauthorized filter scopes.\n\nTypical use cases include tracking which coupons were redeemed in a campaign, investigating coupon abuse, and reviewing redemption history for a given buyer or order. All query actions are logged for audit, and real-time performance is optimized. Updates and deletions must use separate endpoints.\n\nBusiness logic enforces that only active, valid coupon usage events are included for general use; deleted or revoked uses appear only to admins for compliance analysis.","summary":"Search and retrieve paginated coupon use events from ai_commerce_coupon_uses for admin/seller analytics","parameters":[],"requestBody":{"description":"Search criteria—user, coupon, order, status, or campaign—plus pagination/sort fields.","typeName":"IAiCommerceCouponUse.IRequest"},"responseBody":{"description":"Paginated result of coupon use/redemption records matching the query and filters.","typeName":"IPageIAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/couponUses","method":"patch"},{"specification":"Retrieves details about a specific coupon redemption event from ai_commerce_coupon_uses table by couponUseId, returning user, coupon, order, status, and timing information. This is used for compliance, audit, support, or campaign impact analysis. Sensitive fields are masked based on the requesting role and context. Only authorized business actors may access this data, with audit logging enabled.","description":"The endpoint fetches a single coupon usage record by its unique couponUseId, returning full context including the issuing coupon, redeemed user, order, status, redemption date, and campaign linkage/tag.\n\nRole-based access ensures only admins, authorized sellers, or the involved user can view the record. If the coupon use is not found or inaccessible, the API returns an appropriate error. Use cases include support investigation, abuse review, and verifying entitlement in support cases. All requests are audit-logged for legal traceability. Related endpoints include listing coupon uses and searching by campaign or user.","summary":"Fetch details of a specific coupon use event from ai_commerce_coupon_uses by couponUseId","parameters":[{"name":"couponUseId","description":"Unique identifier of the coupon usage/redemption event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed coupon usage event information, including coupon issue, redeemed user, related order, status, and timestamps.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/couponUses/{couponUseId}","method":"get"},{"specification":"Retrieves details about a specific coupon redemption event from ai_commerce_coupon_uses table by couponUseId, returning user, coupon, order, status, and timing information. This is used for compliance, audit, support, or campaign impact analysis. Sensitive fields are masked based on the requesting role and context. Only authorized business actors may access this data, with audit logging enabled.","description":"The endpoint fetches a single coupon usage record by its unique couponUseId, returning full context including the issuing coupon, redeemed user, order, status, redemption date, and campaign linkage/tag.\n\nRole-based access ensures only admins, authorized sellers, or the involved user can view the record. If the coupon use is not found or inaccessible, the API returns an appropriate error. Use cases include support investigation, abuse review, and verifying entitlement in support cases. All requests are audit-logged for legal traceability. Related endpoints include listing coupon uses and searching by campaign or user.","summary":"Fetch details of a specific coupon use event from ai_commerce_coupon_uses by couponUseId","parameters":[{"name":"couponUseId","description":"Unique identifier of the coupon usage/redemption event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed coupon usage event information, including coupon issue, redeemed user, related order, status, and timestamps.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/couponUses/{couponUseId}","method":"get"},{"specification":"Records a new coupon redemption event by creating a record in ai_commerce_coupon_uses, linking a specified issued coupon to a user (typically via order or redemption context). This operation enforces business logic such as one-use-per-coupon, eligibility, and expiration. Upon success, the redemption is recorded and tied to downstream rewards, refunds, or campaign impact.","description":"Authenticated users (admin, seller, or the end user with coupon) can redeem a valid, issued coupon by creating a new coupon use (redemption) entry. The endpoint validates eligibility (coupon status, expiry, user, order context), ensures usage quota is not exceeded, and locks the usage event for audit.\n\nThe coupon issue status is atomically updated to reflect redemption, and cross-entity updates are made to ensure accurate incentive accounting. Related APIs include coupon issuance, query issued coupons (for a user or campaign), and reporting coupon usage. All redemptions are logged for compliance and analytics; abuses are rejected with a descriptive error. Coupon cannot be redeemed twice or by unauthorized actors.","summary":"Redeem a valid issued coupon by creating an ai_commerce_coupon_uses record","parameters":[],"requestBody":{"description":"Redemption details: coupon issue, user, order/context, and event metadata for recording the usage.","typeName":"IAiCommerceCouponUse.ICreate"},"responseBody":{"description":"Newly created coupon use (redemption) record, with all business fields and audit linkage.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/couponUses","method":"post"},{"specification":"Records a new coupon redemption event by creating a record in ai_commerce_coupon_uses, linking a specified issued coupon to a user (typically via order or redemption context). This operation enforces business logic such as one-use-per-coupon, eligibility, and expiration. Upon success, the redemption is recorded and tied to downstream rewards, refunds, or campaign impact.","description":"Authenticated users (admin, seller, or the end user with coupon) can redeem a valid, issued coupon by creating a new coupon use (redemption) entry. The endpoint validates eligibility (coupon status, expiry, user, order context), ensures usage quota is not exceeded, and locks the usage event for audit.\n\nThe coupon issue status is atomically updated to reflect redemption, and cross-entity updates are made to ensure accurate incentive accounting. Related APIs include coupon issuance, query issued coupons (for a user or campaign), and reporting coupon usage. All redemptions are logged for compliance and analytics; abuses are rejected with a descriptive error. Coupon cannot be redeemed twice or by unauthorized actors.","summary":"Redeem a valid issued coupon by creating an ai_commerce_coupon_uses record","parameters":[],"requestBody":{"description":"Redemption details: coupon issue, user, order/context, and event metadata for recording the usage.","typeName":"IAiCommerceCouponUse.ICreate"},"responseBody":{"description":"Newly created coupon use (redemption) record, with all business fields and audit linkage.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/couponUses","method":"post"},{"specification":"Updates an existing coupon redemption entry in ai_commerce_coupon_uses by couponUseId, allowing permitted roles to adjust status, revoke, or correct event metadata in cases of administrative intervention, fraud, or system errors. Redemptions can be revoked or status-edited only under strict business rules; full audit log and trace is maintained.","description":"Authorized administrators (and, where policy allows, issuing sellers) may update a coupon usage record by couponUseId, changing its status (e.g., revoke, mark as refunded), event metadata, or associated order/context. This is only allowed before settlement/finalization or as part of a fraud investigation. Updates are strictly validated against current status, redemption history, and business constraints; only allowed transitions are permitted.\n\nAttempting to modify a finalized, expired, or audited usage event is denied. All update operations are trace-logged for compliance, and only authorized actors can update another user's redemption record. Related APIs include coupon use creation (redeem), listing, and deletion/revocation endpoints.","summary":"Update a coupon use/redemption in ai_commerce_coupon_uses by couponUseId, for admin/seller corrections","parameters":[{"name":"couponUseId","description":"Unique id of the coupon usage event to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update fields for the coupon use event: status, order, event metadata, or administrative correction.","typeName":"IAiCommerceCouponUse.IUpdate"},"responseBody":{"description":"Updated coupon use event, reflecting status changes, corrections, or revocations with audit fields.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/couponUses/{couponUseId}","method":"put"},{"specification":"Updates an existing coupon redemption entry in ai_commerce_coupon_uses by couponUseId, allowing permitted roles to adjust status, revoke, or correct event metadata in cases of administrative intervention, fraud, or system errors. Redemptions can be revoked or status-edited only under strict business rules; full audit log and trace is maintained.","description":"Authorized administrators (and, where policy allows, issuing sellers) may update a coupon usage record by couponUseId, changing its status (e.g., revoke, mark as refunded), event metadata, or associated order/context. This is only allowed before settlement/finalization or as part of a fraud investigation. Updates are strictly validated against current status, redemption history, and business constraints; only allowed transitions are permitted.\n\nAttempting to modify a finalized, expired, or audited usage event is denied. All update operations are trace-logged for compliance, and only authorized actors can update another user's redemption record. Related APIs include coupon use creation (redeem), listing, and deletion/revocation endpoints.","summary":"Update a coupon use/redemption in ai_commerce_coupon_uses by couponUseId, for admin/seller corrections","parameters":[{"name":"couponUseId","description":"Unique id of the coupon usage event to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update fields for the coupon use event: status, order, event metadata, or administrative correction.","typeName":"IAiCommerceCouponUse.IUpdate"},"responseBody":{"description":"Updated coupon use event, reflecting status changes, corrections, or revocations with audit fields.","typeName":"IAiCommerceCouponUse"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/couponUses/{couponUseId}","method":"put"},{"specification":"This operation permanently deletes a coupon redemption entry from the ai_commerce_coupon_uses table by couponUseId. Only unfinalized redemption records may be deleted; attempts to delete post-settlement or previously audited records are denied. This irreversible action ensures compliance. Only privileged users can invoke this permanent removal.","description":"Role-restricted users (admin, authorized seller) can delete a coupon use record by couponUseId, intended for compliance, privacy, or administrative correction (e.g., fraud cases or duplicate issue/usage correction).\n\nBefore deletion, the system checks status and financial settlement: only unfinalized uses may be deleted. Attempts to delete post-settlement or previously audited records result in a validation error. Audit trails of all deletion actions are maintained, including actor, context, and timestamp for audit.\n\nPhysical data removal is enforced; this operation does not perform logical delete. Only privileged roles may invoke this operation.","summary":"Permanently delete a coupon use record in ai_commerce_coupon_uses by couponUseId","parameters":[{"name":"couponUseId","description":"ID of coupon use/redemption record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/couponUses/{couponUseId}","method":"delete"},{"specification":"This operation permanently deletes a coupon redemption entry from the ai_commerce_coupon_uses table by couponUseId. Only unfinalized redemption records may be deleted; attempts to delete post-settlement or previously audited records are denied. This irreversible action ensures compliance. Only privileged users can invoke this permanent removal.","description":"Role-restricted users (admin, authorized seller) can delete a coupon use record by couponUseId, intended for compliance, privacy, or administrative correction (e.g., fraud cases or duplicate issue/usage correction).\n\nBefore deletion, the system checks status and financial settlement: only unfinalized uses may be deleted. Attempts to delete post-settlement or previously audited records result in a validation error. Audit trails of all deletion actions are maintained, including actor, context, and timestamp for audit.\n\nPhysical data removal is enforced; this operation does not perform logical delete. Only privileged roles may invoke this operation.","summary":"Permanently delete a coupon use record in ai_commerce_coupon_uses by couponUseId","parameters":[{"name":"couponUseId","description":"ID of coupon use/redemption record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/couponUses/{couponUseId}","method":"delete"},{"specification":"This operation retrieves a paginated and filtered list of coupon audit logs, supporting search by coupon audit event type, associated coupon ID, audit timestamp range, actor, and event reference fields. It is designed based on the ai_commerce_coupon_audits table in the database, which ensures an append-only, immutable audit trail for all coupon lifecycle and usage events, essential for compliance, business analytics, and evidence preservation.","path":"/aiCommerce/admin/couponAudits","method":"patch","summary":"Search and retrieve a filtered, paginated list of coupon audit logs from ai_commerce_coupon_audits.","description":"This operation returns a list of coupon audit logs with advanced query support, including pagination, search filtering by coupon event type (e.g. issue, redeem, expire, revoke), date range, coupon code, event reference, and actor. The result includes detailed audit entry data for compliance review and business analytics.\n\nThe ai_commerce_coupon_audits table is write-only for business logic (never edited or deleted), so this operation is purely read-only. All returned data is compliant for evidence and reporting purposes.\n\nSecurity: Coupon audits involve potentially sensitive data and should be accessible only to admin users or staff with reporting rights. Proper authorization and filtering must be enforced.\n\nTypical use cases include: monitoring coupon abuse, tracking redemption/issuance rates, regulatory reporting, and business promotion analysis. Results are paginated and suitable for export or dashboard analytics.\n","parameters":[],"requestBody":{"description":"The search, filter, and pagination parameters for coupon audit log retrieval.","typeName":"IAiCommerceCouponAudit.IRequest"},"responseBody":{"description":"Paginated, filtered list of coupon audit log entries with cursor pagination details.","typeName":"IPageIAiCommerceCouponAudit"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves a single coupon audit log entry from the ai_commerce_coupon_audits table by its unique audit log ID (couponAuditId) for detailed compliance review, evidence display, or external reporting.","path":"/aiCommerce/admin/couponAudits/{couponAuditId}","method":"get","summary":"Get a specific coupon audit log entry by ID from ai_commerce_coupon_audits.","description":"Fetch detailed information for a single coupon audit entry by its unique ID (couponAuditId). This operation is used for deep compliance reviews, dispute investigations, or export of single evidence records. The ai_commerce_coupon_audits table is immutable and append-only, containing full details of coupon-related lifecycle/business events, such as issuance, redemption, expiration, or administrative actions.\n\nThe returned entry includes all fields: event type, event reference, note, timestamp, and associated coupon information. Proper path parameter validation and access control according to compliance reporting requirements are enforced.\n\nThis operation is critical for business processes that require forensic detail, including legal review, user dispute resolution, and regulatory audits. Only admins or compliance staff should have access to this API.\n","parameters":[{"name":"couponAuditId","description":"Unique identifier of the target coupon audit log entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested coupon audit log entry by ID.","typeName":"IAiCommerceCouponAudit"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation retrieves a paginated and filtered list of payment fraud event records from the ai_commerce_payment_fraud_events table, supporting advanced search (by event code, entity type, status, date range, and description) for fraud monitoring, compliance, and business analytics.","path":"/aiCommerce/admin/paymentFraudEvents","method":"patch","summary":"Search, filter, and paginate payment fraud events from ai_commerce_payment_fraud_events.","description":"This operation enables fraud investigators, compliance teams, and admin users to retrieve a filtered, paginated list of detected fraud events associated with payments, coupons, deposits, or mileage. Query parameters allow filtering by fraud event code (e.g., MULTI_REDEMPTION, ABUSE), entity type (payment, coupon, deposit, mileage, transaction), status (detected, under_review, confirmed, dismissed), time range, and search by pattern in the description field.\n\nThe ai_commerce_payment_fraud_events table is append-only, with each entry capturing critical forensic data for audit, reporting, legal proceedings, and platform abuse monitoring.\n\nThis API is intended for back-office staff with elevated privileges; client access should be strictly authenticated and logged. Outputs are suitable for compliance reporting, fraud dashboard integration, and operational analytics, supporting business workflow and regulatory obligations.","parameters":[],"requestBody":{"description":"Advanced search, filter, and pagination criteria for finding fraud events.","typeName":"IAiCommercePaymentFraudEvent.IRequest"},"responseBody":{"description":"Paginated and filtered results of payment fraud event audit logs.","typeName":"IPageIAiCommercePaymentFraudEvent"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves a single payment fraud event record from the ai_commerce_payment_fraud_events table by its unique identifier for compliance, forensic investigation, or reporting integration.","path":"/aiCommerce/admin/paymentFraudEvents/{paymentFraudEventId}","method":"get","summary":"Get a payment fraud event log record by its unique ID from ai_commerce_payment_fraud_events.","description":"Returns a single payment fraud event record from the ai_commerce_payment_fraud_events audit table, identified by paymentFraudEventId. Used by back-office or admin users for deep dive analysis, incident investigation, or compliance export requirements.\n\nThe ai_commerce_payment_fraud_events entity is immutable (never manually edited or deleted), and stores complete details of rule-based/manual/AI-detected fraud, including event codes, entity type, description, timestamps, and resolution state. This endpoint facilitates high-trust workflows, such as regulatory filings, business analytics, or legal evidence extraction.\n\nStrict role-based access control must be applied. The returned object contains all event fields as defined in the schema.","parameters":[{"name":"paymentFraudEventId","description":"Unique identifier for the target payment fraud event audit record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail record of the requested payment fraud event.","typeName":"IAiCommercePaymentFraudEvent"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation creates a new payment fraud audit record in the ai_commerce_payment_fraud_events table, logging an externally detected incident, manual or automated fraud flag, or post-incident classification event for compliance and platform security. The operation is reserved for admin-only use, as fraud records are forensic/evidentiary and should never be user-created from the client side.","path":"/aiCommerce/admin/paymentFraudEvents","method":"post","summary":"Insert a new payment fraud audit event entry into ai_commerce_payment_fraud_events.","description":"Allows compliance or security teams to log a new fraud event into the platform audit trail, either due to externally detected fraud, review team identification, or API-driven risk triggers. Accepted data includes the fraud event code, entity type/ID, status, detailed description, and detection timestamp. All required validations, business process triggers, and timestamping must be strictly enforced.\n\nThis is a privileged administrative operation. Public or regular user-facing flows must never create fraud audit events. Entries are immutable once created and form the source of truth for audit, compliance, and compensation/recovery actions.","parameters":[],"requestBody":{"description":"Fraud event details for creation, including event code, entity type, IDs, description, status, and detection time.","typeName":"IAiCommercePaymentFraudEvent.ICreate"},"responseBody":{"description":"The created payment fraud event audit entry as written to the audit log.","typeName":"IAiCommercePaymentFraudEvent"},"authorizationRoles":["admin"],"name":"create","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates the status or details of an existing fraud event record in ai_commerce_payment_fraud_events (e.g., marking from under_review to confirmed or dismissed, changing resolution notes) as part of the compliance/dispute/forensics workflow. Only authorized platform/corporate staff (admins) are allowed to perform this mutation for legal, audit, or business reporting corrections.","path":"/aiCommerce/admin/paymentFraudEvents/{paymentFraudEventId}","method":"put","summary":"Update the status or business fields of a payment fraud event audit record.","description":"Updates an existing payment fraud event, such as marking an event as confirmed, dismissed, resolved, or updating its resolution details. This operation is strictly limited to back-office, security, or compliance administrators for correcting audit records, closing out fraud investigations, or supporting business/compliance reporting. It performs full validation of the update and overwrites only permitted fields such as status, reviewed_at, description, or resolution note.\n\nAs ai_commerce_payment_fraud_events is an immutable audit log for most workflows, manual update privileges should be stringently logged and monitored in production. Regular user interfaces must never expose this mutation.","parameters":[{"name":"paymentFraudEventId","description":"Unique ID of the payment fraud event to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the fraud event record, such as status, review note, or event details.","typeName":"IAiCommercePaymentFraudEvent.IUpdate"},"responseBody":{"description":"Updated fraud event audit record after mutation.","typeName":"IAiCommercePaymentFraudEvent"},"authorizationRoles":["admin"],"name":"update","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently erases a payment fraud event audit record from the ai_commerce_payment_fraud_events table by its unique identifier. Note that this is an irreversible hard delete and not recommended for normal workflows due to the evidentiary and compliance value of the audit trail. Only senior admins or compliance officers with high privilege may perform this operation for cases such as evidence invalidation or privacy requests. The operation must be comprehensively logged for business/legal review.","path":"/aiCommerce/admin/paymentFraudEvents/{paymentFraudEventId}","method":"delete","summary":"Permanently remove a payment fraud event audit record by its ID from ai_commerce_payment_fraud_events.","description":"This endpoint executes a permanent, hard deletion of a payment fraud event audit entry, identified by paymentFraudEventId. Deletion is restricted to senior compliance/admin staff for rare cases where legal, privacy, or evidence-compromising circumstances arise (i.e., GDPR right-to-be-forgotten, proven false positive). The operation ensures proper logging and should be auditable at every step.\n\nUnder normal operational and compliance policy, audit log entries should not be deleted. Forensic, reporting, and compensation/recovery logic rely on complete audit trails. Non-admin or regular user actions must never expose this operation.","parameters":[{"name":"paymentFraudEventId","description":"Unique ID of the payment fraud event record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered set of payment analytics summary records from ai_commerce_payment_analytics, supporting query by period, channel, payment method, or gateway for business dashboards, finance teams, executives, and compliance reporting.","path":"/aiCommerce/admin/paymentAnalytics","method":"patch","summary":"Retrieve paginated summary analytics of payment/coupon/mileage transactional activity from ai_commerce_payment_analytics.","description":"This endpoint delivers summary-level business analytics on payment transactions, coupon use, mileage expiry/redemption, deposit usage, and refund metrics over user-defined time windows (period_start/period_end), filtered by channel, payment method, or gateway. Results support business dashboards, financial analytics, and regulatory compliance reporting, and are only accessible by authorized admins or finance roles.\n\nThe ai_commerce_payment_analytics table is strictly read-only, populated via scheduled ETL jobs or platform events. Outputs are suitable for report generation, management KPIs, and cross-channel comparison. Extensive pagination and filtering ensure scalable business intelligence use.","parameters":[],"requestBody":{"description":"Criteria and time range parameters for finding and filtering payment analytics summary records.","typeName":"IAiCommercePaymentAnalytics.IRequest"},"responseBody":{"description":"Paginated, filtered set of payment analytics KPIs, coupons, mileage, and refunds.","typeName":"IPageIAiCommercePaymentAnalytics"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves payment analytics details by the unique analytic record ID. It operates on the ai_commerce_payment_analytics table and is designed for admin-level analysis of financial flows, including payment volumes, refund counts, coupon usage, and associated channel/method/gateway details. The main business purpose is to provide detailed analytics to platform administrators for monitoring and optimization, supporting business intelligence and compliance queries.","description":"Retrieve full details of a payment analytics record by its unique identifier. This endpoint is intended for use by administrators to access aggregated or denormalized analytics about payments for a specific period, channel, payment method, and gateway.\n\nOnly administrators can access this endpoint, and the response contains sensitive business information about transaction volume, revenues, refunds, coupon/redemption rates, and system usage. The request parameter is the unique UUID of the payment analytics record.\n\nThis API references the ai_commerce_payment_analytics table and is restricted to admin-level roles for compliance and confidentiality. If the record does not exist, an error is returned. Related endpoints include list retrieval and analytics dashboards.","summary":"Retrieve a specific payment analytics record by ID from ai_commerce_payment_analytics table.","parameters":[{"name":"paymentAnalyticsId","description":"Unique identifier for the payment analytics record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified payment analytics record.","typeName":"IAiCommercePaymentAnalytics"},"authorizationRoles":["admin"],"name":"at","path":"/aiCommerce/admin/paymentAnalytics/{paymentAnalyticsId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"This operation provides advanced, paginated search of bulletins (announcements or notices) in the system, operating on the ai_commerce_bulletins table. It supports filtering by status, visibility, author, date range, and text search. Results are paginated and sorted for scalable retrieval, and appropriate for both admin and authenticated user dashboards.","description":"Search, filter, and retrieve a paginated list of bulletins (system notices or announcements), with advanced search capabilities including keyword full-text, creation/update date range, status, and author filtering. Results are sorted as requested and can be paginated for scalability.\n\nOnly admins may access the full set of bulletins with all moderation status. Buyers may see only published, public bulletins. Response contains summary information for listing purposes.\n\nThis endpoint corresponds to the ai_commerce_bulletins table, referencing fields for filtering, sorting, and secure pagination. See documentation for parameter examples.","summary":"Advanced, paginated search/filter for ai_commerce_bulletins with sorting and filtering.","parameters":[],"requestBody":{"description":"Search and filter parameters for bulletin retrieval, including pagination, text search, and status filter.","typeName":"IAiCommerceBulletin.IRequest"},"responseBody":{"description":"Paginated list of bulletin summaries matching the search criteria.","typeName":"IPageIAiCommerceBulletin.ISummary"},"authorizationRoles":["admin"],"name":"index","path":"/aiCommerce/admin/bulletins","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the details of a specific bulletin (announcement or notice) using its unique ID from the ai_commerce_bulletins table. The response includes full information such as title, body, status, visibility, and associated metadata.","description":"Retrieve the detailed contents of a specific bulletin by its unique identifier. This includes all public fields such as title, body, visibility, status, and timestamps, suitable for display in user or admin dashboards.\n\nBuyers may only view published and public bulletins, while admins can view all bulletins regardless of status or visibility. The bulletinId parameter is required and mapped directly to the record's UUID in the ai_commerce_bulletins table.\n\nOn not found, an appropriate error is returned. Usage of this endpoint is controlled by the caller's role and bulletin visibility status.","summary":"Get the details of a specific bulletin by its ID (ai_commerce_bulletins).","parameters":[{"name":"bulletinId","description":"The unique identifier of the bulletin to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed bulletin record as defined in the table.","typeName":"IAiCommerceBulletin"},"authorizationRoles":[],"name":"at","path":"/aiCommerce/bulletins/{bulletinId}","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"This operation creates a new bulletin (announcement or system notice) by inserting a new record into the ai_commerce_bulletins table. Only admin users are permitted to create bulletins. The request body must include all required fields such as title, body, visibility, and status.","description":"Create a new platform bulletin or announcement. Only admins can use this endpoint to post system notices, with all required business fields such as title, full body content, publication status, and visibility scope.\n\nThe request body follows the IAiCommerceBulletin.ICreate schema and is validated for required fields including localized title, description/body, and associated publication parameters. Security and audit logging are performed automatically on create.\n\nOn success, the response returns the created bulletin record. Related endpoints include update and index.","summary":"Create a new bulletin (ai_commerce_bulletins) with full required fields.","parameters":[],"requestBody":{"description":"Bulletin creation data including title, body, status, and visibility controls.","typeName":"IAiCommerceBulletin.ICreate"},"responseBody":{"description":"Created bulletin entity as persisted.","typeName":"IAiCommerceBulletin"},"authorizationRoles":["admin"],"name":"create","path":"/aiCommerce/admin/bulletins","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing bulletin by its ID. It is restricted to admin roles and updates a record in ai_commerce_bulletins with new title, body, visibility status, or other business fields. All changes are tracked for audit/compliance.","description":"Update an existing bulletin's details, including title, content, visibility, and publication status. This endpoint is for administrator use only; regular users may not update bulletins.\n\nThe bulletinId parameter identifies the record to change, and the request body includes fields to be updated. Changes are logged for compliance, and the endpoint references the ai_commerce_bulletins table.\n\nOn success, returns the new state of the updated bulletin. Related endpoints include get, create, and delete.","summary":"Update an existing bulletin (ai_commerce_bulletins) by ID as an administrator.","parameters":[{"name":"bulletinId","description":"Unique identifier of the bulletin to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update on the specified bulletin, such as title, body, visibility, or status changes.","typeName":"IAiCommerceBulletin.IUpdate"},"responseBody":{"description":"Updated bulletin record after modifications.","typeName":"IAiCommerceBulletin"},"authorizationRoles":["admin"],"name":"update","path":"/aiCommerce/admin/bulletins/{bulletinId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"This operation deletes a bulletin from the system (hard or soft depending on schema). Operates on ai_commerce_bulletins and is available to admin roles only.","description":"Erase the specified bulletin (announcement/notice) identified by bulletinId. For compliance with the ai_commerce_bulletins schema, deletion is implemented as a soft delete, marking the bulletin as deleted without physical removal to retain for audit/evidence purposes.\n\nOnly administrators are authorized to erase bulletins. The operation records audit trails and timestamps in the deleted_at field, maintaining legal and business traceability. Related endpoints include update and at (get by ID).","summary":"Erase a bulletin by ID (soft delete in ai_commerce_bulletins for compliance).","parameters":[{"name":"bulletinId","description":"The unique identifier of the bulletin to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","path":"/aiCommerce/admin/bulletins/{bulletinId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation allows advanced, paginated retrieval of comments associated with a specific bulletin. Query can filter by author, status, date, or text, and supports pagination and sorting for moderate and active thread management. Based on ai_commerce_comments with a FK to bulletinId, it is used by both admin and authenticated buyers.","description":"Search and retrieve a list of comments (replies/discussions) for a given bulletin identified by bulletinId, with support for pagination, searching, filtering by author or status, and sorting by creation time or other fields.\n\nThis endpoint enables threaded comment management for announcements, with security/visibility handled depending on user role: buyers may see public comments, admins can moderate and see all statuses. It references the ai_commerce_comments table with a FK to the bulletin.\n\nPaginated results are returned, and related endpoints include get, create, update, and moderation actions.","summary":"Paginated, filterable comment list for a given bulletin (ai_commerce_comments by bulletin).","parameters":[{"name":"bulletinId","description":"ID of the bulletin whose comments are being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, search, and pagination options for comment retrieval.","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated summary list of comment entities for this bulletin.","typeName":"IPageIAiCommerceComment.ISummary"},"authorizationRoles":[],"name":"index","path":"/aiCommerce/bulletins/{bulletinId}/comments","method":"patch","authorizationRole":null,"authorizationType":null},{"specification":"This operation retrieves a specific comment on a bulletin by its comment ID, for display or review. It references ai_commerce_comments and is available to authenticated users based on comment status and visibility associated with bulletinId and commentId as UUIDs.","description":"Get the complete details of a specific comment on a bulletin, identified by both bulletinId and commentId. The response includes content, author, creation date, moderation status, and all relevant fields from ai_commerce_comments. Buyers may retrieve comments that are public or addressed to them; admins may retrieve all.\n\nThe endpoint validates both UUID parameters and returns an error if not found or access denied due to visibility. Related endpoints enable retrieval of all comments for a bulletin or management of thread hierarchies.","summary":"Retrieve specific comment by bulletin and comment ID (ai_commerce_comments).","parameters":[{"name":"bulletinId","description":"ID of the bulletin for comment retrieval context.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed comment record for the specified bulletin and comment.","typeName":"IAiCommerceComment"},"authorizationRoles":[],"name":"at","path":"/aiCommerce/bulletins/{bulletinId}/comments/{commentId}","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"This operation creates a new comment under a specific bulletin post in the aiCommerce platform. It operates on the ai_commerce_comments table and is invoked by users (buyers) who want to participate in discussions or provide feedback related to a bulletin. The operation requires the bulletinId as a path parameter to identify the target bulletin and expects a comment creation DTO in the request body. The comment is then associated with the given bulletin and the current authenticated user, supporting threaded conversation, moderation, audit logging, and notification mechanisms. This is central to supporting interaction and engagement within the platform's bulletin board system.","description":"This endpoint allows an authenticated user (buyer) to create a comment on a specific bulletin post. The user must provide the bulletinId of the target bulletin, and the request body should include the content of the comment and optional threading metadata (e.g., parentCommentId for replies).\n\nSecurity is enforced by restricting creation to authenticated buyers only, ensuring accountability and audit log traceability. The request payload is validated to ensure that content is non-empty and free from prohibited terms as per platform rules; moderation and content filtering may be triggered automatically for certain keywords.\n\nEach created comment is linked to the bulletin, the posting user, and supports reply/threaded structure if a parentCommentId is given. Upon successful creation, the response returns the detailed comment entity as stored in the system, including timestamps and status. Errors are returned for invalid input, unauthorized access, or if the bulletin is not found or not accepting comments.","summary":"Create a new comment on a specific bulletin (ai_commerce_comments table).","parameters":[{"name":"bulletinId","description":"Unique identifier of the target bulletin post to which the comment will be attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a comment under a bulletin, including content, optional parentCommentId for threading, and visibility/status as defined in IAiCommerceComment.ICreate.","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"Detailed comment entity created, including author, content, parent, status, timestamps, and moderation info as defined in IAiCommerceComment.","typeName":"IAiCommerceComment"},"authorizationRoles":["buyer"],"name":"create","path":"/aiCommerce/buyer/bulletins/{bulletinId}/comments","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation updates an existing comment on a specific bulletin post in the aiCommerce platform. It works on the ai_commerce_comments table and is allowed for the comment's author or administrators. The operation requires both the bulletinId and commentId as path parameters to precisely identify the comment, and expects an update DTO in the request body. Audit history and edit tracking are automatically generated. The update supports content modification and thread status changes, subject to moderation policies.","description":"Allows the author of a comment (buyer) or an administrator to update the content or visibility status of a specific comment on a bulletin post. The operation references both the bulletinId and commentId to uniquely identify the comment.\n\nInput validation ensures that the editor is authorized, that provided content is not blank and complies with moderation policies, and that the comment is still editable (e.g., not locked by moderation or older than an allowed edit window). Edits are saved with an immutable snapshot in the edit history for compliance and auditability.\n\nOn success, the updated comment entity reflecting all changes is returned. Errors will be raised if the requestor lacks permission, if comment or bulletin does not exist, or if a validation rule is violated.","summary":"Update an existing comment for a given bulletin (ai_commerce_comments table).","parameters":[{"name":"bulletinId","description":"Identifier of the bulletin which the comment belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier of the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the comment, such as content or status, formatted as IAiCommerceComment.IUpdate.","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"The updated comment entity, including new content, status, and audit metadata as defined in IAiCommerceComment.","typeName":"IAiCommerceComment"},"authorizationRoles":["buyer"],"name":"update","path":"/aiCommerce/buyer/bulletins/{bulletinId}/comments/{commentId}","method":"put","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation deletes an existing comment on a bulletin for the aiCommerce platform. It targets the ai_commerce_comments table and is used by comment authors (buyers) or administrators for logical removal. Deletions are soft by setting the deleted_at field for audit and recovery. Both the bulletinId and commentId are required as path parameters to precisely locate the record. The operation is restricted to users with the requisite permission, with attempted deletions being logged for audit purposes.","description":"This endpoint allows an authorized user (the comment author or an administrator) to mark a comment on a bulletin as deleted. Instead of physically erasing the comment, the deleted_at timestamp is set for logical deletion, enabling recovery or audit retrieval. The comment remains in the database for compliance and evidence but is no longer displayed to standard users.\n\nPermission checks ensure only the comment's author or users with the appropriate administrative privileges can perform this operation. Attempts by unauthorized users will result in error responses and may trigger audit alerts.\n\nThe deletion action is always recorded in the platform's audit log, including the actor's identity, reason, and the timestamp. In case of failure (e.g., comment not found, insufficient rights), the response will convey the reason to the client.","summary":"Delete (logically) a specific comment on a bulletin (soft delete via ai_commerce_comments table).","parameters":[{"name":"bulletinId","description":"Identifier of the bulletin which contains the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier of the comment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["buyer"],"name":"erase","path":"/aiCommerce/buyer/bulletins/{bulletinId}/comments/{commentId}","method":"delete","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of inquiries from buyers related to products. It targets the ai_commerce_inquiries table, supporting complex search and filter logic including productId, authorId, status, visibility, and keyword. Results enable buyers to find their own inquiries or browse public ones, subject to privacy and access controls. Pagination and sorting are provided for scalability.","description":"Fetches a paginated, filtered, and optionally sorted list of product inquiries as stored in the ai_commerce_inquiries table. Search parameters may include filtering by product ID, author ID, inquiry status, and keywords.\n\nThe operation supports both buyers searching for their own inquiries and public browsing, with results subject to each inquiry's visibility property. Backend filtering ensures compliance with privacy policies and returns only those inquiries the requesting user is permitted to view.\n\nThe response format includes a page of inquiry summary objects and pagination metadata. The search and pagination logic is aligned to platform conventions for performance and usability.","summary":"List inquiries (with filtering and pagination) from ai_commerce_inquiries table.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for listing inquiries, as defined in IAiCommerceInquiry.IRequest.","typeName":"IAiCommerceInquiry.IRequest"},"responseBody":{"description":"Paginated list of inquiry summary objects and pagination info as defined in IPageIAiCommerceInquiry.ISummary.","typeName":"IPageIAiCommerceInquiry.ISummary"},"authorizationRoles":[],"name":"index","path":"/aiCommerce/inquiries","method":"patch","authorizationRole":null,"authorizationType":null},{"specification":"This operation retrieves detailed information for a specific product inquiry by inquiry ID from the ai_commerce_inquiries table. It is used to view all details about the inquiry, including question, answer, author, status, timestamps, and associations. Public and private inquiries are viewed subject to visibility and access rules.","description":"Fetches all detailed fields of a single inquiry, uniquely identified by its inquiryId path parameter. The returned object includes question, author, associated product, timestamps, visibility, answer, and status.\n\nPermission checks are enforced so that private inquiries are visible only to the author, product owner (seller), or administrators. Public inquiries are available to all users. Attempts to access non-existent or unauthorized resources produce appropriate errors.\n\nThis endpoint is essential for supporting the inquiry Q&A user experience and providing a detailed view for moderation and audit processes.","summary":"Get detailed information of an inquiry (ai_commerce_inquiries table).","parameters":[{"name":"inquiryId","description":"Unique identifier for the inquiry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full inquiry entity as defined in IAiCommerceInquiry, including all fields, associations, and metadata.","typeName":"IAiCommerceInquiry"},"authorizationRoles":[],"name":"at","path":"/aiCommerce/inquiries/{inquiryId}","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"This operation allows an authenticated buyer to create a new product inquiry, stored in ai_commerce_inquiries table. The request body must include the product being inquired about, the inquiry content, and optional visibility or related information. After validation, the new inquiry is stored with status and association to the requesting user. The created inquiry is returned in detail.","description":"Enables buyers to post a new inquiry about a product. The operation is authenticated and tied to the buyer's identity for accountability and follow-up communication. The inquiry content is validated against platform moderation rules before persistence.\n\nMandatory fields include the product being asked about, the inquiry text, and intended visibility (public/private) as allowed. The system creates the inquiry with appropriate status, links to the involved product and user, and initializes audit trails.\n\nThe detailed inquiry object, complete with metadata and association, is returned upon success. Possible errors include missing required fields, unauthorized access, or failed validation (e.g., moderation block).","summary":"Create a new product inquiry (ai_commerce_inquiries table).","parameters":[],"requestBody":{"description":"Information to create a new inquiry, including product, question, visibility, etc. per IAiCommerceInquiry.ICreate.","typeName":"IAiCommerceInquiry.ICreate"},"responseBody":{"description":"Detailed inquiry object created and stored, as defined in IAiCommerceInquiry.","typeName":"IAiCommerceInquiry"},"authorizationRoles":["buyer"],"name":"create","path":"/aiCommerce/buyer/inquiries","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation updates a specific inquiry on a product in the aiCommerce platform. It is permitted for the original author (buyer) or admins only. Updating may change the inquiry content, visibility, or status, and all edits are tracked for audit/evidence. The inquiry is located by its inquiryId path parameter and the update is applied as specified in the request body.","description":"Allows the original inquiry author (buyer) or an administrator to update details of a product inquiry. The inquiryId path parameter identifies the record to update, and the request body supplies the fields to modify (such as question text or visibility status).\n\nPermissions are strictly enforced; only the original author or admins may update the inquiry, and the operation fails if the user lacks rights or if moderation locks the inquiry. Each update action logs an immutable snapshot for compliance.\n\nThe updated inquiry entity is returned, showing new and unchanged fields. Errors return reasons such as field validation, non-existent inquiry, or permission issues.","summary":"Update a product inquiry (ai_commerce_inquiries table).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the inquiry, such as content, visibility, etc., formatted as IAiCommerceInquiry.IUpdate.","typeName":"IAiCommerceInquiry.IUpdate"},"responseBody":{"description":"Updated inquiry entity after changes, as defined in IAiCommerceInquiry.","typeName":"IAiCommerceInquiry"},"authorizationRoles":["buyer"],"name":"update","path":"/aiCommerce/buyer/inquiries/{inquiryId}","method":"put","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation allows the author (buyer) or admin to logically delete (soft delete) a specific inquiry record in the ai_commerce_inquiries table. Instead of physical removal, the deleted_at field is set for retention, audit, and evidence. The inquiry is referenced by its inquiryId path parameter. Soft deletion allows later review and compliance with audit/legal requirements, and hides the inquiry from normal user access.","description":"This endpoint enables a user to mark an inquiry as deleted by setting its deleted_at timestamp (soft delete). Only the creator of the inquiry or an admin is allowed to perform this action, ensuring accountability and traceability.\n\nThe soft delete operation leaves the inquiry in the database for evidence, audit, and future review, but it is not returned in normal user or search queries. Attempts to delete an inquiry by an unauthorized actor or if the inquiry does not exist will result in a precise error response.\n\nThe deletion is logged in the audit trail, including the user identity and timestamp. No response body is returned on success, but errors convey validation or authorization issues.","summary":"Delete (logically) a product inquiry (soft delete via ai_commerce_inquiries table).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["buyer"],"name":"erase","path":"/aiCommerce/buyer/inquiries/{inquiryId}","method":"delete","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a paginated list of comments associated with a specific inquiry. The 'comments' are discussion threads, typically responses or follow-ups related to an inquiry. It references the ai_commerce_comments table, and allows filtering, searching, and pagination, including moderation status, creation time, or author. This is essential for buyers, sellers, and admins needing to view all comments linked to an inquiry, such as support threads or product Q&A feedback.","description":"Retrieve a paginated, filtered list of comments for a given inquiry from the ai_commerce_comments table. This supports advanced querying on properties like author, status (published/moderated), timestamp, and text content. Only comments directly attached to the specified inquiry (inquiryId) are included. \n\nSecurity ensures that buyers see public or their own comments, sellers see comments on their products' inquiries, and admins have full access. The operation checks for inquiry existence and user authorization. Results are paginated to support UI performance, and include summary information suitable for listing. Errors include not found, unauthorized access, or invalid parameters.\n\nThe endpoint supports integration with moderation tools and may be combined with comment creation or detail endpoints for a complete inquiry comment workflow.","summary":"Get paginated list of comments under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the target inquiry to retrieve comments for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search, filter, and pagination options for listing comments on an inquiry.","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated list and summary of comments belonging to the specified inquiry.","typeName":"IPageIAiCommerceComment.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/inquiries/{inquiryId}/comments","method":"patch"},{"specification":"This operation retrieves a paginated list of comments associated with a specific inquiry. The 'comments' are discussion threads, typically responses or follow-ups related to an inquiry. It references the ai_commerce_comments table, and allows filtering, searching, and pagination, including moderation status, creation time, or author. This is essential for buyers, sellers, and admins needing to view all comments linked to an inquiry, such as support threads or product Q&A feedback.","description":"Retrieve a paginated, filtered list of comments for a given inquiry from the ai_commerce_comments table. This supports advanced querying on properties like author, status (published/moderated), timestamp, and text content. Only comments directly attached to the specified inquiry (inquiryId) are included. \n\nSecurity ensures that buyers see public or their own comments, sellers see comments on their products' inquiries, and admins have full access. The operation checks for inquiry existence and user authorization. Results are paginated to support UI performance, and include summary information suitable for listing. Errors include not found, unauthorized access, or invalid parameters.\n\nThe endpoint supports integration with moderation tools and may be combined with comment creation or detail endpoints for a complete inquiry comment workflow.","summary":"Get paginated list of comments under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the target inquiry to retrieve comments for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search, filter, and pagination options for listing comments on an inquiry.","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated list and summary of comments belonging to the specified inquiry.","typeName":"IPageIAiCommerceComment.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/inquiries/{inquiryId}/comments","method":"patch"},{"specification":"This operation retrieves a paginated list of comments associated with a specific inquiry. The 'comments' are discussion threads, typically responses or follow-ups related to an inquiry. It references the ai_commerce_comments table, and allows filtering, searching, and pagination, including moderation status, creation time, or author. This is essential for buyers, sellers, and admins needing to view all comments linked to an inquiry, such as support threads or product Q&A feedback.","description":"Retrieve a paginated, filtered list of comments for a given inquiry from the ai_commerce_comments table. This supports advanced querying on properties like author, status (published/moderated), timestamp, and text content. Only comments directly attached to the specified inquiry (inquiryId) are included. \n\nSecurity ensures that buyers see public or their own comments, sellers see comments on their products' inquiries, and admins have full access. The operation checks for inquiry existence and user authorization. Results are paginated to support UI performance, and include summary information suitable for listing. Errors include not found, unauthorized access, or invalid parameters.\n\nThe endpoint supports integration with moderation tools and may be combined with comment creation or detail endpoints for a complete inquiry comment workflow.","summary":"Get paginated list of comments under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the target inquiry to retrieve comments for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced search, filter, and pagination options for listing comments on an inquiry.","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated list and summary of comments belonging to the specified inquiry.","typeName":"IPageIAiCommerceComment.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/inquiries/{inquiryId}/comments","method":"patch"},{"specification":"Retrieve the detail view of a specific comment assigned to a given inquiry. This operation interacts with ai_commerce_comments, enforcing that the commentId references a comment under the correct inquiryId. Used for displaying/editing comment details or enabling moderation. Requires appropriate authorization.","description":"Fetch a single comment by its commentId within the context of an inquiry (inquiryId). Ensures the referenced comment not only exists but is linked to the provided inquiry. Reads all primary fields of the ai_commerce_comments table, including body, author, timestamps, status, and parent (if threaded). \n\nAuthorization assures that only viewers who have permission on the inquiry (e.g., the author, related seller, admin) may access private or non-public comments. Returns all detail fields, as well as any moderation or reply links if authorized. Errors include not found (for comment or parent inquiry) or insufficient privileges.\n\nThis endpoint is commonly used in UI detail pages and as a dependency for moderation or editing endpoints.","summary":"Get detail of a single comment for a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the parent inquiry this comment belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified comment, including all fields and relationships.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/inquiries/{inquiryId}/comments/{commentId}","method":"get"},{"specification":"Retrieve the detail view of a specific comment assigned to a given inquiry. This operation interacts with ai_commerce_comments, enforcing that the commentId references a comment under the correct inquiryId. Used for displaying/editing comment details or enabling moderation. Requires appropriate authorization.","description":"Fetch a single comment by its commentId within the context of an inquiry (inquiryId). Ensures the referenced comment not only exists but is linked to the provided inquiry. Reads all primary fields of the ai_commerce_comments table, including body, author, timestamps, status, and parent (if threaded). \n\nAuthorization assures that only viewers who have permission on the inquiry (e.g., the author, related seller, admin) may access private or non-public comments. Returns all detail fields, as well as any moderation or reply links if authorized. Errors include not found (for comment or parent inquiry) or insufficient privileges.\n\nThis endpoint is commonly used in UI detail pages and as a dependency for moderation or editing endpoints.","summary":"Get detail of a single comment for a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the parent inquiry this comment belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified comment, including all fields and relationships.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/inquiries/{inquiryId}/comments/{commentId}","method":"get"},{"specification":"Retrieve the detail view of a specific comment assigned to a given inquiry. This operation interacts with ai_commerce_comments, enforcing that the commentId references a comment under the correct inquiryId. Used for displaying/editing comment details or enabling moderation. Requires appropriate authorization.","description":"Fetch a single comment by its commentId within the context of an inquiry (inquiryId). Ensures the referenced comment not only exists but is linked to the provided inquiry. Reads all primary fields of the ai_commerce_comments table, including body, author, timestamps, status, and parent (if threaded). \n\nAuthorization assures that only viewers who have permission on the inquiry (e.g., the author, related seller, admin) may access private or non-public comments. Returns all detail fields, as well as any moderation or reply links if authorized. Errors include not found (for comment or parent inquiry) or insufficient privileges.\n\nThis endpoint is commonly used in UI detail pages and as a dependency for moderation or editing endpoints.","summary":"Get detail of a single comment for a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the parent inquiry this comment belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified comment, including all fields and relationships.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/inquiries/{inquiryId}/comments/{commentId}","method":"get"},{"specification":"Post a new comment under a specific inquiry. Buyers, sellers, or admins add a response to an inquiry by calling this endpoint, which inserts to ai_commerce_comments, linking the comment to both the inquiry and author (buyer/admin). Handles validation, permissions, and thread structure if parent comments exist.","description":"This operation creates a new comment and attaches it to the given inquiry, using fields from ai_commerce_comments such as author_id, inquiry_id, body, status (draft/published), and timestamps. The system validates input (including non-empty content, permission to post, and correct relationship to inquiry), checks spam/moderation rules, and returns the new comment's full record.\n\nBuyers may only respond to their own or public inquiries; sellers may reply to inquiries about their products; admins may post on any inquiry. Threaded replies (comments on comments) are supported. Error handling covers invalid inquiry, permission denial (unauthorized), input validation errors, or moderation queue results.\n\nThis endpoint integrates with moderation, notification, and history endpoints for a full comment-on-inquiry workflow.","summary":"Create a comment under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The inquiry to attach the new comment to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required and optional fields to create a new inquiry comment, including body, optional replied-to comment, and metadata.","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"All properties for the newly created comment as stored in the database.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/inquiries/{inquiryId}/comments","method":"post"},{"specification":"Post a new comment under a specific inquiry. Buyers, sellers, or admins add a response to an inquiry by calling this endpoint, which inserts to ai_commerce_comments, linking the comment to both the inquiry and author (buyer/admin). Handles validation, permissions, and thread structure if parent comments exist.","description":"This operation creates a new comment and attaches it to the given inquiry, using fields from ai_commerce_comments such as author_id, inquiry_id, body, status (draft/published), and timestamps. The system validates input (including non-empty content, permission to post, and correct relationship to inquiry), checks spam/moderation rules, and returns the new comment's full record.\n\nBuyers may only respond to their own or public inquiries; sellers may reply to inquiries about their products; admins may post on any inquiry. Threaded replies (comments on comments) are supported. Error handling covers invalid inquiry, permission denial (unauthorized), input validation errors, or moderation queue results.\n\nThis endpoint integrates with moderation, notification, and history endpoints for a full comment-on-inquiry workflow.","summary":"Create a comment under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The inquiry to attach the new comment to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required and optional fields to create a new inquiry comment, including body, optional replied-to comment, and metadata.","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"All properties for the newly created comment as stored in the database.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"create","path":"/aiCommerce/seller/inquiries/{inquiryId}/comments","method":"post"},{"specification":"Post a new comment under a specific inquiry. Buyers, sellers, or admins add a response to an inquiry by calling this endpoint, which inserts to ai_commerce_comments, linking the comment to both the inquiry and author (buyer/admin). Handles validation, permissions, and thread structure if parent comments exist.","description":"This operation creates a new comment and attaches it to the given inquiry, using fields from ai_commerce_comments such as author_id, inquiry_id, body, status (draft/published), and timestamps. The system validates input (including non-empty content, permission to post, and correct relationship to inquiry), checks spam/moderation rules, and returns the new comment's full record.\n\nBuyers may only respond to their own or public inquiries; sellers may reply to inquiries about their products; admins may post on any inquiry. Threaded replies (comments on comments) are supported. Error handling covers invalid inquiry, permission denial (unauthorized), input validation errors, or moderation queue results.\n\nThis endpoint integrates with moderation, notification, and history endpoints for a full comment-on-inquiry workflow.","summary":"Create a comment under a specific inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The inquiry to attach the new comment to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required and optional fields to create a new inquiry comment, including body, optional replied-to comment, and metadata.","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"All properties for the newly created comment as stored in the database.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/aiCommerce/admin/inquiries/{inquiryId}/comments","method":"post"},{"specification":"Edit an existing comment under a specific inquiry. The endpoint updates ai_commerce_comments for the given commentId and parent inquiryId, enforcing that users can only modify their own comments, and that the comment belongs to the correct inquiry. All standard validation, moderation, and audit requirements apply.","description":"This operation allows the author (or authorized moderator/admin) to edit a comment's contents or metadata. The system ensures that the new data for body/status is properly validated (non-empty, no prohibited content), records change history (old vs. new), and triggers moderation or notification logic as appropriate. \n\nCommentId must belong to the specified inquiryId, and the editor must be the comment author or have edit privileges (admin). Status changes are allowed only for authorized actors. Failure modes include non-existent inquiry or comment, unauthorized edit attempt, or input validation failure.\n\nThis operation supports revision/audit trails for compliance, and is often paired with comment retrieval or listing endpoints for seamless user flows.","summary":"Update a specific comment for an inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the inquiry containing the comment to update.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patch object with modifiable comment fields such as content/body and status.","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"Full properties of the updated comment after changes.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"update","path":"/aiCommerce/buyer/inquiries/{inquiryId}/comments/{commentId}","method":"put"},{"specification":"Edit an existing comment under a specific inquiry. The endpoint updates ai_commerce_comments for the given commentId and parent inquiryId, enforcing that users can only modify their own comments, and that the comment belongs to the correct inquiry. All standard validation, moderation, and audit requirements apply.","description":"This operation allows the author (or authorized moderator/admin) to edit a comment's contents or metadata. The system ensures that the new data for body/status is properly validated (non-empty, no prohibited content), records change history (old vs. new), and triggers moderation or notification logic as appropriate. \n\nCommentId must belong to the specified inquiryId, and the editor must be the comment author or have edit privileges (admin). Status changes are allowed only for authorized actors. Failure modes include non-existent inquiry or comment, unauthorized edit attempt, or input validation failure.\n\nThis operation supports revision/audit trails for compliance, and is often paired with comment retrieval or listing endpoints for seamless user flows.","summary":"Update a specific comment for an inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the inquiry containing the comment to update.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patch object with modifiable comment fields such as content/body and status.","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"Full properties of the updated comment after changes.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"update","path":"/aiCommerce/seller/inquiries/{inquiryId}/comments/{commentId}","method":"put"},{"specification":"Edit an existing comment under a specific inquiry. The endpoint updates ai_commerce_comments for the given commentId and parent inquiryId, enforcing that users can only modify their own comments, and that the comment belongs to the correct inquiry. All standard validation, moderation, and audit requirements apply.","description":"This operation allows the author (or authorized moderator/admin) to edit a comment's contents or metadata. The system ensures that the new data for body/status is properly validated (non-empty, no prohibited content), records change history (old vs. new), and triggers moderation or notification logic as appropriate. \n\nCommentId must belong to the specified inquiryId, and the editor must be the comment author or have edit privileges (admin). Status changes are allowed only for authorized actors. Failure modes include non-existent inquiry or comment, unauthorized edit attempt, or input validation failure.\n\nThis operation supports revision/audit trails for compliance, and is often paired with comment retrieval or listing endpoints for seamless user flows.","summary":"Update a specific comment for an inquiry (ai_commerce_comments).","parameters":[{"name":"inquiryId","description":"The unique identifier of the inquiry containing the comment to update.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The unique identifier of the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patch object with modifiable comment fields such as content/body and status.","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"Full properties of the updated comment after changes.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/aiCommerce/admin/inquiries/{inquiryId}/comments/{commentId}","method":"put"},{"specification":"Permanently remove a specific comment under an inquiry. This performs a hard delete on ai_commerce_comments, provided it is allowed by business and privacy rules. Only the comment author or authorized admin may erase. All related history/audit snapshots are preserved.","description":"Removes a comment referenced by commentId from under the specified inquiryId, only if the user is the owner or an authorized moderator. The operation checks that the comment is linked to the inquiry, and executes a permanent database deletion (not soft delete), as the ai_commerce_comments schema lacks a soft delete field.\n\nAudit logs and moderation histories are retained for legal compliance regardless of record removal. Authorization failures, non-existent resources, or violation of policy (e.g., removing comments under dispute) return appropriate errors. \n\nThis endpoint does not return the comment body, only a deletion confirmation. Useful for comment management UIs and compliance/appeal workflows.","summary":"Delete a comment from a specific inquiry (ai_commerce_comments, hard delete).","parameters":[{"name":"inquiryId","description":"The inquiry containing the comment to delete.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The comment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase","path":"/aiCommerce/buyer/inquiries/{inquiryId}/comments/{commentId}","method":"delete"},{"specification":"Permanently remove a specific comment under an inquiry. This performs a hard delete on ai_commerce_comments, provided it is allowed by business and privacy rules. Only the comment author or authorized admin may erase. All related history/audit snapshots are preserved.","description":"Removes a comment referenced by commentId from under the specified inquiryId, only if the user is the owner or an authorized moderator. The operation checks that the comment is linked to the inquiry, and executes a permanent database deletion (not soft delete), as the ai_commerce_comments schema lacks a soft delete field.\n\nAudit logs and moderation histories are retained for legal compliance regardless of record removal. Authorization failures, non-existent resources, or violation of policy (e.g., removing comments under dispute) return appropriate errors. \n\nThis endpoint does not return the comment body, only a deletion confirmation. Useful for comment management UIs and compliance/appeal workflows.","summary":"Delete a comment from a specific inquiry (ai_commerce_comments, hard delete).","parameters":[{"name":"inquiryId","description":"The inquiry containing the comment to delete.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The comment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase","path":"/aiCommerce/seller/inquiries/{inquiryId}/comments/{commentId}","method":"delete"},{"specification":"Permanently remove a specific comment under an inquiry. This performs a hard delete on ai_commerce_comments, provided it is allowed by business and privacy rules. Only the comment author or authorized admin may erase. All related history/audit snapshots are preserved.","description":"Removes a comment referenced by commentId from under the specified inquiryId, only if the user is the owner or an authorized moderator. The operation checks that the comment is linked to the inquiry, and executes a permanent database deletion (not soft delete), as the ai_commerce_comments schema lacks a soft delete field.\n\nAudit logs and moderation histories are retained for legal compliance regardless of record removal. Authorization failures, non-existent resources, or violation of policy (e.g., removing comments under dispute) return appropriate errors. \n\nThis endpoint does not return the comment body, only a deletion confirmation. Useful for comment management UIs and compliance/appeal workflows.","summary":"Delete a comment from a specific inquiry (ai_commerce_comments, hard delete).","parameters":[{"name":"inquiryId","description":"The inquiry containing the comment to delete.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"The comment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/aiCommerce/admin/inquiries/{inquiryId}/comments/{commentId}","method":"delete"},{"specification":"Provides advanced, filtered list retrieval for reviews (ai_commerce_reviews), supporting paginated search, filtering by status, author, product, or order item, and moderation status. Used by buyers for their own reviews, sellers for reviews of their products, and admins for global management.","description":"Returns a paginated, filtered list of reviews. The request body supports search on ai_commerce_reviews fields such as author_id, order_item_id, product, status, rating, as well as pagination and sort order. For buyers, the results are filtered to reviews they've authored; sellers see reviews on their products; admins can query all reviews.\n\nBusiness logic supports integration with moderation and reply flows. Sensitive fields such as seller responses may be included/excluded based on requester role. Errors cover invalid filters, unauthorized access, or database issues. The response is designed for UI summary display but can be expanded with query flags as permitted by business rules.\n\nThe operation is often used in conjunction with review creation or detail endpoints in review dashboards.","summary":"Search and list reviews with advanced filtering (ai_commerce_reviews).","parameters":[],"requestBody":{"description":"Review filter/search parameters and pagination/sort options.","typeName":"IAiCommerceReview.IRequest"},"responseBody":{"description":"Paginated list of review summary objects and metadata.","typeName":"IPageIAiCommerceReview.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index","path":"/aiCommerce/buyer/reviews","method":"patch"},{"specification":"Provides advanced, filtered list retrieval for reviews (ai_commerce_reviews), supporting paginated search, filtering by status, author, product, or order item, and moderation status. Used by buyers for their own reviews, sellers for reviews of their products, and admins for global management.","description":"Returns a paginated, filtered list of reviews. The request body supports search on ai_commerce_reviews fields such as author_id, order_item_id, product, status, rating, as well as pagination and sort order. For buyers, the results are filtered to reviews they've authored; sellers see reviews on their products; admins can query all reviews.\n\nBusiness logic supports integration with moderation and reply flows. Sensitive fields such as seller responses may be included/excluded based on requester role. Errors cover invalid filters, unauthorized access, or database issues. The response is designed for UI summary display but can be expanded with query flags as permitted by business rules.\n\nThe operation is often used in conjunction with review creation or detail endpoints in review dashboards.","summary":"Search and list reviews with advanced filtering (ai_commerce_reviews).","parameters":[],"requestBody":{"description":"Review filter/search parameters and pagination/sort options.","typeName":"IAiCommerceReview.IRequest"},"responseBody":{"description":"Paginated list of review summary objects and metadata.","typeName":"IPageIAiCommerceReview.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index","path":"/aiCommerce/seller/reviews","method":"patch"},{"specification":"Provides advanced, filtered list retrieval for reviews (ai_commerce_reviews), supporting paginated search, filtering by status, author, product, or order item, and moderation status. Used by buyers for their own reviews, sellers for reviews of their products, and admins for global management.","description":"Returns a paginated, filtered list of reviews. The request body supports search on ai_commerce_reviews fields such as author_id, order_item_id, product, status, rating, as well as pagination and sort order. For buyers, the results are filtered to reviews they've authored; sellers see reviews on their products; admins can query all reviews.\n\nBusiness logic supports integration with moderation and reply flows. Sensitive fields such as seller responses may be included/excluded based on requester role. Errors cover invalid filters, unauthorized access, or database issues. The response is designed for UI summary display but can be expanded with query flags as permitted by business rules.\n\nThe operation is often used in conjunction with review creation or detail endpoints in review dashboards.","summary":"Search and list reviews with advanced filtering (ai_commerce_reviews).","parameters":[],"requestBody":{"description":"Review filter/search parameters and pagination/sort options.","typeName":"IAiCommerceReview.IRequest"},"responseBody":{"description":"Paginated list of review summary objects and metadata.","typeName":"IPageIAiCommerceReview.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/aiCommerce/admin/reviews","method":"patch"},{"specification":"Retrieve a detailed view of a specific review by reviewId from ai_commerce_reviews. Supports context-based field inclusion/exclusion and appropriate authorization logic. Used for buyers, sellers (limited to their products), and admins. Returns review details including author, body, rating, seller respond, and metadata.","description":"Fetches a single review from ai_commerce_reviews using the provided reviewId. Enforces permission based on user role and resource ownership: buyers access their own reviews, sellers their product reviews, admins all reviews. The response includes all base fields and related data such as order_item_id, timestamps, statuses, reply if any, and compliance information. \n\nHandles business validation for existence, access, and context. Errors are returned when review is missing, permission is denied, or lookup fails. This operation is integral to review detail UIs and supports chaining with comment and moderation functionality.\n\nComplies with all audit/logging requirements, and supports future extensibility for reply threads or media attachments if permitted.","summary":"Get detail of a specific review (ai_commerce_reviews).","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All properties for the target review, including author, status, and metadata.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"buyer","name":"at","path":"/aiCommerce/buyer/reviews/{reviewId}","method":"get"},{"specification":"Retrieve a detailed view of a specific review by reviewId from ai_commerce_reviews. Supports context-based field inclusion/exclusion and appropriate authorization logic. Used for buyers, sellers (limited to their products), and admins. Returns review details including author, body, rating, seller respond, and metadata.","description":"Fetches a single review from ai_commerce_reviews using the provided reviewId. Enforces permission based on user role and resource ownership: buyers access their own reviews, sellers their product reviews, admins all reviews. The response includes all base fields and related data such as order_item_id, timestamps, statuses, reply if any, and compliance information. \n\nHandles business validation for existence, access, and context. Errors are returned when review is missing, permission is denied, or lookup fails. This operation is integral to review detail UIs and supports chaining with comment and moderation functionality.\n\nComplies with all audit/logging requirements, and supports future extensibility for reply threads or media attachments if permitted.","summary":"Get detail of a specific review (ai_commerce_reviews).","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All properties for the target review, including author, status, and metadata.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"seller","name":"at","path":"/aiCommerce/seller/reviews/{reviewId}","method":"get"},{"specification":"Retrieve a detailed view of a specific review by reviewId from ai_commerce_reviews. Supports context-based field inclusion/exclusion and appropriate authorization logic. Used for buyers, sellers (limited to their products), and admins. Returns review details including author, body, rating, seller respond, and metadata.","description":"Fetches a single review from ai_commerce_reviews using the provided reviewId. Enforces permission based on user role and resource ownership: buyers access their own reviews, sellers their product reviews, admins all reviews. The response includes all base fields and related data such as order_item_id, timestamps, statuses, reply if any, and compliance information. \n\nHandles business validation for existence, access, and context. Errors are returned when review is missing, permission is denied, or lookup fails. This operation is integral to review detail UIs and supports chaining with comment and moderation functionality.\n\nComplies with all audit/logging requirements, and supports future extensibility for reply threads or media attachments if permitted.","summary":"Get detail of a specific review (ai_commerce_reviews).","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All properties for the target review, including author, status, and metadata.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/aiCommerce/admin/reviews/{reviewId}","method":"get"},{"specification":"Post a new review (buyer feedback for an order item) to ai_commerce_reviews. Review creation requires the user to have a completed purchase for the order item and not already have an existing review. Reviews include required fields such as body, rating, visibility, and optional fields for attachments or metadata.","description":"Creates a review for a purchased product under ai_commerce_reviews, referencing a completed order item. Verifies eligibility and ownership, validates required fields (text body, numeric rating, visibility), and links the review to the order item. Prevents duplicate reviews per order item as per schema uniqueness constraint. \n\nBuyers may only create reviews for their own completed purchases. Sellers and admins cannot create reviews through this endpoint. The system enforces business rules, executes moderation checks, logs the event for compliance, and triggers notification or incentives as necessary. Validation errors, unauthorized, or business rule violations result in descriptive error responses.\n\nThe response returns all review fields, suitable for immediate display or further moderation/feedback workflows.","summary":"Create a new review for an order item (ai_commerce_reviews).","parameters":[],"requestBody":{"description":"Fields required to create a review, including order item, rating, body, and metadata.","typeName":"IAiCommerceReview.ICreate"},"responseBody":{"description":"Newly created review entity, all fields set by input or business logic.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/reviews","method":"post"},{"specification":"This operation updates an existing review identified by its unique reviewId. The endpoint is mapped to the ai_commerce_reviews table, supporting modifications to the review's content, rating, and visibility, as well as the optional seller response. The request body must match the IAiCommerceReview.IUpdate schema, which may include new values for one or more updatable fields. Audit and snapshot trails are maintained automatically upon each modification to ensure compliance and evidentiary standards.","path":"/aiCommerce/buyer/reviews/{reviewId}","method":"put","summary":"Update the content, rating, or seller response of a review (ai_commerce_reviews table).","description":"This API allows an authenticated user (buyer, seller, or admin) to update an existing review, altering its content, numeric score, visibility, or, in the case of sellers, providing a response.\n\nThe operation enforces role-based permissions: buyers can only update their own reviews, sellers can set/edit their response only for reviews written about their products, and admins can perform global moderation. It requires full verification that the review exists, has not been deleted, and that the acting user has sufficient rights. All modifications are snapshotted for audit, version history, and legal recovery.\n\nValidation ensures the rating falls within accepted bounds (as governed by the UI/system config), the comment length is reasonable, and all edits comply with platform community guidelines. In case of failure (e.g., editing a non-existent or already deleted review, or insufficient permissions), the API returns a detailed error conforming to compliance/error-handling requirements.\n\nThis endpoint works in conjunction with the review editing history, notification, and moderation logic. Any update will trigger history recording and downstream notification workflows according to user preferences and audit rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Review update data (content, rating, visibility, seller response, etc) as per IAiCommerceReview.IUpdate schema.","typeName":"IAiCommerceReview.IUpdate"},"responseBody":{"description":"The updated review entity after applying the requested changes.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"buyer","name":"update"},{"specification":"This operation updates an existing review identified by its unique reviewId. The endpoint is mapped to the ai_commerce_reviews table, supporting modifications to the review's content, rating, and visibility, as well as the optional seller response. The request body must match the IAiCommerceReview.IUpdate schema, which may include new values for one or more updatable fields. Audit and snapshot trails are maintained automatically upon each modification to ensure compliance and evidentiary standards.","path":"/aiCommerce/seller/reviews/{reviewId}","method":"put","summary":"Update the content, rating, or seller response of a review (ai_commerce_reviews table).","description":"This API allows an authenticated user (buyer, seller, or admin) to update an existing review, altering its content, numeric score, visibility, or, in the case of sellers, providing a response.\n\nThe operation enforces role-based permissions: buyers can only update their own reviews, sellers can set/edit their response only for reviews written about their products, and admins can perform global moderation. It requires full verification that the review exists, has not been deleted, and that the acting user has sufficient rights. All modifications are snapshotted for audit, version history, and legal recovery.\n\nValidation ensures the rating falls within accepted bounds (as governed by the UI/system config), the comment length is reasonable, and all edits comply with platform community guidelines. In case of failure (e.g., editing a non-existent or already deleted review, or insufficient permissions), the API returns a detailed error conforming to compliance/error-handling requirements.\n\nThis endpoint works in conjunction with the review editing history, notification, and moderation logic. Any update will trigger history recording and downstream notification workflows according to user preferences and audit rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Review update data (content, rating, visibility, seller response, etc) as per IAiCommerceReview.IUpdate schema.","typeName":"IAiCommerceReview.IUpdate"},"responseBody":{"description":"The updated review entity after applying the requested changes.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation updates an existing review identified by its unique reviewId. The endpoint is mapped to the ai_commerce_reviews table, supporting modifications to the review's content, rating, and visibility, as well as the optional seller response. The request body must match the IAiCommerceReview.IUpdate schema, which may include new values for one or more updatable fields. Audit and snapshot trails are maintained automatically upon each modification to ensure compliance and evidentiary standards.","path":"/aiCommerce/admin/reviews/{reviewId}","method":"put","summary":"Update the content, rating, or seller response of a review (ai_commerce_reviews table).","description":"This API allows an authenticated user (buyer, seller, or admin) to update an existing review, altering its content, numeric score, visibility, or, in the case of sellers, providing a response.\n\nThe operation enforces role-based permissions: buyers can only update their own reviews, sellers can set/edit their response only for reviews written about their products, and admins can perform global moderation. It requires full verification that the review exists, has not been deleted, and that the acting user has sufficient rights. All modifications are snapshotted for audit, version history, and legal recovery.\n\nValidation ensures the rating falls within accepted bounds (as governed by the UI/system config), the comment length is reasonable, and all edits comply with platform community guidelines. In case of failure (e.g., editing a non-existent or already deleted review, or insufficient permissions), the API returns a detailed error conforming to compliance/error-handling requirements.\n\nThis endpoint works in conjunction with the review editing history, notification, and moderation logic. Any update will trigger history recording and downstream notification workflows according to user preferences and audit rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Review update data (content, rating, visibility, seller response, etc) as per IAiCommerceReview.IUpdate schema.","typeName":"IAiCommerceReview.IUpdate"},"responseBody":{"description":"The updated review entity after applying the requested changes.","typeName":"IAiCommerceReview"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation permanently removes (hard delete) a review from the ai_commerce_reviews table, based on its unique reviewId. In compliance with the soft delete semantics (deleted_at field), the review is logically marked as deleted to support audit trails, evidence, and platform guidelines on UGC retention.","path":"/aiCommerce/buyer/reviews/{reviewId}","method":"delete","summary":"Logically delete a review by marking it as deleted (ai_commerce_reviews table).","description":"This API allows an authenticated buyer, seller, or admin to logically remove a review by updating its deleted_at timestamp, ensuring that deleted reviews are retained for legal, compliance, and audit purposes.\n\nBuyers are restricted to deleting their own reviews; sellers can only delete reviews of their own products (typically for moderation within policy), and admins can execute deletions globally. Successful invocation sets the deleted_at field rather than fully removing the underlying record, in accordance with platform UGC policies and audit guidelines.\n\nThis operation supports platform compliance rules, making logically deleted reviews unavailable for standard user queries but preserving them in the system for evidence recovery. Detailed error codes are returned if the review does not exist, is already deleted, or the calling party lacks sufficient privileges. The deletion event is snapshotted and added to the review's audit/edit history for forensics.\n\nUse in conjunction with review restoration or audit APIs as dictated by legal recovery, compliance, or investigative workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be logically deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"This operation permanently removes (hard delete) a review from the ai_commerce_reviews table, based on its unique reviewId. In compliance with the soft delete semantics (deleted_at field), the review is logically marked as deleted to support audit trails, evidence, and platform guidelines on UGC retention.","path":"/aiCommerce/seller/reviews/{reviewId}","method":"delete","summary":"Logically delete a review by marking it as deleted (ai_commerce_reviews table).","description":"This API allows an authenticated buyer, seller, or admin to logically remove a review by updating its deleted_at timestamp, ensuring that deleted reviews are retained for legal, compliance, and audit purposes.\n\nBuyers are restricted to deleting their own reviews; sellers can only delete reviews of their own products (typically for moderation within policy), and admins can execute deletions globally. Successful invocation sets the deleted_at field rather than fully removing the underlying record, in accordance with platform UGC policies and audit guidelines.\n\nThis operation supports platform compliance rules, making logically deleted reviews unavailable for standard user queries but preserving them in the system for evidence recovery. Detailed error codes are returned if the review does not exist, is already deleted, or the calling party lacks sufficient privileges. The deletion event is snapshotted and added to the review's audit/edit history for forensics.\n\nUse in conjunction with review restoration or audit APIs as dictated by legal recovery, compliance, or investigative workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be logically deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation permanently removes (hard delete) a review from the ai_commerce_reviews table, based on its unique reviewId. In compliance with the soft delete semantics (deleted_at field), the review is logically marked as deleted to support audit trails, evidence, and platform guidelines on UGC retention.","path":"/aiCommerce/admin/reviews/{reviewId}","method":"delete","summary":"Logically delete a review by marking it as deleted (ai_commerce_reviews table).","description":"This API allows an authenticated buyer, seller, or admin to logically remove a review by updating its deleted_at timestamp, ensuring that deleted reviews are retained for legal, compliance, and audit purposes.\n\nBuyers are restricted to deleting their own reviews; sellers can only delete reviews of their own products (typically for moderation within policy), and admins can execute deletions globally. Successful invocation sets the deleted_at field rather than fully removing the underlying record, in accordance with platform UGC policies and audit guidelines.\n\nThis operation supports platform compliance rules, making logically deleted reviews unavailable for standard user queries but preserving them in the system for evidence recovery. Detailed error codes are returned if the review does not exist, is already deleted, or the calling party lacks sufficient privileges. The deletion event is snapshotted and added to the review's audit/edit history for forensics.\n\nUse in conjunction with review restoration or audit APIs as dictated by legal recovery, compliance, or investigative workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the review to be logically deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"This operation retrieves a filtered and paginated list of comments associated with a given review, specified by reviewId. It queries the ai_commerce_comments table where review_id matches, allowing advanced querying (e.g., by status, updated_at, author, moderation status) according to the IAiCommerceComment.IRequest schema. Results are returned in IAiCommercePageIComment.ISummary format, supporting UI list views and moderation screens.","path":"/aiCommerce/buyer/reviews/{reviewId}/comments","method":"patch","summary":"Retrieve and filter comments for a specific review (ai_commerce_comments table).","description":"Enables buyers, sellers, or admins to fetch and filter the list of comments for an identified review. The operation supports pagination, search, and filtering based on the IAiCommerceComment.IRequest input, including fields like status, authorId, and comment update time. Output is standardized as IAiCommercePageIComment.ISummary, providing a digestible, paginated, and sortable list for user interfaces or moderation tools.\n\nAccess is governed by review/comment visibility and user role: buyers can see and search comments for reviews they are entitled to read; sellers can view comments on reviews of their products; admins have global access. All requests are logged for compliance.\n\nValidation ensures the review exists, has not been deleted, and comment filters are within expected ranges. In the case of errors (review not found or access violation), detailed responses outline the failure reason. This endpoint complements comment creation, update, and deletion endpoints, and underpins comment moderation/audit workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review whose comments are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Comment query filters, search string, and pagination parameters (see IAiCommerceComment.IRequest).","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated collection of comment summaries for the review (IAiCommercePageIComment.ISummary).","typeName":"IAiCommercePageIComment.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"This operation retrieves a filtered and paginated list of comments associated with a given review, specified by reviewId. It queries the ai_commerce_comments table where review_id matches, allowing advanced querying (e.g., by status, updated_at, author, moderation status) according to the IAiCommerceComment.IRequest schema. Results are returned in IAiCommercePageIComment.ISummary format, supporting UI list views and moderation screens.","path":"/aiCommerce/seller/reviews/{reviewId}/comments","method":"patch","summary":"Retrieve and filter comments for a specific review (ai_commerce_comments table).","description":"Enables buyers, sellers, or admins to fetch and filter the list of comments for an identified review. The operation supports pagination, search, and filtering based on the IAiCommerceComment.IRequest input, including fields like status, authorId, and comment update time. Output is standardized as IAiCommercePageIComment.ISummary, providing a digestible, paginated, and sortable list for user interfaces or moderation tools.\n\nAccess is governed by review/comment visibility and user role: buyers can see and search comments for reviews they are entitled to read; sellers can view comments on reviews of their products; admins have global access. All requests are logged for compliance.\n\nValidation ensures the review exists, has not been deleted, and comment filters are within expected ranges. In the case of errors (review not found or access violation), detailed responses outline the failure reason. This endpoint complements comment creation, update, and deletion endpoints, and underpins comment moderation/audit workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review whose comments are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Comment query filters, search string, and pagination parameters (see IAiCommerceComment.IRequest).","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated collection of comment summaries for the review (IAiCommercePageIComment.ISummary).","typeName":"IAiCommercePageIComment.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"This operation retrieves a filtered and paginated list of comments associated with a given review, specified by reviewId. It queries the ai_commerce_comments table where review_id matches, allowing advanced querying (e.g., by status, updated_at, author, moderation status) according to the IAiCommerceComment.IRequest schema. Results are returned in IAiCommercePageIComment.ISummary format, supporting UI list views and moderation screens.","path":"/aiCommerce/admin/reviews/{reviewId}/comments","method":"patch","summary":"Retrieve and filter comments for a specific review (ai_commerce_comments table).","description":"Enables buyers, sellers, or admins to fetch and filter the list of comments for an identified review. The operation supports pagination, search, and filtering based on the IAiCommerceComment.IRequest input, including fields like status, authorId, and comment update time. Output is standardized as IAiCommercePageIComment.ISummary, providing a digestible, paginated, and sortable list for user interfaces or moderation tools.\n\nAccess is governed by review/comment visibility and user role: buyers can see and search comments for reviews they are entitled to read; sellers can view comments on reviews of their products; admins have global access. All requests are logged for compliance.\n\nValidation ensures the review exists, has not been deleted, and comment filters are within expected ranges. In the case of errors (review not found or access violation), detailed responses outline the failure reason. This endpoint complements comment creation, update, and deletion endpoints, and underpins comment moderation/audit workflows.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review whose comments are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Comment query filters, search string, and pagination parameters (see IAiCommerceComment.IRequest).","typeName":"IAiCommerceComment.IRequest"},"responseBody":{"description":"Paginated collection of comment summaries for the review (IAiCommercePageIComment.ISummary).","typeName":"IAiCommercePageIComment.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves the details of a specific comment (ai_commerce_comments table) belonging to a review, using both reviewId and commentId as path parameters for uniqueness and authorization. Returns the IAiCommerceComment entity, including author, content, status, visibility, timestamps, and related audit details if permitted.","path":"/aiCommerce/buyer/reviews/{reviewId}/comments/{commentId}","method":"get","summary":"Get details of a single comment for a review (ai_commerce_comments table).","description":"This endpoint retrieves the details for an identified comment that belongs to a specific review. It ensures both reviewId and commentId exist and are associated, handling authorization for buyers, sellers, or admins according to their roles and the comment's visibility/privacy settings.\n\nThe response includes the full IAiCommerceComment object (author, content, status, timestamps, moderation flags) as appropriate for the role's access rights. The operation defines validation for comment existence, association with the given review, and the review's non-deleted state. In case of error (comment not found, review deleted, authorization failure), a detailed error is returned.\n\nTypical use cases include comment detail pages, moderation audits, or notification deep-links. All access is audited as required by UGC compliance rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed comment object belonging to the review.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"This operation retrieves the details of a specific comment (ai_commerce_comments table) belonging to a review, using both reviewId and commentId as path parameters for uniqueness and authorization. Returns the IAiCommerceComment entity, including author, content, status, visibility, timestamps, and related audit details if permitted.","path":"/aiCommerce/seller/reviews/{reviewId}/comments/{commentId}","method":"get","summary":"Get details of a single comment for a review (ai_commerce_comments table).","description":"This endpoint retrieves the details for an identified comment that belongs to a specific review. It ensures both reviewId and commentId exist and are associated, handling authorization for buyers, sellers, or admins according to their roles and the comment's visibility/privacy settings.\n\nThe response includes the full IAiCommerceComment object (author, content, status, timestamps, moderation flags) as appropriate for the role's access rights. The operation defines validation for comment existence, association with the given review, and the review's non-deleted state. In case of error (comment not found, review deleted, authorization failure), a detailed error is returned.\n\nTypical use cases include comment detail pages, moderation audits, or notification deep-links. All access is audited as required by UGC compliance rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed comment object belonging to the review.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"This operation retrieves the details of a specific comment (ai_commerce_comments table) belonging to a review, using both reviewId and commentId as path parameters for uniqueness and authorization. Returns the IAiCommerceComment entity, including author, content, status, visibility, timestamps, and related audit details if permitted.","path":"/aiCommerce/admin/reviews/{reviewId}/comments/{commentId}","method":"get","summary":"Get details of a single comment for a review (ai_commerce_comments table).","description":"This endpoint retrieves the details for an identified comment that belongs to a specific review. It ensures both reviewId and commentId exist and are associated, handling authorization for buyers, sellers, or admins according to their roles and the comment's visibility/privacy settings.\n\nThe response includes the full IAiCommerceComment object (author, content, status, timestamps, moderation flags) as appropriate for the role's access rights. The operation defines validation for comment existence, association with the given review, and the review's non-deleted state. In case of error (comment not found, review deleted, authorization failure), a detailed error is returned.\n\nTypical use cases include comment detail pages, moderation audits, or notification deep-links. All access is audited as required by UGC compliance rules.","parameters":[{"name":"reviewId","description":"Unique identifier for the parent review.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed comment object belonging to the review.","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation creates a new comment on a review, as a first-level or reply comment, requiring a valid reviewId. Mapped to ai_commerce_comments, the endpoint expects an IAiCommerceComment.ICreate request body with the content, optional parentId (for threading), and visibility options. Returns the new IAiCommerceComment entity as confirmation and for immediate UI rendering. Triggers notification and moderation workflows as appropriate.","path":"/aiCommerce/buyer/reviews/{reviewId}/comments","method":"post","summary":"Create a new comment on the specified review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can create a new comment attached to a given review via this endpoint. The request body includes the comment text, optional parentId for thread structure, and visibility/status entries compliant with community and business rules.\n\nInput validation ensures the reviewId exists, is visible to the caller, and the posted comment meets content, length, and moderation requirements. Upon success, the comment is recorded in ai_commerce_comments, a snapshot/audit log entry is created, and notification routines are triggered for relevant recipients.\n\nReply nesting is supported through parentId; moderation and alert logic apply according to comment content and role. The response returns the full IAiCommerceComment object for UI confirmation and immediate display/use. Any errors, such as non-existent review, thread limit exceeded, or violation of posting rights, are reported in detail. Use this in combination with comment listing and detail APIs for full discussion/messaging features.","parameters":[{"name":"reviewId","description":"Review identifier to which the comment is being attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required fields for creating a new review comment (IAiCommerceComment.ICreate).","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"The comment entity as created and stored (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"create"},{"specification":"This operation creates a new comment on a review, as a first-level or reply comment, requiring a valid reviewId. Mapped to ai_commerce_comments, the endpoint expects an IAiCommerceComment.ICreate request body with the content, optional parentId (for threading), and visibility options. Returns the new IAiCommerceComment entity as confirmation and for immediate UI rendering. Triggers notification and moderation workflows as appropriate.","path":"/aiCommerce/seller/reviews/{reviewId}/comments","method":"post","summary":"Create a new comment on the specified review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can create a new comment attached to a given review via this endpoint. The request body includes the comment text, optional parentId for thread structure, and visibility/status entries compliant with community and business rules.\n\nInput validation ensures the reviewId exists, is visible to the caller, and the posted comment meets content, length, and moderation requirements. Upon success, the comment is recorded in ai_commerce_comments, a snapshot/audit log entry is created, and notification routines are triggered for relevant recipients.\n\nReply nesting is supported through parentId; moderation and alert logic apply according to comment content and role. The response returns the full IAiCommerceComment object for UI confirmation and immediate display/use. Any errors, such as non-existent review, thread limit exceeded, or violation of posting rights, are reported in detail. Use this in combination with comment listing and detail APIs for full discussion/messaging features.","parameters":[{"name":"reviewId","description":"Review identifier to which the comment is being attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required fields for creating a new review comment (IAiCommerceComment.ICreate).","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"The comment entity as created and stored (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"create"},{"specification":"This operation creates a new comment on a review, as a first-level or reply comment, requiring a valid reviewId. Mapped to ai_commerce_comments, the endpoint expects an IAiCommerceComment.ICreate request body with the content, optional parentId (for threading), and visibility options. Returns the new IAiCommerceComment entity as confirmation and for immediate UI rendering. Triggers notification and moderation workflows as appropriate.","path":"/aiCommerce/admin/reviews/{reviewId}/comments","method":"post","summary":"Create a new comment on the specified review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can create a new comment attached to a given review via this endpoint. The request body includes the comment text, optional parentId for thread structure, and visibility/status entries compliant with community and business rules.\n\nInput validation ensures the reviewId exists, is visible to the caller, and the posted comment meets content, length, and moderation requirements. Upon success, the comment is recorded in ai_commerce_comments, a snapshot/audit log entry is created, and notification routines are triggered for relevant recipients.\n\nReply nesting is supported through parentId; moderation and alert logic apply according to comment content and role. The response returns the full IAiCommerceComment object for UI confirmation and immediate display/use. Any errors, such as non-existent review, thread limit exceeded, or violation of posting rights, are reported in detail. Use this in combination with comment listing and detail APIs for full discussion/messaging features.","parameters":[{"name":"reviewId","description":"Review identifier to which the comment is being attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required fields for creating a new review comment (IAiCommerceComment.ICreate).","typeName":"IAiCommerceComment.ICreate"},"responseBody":{"description":"The comment entity as created and stored (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"This operation updates a comment for a specific review, supporting changes to the content, status, or thread/visibility properties. It maps to the ai_commerce_comments table and requires both reviewId and commentId as identifying parameters. The request body must conform to IAiCommerceComment.IUpdate. All updates trigger moderation, audit, and notification side effects as required by the business rules and compliance model.","path":"/aiCommerce/buyer/reviews/{reviewId}/comments/{commentId}","method":"put","summary":"Update the content or status of an existing comment (ai_commerce_comments table).","description":"Allows buyers, sellers, or admins who own or are entitled to manage the comment to update its content, visibility, or status. All edits must comply with system moderation and history requirements, including maximum nesting/threading and permissible content types defined by platform settings.\n\nThe operation performs validation on comment existence, association with the specified reviewId, edit permissions by role, and status. Updates are snapshotted in audit trails. Any changes immediately trigger notification workflows for the involved users as dictated by the underlying business rules. Error responses detail insufficient permission, unauthorized access, or content validation failures.\n\nThis should be used together with the comment detail, history, and moderation endpoints for full-featured comment management.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on a comment (see IAiCommerceComment.IUpdate).","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"The comment entity after update (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"buyer","name":"update"},{"specification":"This operation updates a comment for a specific review, supporting changes to the content, status, or thread/visibility properties. It maps to the ai_commerce_comments table and requires both reviewId and commentId as identifying parameters. The request body must conform to IAiCommerceComment.IUpdate. All updates trigger moderation, audit, and notification side effects as required by the business rules and compliance model.","path":"/aiCommerce/seller/reviews/{reviewId}/comments/{commentId}","method":"put","summary":"Update the content or status of an existing comment (ai_commerce_comments table).","description":"Allows buyers, sellers, or admins who own or are entitled to manage the comment to update its content, visibility, or status. All edits must comply with system moderation and history requirements, including maximum nesting/threading and permissible content types defined by platform settings.\n\nThe operation performs validation on comment existence, association with the specified reviewId, edit permissions by role, and status. Updates are snapshotted in audit trails. Any changes immediately trigger notification workflows for the involved users as dictated by the underlying business rules. Error responses detail insufficient permission, unauthorized access, or content validation failures.\n\nThis should be used together with the comment detail, history, and moderation endpoints for full-featured comment management.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on a comment (see IAiCommerceComment.IUpdate).","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"The comment entity after update (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation updates a comment for a specific review, supporting changes to the content, status, or thread/visibility properties. It maps to the ai_commerce_comments table and requires both reviewId and commentId as identifying parameters. The request body must conform to IAiCommerceComment.IUpdate. All updates trigger moderation, audit, and notification side effects as required by the business rules and compliance model.","path":"/aiCommerce/admin/reviews/{reviewId}/comments/{commentId}","method":"put","summary":"Update the content or status of an existing comment (ai_commerce_comments table).","description":"Allows buyers, sellers, or admins who own or are entitled to manage the comment to update its content, visibility, or status. All edits must comply with system moderation and history requirements, including maximum nesting/threading and permissible content types defined by platform settings.\n\nThe operation performs validation on comment existence, association with the specified reviewId, edit permissions by role, and status. Updates are snapshotted in audit trails. Any changes immediately trigger notification workflows for the involved users as dictated by the underlying business rules. Error responses detail insufficient permission, unauthorized access, or content validation failures.\n\nThis should be used together with the comment detail, history, and moderation endpoints for full-featured comment management.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on a comment (see IAiCommerceComment.IUpdate).","typeName":"IAiCommerceComment.IUpdate"},"responseBody":{"description":"The comment entity after update (IAiCommerceComment).","typeName":"IAiCommerceComment"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation logically deletes (soft deletes) a comment associated with a given review by its unique commentId, marking it with a deleted_at timestamp for compliance audit and history. All delete operations are snapshotted to preserve evidence, in accordance with platform UGC policies. Comment is no longer returned in normal list queries but can be recovered or audited by admins as per compliance.","path":"/aiCommerce/buyer/reviews/{reviewId}/comments/{commentId}","method":"delete","summary":"Logically delete (soft delete) a comment from a review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can mark a comment as deleted using this operation. It records the deleted_at timestamp for the given comment and audit logs this action. Hard deletion is not performed in order to preserve platform evidence for disputes and moderation.\n\nRole checks ensure only the comment owner, associated seller, or admin can execute this operation; attempts to delete a comment not owned or managed by the requesting user will fail with an error. Associated notifications are sent to relevant users where configured. The endpoint supports all compliance, moderation, and UGC history requirements, complementing the standard create, update, and list comment flows.\n\nDeleted comments may be displayed for admins or in audit logs, but are not shown to regular users. Detailed errors are returned for missing, unauthorized, or already deleted comments.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"This operation logically deletes (soft deletes) a comment associated with a given review by its unique commentId, marking it with a deleted_at timestamp for compliance audit and history. All delete operations are snapshotted to preserve evidence, in accordance with platform UGC policies. Comment is no longer returned in normal list queries but can be recovered or audited by admins as per compliance.","path":"/aiCommerce/seller/reviews/{reviewId}/comments/{commentId}","method":"delete","summary":"Logically delete (soft delete) a comment from a review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can mark a comment as deleted using this operation. It records the deleted_at timestamp for the given comment and audit logs this action. Hard deletion is not performed in order to preserve platform evidence for disputes and moderation.\n\nRole checks ensure only the comment owner, associated seller, or admin can execute this operation; attempts to delete a comment not owned or managed by the requesting user will fail with an error. Associated notifications are sent to relevant users where configured. The endpoint supports all compliance, moderation, and UGC history requirements, complementing the standard create, update, and list comment flows.\n\nDeleted comments may be displayed for admins or in audit logs, but are not shown to regular users. Detailed errors are returned for missing, unauthorized, or already deleted comments.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation logically deletes (soft deletes) a comment associated with a given review by its unique commentId, marking it with a deleted_at timestamp for compliance audit and history. All delete operations are snapshotted to preserve evidence, in accordance with platform UGC policies. Comment is no longer returned in normal list queries but can be recovered or audited by admins as per compliance.","path":"/aiCommerce/admin/reviews/{reviewId}/comments/{commentId}","method":"delete","summary":"Logically delete (soft delete) a comment from a review (ai_commerce_comments table).","description":"Authenticated buyers, sellers, or admins can mark a comment as deleted using this operation. It records the deleted_at timestamp for the given comment and audit logs this action. Hard deletion is not performed in order to preserve platform evidence for disputes and moderation.\n\nRole checks ensure only the comment owner, associated seller, or admin can execute this operation; attempts to delete a comment not owned or managed by the requesting user will fail with an error. Associated notifications are sent to relevant users where configured. The endpoint supports all compliance, moderation, and UGC history requirements, complementing the standard create, update, and list comment flows.\n\nDeleted comments may be displayed for admins or in audit logs, but are not shown to regular users. Detailed errors are returned for missing, unauthorized, or already deleted comments.","parameters":[{"name":"reviewId","description":"Parent review identifier for the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier for the comment to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"This operation enables advanced search and retrieval of a user's favorited products. It operates on the ai_commerce_favorites_products table, allowing buyers, sellers, or admins to search, filter, and paginate their product favorites. Requests use the IAiCommerceFavoritesProduct.IRequest schema (filters, pagination, sorting) and return IAiCommercePageIFavoritesProduct.ISummary for UI list rendering, analytics, and batch operations.","path":"/aiCommerce/buyer/favorites/products","method":"patch","summary":"Search and paginate a user's product favorites (ai_commerce_favorites_products table).","description":"Allows authenticated users to retrieve a paginated, filtered, and optionally sorted list of their product favorites for display, organization, and further action. Users may filter by product_id, creation date, label, folder, or other summary fields as per business rules. This operation is scoped to only the favorites accessible to the calling user unless executed by an admin.\n\nAll filtering and paging fields must match the IAiCommerceFavoritesProduct.IRequest schema. Output is always a paginated summary for efficient UI consumption and analytics.\n\nErrors include unauthorized access, invalid search parameters, or failures to locate matching records. This endpoint enables user-friendly favorites list UI as well as batch organization, alert setup, and cross-linking with recommendations or notification logic. It should be used together with favorites add, remove, and detail APIs for full-featured personalization.","parameters":[],"requestBody":{"description":"Favorite product filter/search and pagination request parameters (IAiCommerceFavoritesProduct.IRequest).","typeName":"IAiCommerceFavoritesProduct.IRequest"},"responseBody":{"description":"Paginated favorites product summaries (IAiCommercePageIFavoritesProduct.ISummary).","typeName":"IAiCommercePageIFavoritesProduct.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"This operation enables advanced search and retrieval of a user's favorited products. It operates on the ai_commerce_favorites_products table, allowing buyers, sellers, or admins to search, filter, and paginate their product favorites. Requests use the IAiCommerceFavoritesProduct.IRequest schema (filters, pagination, sorting) and return IAiCommercePageIFavoritesProduct.ISummary for UI list rendering, analytics, and batch operations.","path":"/aiCommerce/seller/favorites/products","method":"patch","summary":"Search and paginate a user's product favorites (ai_commerce_favorites_products table).","description":"Allows authenticated users to retrieve a paginated, filtered, and optionally sorted list of their product favorites for display, organization, and further action. Users may filter by product_id, creation date, label, folder, or other summary fields as per business rules. This operation is scoped to only the favorites accessible to the calling user unless executed by an admin.\n\nAll filtering and paging fields must match the IAiCommerceFavoritesProduct.IRequest schema. Output is always a paginated summary for efficient UI consumption and analytics.\n\nErrors include unauthorized access, invalid search parameters, or failures to locate matching records. This endpoint enables user-friendly favorites list UI as well as batch organization, alert setup, and cross-linking with recommendations or notification logic. It should be used together with favorites add, remove, and detail APIs for full-featured personalization.","parameters":[],"requestBody":{"description":"Favorite product filter/search and pagination request parameters (IAiCommerceFavoritesProduct.IRequest).","typeName":"IAiCommerceFavoritesProduct.IRequest"},"responseBody":{"description":"Paginated favorites product summaries (IAiCommercePageIFavoritesProduct.ISummary).","typeName":"IAiCommercePageIFavoritesProduct.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"This operation enables advanced search and retrieval of a user's favorited products. It operates on the ai_commerce_favorites_products table, allowing buyers, sellers, or admins to search, filter, and paginate their product favorites. Requests use the IAiCommerceFavoritesProduct.IRequest schema (filters, pagination, sorting) and return IAiCommercePageIFavoritesProduct.ISummary for UI list rendering, analytics, and batch operations.","path":"/aiCommerce/admin/favorites/products","method":"patch","summary":"Search and paginate a user's product favorites (ai_commerce_favorites_products table).","description":"Allows authenticated users to retrieve a paginated, filtered, and optionally sorted list of their product favorites for display, organization, and further action. Users may filter by product_id, creation date, label, folder, or other summary fields as per business rules. This operation is scoped to only the favorites accessible to the calling user unless executed by an admin.\n\nAll filtering and paging fields must match the IAiCommerceFavoritesProduct.IRequest schema. Output is always a paginated summary for efficient UI consumption and analytics.\n\nErrors include unauthorized access, invalid search parameters, or failures to locate matching records. This endpoint enables user-friendly favorites list UI as well as batch organization, alert setup, and cross-linking with recommendations or notification logic. It should be used together with favorites add, remove, and detail APIs for full-featured personalization.","parameters":[],"requestBody":{"description":"Favorite product filter/search and pagination request parameters (IAiCommerceFavoritesProduct.IRequest).","typeName":"IAiCommerceFavoritesProduct.IRequest"},"responseBody":{"description":"Paginated favorites product summaries (IAiCommercePageIFavoritesProduct.ISummary).","typeName":"IAiCommercePageIFavoritesProduct.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves a specific product favorite by its unique identifier. It is intended for buyers seeking to view detailed information about a product they have favorited, including product snapshot, labels, folder assignment, and timestamps. The operation interacts with the ai_commerce_favorites_products table, ensuring that only the requested favorite is accessed. This is critical for providing buyers with a quick lookup and for supporting personalized UX elements such as favorite previews, alert management, and re-organization within folders.","description":"Retrieve information on a single product favorite using its unique ID from the ai_commerce_favorites_products table.\n\nThis operation fetches not only the favorite linkage, but also related snapshot information, label or folder organization, and creation or update timestamps. Only authenticated users can access their own favorites. The result provides a precise reflection of the favorited product's state at the moment it was favorited, supporting UX personalization and compliance evidence requirements.\n\nErrors occur if the favorite is not found, if it belongs to another user, or if the favorite has been deleted. This operation is commonly used in conjunction with organization, alert, or notification flows for user favorites.","summary":"Retrieve a specific product favorite by favoriteProductId from ai_commerce_favorites_products.","parameters":[{"name":"favoriteProductId","description":"Unique identifier of the product favorite to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified product favorite, including snapshot and organizational data.","typeName":"IAiCommerceFavoritesProducts"},"authorizationRoles":["buyer"],"name":"at","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation allows authenticated users to create a new product favorite, storing the reference between the user and the target product in ai_commerce_favorites_products. It takes as input the target product ID, optional folder ID, and label, and creates a point-in-time snapshot of the relevant product. This ensures evidence, auditability, and enables notification workflows for personalized commerce experiences.","description":"Create a new product favorite entry for an authenticated user, storing an association between the user and a target product along with organizational metadata (folder, label) and a product snapshot at the time of favoriting. The favorite is unique per user-product pair, and attempts to favorite the same product twice will result in a validation error.\n\nThe operation supports batch notification triggers and alert configurations following successful creation. Only logged-in users can favorite products. Favorite creation is essential for supporting personalized product recommendations, notifications, and future product status comparisons.\n\nUpon success, the operation returns the favorite entry as stored, including references to the snapshot, any folder or label, and timestamps.","summary":"Create a new product favorite and return the record with snapshot and folder data.","parameters":[],"requestBody":{"description":"Details for creating a new product favorite, including product ID and optional organization settings.","typeName":"IAiCommerceFavoritesProducts.ICreate"},"responseBody":{"description":"The created favorite record, including snapshot, folder, and label if set.","typeName":"IAiCommerceFavoritesProducts"},"authorizationRoles":["buyer"],"name":"create","path":"/aiCommerce/buyer/favorites/products","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation allows users to update an existing product favorite by ID in ai_commerce_favorites_products. Supported changes include modifying the label, changing the organizational folder, or updating alert configurations. The operation preserves the historical linkage to the favorited product and snapshot, but enables ongoing personalization of organizational metadata. Proper authorization is required to prevent editing another user's favorites.","description":"Update the metadata for a product favorite (such as label or folder assignment) without modifying the fundamental favorite-product linkage or the product snapshot. The operation works exclusively on the user's own favorites and will fail if the favoriteProductId does not exist or is already deleted.\n\nOnly permitted fields such as label, folder, or alert configuration are editable; the associated product and original snapshot remain immutable for audit and compliance.\n\nUpon success, the operation returns the updated favorite entry. If the favorite is not found or does not belong to the user, a 404 error is returned.","summary":"Update metadata for an existing product favorite by favoriteProductId.","parameters":[{"name":"favoriteProductId","description":"Unique identifier of the product favorite to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating the product favorite's label, folder, or alert configuration.","typeName":"IAiCommerceFavoritesProducts.IUpdate"},"responseBody":{"description":"The updated favorite product record.","typeName":"IAiCommerceFavoritesProducts"},"authorizationRoles":["buyer"],"name":"update","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}","method":"put","authorizationRole":"buyer","authorizationType":null},{"specification":"Removes a favorite entry for a specific product by its unique identifier from ai_commerce_favorites_products. This operation performs a soft delete for recovery and audit compliance, setting the deleted_at timestamp and making the favorite inaccessible in future queries. Only the owner user can erase their favorites.","description":"Erase (soft delete) the specified product favorite using its unique ID. After this operation, the favorite will not appear in personalized product or favorites lists, and no new notifications or alerts will be sent. The record is retained for audit purposes, and the product snapshot remains available for compliance.\n\nUsers can only erase their own favorites, and attempts to erase a nonexistent or another user's favorite will result in an error.","summary":"Erase (soft delete) a specified product favorite by favoriteProductId.","parameters":[{"name":"favoriteProductId","description":"Unique identifier of the product favorite to erase (soft delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["buyer"],"name":"erase","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}","method":"delete","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation retrieves a paginated and optionally filtered list of inquiry favorites for the authenticated user from ai_commerce_favorites_inquiries. Users can filter favorites by folder, label, or inquiry status, supporting user personalization, notification, and organization features.","description":"List or search the authenticated user's favorited product inquiries, allowing filtering by folder, label, or inquiry state. The results are paginated and optimized for user UX, enabling quick lookup and management. This operation returns summary information suitable for lists, rather than detailed inquiry content.\n\nCommonly paired with alert configuration, favorited inquiry notification flows, and organizational management UIs. The operation only returns the user's own favorites; unauthorized access returns an empty or error result.\n\nErrors occur for invalid filters or if the user is not authenticated. The default sort order is by created date descending.","summary":"List/search favorited product inquiries for the authenticated user.","parameters":[],"requestBody":{"description":"Filtering and pagination options for favorited inquiries search.","typeName":"IAiCommerceFavoritesInquiries.IRequest"},"responseBody":{"description":"Paginated and filtered list of the user's favorited inquiries.","typeName":"IPageIAiCommerceFavoritesInquiries.ISummary"},"authorizationRoles":["buyer"],"name":"index","path":"/aiCommerce/buyer/favorites/inquiries","method":"patch","authorizationRole":"buyer","authorizationType":null},{"specification":"Retrieves detailed information about a single inquiry favorite by its unique ID from ai_commerce_favorites_inquiries, including links to the inquiry snapshot, organizational data, and notification state. This supports user-facing favorite management, alert updates, and evidence compliance flows.","description":"Fetch a specific inquiry favorite by its favoriteInquiryId, returning the full detail as stored in ai_commerce_favorites_inquiries, including organizational folder assignment, snapshot, and timestamps.\n\nThis API supports per-user favorite management, compliance snapshot linking, alert review, and organization. Only authenticated users can access their own favorites, and errors are returned for missing, deleted, or unauthorized favorites.\n\nThe operation is commonly used to display favorite inquiry detail screens and to support favorite update or notification review interfaces.","summary":"Get detailed information for a specific inquiry favorite by favoriteInquiryId.","parameters":[{"name":"favoriteInquiryId","description":"The unique identifier for the inquiry favorite to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full detail of the favorited inquiry including snapshot and folder references.","typeName":"IAiCommerceFavoritesInquiries"},"authorizationRoles":["buyer"],"name":"at","path":"/aiCommerce/buyer/favorites/inquiries/{favoriteInquiryId}","method":"get","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation allows users to create a new inquiry favorite—bookmarking a specific product inquiry for personalized access, notification, and evidence retention. The created entry is unique per user-inquiry pair and records folder, snapshot, and labeling info for organization and compliance.","description":"Add a new favorite inquiry for the authenticated user. The request specifies the inquiry ID to favorite, optional folder and label, and creates a snapshot of the current state of the inquiry for evidence purposes. Uniqueness is enforced per user and inquiry; attempting to favorite the same inquiry twice triggers a validation error.\n\nFavoriting an inquiry powers features such as notification of answers, rapid lookup, and organizational flows for the user. Only logged-in users may favorite inquiries. The result includes the created favorite record, its snapshot, and metadata.","summary":"Create a new inquiry favorite and return the stored record (with snapshot and folder if assigned).","parameters":[],"requestBody":{"description":"Required and optional data for favoriting a product inquiry.","typeName":"IAiCommerceFavoritesInquiries.ICreate"},"responseBody":{"description":"The created inquiry favorite entry including all assigned fields and snapshot reference.","typeName":"IAiCommerceFavoritesInquiries"},"authorizationRoles":["buyer"],"name":"create","path":"/aiCommerce/buyer/favorites/inquiries","method":"post","authorizationRole":"buyer","authorizationType":null},{"specification":"Update a specific inquiry favorite by its unique ID, allowing users to reorganize favorites (folder assignment, label) or modify alert configuration for notification logic. Only allowed fields may be updated, with the fundamental linkage and snapshot remaining unchanged.","description":"Allows an authenticated user to update organizational metadata for an inquiry favorite, such as changing its folder, updating a label, or adjusting alert preferences. User authorization is required, and attempts to edit another user's favorite or a deleted entry will fail.\n\nContent and snapshot linkage remain read-only for audit and compliance. Updated records are returned in full, allowing front ends to reflect new organization, alerts, or preferences immediately.","summary":"Update label, folder, or alert settings for an existing inquiry favorite by favoriteInquiryId.","parameters":[{"name":"favoriteInquiryId","description":"The unique identifier of the inquiry favorite to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable organizational data for the inquiry favorite.","typeName":"IAiCommerceFavoritesInquiries.IUpdate"},"responseBody":{"description":"The updated inquiry favorite record as stored.","typeName":"IAiCommerceFavoritesInquiries"},"authorizationRoles":["buyer"],"name":"update","path":"/aiCommerce/buyer/favorites/inquiries/{favoriteInquiryId}","method":"put","authorizationRole":"buyer","authorizationType":null},{"specification":"This operation permanently deletes a favorite inquiry for the authenticated buyer or seller. It is associated with the ai_commerce_favorites_inquiries table, ensuring that the favorite is logically removed (soft delete), preserving compliance and auditability per the Prisma schema. The operation checks both user identity and favorite inquiry ownership before removal.","path":"/aiCommerce/buyer/favorites/inquiries/{favoriteInquiryId}","method":"delete","summary":"Remove a favorite inquiry (soft delete) for the authenticated user (ai_commerce_favorites_inquiries).","description":"Delete a user's favorite inquiry by marking it as deleted. The operation verifies user permissions, favorite inquiry ownership, and ensures the operation is auditable and compliant with the business logic in ai_commerce_favorites_inquiries.\n\nSecurity consideration: Accessible only to authenticated buyers or sellers who own the favorite inquiry. Soft deletion preserves record integrity and audit logging for evidence.\n\nThis operation references the Prisma schema's ai_commerce_favorites_inquiries table, specifically utilizing the deleted_at column for soft removal. No data is physically erased, satisfying compliance requirements for privacy and legal retention.\n\nBusiness logic and ownership validation are enforced. Errors are returned if the favorite does not exist, does not belong to the user, or has already been deleted.","parameters":[{"name":"favoriteInquiryId","description":"Unique identifier of the favorite inquiry to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"This operation permanently deletes a favorite inquiry for the authenticated buyer or seller. It is associated with the ai_commerce_favorites_inquiries table, ensuring that the favorite is logically removed (soft delete), preserving compliance and auditability per the Prisma schema. The operation checks both user identity and favorite inquiry ownership before removal.","path":"/aiCommerce/seller/favorites/inquiries/{favoriteInquiryId}","method":"delete","summary":"Remove a favorite inquiry (soft delete) for the authenticated user (ai_commerce_favorites_inquiries).","description":"Delete a user's favorite inquiry by marking it as deleted. The operation verifies user permissions, favorite inquiry ownership, and ensures the operation is auditable and compliant with the business logic in ai_commerce_favorites_inquiries.\n\nSecurity consideration: Accessible only to authenticated buyers or sellers who own the favorite inquiry. Soft deletion preserves record integrity and audit logging for evidence.\n\nThis operation references the Prisma schema's ai_commerce_favorites_inquiries table, specifically utilizing the deleted_at column for soft removal. No data is physically erased, satisfying compliance requirements for privacy and legal retention.\n\nBusiness logic and ownership validation are enforced. Errors are returned if the favorite does not exist, does not belong to the user, or has already been deleted.","parameters":[{"name":"favoriteInquiryId","description":"Unique identifier of the favorite inquiry to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation retrieves a paginated, filterable list of favorite addresses for the authenticated buyer or seller. It enables searching, sorting, and advanced filtering according to folder, label, or primary address. It leverages the ai_commerce_favorites_addresses table from the Prisma schema and supports search criteria encapsulated in IAiCommerceFavoritesAddress.IRequest. The response follows a paginated list of summary address favorites (IAiCommerceFavoritesAddress.ISummary).","path":"/aiCommerce/buyer/favorites/addresses","method":"patch","summary":"Search and retrieve favorite addresses for the current user (ai_commerce_favorites_addresses).","description":"Fetch a list of favorite addresses belonging to the authenticated buyer or seller with support for advanced searching, sorting, and pagination. Filters can include folder assignment, labels, and primary address status. The request body follows IAiCommerceFavoritesAddress.IRequest, and results are returned as paginated summaries.\n\nSecurity: Accessible exclusively to authenticated buyers or sellers. Each result only includes addresses favorited by the current user. Sensitive information is filtered based on user permissions. Audit logging applies per compliance rules.\n\nUnderlying Prisma entity is ai_commerce_favorites_addresses, supporting compliance, snapshotting, and organization via folders. Edge cases such as unauthorized access or data not existing are handled appropriately.","parameters":[],"requestBody":{"description":"Criteria for filtering, sorting, and paginating the favorite addresses of the current user","typeName":"IAiCommerceFavoritesAddress.IRequest"},"responseBody":{"description":"Paginated, searchable list of address favorites in summary view","typeName":"IPageIAiCommerceFavoritesAddress.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"This operation retrieves a paginated, filterable list of favorite addresses for the authenticated buyer or seller. It enables searching, sorting, and advanced filtering according to folder, label, or primary address. It leverages the ai_commerce_favorites_addresses table from the Prisma schema and supports search criteria encapsulated in IAiCommerceFavoritesAddress.IRequest. The response follows a paginated list of summary address favorites (IAiCommerceFavoritesAddress.ISummary).","path":"/aiCommerce/seller/favorites/addresses","method":"patch","summary":"Search and retrieve favorite addresses for the current user (ai_commerce_favorites_addresses).","description":"Fetch a list of favorite addresses belonging to the authenticated buyer or seller with support for advanced searching, sorting, and pagination. Filters can include folder assignment, labels, and primary address status. The request body follows IAiCommerceFavoritesAddress.IRequest, and results are returned as paginated summaries.\n\nSecurity: Accessible exclusively to authenticated buyers or sellers. Each result only includes addresses favorited by the current user. Sensitive information is filtered based on user permissions. Audit logging applies per compliance rules.\n\nUnderlying Prisma entity is ai_commerce_favorites_addresses, supporting compliance, snapshotting, and organization via folders. Edge cases such as unauthorized access or data not existing are handled appropriately.","parameters":[],"requestBody":{"description":"Criteria for filtering, sorting, and paginating the favorite addresses of the current user","typeName":"IAiCommerceFavoritesAddress.IRequest"},"responseBody":{"description":"Paginated, searchable list of address favorites in summary view","typeName":"IPageIAiCommerceFavoritesAddress.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"This operation retrieves the details of a single favorite address for the authenticated buyer or seller, enabling them to view the address snapshot and organizational metadata. The endpoint references the ai_commerce_favorites_addresses table, ensuring proper access control to avoid cross-user data leakage.","path":"/aiCommerce/buyer/favorites/addresses/{favoriteAddressId}","method":"get","summary":"Retrieve a specific favorite address with snapshot and metadata (ai_commerce_favorites_addresses).","description":"Fetch the detailed information for a user's favorite address, including all snapshot metadata, folder assignment, label, and primary status. This operation checks the ownership of the favorite before exposing any information, referencing deleted_at for soft-deleted records.\n\nSecurity: Only the buyer or seller who owns the favorite can access the information. Non-owners or unauthenticated callers are denied access. Includes compliance-required details for audit/logging.\n\nThis operation is based on the ai_commerce_favorites_addresses schema, using the favoriteAddressId as the primary lookup. Errors are handled for non-existent or unauthorized records. Snapshot audit is maintained.","parameters":[{"name":"favoriteAddressId","description":"Unique identifier for the favorite address record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed favorite address information with all organizational, label, and snapshot data","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"This operation retrieves the details of a single favorite address for the authenticated buyer or seller, enabling them to view the address snapshot and organizational metadata. The endpoint references the ai_commerce_favorites_addresses table, ensuring proper access control to avoid cross-user data leakage.","path":"/aiCommerce/seller/favorites/addresses/{favoriteAddressId}","method":"get","summary":"Retrieve a specific favorite address with snapshot and metadata (ai_commerce_favorites_addresses).","description":"Fetch the detailed information for a user's favorite address, including all snapshot metadata, folder assignment, label, and primary status. This operation checks the ownership of the favorite before exposing any information, referencing deleted_at for soft-deleted records.\n\nSecurity: Only the buyer or seller who owns the favorite can access the information. Non-owners or unauthenticated callers are denied access. Includes compliance-required details for audit/logging.\n\nThis operation is based on the ai_commerce_favorites_addresses schema, using the favoriteAddressId as the primary lookup. Errors are handled for non-existent or unauthorized records. Snapshot audit is maintained.","parameters":[{"name":"favoriteAddressId","description":"Unique identifier for the favorite address record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed favorite address information with all organizational, label, and snapshot data","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"This operation creates a new favorite address for the authenticated buyer or seller. It validates that the address is eligible for favoriting (not already favorited, belongs to the user, and is not deleted), and associates optional folder or label information. The implementation uses the ai_commerce_favorites_addresses table.","path":"/aiCommerce/buyer/favorites/addresses","method":"post","summary":"Add a new favorite address for the current user (ai_commerce_favorites_addresses).","description":"Register a user address as a favorite, storing a snapshot of the address state and optional organizational information such as folder and label. Business logic ensures no duplicate favoriting of the same address per user. On success, a snapshot record is created for auditing/compliance.\n\nAuthorization: Only available to buyers or sellers for their own addresses. Attempts to favorite someone else's address or re-favorite the same address are rejected with errors. All new entries reference the current state for snapshot integrity.\n\nBased on ai_commerce_favorites_addresses. The request follows IAiCommerceFavoritesAddress.ICreate, and the response includes the newly created favorite record (IAiCommerceFavoritesAddress).","parameters":[],"requestBody":{"description":"Request body containing address ID and optional folder/label for favoriting","typeName":"IAiCommerceFavoritesAddress.ICreate"},"responseBody":{"description":"Favorite address record immediately after creation, with labels/folder/snapshot attached","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"buyer","name":"create"},{"specification":"This operation creates a new favorite address for the authenticated buyer or seller. It validates that the address is eligible for favoriting (not already favorited, belongs to the user, and is not deleted), and associates optional folder or label information. The implementation uses the ai_commerce_favorites_addresses table.","path":"/aiCommerce/seller/favorites/addresses","method":"post","summary":"Add a new favorite address for the current user (ai_commerce_favorites_addresses).","description":"Register a user address as a favorite, storing a snapshot of the address state and optional organizational information such as folder and label. Business logic ensures no duplicate favoriting of the same address per user. On success, a snapshot record is created for auditing/compliance.\n\nAuthorization: Only available to buyers or sellers for their own addresses. Attempts to favorite someone else's address or re-favorite the same address are rejected with errors. All new entries reference the current state for snapshot integrity.\n\nBased on ai_commerce_favorites_addresses. The request follows IAiCommerceFavoritesAddress.ICreate, and the response includes the newly created favorite record (IAiCommerceFavoritesAddress).","parameters":[],"requestBody":{"description":"Request body containing address ID and optional folder/label for favoriting","typeName":"IAiCommerceFavoritesAddress.ICreate"},"responseBody":{"description":"Favorite address record immediately after creation, with labels/folder/snapshot attached","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"seller","name":"create"},{"specification":"This operation updates an existing favorite address for the authenticated buyer or seller, enabling them to organize, relabel, or change the associated folder/primary status. Only the owner of the favorite can perform updates. The implementation aligns with ai_commerce_favorites_addresses per the schema.","path":"/aiCommerce/buyer/favorites/addresses/{favoriteAddressId}","method":"put","summary":"Update organization or metadata of an existing favorite address (ai_commerce_favorites_addresses).","description":"Modify a user's favorite address, such as moving it to a different folder, changing the label, or toggling its primary status. The operation checks favorite ownership, ensuring only the owning buyer or seller can update their favorites. Any changes are snapshot-audited for compliance purposes.\n\nSecurity: Buyers or sellers can only modify favorites they own. Setting multiple primary favorites or organizing into non-existent folders is validated and rejected as needed. The updatedAt field of ai_commerce_favorites_addresses is updated.\n\nComplies with the business organization's logic described in IAiCommerceFavoritesAddress.IUpdate request body schema, responding with the updated favorite's detailed info.","parameters":[{"name":"favoriteAddressId","description":"Unique identifier of the favorite address to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Changes to apply to folder, label, primary status, or organization for an address favorite","typeName":"IAiCommerceFavoritesAddress.IUpdate"},"responseBody":{"description":"Updated favorite address record after modifications; includes new metadata, organizational state, and audit history.","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"buyer","name":"update"},{"specification":"This operation updates an existing favorite address for the authenticated buyer or seller, enabling them to organize, relabel, or change the associated folder/primary status. Only the owner of the favorite can perform updates. The implementation aligns with ai_commerce_favorites_addresses per the schema.","path":"/aiCommerce/seller/favorites/addresses/{favoriteAddressId}","method":"put","summary":"Update organization or metadata of an existing favorite address (ai_commerce_favorites_addresses).","description":"Modify a user's favorite address, such as moving it to a different folder, changing the label, or toggling its primary status. The operation checks favorite ownership, ensuring only the owning buyer or seller can update their favorites. Any changes are snapshot-audited for compliance purposes.\n\nSecurity: Buyers or sellers can only modify favorites they own. Setting multiple primary favorites or organizing into non-existent folders is validated and rejected as needed. The updatedAt field of ai_commerce_favorites_addresses is updated.\n\nComplies with the business organization's logic described in IAiCommerceFavoritesAddress.IUpdate request body schema, responding with the updated favorite's detailed info.","parameters":[{"name":"favoriteAddressId","description":"Unique identifier of the favorite address to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Changes to apply to folder, label, primary status, or organization for an address favorite","typeName":"IAiCommerceFavoritesAddress.IUpdate"},"responseBody":{"description":"Updated favorite address record after modifications; includes new metadata, organizational state, and audit history.","typeName":"IAiCommerceFavoritesAddress"},"authorizationType":null,"authorizationRole":"seller","name":"update"},{"specification":"This operation removes (soft deletes) a favorite address for the current buyer or seller. The ai_commerce_favorites_addresses table is referenced; deletion is logical, preserving records for audit, privacy, and compliance requirements.","path":"/aiCommerce/buyer/favorites/addresses/{favoriteAddressId}","method":"delete","summary":"Remove (soft delete) a favorite address for the user (ai_commerce_favorites_addresses).","description":"Logically deletes a favorite address belonging to the requesting buyer or seller. This operation performs a soft delete (setting deleted_at) in accordance with compliance and business requirements. Users can only delete their own favorites; unauthorized or already-deleted records trigger errors.\n\nAudit trail and compliance rules are enforced. The favorite is not physically erased, retaining snapshot and traceability for legal/audit scenarios. The AICommerceFavoritesAddress schema is referenced throughout the business operation.","parameters":[{"name":"favoriteAddressId","description":"ID of the favorite address to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase"},{"specification":"This operation removes (soft deletes) a favorite address for the current buyer or seller. The ai_commerce_favorites_addresses table is referenced; deletion is logical, preserving records for audit, privacy, and compliance requirements.","path":"/aiCommerce/seller/favorites/addresses/{favoriteAddressId}","method":"delete","summary":"Remove (soft delete) a favorite address for the user (ai_commerce_favorites_addresses).","description":"Logically deletes a favorite address belonging to the requesting buyer or seller. This operation performs a soft delete (setting deleted_at) in accordance with compliance and business requirements. Users can only delete their own favorites; unauthorized or already-deleted records trigger errors.\n\nAudit trail and compliance rules are enforced. The favorite is not physically erased, retaining snapshot and traceability for legal/audit scenarios. The AICommerceFavoritesAddress schema is referenced throughout the business operation.","parameters":[{"name":"favoriteAddressId","description":"ID of the favorite address to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"seller","name":"erase"},{"specification":"This operation retrieves a paginated and organized list of favorite folders for the current buyer or seller, allowing searching by name and ordering by creation or modification date. It references ai_commerce_favorites_folders in the schema, supporting advanced querying in IAiCommerceFavoritesFolder.IRequest. The response provides paginated folder summaries for organizational UIs.","path":"/aiCommerce/buyer/favorites/folders","method":"patch","summary":"Search and retrieve favorite folders for the authenticated user (ai_commerce_favorites_folders).","description":"Returns a list of folders used to organize address, product, and inquiry favorites for the current authenticated buyer or seller. Supports searching by folder name, filtering, and advanced organizational structures. Pagination and sorting options are included as per business needs. Each folder shown is owned by the current user only.\n\nSecurity: Buyers or sellers are limited to viewing/managing their folders. Edge cases like non-existent or already-deleted folders are handled transparently, with audit logging as needed.\n\nThe operation supports compliance requirements for organization, privacy, and user experience business logic. It follows IAiCommerceFavoritesFolder.IRequest request body and returns paginated IAiCommerceFavoritesFolder.ISummary responses.","parameters":[],"requestBody":{"description":"Folder search, filter, and pagination criteria","typeName":"IAiCommerceFavoritesFolder.IRequest"},"responseBody":{"description":"Paginated list of summary information for favorite folders owned by the user","typeName":"IPageIAiCommerceFavoritesFolder.ISummary"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"This operation retrieves a paginated and organized list of favorite folders for the current buyer or seller, allowing searching by name and ordering by creation or modification date. It references ai_commerce_favorites_folders in the schema, supporting advanced querying in IAiCommerceFavoritesFolder.IRequest. The response provides paginated folder summaries for organizational UIs.","path":"/aiCommerce/seller/favorites/folders","method":"patch","summary":"Search and retrieve favorite folders for the authenticated user (ai_commerce_favorites_folders).","description":"Returns a list of folders used to organize address, product, and inquiry favorites for the current authenticated buyer or seller. Supports searching by folder name, filtering, and advanced organizational structures. Pagination and sorting options are included as per business needs. Each folder shown is owned by the current user only.\n\nSecurity: Buyers or sellers are limited to viewing/managing their folders. Edge cases like non-existent or already-deleted folders are handled transparently, with audit logging as needed.\n\nThe operation supports compliance requirements for organization, privacy, and user experience business logic. It follows IAiCommerceFavoritesFolder.IRequest request body and returns paginated IAiCommerceFavoritesFolder.ISummary responses.","parameters":[],"requestBody":{"description":"Folder search, filter, and pagination criteria","typeName":"IAiCommerceFavoritesFolder.IRequest"},"responseBody":{"description":"Paginated list of summary information for favorite folders owned by the user","typeName":"IPageIAiCommerceFavoritesFolder.ISummary"},"authorizationType":null,"authorizationRole":"seller","name":"index"},{"specification":"This operation fetches the details of a single favorite folder by its ID for the authenticated buyer or seller. All folder metadata, organization settings, and summary details are returned. It references ai_commerce_favorites_folders from the Prisma schema and ensures the user can only view their own folders.","path":"/aiCommerce/buyer/favorites/folders/{folderId}","method":"get","summary":"Retrieve details of a specific favorite folder by ID (ai_commerce_favorites_folders).","description":"Fetches metadata and detailed information for a user's favorite folder, including name, description, and organizational state. Ownership is verified, and access is limited to the authenticated buyer or seller who owns the folder. The operation ensures compliance and audit logging.\n\nBased on ai_commerce_favorites_folders, and keyed by folderId. Soft-deleted or unauthorized access returns descriptive errors. Audit logic is in place as needed for traceability.","parameters":[{"name":"folderId","description":"Unique identifier for the favorite folder record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed favorite folder information for the user, including all metadata and organization.","typeName":"IAiCommerceFavoritesFolder"},"authorizationType":null,"authorizationRole":"buyer","name":"at"},{"specification":"This operation fetches the details of a single favorite folder by its ID for the authenticated buyer or seller. All folder metadata, organization settings, and summary details are returned. It references ai_commerce_favorites_folders from the Prisma schema and ensures the user can only view their own folders.","path":"/aiCommerce/seller/favorites/folders/{folderId}","method":"get","summary":"Retrieve details of a specific favorite folder by ID (ai_commerce_favorites_folders).","description":"Fetches metadata and detailed information for a user's favorite folder, including name, description, and organizational state. Ownership is verified, and access is limited to the authenticated buyer or seller who owns the folder. The operation ensures compliance and audit logging.\n\nBased on ai_commerce_favorites_folders, and keyed by folderId. Soft-deleted or unauthorized access returns descriptive errors. Audit logic is in place as needed for traceability.","parameters":[{"name":"folderId","description":"Unique identifier for the favorite folder record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed favorite folder information for the user, including all metadata and organization.","typeName":"IAiCommerceFavoritesFolder"},"authorizationType":null,"authorizationRole":"seller","name":"at"},{"specification":"Creates a new favorites folder for the authenticated user. This operation interacts with the ai_commerce_favorites_folders table, which maintains organizational folders per user to group/categorize favorites (products, inquiries, addresses). Creating a folder allows a user to organize their favorite items, manage multiple groupings, and optimize retrieval and management of their bookmarked content. Folder names must be unique per user, and optional descriptions can guide the organizational purpose.","description":"This API endpoint allows an authenticated buyer to create an organizational folder in their favorites collection. \n\nUpon invocation, the system ensures the provided folder name is unique to the user and links the folder to the requesting buyer's account. Descriptions (optional) support explanatory or categorizing detail. The operation implements strict validation against duplicate names, prohibited characters, and length limits. When successful, the new folder is immediately available for organizing product, inquiry, or address favorites.\n\nSecurity is enforceable by 'buyer' role authentication. Attempts by unauthorized roles are rejected. The operation references the ai_commerce_favorites_folders table and follows all historical audit and update mechanisms as specified in the Prisma schema commentary.\n\nError handling covers name collisions, forbidden values, and authentication failures. The folder is fully compliant with audit trails and organizational enforcement for user management of favorites. Follow-up actions may include batch organization of existing or future favorites using the new folder.","summary":"Create a new favorites folder for grouping saved items for a buyer (ai_commerce_favorites_folders table).","parameters":[],"requestBody":{"description":"Information required to create a new favorites folder, including folder name and description.","typeName":"IAiCommerceFavoritesFolder.ICreate"},"responseBody":{"description":"Detailed information of the newly created favorites folder, including its unique ID, name, and associated metadata.","typeName":"IAiCommerceFavoritesFolder"},"authorizationType":null,"authorizationRole":"buyer","name":"create","path":"/aiCommerce/buyer/favorites/folders","method":"post"},{"specification":"Updates an existing favorites folder for the authenticated buyer. This operation targets the ai_commerce_favorites_folders table, allowing changes to the folder's name or description. The folder is uniquely identified by folderId, and all edit operations respect buyer ownership and name uniqueness constraints.","description":"This endpoint allows an authenticated buyer to update the organizational metadata of one of their existing favorites folders by folderId. \n\nThe system verifies that the buyer owns the folder, prevents renaming to a name already in use in another of the buyer's folders, and enforces all data integrity rules noted in the table documentation. Edits may include changing the folder name or description. Updates use server-side validation for field limits, uniqueness, and character constraints.\n\nAudit logging records all updates for compliance and organizational tracking. Ownership is strictly enforced, and any unauthorized update attempt (wrong buyer or insufficient permissions) is rejected. The operation relies on the ai_commerce_favorites_folders schema described in the Prisma file.\n\nSuccessful updates enable buyers to dynamically re-organize their saved content. Errors include unauthorized access, duplicate folder names, or validation issues with the updated data.","summary":"Update the name or description of a buyer-owned favorites folder (ai_commerce_favorites_folders).","parameters":[{"name":"folderId","description":"Unique identifier of the favorites folder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated folder information: new name and/or description for the favorites folder.","typeName":"IAiCommerceFavoritesFolder.IUpdate"},"responseBody":{"description":"The updated favorites folder entity, with all metadata reflecting recent changes.","typeName":"IAiCommerceFavoritesFolder"},"authorizationType":null,"authorizationRole":"buyer","name":"update","path":"/aiCommerce/buyer/favorites/folders/{folderId}","method":"put"},{"specification":"Deletes a favorites folder for the current authenticated buyer. The operation conducts a soft delete (using deleted_at) on the ai_commerce_favorites_folders table, ensuring user safety and the ability to recover data per policy. All removal operations strictly verify folder ownership and name constraints.","description":"This API endpoint enables a buyer to remove one of their organizing folders from favorites using the folderId parameter. Rather than physical deletion, this is a soft delete, where the deleted_at field is set to the current timestamp, making the folder unavailable for future organization operations but retaining it for compliance/audit. \n\nThe system checks for buyer ownership before proceeding and reassigns or un-links contained favorites as prescribed by business rules (such as moving favorites to a default folder or leaving them ungrouped).\n\nSecurity is enforced such that only the owner can delete their folder. Audit trails reflect the action, including actor, timestamp, and before/after folder state. The operation references the ai_commerce_favorites_folders schema's description and policy for safe, reversible data deletion and traceability.\n\nError scenarios include attempts to delete non-owned folders, invalid IDs, or folders already deleted. No response body is provided on success.","summary":"Remove (soft delete) a buyer-owned favorites folder from the system (ai_commerce_favorites_folders).","parameters":[{"name":"folderId","description":"Unique identifier of the favorites folder to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"erase","path":"/aiCommerce/buyer/favorites/folders/{folderId}","method":"delete"},{"specification":"Updates alert configuration for a specific product favorite. This operation targets the ai_commerce_favorites_alerts table, allowing the authenticated buyer to set or change notification triggers (e.g., price drop, restock) on their own favorite products. The favoriteProductId uniquely identifies the buyer's product favorite.","description":"This endpoint allows a buyer to configure or update alert settings on a favorited product, such as enabling alerts for price changes, restocks, or other defined business events. \n\nThe system ensures the operation targets a favorite product record belonging to the current buyer, validates changes to alert settings, and applies them on the ai_commerce_favorites_alerts record(s). The underlying table supports various alert types, enabling personalized notification for product changes. All updates are strictly tied to favoriteProductId ownership and enforce existing business and data integrity rules from the schema.\n\nSecurity is ensured by verifying buyer authentication and record ownership; attempts to alter alert settings for others' favorites are denied. The result includes the list of updated alert configurations. Detailed audit logs record alert configuration changes for buyer accountability and historical inspection.","summary":"Configure or update alert trigger settings for a favorited product (ai_commerce_favorites_alerts).","parameters":[{"name":"favoriteProductId","description":"ID of the product favorite on which to update alert settings.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"List of updated alert configurations (enable/disable specific triggers) for the specified favorite product.","typeName":"IAiCommerceFavoritesAlert.IUpdateRequest"},"responseBody":{"description":"Updated list of alert configurations, showing the state of all triggers for this favorite product.","typeName":"IAiCommerceFavoritesAlert.IList"},"authorizationType":null,"authorizationRole":"buyer","name":"updateAlerts","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/alerts","method":"patch"},{"specification":"Retrieves a specific alert configuration for a buyer's favorited product. This operation returns detailed information from the ai_commerce_favorites_alerts table regarding a single alert (by alertId) for a particular favorite product, verifying buyer ownership and access rights to both IDs.","description":"This API endpoint allows the buyer to view the details (trigger type, enabled state, recent activity) of a specific notification alert configured for a favorite product. Both favoriteProductId and alertId must be provided for context and strict access validation, ensuring buyers cannot read alert configurations on others' favorites.\n\nThe response includes full metadata on the alert, such as trigger type, state, and last triggered/modified information. Strong validation against buyer ownership, valid IDs, and access rights is enforced, with any violation resulting in a denied request.\n\nAudit logging records all data access for compliance. This operation references the ai_commerce_favorites_alerts Prisma schema comments regarding structure, relationships, and evidence requirements.","summary":"View the details of a specific alert trigger on a favorited product (ai_commerce_favorites_alerts).","parameters":[{"name":"favoriteProductId","description":"ID of the product favorite related to the alert.","schema":{"type":"string","format":"uuid"}},{"name":"alertId","description":"ID of the specific alert configuration for this favorite product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed configuration and history for the selected alert on the favorite product.","typeName":"IAiCommerceFavoritesAlert"},"authorizationType":null,"authorizationRole":"buyer","name":"atAlert","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/alerts/{alertId}","method":"get"},{"specification":"Creates a new alert trigger for a specific favorite product, allowing the buyer to define new conditions for notification (such as a price drop, restock, or answer posted). This operation targets ai_commerce_favorites_alerts, binding a new alert to the buyer's product favorite and applying all uniqueness and business constraints from the schema.","description":"When invoked, this endpoint allows the authenticated buyer to create an additional alert configuration for a given favorited product, specifying the alert trigger type (e.g., price_drop, restocked) and whether it should be enabled.\n\nThe system associates the new alert with both the favorite product and the specific buyer, validating that no identical alert type already exists for this favorite (as enforced by business uniqueness constraints). All provided values are validated for correctness and compliance with the ai_commerce_favorites_alerts schema commentary.\n\nSecurity checks ensure that only the owner of the favorite can add new alerts, and all creations are fully audit logged. The resulting alert configuration is returned in detail for immediate UI feedback or confirmation to the buyer. Error cases cover forbidden IDs, invalid request types, or attempts to create duplicate alert triggers for the same favorite.","summary":"Create a new alert trigger for a favorited product (ai_commerce_favorites_alerts).","parameters":[{"name":"favoriteProductId","description":"ID of the product favorite for alert creation.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details for a new alert trigger on a favorite product, including type and state (enabled/disabled).","typeName":"IAiCommerceFavoritesAlert.ICreate"},"responseBody":{"description":"Full information for the newly created alert configuration for this favorite product.","typeName":"IAiCommerceFavoritesAlert"},"authorizationType":null,"authorizationRole":"buyer","name":"createAlert","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/alerts","method":"post"},{"specification":"Updates a specific alert configuration for a buyer's favorited product. The operation edits an alert's settings (such as trigger type, notification status) in the ai_commerce_favorites_alerts table, strictly referencing both favorite product and alert IDs for context.","description":"This endpoint allows a buyer to update any configurable properties for an existing alert on a favorited product, specified by both favoriteProductId and alertId. \n\nThe operation enforces that the alert is bound to the calling buyer and the specified favorite product, and changes apply only to mutable fields (e.g., enabling/disabling, changing trigger type). Strict schema-driven validation and business constraints (no duplicate alerts per type) are applied.\n\nSecurity is handled through ownership checks and record validation; all actions are fully audit-logged for compliance. The updated alert configuration is returned in the response on success. Possible error cases include lack of ownership, forbidden edits, or constraint violations.","summary":"Update an existing alert configuration for a favorite product (ai_commerce_favorites_alerts).","parameters":[{"name":"favoriteProductId","description":"ID of the product favorite associated with the alert to update.","schema":{"type":"string","format":"uuid"}},{"name":"alertId","description":"ID of the alert configuration to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated alert trigger settings (enabled/disabled, type) for this favorite product alert.","typeName":"IAiCommerceFavoritesAlert.IUpdate"},"responseBody":{"description":"Full information for the updated alert configuration for this favorite product.","typeName":"IAiCommerceFavoritesAlert"},"authorizationType":null,"authorizationRole":"buyer","name":"updateAlert","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/alerts/{alertId}","method":"put"},{"specification":"Removes an existing alert configuration for a buyer's favorite product. This operation conducts a soft delete by timestamping deleted_at in the ai_commerce_favorites_alerts table, guaranteeing evidence preservation and audit trail requirements.","description":"This API endpoint allows a buyer to remove an alert trigger from a favorite product. Both the favorite product ID and alert configuration ID must be provided, and the operation requires that the alert belongs to the buyer and the correct favorite.\n\nInstead of a hard/physical delete, a soft delete approach sets the deleted_at timestamp so that audit history and event evidence are preserved. Security validation denies attempts by non-owners or mismatched favorite/alert pairs. The operation follows the data integrity, audit, and compliance commentary of the ai_commerce_favorites_alerts table.\n\nTypical errors handled include not-found pairs, unauthorized access, or redundant deletions. No response body is returned for successful deletes.","summary":"Remove (soft delete) an alert trigger from a buyer’s favorite product (ai_commerce_favorites_alerts).","parameters":[{"name":"favoriteProductId","description":"ID of the product favorite whose alert trigger should be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"alertId","description":"Unique identifier of the alert trigger to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"buyer","name":"eraseAlert","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/alerts/{alertId}","method":"delete"},{"specification":"This API operation retrieves a list of notification events for a user's favorited product. It allows users to view notifications such as alerts for price drops, restocks, status changes, or other personalized events related to the favorited product. Notifications are stored as entities associated with a specific favorite product. Response includes pagination, notification metadata (type, delivery/read status), and event timestamps. This operation works on the ai_commerce_favorites_products and ai_commerce_favorites_notifications tables in the Prisma schema, ensuring the user can stay informed about updates to their favorited products.","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/notifications","method":"patch","summary":"Search and retrieve a paginated list of notifications for a user's favorited product (ai_commerce_favorites_products and ai_commerce_favorites_notifications).","description":"This operation enables a user to retrieve a paginated, searchable, and sortable list of notification events associated with a specific favorited product. These notifications keep a user informed about important updates, such as price changes, stock status, or promotional events tied to the product they have favorited.\n\nAccess to this information is restricted to authenticated users who own the favorite product reference, with robust permission enforcement. The endpoint supports pagination and advanced search queries (e.g., filtering by notification type, date range, read/unread status), enabling efficient notification management by the user. Notification data returned includes the notification type, timestamps for creation, delivery, and read status, along with associated metadata for the favorited product.\n\nUnderlying data is read from ai_commerce_favorites_products (for favorite identification) and ai_commerce_favorites_notifications (for event records). Sensitive notification content is accessible only by the user who favorited the product. Excessive retrieval or abuse of this API may be rate limited, and all access events are logged for audit purposes.\n\nRelated operations may include marking notifications as read or deleting specific notifications for housekeeping. Error handling ensures that access is denied if the favorite product entry does not belong to the requesting user, or if it has been deleted or revoked.","parameters":[{"name":"favoriteProductId","description":"The unique identifier of the favorited product for which to retrieve notifications.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/query parameters for filtering, sorting, and paginating notification events.","typeName":"IAiCommerceFavoritesProductNotification.IRequest"},"responseBody":{"description":"A paginated list of notification entities for the favorited product.","typeName":"IPageIAiCommerceFavoritesProductNotification"},"authorizationType":null,"authorizationRole":"buyer","name":"index"},{"specification":"This API operation retrieves the details of a specific notification event for the user's favorited product. It allows users to see all relevant information, metadata, and status (such as delivery and read status) for a single notification, supporting individual review and audit of notification records. Works on the ai_commerce_favorites_products and ai_commerce_favorites_notifications tables with strict permission enforcement.","path":"/aiCommerce/buyer/favorites/products/{favoriteProductId}/notifications/{notificationId}","method":"get","summary":"Get detailed information about a specific notification for a user's favorited product (ai_commerce_favorites_products and ai_commerce_favorites_notifications).","description":"This operation enables a user to retrieve all available detail for a single notification event associated with one of their favorited products. Information returned includes type of notification (e.g., price drop, restock, sale), status (delivered, read), timestamp history, related product snapshot, and any contextual or business metadata.\n\nOnly the owner of the favorited product entry can access notification detail, and access is further restricted if the favorite has been deleted or revoked. The API ensures secure handling by verifying the user's rights to the favorite/notification pairing. If the notification entry is not found or does not belong to the user's favorite, an appropriate error is returned.\n\nUnderlying tables are ai_commerce_favorites_products and ai_commerce_favorites_notifications. This endpoint supports use cases such as custom notification interfaces, personal notification auditing, and user-facing notification detail screens. Access and retrieval are logged to support audit trails and system monitoring.","parameters":[{"name":"favoriteProductId","description":"The unique identifier of the favorited product to which the notification belongs.","schema":{"type":"string","format":"uuid"}},{"name":"notificationId","description":"The unique identifier of the notification event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification event information for the specified favorited product and notificationId.","typeName":"IAiCommerceFavoritesProductNotification"},"authorizationType":null,"authorizationRole":"buyer","name":"at"}],"components":{"authorization":[{"name":"buyer","description":"Standard user who can browse products, add to cart, place orders, manage account settings, apply coupons, earn mileage, leave reviews, mark favorites, and submit inquiries. Purchases goods or services as the main consumer in the marketplace.","kind":"member"},{"name":"seller","description":"Member who can register as a store operator to list, manage, and monitor products, fulfill orders, issue coupons, track performance analytics, and respond to product inquiries or reviews. Limited to their own store’s resources and analytics.","kind":"member"},{"name":"admin","description":"System administrator with global access who can manage platform-wide settings, oversee all product content, review system analytics, mediate disputes, manage user and seller accounts, monitor compliance, moderate content, handle escalations, and configure AI services.","kind":"admin"},{"name":"visitor","description":"Unauthenticated or guest user who can browse the marketplace, view selected public listings, but cannot purchase or manage user information until registered. Limited access for onboarding and initial exploration.","kind":"guest"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIAiCommerceChannel":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceChannel"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceChannelSetting":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceChannelSetting"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSection.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSection.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCategory.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCategory.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSectionTemplate.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSectionTemplate.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCategoryTemplate.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCategoryTemplate.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceBusinessRuleTemplate.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceBusinessRuleTemplate.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceAuditLogsSystem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceAuditLogsSystem"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceAnalyticsChannels":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceAnalyticsChannels"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceAttachments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceAttachments"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerOnboarding.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerOnboarding.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerKyc":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerKyc"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerProfiles":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerProfiles"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceStores.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceStores.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceStoreAnalytics.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceStoreAnalytics.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceStoreBanking.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceStoreBanking.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceStoreSetting.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceStoreSetting.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerStatusHistory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerStatusHistory"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerAppeal":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerAppeal"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSellerDispute.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSellerDispute.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProduct.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProduct.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductVariant.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductVariant.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductBundle.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductBundle.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductImage.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductImage.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductContent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductContent"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductCategoryBindings":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductCategoryBindings"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductSectionBinding":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductSectionBinding"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductSnapshot"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductAuditLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceTag.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceTag.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceTagModeration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceTagModeration"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceProductTag":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductTag"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceTrendingProduct.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceTrendingProduct.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceHighlightedProduct.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceHighlightedProduct.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSearchHistory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSearchHistory"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceRecommendationSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceRecommendationSnapshot"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSearchAnalytics":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSearchAnalytics"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCart.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCart.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartItem.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartItem.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartItemOption":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartItemOption"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartSession":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartSession"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartTemplate.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartTemplate.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartMerge.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartMerge.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCartExpiration.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartExpiration.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrder"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrder.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderItem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderItem"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceSubOrder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceSubOrder"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderStatusHistory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderStatusHistory"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderFulfillments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderFulfillments"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderAfterSales":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderAfterSales"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderCancellation":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderCancellation"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderRefund":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderRefund"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderSnapshotLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderSnapshotLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceOrderAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceOrderAuditLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePayment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePayment"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePaymentMethod":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePaymentMethod"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePaymentGateway":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePaymentGateway"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePaymentTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePaymentTransaction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceDepositAccount":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceDepositAccount"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceDepositTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceDepositTransaction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceMileageAccount":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceMileageAccount"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceMileageTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceMileageTransaction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCoupon.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCoupon.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCouponIssue.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCouponIssue.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCouponUse":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCouponUse"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceCouponAudit":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCouponAudit"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePaymentFraudEvent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePaymentFraudEvent"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommercePaymentAnalytics":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommercePaymentAnalytics"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceBulletin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceBulletin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceComment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceComment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceInquiry.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceInquiry.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceReview.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceReview.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceFavoritesInquiries.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesInquiries.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceFavoritesAddress.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesAddress.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceFavoritesFolder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesFolder.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAiCommerceFavoritesProductNotification":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesProductNotification"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IBuyer.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"The unique email address to register. Must be a valid, deliverable email address for notifications, password reset, and business identification. This field is the primary business key for login, is unique, and must not already exist in the buyer table. Per registration business logic, @see ai_commerce_buyer.email."},"password":{"type":"string","minLength":8,"maxLength":128,"description":"Plaintext password at registration (will be hashed by backend). Must meet platform security requirements for complexity and length. This field is not stored as-is, but may be subject to validation (length, complexity) by the backend. Refer to ai_commerce_buyer.password_hash for storage and hashing rules."}},"required":["email","password"],"description":"Buyer registration payload for creating a new ai_commerce_buyer. Collects only the business-essential fields: email and plaintext password for secure account setup. Corresponds to OpenAPI body for join endpoints.\n\nMaps to ai_commerce_buyer table: unique email enforced by DB, password is hashed before storage. Never allow direct password hash entry here.\n\nThis DTO intentionally excludes any authentication/authorization or actor ID fields, as those are handled elsewhere by platform security."},"IAiCommerceBuyer.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique identifier of the buyer account, matching ai_commerce_buyer.id."},"email":{"type":"string","format":"email","description":"Buyer's registered email address (business/public). Used for notifications, receipt, and identity confirmation. Only shown in safe contexts; never reveal hash or sensitive credential info."},"role":{"const":"buyer","description":"Discriminator for role type. Always 'buyer' for this entity/context."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"},"buyer":{"$ref":"#/components/schemas/IAiCommerceBuyer","description":"Non-sensitive buyer context for session setup, suitable for frontend or downstream use. Only public/user-facing fields are included."}},"required":["id","email","role","token"],"description":"Authorization response for buyer authentication operations (login/join/refresh). Contains buyer id, JWT tokens (access/refresh), and minimal buyer context for session setup. Corresponds to OpenAPI response for buyer auth endpoints. Follows security best practice by including only non-sensitive information."},"IBuyer.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Buyer account email used for login. Must match the unique key in ai_commerce_buyer. Required for credential authentication."},"password":{"type":"string","minLength":8,"maxLength":128,"description":"Plain password submitted at login (not password hash). Will be compared after hashing on backend. Must meet password complexity policy."}},"required":["email","password"],"description":"Buyer login credentials submitted to authenticate a session. Maps to ai_commerce_buyer fields. Excludes password hash or any internal fields. Only supports business fields needed for standard email+password login."},"IBuyer.IRefresh":{"type":"object","properties":{"refreshToken":{"type":"string","minLength":1,"description":"Refresh token string issued at login/join; used to obtain new access/refresh tokens when the current session expires. Must match the format and scheme expected by backend. See ai_commerce_user_authentications and platform authentication."}},"required":["refreshToken"],"description":"Refresh token request body for buyer authentication flows. Contains only the refresh token previously issued, used for session extension or renewal. No authentication ID fields included - those are extracted from the token or platform context."},"IAiCommerceSeller.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Unique email address for seller to register. Must be unused in ai_commerce_buyer and ai_commerce_seller. All new sellers provisioned via join must supply email for login and business communications."},"password":{"type":"string","minLength":8,"maxLength":128,"description":"Plaintext password for seller registration; must be hashed for storage. Business logic must validate complexity and reject weakened/short passwords at onboarding. Never supply hash here."}},"required":["email","password"],"description":"Seller join/registration payload, as POSTed to seller onboarding/join endpoint. Collects business-critical registration fields. Corresponds to ai_commerce_seller onboarding logic. Excludes role/actor IDs and system-generated keys."},"IAiCommerceBuyer":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique database identifier for buyer. Corresponds to ai_commerce_buyer.id. For public/response use only."},"email":{"type":"string","format":"email","description":"Buyer's registered email address (business/public). Used for notifications, receipt, and identity confirmation. Only shown in safe contexts; never reveal hash or sensitive credential info."},"role":{"const":"buyer","description":"Discriminator for role type. Always 'buyer' for this entity/context."}},"required":["id","email","role"],"description":"Buyer type (public context for response/session). Only includes business-safe fields for client or frontend session state. No hashes, credentials, or sensitive backend attributes. Usage: IAuthorized response."},"IAiCommerceSeller.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for seller login. Must match email in ai_commerce_buyer and be linked as a seller account."},"password":{"type":"string","description":"Plaintext password for login. Will be checked against stored password_hash; must not be empty."}},"required":["email","password"],"description":"Payload for seller login authentication. Used for logging in as seller only."},"IAiCommerceSeller.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Seller's unique ID (UUID, ai_commerce_seller.id)."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"],"description":"Seller authorization response: contains unique seller id and issued JWT token with claims for seller role."},"IAiCommerceAdmin.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for platform admin registration; must not collide with existing admin emails."},"password":{"type":"string","description":"Plain password string for registration. To be hashed securely at storage."},"status":{"type":"string","description":"Initial account status for the admin, such as 'active', 'suspended', 'pending'. Must match allowed values in business rules."}},"required":["email","password","status"],"description":"Payload for secure admin registration. Only for internal/platform use, not for public endpoints."},"IAiCommerceAdmin.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Admin user's unique ID (UUID, ai_commerce_admin.id)."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"],"description":"Admin authorization response payload; includes admin identifier and JWT tokens with necessary role claims."},"IAiCommerceAdmin.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email used for admin login (must match ai_commerce_admin.email)."},"password":{"type":"string","description":"Plaintext password for admin login (checked against password_hash on file)."}},"required":["email","password"],"description":"Payload to login as an admin account, supplying unique email and matching password."},"IAiCommerceAdmin.IRefresh":{"type":"object","properties":{"refreshToken":{"type":"string","description":"The refresh token to renew the session. This will be validated against session data."}},"required":["refreshToken"],"description":"Payload for admin session token refresh. Includes required refresh token."},"IAiCommerceVisitorJoin.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for visitor to register as a new member."},"password":{"type":"string","description":"The plain-text password to register. Must meet platform password policy."},"consent":{"type":"boolean","description":"Boolean flag for agreement/consent to terms of service and privacy policies. Required in most regulatory contexts."},"trackingId":{"oneOf":[{"type":"string","description":"Device or tracking ID for the visitor for onboarding/session merging."},{"type":"null"}],"description":"Optional. Device or tracking ID for the visitor for onboarding/session merging."}},"required":["email","password","consent"],"description":"Request body to register a guest (visitor) as a new member, including consent and optional device/session context."},"IAiCommerceVisitor.IAuthorized":{"type":"object","properties":{"visitorId":{"type":"string","format":"uuid","description":"Unique identifier for the authorized visitor session (UUID)."},"accessToken":{"type":"string","description":"JWT access token for temporary member/visitor usage."},"refreshToken":{"type":"string","description":"JWT refresh token for session renewal."},"status":{"type":"string","description":"The current status of the visitor session (e.g., 'active', 'converted', 'expired')."},"expiresAt":{"oneOf":[{"type":"string","format":"date-time","description":"Expiry or onboarding status for evidence/compliance."},{"type":"null"}],"description":"Optional. Expiry or onboarding status for evidence/compliance."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["visitorId","accessToken","refreshToken","status","token"],"description":"Response body for an authorized visitor session, including all issued tokens and session context."},"IAiCommerceVisitorRefresh.ICreate":{"type":"object","properties":{"refreshToken":{"type":"string","description":"The visitor's refresh token. Must match an active session."},"visitorId":{"type":"string","format":"uuid","description":"The visitor ID to validate the refresh context (UUID)."}},"required":["refreshToken","visitorId"],"description":"Request body to refresh a visitor (guest) session. Requires refresh token and visitor UUID."},"IAiCommerceChannel.IRequest":{"type":"object","properties":{"isActive":{"type":"boolean","description":"Optional. Filter by activation status (true for active, false for inactive)."},"businessStatus":{"type":"string","description":"Optional. Filter by business workflow status (e.g., 'normal', 'archived', 'pending audit')."},"name":{"type":"string","description":"Optional. Filter by channel name (case-insensitive, partial)."},"locale":{"type":"string","description":"Optional. Filter by default locale string (e.g., 'ko-KR', 'en-US')."},"page":{"type":"integer","minimum":1,"description":"Optional. Pagination: page number (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Optional. Pagination: page size (limit of records per page)."},"sortBy":{"type":"string","description":"Optional. Sorting field (e.g., 'name', 'created_at')."},"sortDirection":{"oneOf":[{"const":"asc","description":"Optional. Direction for sorting: 'asc' or 'desc'."},{"const":"desc","description":"Optional. Direction for sorting: 'asc' or 'desc'."}],"description":"Optional. Direction for sorting: 'asc' or 'desc'."}},"description":"Filter/parameters for admin channel list search. Supports business status, activation, locale, name, and advanced paging.","required":[]},"IAiCommerceChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the sales channel record as a UUID primary key, aligning with the schema. Provided automatically by the system on creation."},"code":{"type":"string","description":"Unique, immutable code for business reference for this channel. Used for system integration, cannot be changed after creation. @unique within ai_commerce_channels table."},"name":{"type":"string","description":"Human-readable channel name, e.g., 'Korea Main Portal' for UI display and admin reference."},"locale":{"type":"string","description":"Default IETF locale for the channel, such as 'ko-KR' or 'en-US'. Sets language/formatting rules and is indexed for quick lookup."},"is_active":{"type":"boolean","description":"Indicates if the channel is active and available for regular business/commerce operations. Controls system routing and access at the channel level."},"business_status":{"type":"string","description":"Business workflow status, e.g., 'normal', 'pending audit', or 'archived'. Used for workflow logic, admin review, and analytics segmentation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the channel was created, in ISO 8601 format. Populated automatically."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to the channel, in ISO 8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. If null/absent, the channel is active; if set, the channel is logically removed for compliance and analytics."},{"type":"null"}],"description":"Soft delete timestamp or null if the channel is active."}},"required":["id","code","name","locale","is_active","business_status","created_at","updated_at"],"description":"Sales channel configuration entity for the AI commerce platform. Each object represents a distinct sales/outlet channel such as web, app, or partner portal. Tightly coupled to schema ai_commerce_channels. Used for advanced channel management, onboarding, and analytics."},"IAiCommerceChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code (business key) assigned to the sales channel. Required. Used for system integration and is immutable."},"name":{"type":"string","description":"Channel name for display and reference. Required for registration and analytics."},"locale":{"type":"string","description":"Locale/language/country code in IETF format, such as 'ko-KR' or 'en-US'. Required for channel configuration."},"is_active":{"type":"boolean","description":"Initial activation flag; if true, the channel is live after creation."},"business_status":{"type":"string","description":"Initial business workflow status for this channel, e.g., 'pending audit', 'normal', 'archived'. Controls platform workflow and analytics segmentation."}},"required":["code","name","locale","is_active","business_status"],"description":"Request schema for creating a new AI commerce sales channel. All required fields must be provided to satisfy database and platform constraints. Maps directly to ai_commerce_channels fields."},"IAiCommerceChannel.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Updated display name for the channel. Optional."},"locale":{"type":"string","description":"Updated locale string in IETF format, such as 'ko-KR', if channel language changes. Optional."},"is_active":{"type":"boolean","description":"Update flag to activate or deactivate the channel. Optional."},"business_status":{"type":"string","description":"Update business workflow status for channel logic (e.g., 'pending', 'archived'). Optional."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the channel update, auto-generated if not set. Optional."}},"required":[],"description":"Schema for updating properties of an existing sales channel. Supports partial updates for business operations and compliance. Only mutable fields per schema ai_commerce_channels may be included."},"IAiCommerceChannelSetting.IRequest":{"type":"object","properties":{"key":{"type":"string","description":"(Optional) Filter settings by configuration key name (supports partial match)."},"value":{"type":"string","description":"(Optional) Filter settings by their value (supports partial match, can be serialized blobs)."},"status":{"type":"string","description":"(Optional) Business status of the setting for filtering (such as 'active', 'archived')."},"sort":{"type":"string","description":"(Optional) Sort criteria for ordering (e.g., 'created_at desc', 'key asc')."},"page":{"type":"integer","description":"(Optional) Paging page number (1-based). Returns corresponding slice of the settings list. Must be a positive integer if set."},"limit":{"type":"integer","description":"(Optional) Maximum number of results per page. Used in conjunction with 'page' for pagination. Must be a positive integer if set."}},"required":[],"description":"Request body schema for searching/paginating channel settings. Supports advanced filtering by configuration key, value, business status, paging, and sort order. Used in administrative channel settings dashboards and analytics."},"IAiCommerceChannelSetting":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key, unique per channel setting row. Used systemwide for edit, update, and traceability."},"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"Foreign key: the parent channel to which this setting belongs. Must match a valid IAiCommerceChannel.id."},"key":{"type":"string","description":"The configuration key for this setting (e.g., 'theme_color', 'feature_discount_enabled'). Unique within the channel."},"value":{"type":"string","description":"The setting value, which may be text, a serialized object/JSON, or numeric string."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of setting creation, in ISO 8601 format. Populated automatically."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp. Changes in value or key are reflected here."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Channel setting is logically removed for compliance and workflow."},{"type":"null"}],"description":"Soft delete timestamp (null if active, set if logically deleted)."}},"required":["id","ai_commerce_channel_id","key","value","created_at","updated_at"],"description":"Channel setting entity associated with an AI commerce channel. Maps directly to ai_commerce_channel_settings in the database. Stores per-channel configuration and advanced business metadata for dynamic system configuration."},"IAiCommerceChannelSetting.ICreate":{"type":"object","properties":{"key":{"type":"string","description":"The configuration key name (e.g., 'feature_discount_enabled', 'theme_color'). Must be unique within the channel."},"value":{"type":"string","description":"The value for configuration key. Can be text, URI, or JSON-serialized settings (depending on business logic)."}},"required":["key","value"],"description":"Schema for creating a new configuration setting for a channel. 'key' must be unique for the given channel. 'value' is the configuration content."},"IAiCommerceChannelSetting.IUpdate":{"type":"object","properties":{"key":{"type":"string","description":"Optionally update the configuration key."},"value":{"type":"string","description":"Optionally update the configuration value."}},"required":[],"description":"Schema for updating an existing configuration setting. At least one of 'key' or 'value' should be provided."},"IAiCommerceSection.IRequest":{"type":"object","properties":{"search":{"type":"string","description":"Optional full-text search or query string for narrowing section results."},"is_active":{"type":"boolean","description":"Filter by active/inactive sections."},"business_status":{"type":"string","description":"Filter by business workflow status for section search."},"sort_by":{"type":"string","description":"Sort key for the returned list."},"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Limit of records per page."}},"required":[],"description":"Parameters for filtering, searching, and pagination of section entities for list/search operations. All fields optional and suitable for API search endpoints."},"IAiCommerceSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID primary key for the section."},"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"UUID of the channel to which the section belongs."},"code":{"type":"string","description":"Unique code for section within a channel."},"name":{"type":"string","description":"The display name for this section."},"is_active":{"type":"boolean","description":"If true, this section is currently active/visible in the channel."},"business_status":{"type":"string","description":"Business workflow status (e.g., 'normal', 'archived', 'pending')."},"sort_order":{"type":"integer","description":"Display order value for this section."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of section creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of last section update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal, or null if section is active."}},"required":["id","ai_commerce_channel_id","code","name","is_active","business_status","sort_order","created_at","updated_at"],"description":"Object entity for a merchandising or discovery section in a sales channel, matching ai_commerce_sections Prisma model."},"IAiCommerceSection.ICreate":{"type":"object","properties":{"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"UUID of the parent channel for this section (FK)."},"code":{"type":"string","description":"Unique code for the section within the parent channel."},"name":{"type":"string","description":"Section display name."},"is_active":{"type":"boolean","description":"Whether section is initially active/visible."},"business_status":{"type":"string","description":"Initial workflow status (e.g., 'normal', 'pending', 'archived')."},"sort_order":{"type":"integer","description":"Display order index for the new section."}},"required":["ai_commerce_channel_id","code","name","is_active","business_status","sort_order"],"description":"Request type for creating a new section within a channel. All fields are required as per schema."},"IAiCommerceSection.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"New display name for the section, if changing."},"is_active":{"type":"boolean","description":"Update section visibility or business status."},"business_status":{"type":"string","description":"Workflow/business state override if updating."},"sort_order":{"type":"integer","description":"Update the display order of this section."}},"required":[],"description":"Request body type for updating an existing section. All fields are optional (Partial), with updates applied only to those supplied. Follows business rules for allowed field changes based on ai_commerce_sections schema."},"IAiCommerceCategory.IRequest":{"type":"object","properties":{"search":{"type":"string","description":"Partial/full text search for category name/code filtering"},"is_active":{"type":"boolean","description":"Filter for only active/inactive categories."},"business_status":{"type":"string","description":"Filter by business/workflow status"},"parent_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Parent category filter"},"depth":{"type":"integer","description":"Limit/filter by maximum category depth returned"},"sort_by":{"type":"string","description":"Sort key for category list, e.g., 'sort_order', 'name'"},"page":{"type":"integer","description":"Page number for pagination"},"limit":{"type":"integer","description":"Maximum records per page"}},"required":[],"description":"Filtering, search, and pagination query parameters for listing categories. All fields optional by design."},"IAiCommerceCategory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the category."},"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"FK to ai_commerce_channels.id. Channel to which this category belongs."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional self-reference to parent category. Null/top-level categories have no parent_id."},{"type":"null"}],"description":"Parent category for hierarchy. Null for root categories."},"code":{"type":"string","description":"Unique category code per channel, used for internal mapping and merchandising logic. Channel-scoped uniqueness enforced by schema."},"name":{"type":"string","description":"Display name for the category (e.g., 'Accessories')."},"level":{"type":"integer","description":"Hierarchy depth level (0 for root/top-level)."},"sort_order":{"type":"integer","description":"Order within siblings for display purposes."},"is_active":{"type":"boolean","description":"Indicates whether the category is active/visible in the channel."},"business_status":{"type":"string","description":"Current business or workflow status."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the category was created (ISO8601 in UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the category was last updated (ISO8601 in UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete: timestamp when the category was logically removed or archived."},{"type":"null"}],"description":"Soft delete timestamp. Null if category is active."}},"required":["id","ai_commerce_channel_id","code","name","level","sort_order","is_active","business_status","created_at","updated_at"],"description":"Represents a hierarchical product catalog category. Includes channel reference, code, name, display order, hierarchical parent, status, audit, and deletion markers. Used throughout merchandising, filtering, and discovery logic."},"IAiCommerceCategory.ICreate":{"type":"object","properties":{"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"Channel for which the category is being created. Foreign key to ai_commerce_channels.id. Required and must reference a valid, existing channel."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional reference to parent category. Required for non-root categories; null/top-level categories have no parent_id."},{"type":"null"}],"description":"Parent category for hierarchy. Null for root categories."},"code":{"type":"string","description":"Unique, required category code within channel. Used for category identification, mapping, and system logic."},"name":{"type":"string","description":"Display name for this category. Required and must be unique within parent context."},"level":{"type":"integer","description":"Hierarchy depth (root=0, child >0). Required and validated by business logic."},"sort_order":{"type":"integer","description":"Display order among sibling categories (ascending)."},"is_active":{"type":"boolean","description":"Indicates if the category is currently active/visible."},"business_status":{"type":"string","description":"Initial workflow or business status for the category (e.g., 'active', 'pending', 'archived')."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the category (ISO8601 UTC format)."},"updated_at":{"type":"string","format":"date-time","description":"Initialization timestamp for category modification (ISO8601 UTC format)."}},"required":["ai_commerce_channel_id","code","name","level","sort_order","is_active","business_status","created_at","updated_at"],"description":"Create DTO for new category row in ai_commerce_categories. All required fields must be present and valid per database constraints."},"IAiCommerceCategory.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Change the display name for this category"},"level":{"type":"integer","description":"Update hierarchy level, e.g., during tree restructuring (rare)"},"sort_order":{"type":"integer","description":"New display order among siblings."},"is_active":{"type":"boolean","description":"Modify activation status"},"business_status":{"type":"string","description":"Update workflow/business status"},"parent_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Change parent category (for reorganization)"}},"required":[],"description":"Request type for updating category metadata or structure in ai_commerce_categories. All fields optional, following business logic on allowed edits and tree integrity."},"IAiCommerceSectionTemplate.IRequest":{"type":"object","properties":{"search":{"type":"string","description":"Keyword/full-text search through template code/name"},"is_default":{"type":"boolean","description":"Filter results to (non-)default templates"},"business_status":{"type":"string","description":"Filter by workflow/status"},"sort_by":{"type":"string","description":"Sort key for returned results"},"page":{"type":"integer","description":"Pagination page"},"limit":{"type":"integer","description":"Page size for returned records"}},"required":[],"description":"Filtering/search/pagination parameters for list/search of section templates. All properties optional."},"IAiCommerceSectionTemplate":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the section template."},"code":{"type":"string","description":"Unique code for the section template."},"name":{"type":"string","description":"Human-readable name of the section template."},"template_data":{"type":"string","description":"Serialized configuration data (e.g., JSON) for the section template."},"is_default":{"type":"boolean","description":"Indicates if this section template is the default."},"business_status":{"type":"string","description":"Current business or workflow status for the section template."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the section template was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to the section template."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of soft deletion if applicable."},{"type":"null"}],"description":"Timestamp of soft deletion if applicable."}},"required":["id","code","name","template_data","is_default","business_status","created_at","updated_at"],"description":"Represents a reusable section template for merchandising or business channel setup. Follows the structure of ai_commerce_section_templates with detailed configuration and audit fields."},"IAiCommerceSectionTemplate.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code for identifying the section template. Must be unique system-wide."},"name":{"type":"string","description":"Human-readable name for this section template."},"template_data":{"type":"string","description":"Serialized configuration or rules of the template (typically JSON or similar)."},"is_default":{"type":"boolean","description":"Whether this template is the system default for rapid section creation."},"business_status":{"type":"string","description":"Business/workflow status (active, archived, under_review, etc.)."}},"required":["code","name","template_data","is_default","business_status"],"description":"Request type for creating a new section template. Matches required columns in ai_commerce_section_templates and enforces uniqueness for code."},"IAiCommerceSectionTemplate.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Update display name for this template"},"template_data":{"type":"string","description":"Update configuration JSON blob"},"is_default":{"type":"boolean","description":"Set/unset as default template."},"business_status":{"type":"string","description":"Override business workflow/status value"}},"required":[],"description":"Update type for modifying section template fields. All fields optional (Partial), for PATCH/PUT update API."},"IAiCommerceCategoryTemplate.IRequest":{"type":"object","properties":{"search":{"type":"string","description":"Keyword/name/code search among templates"},"is_default":{"type":"boolean","description":"Filter only default templates or exclude them"},"business_status":{"type":"string","description":"Filter by template approval/workflow status"},"sort_by":{"type":"string","description":"Sort field for list, e.g., 'created_at'"},"page":{"type":"integer","description":"Pagination: page number"},"limit":{"type":"integer","description":"Records per page"}},"required":[],"description":"Filtering, search, and pagination parameters for category template list endpoints; all fields optional, suitable for PATCH/POST request filtering."},"IAiCommerceCategoryTemplate":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the category template (UUID primary key). As specified in the Prisma schema, this uniquely distinguishes each template."},"code":{"type":"string","description":"Unique template code for reference and import/export operations, e.g., 'ELECTRONICS_DEFAULT'. Must be unique within the table."},"name":{"type":"string","description":"Human-readable name of the template, used in UI and management operations (e.g., 'Electronics Default', 'Fashion Segments')."},"template_data":{"type":"string","description":"Serialized configuration data representing the category tree structure, typically as a JSON blob. This field allows rapid onboarding or migration between environments."},"is_default":{"type":"boolean","description":"True if this template is the system default for new category setups. Used as a business flag for template selection."},"business_status":{"type":"string","description":"Operational workflow or approval status of the template, e.g., 'active', 'archived', 'pending'."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the template was created, in ISO 8601 date-time format. Required for audit and regulatory purposes."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for this template, in ISO 8601 date-time format. Required for synchronization, audit, and troubleshooting."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete for logical removal; null if active. Populated when the template is retired or flagged for compliance, retained for historical/audit reasons per business rules."}},"required":["id","code","name","template_data","is_default","business_status","created_at","updated_at"],"description":"Full persistent record for a category template as designed in ai_commerce_category_templates.\n\nThis schema corresponds exactly to the table's columns in Prisma and describes reusable blueprints for category tree structures in AI Commerce. Includes all audit/compliance fields with strong business documentation for each property."},"IAiCommerceCategoryTemplate.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code for the new category template. Must not conflict with existing template codes."},"name":{"type":"string","description":"Human-readable template name for display and selection."},"template_data":{"type":"string","description":"Serialized JSON string that defines the full category tree. Must conform to system data format, typically validated for business requirements at creation."},"is_default":{"type":"boolean","description":"If true, this template will be set as default for new channel/category setups. Only one template per business context can be 'default'."},"business_status":{"type":"string","description":"Business workflow status for the template, e.g., 'active', 'pending', or custom admin settings."}},"required":["code","name","template_data","business_status"],"description":"Request schema for creating a new category template.\n\nRepresents the input form for admins to create a new reusable template, as per the ai_commerce_category_templates model documentation. All required properties are strictly enforced. Optional 'is_default' may be omitted (system can default to false if not given)."},"IAiCommerceCategoryTemplate.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Change template display name"},"template_data":{"type":"string","description":"Update the template serialized config"},"is_default":{"type":"boolean","description":"Set/unset default template"},"business_status":{"type":"string","description":"Update workflow status"}},"required":[],"description":"Update type for PATCH/PUT operations on category templates; all fields optional (Partial)."},"IAiCommerceBusinessRuleTemplate.IRequest":{"type":"object","properties":{"search":{"type":"string","description":"Full-text/keyword search through code/name data fields"},"business_status":{"type":"string","description":"Filter by workflow/approval status"},"sort_by":{"type":"string","description":"Field to sort search results, such as 'updated_at'"},"page":{"type":"integer","description":"Pagination start page"},"limit":{"type":"integer","description":"Records returned per page"}},"required":[],"description":"Parameters for list/search of business rule template records, supporting advanced search, filter and paging; all optional."},"IAiCommerceBusinessRuleTemplate":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the business rule template (UUID), mapped from ai_commerce_business_rule_templates.id."},"code":{"type":"string","description":"Unique business rule template code for reference, automation, and migration."},"name":{"type":"string","description":"Template display name, used in selection and admin dialogs."},"version":{"type":"integer","description":"Semantic version number (whole integer) for tracking rule template revisions across business and compliance cycles."},"template_data":{"type":"string","description":"Serialized business rule or configuration data. Must conform to the platform's rule DSL, JSON, or YAML conventions."},"business_status":{"type":"string","description":"Current workflow/business status ('active', 'retired', 'archived', etc.), critical for automation and admin workflow."},"created_at":{"type":"string","format":"date-time","description":"When this template was first authored (ISO 8601 date-time string)."},"updated_at":{"type":"string","format":"date-time","description":"Most recent business/technical update to the template (ISO 8601 date-time string)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, or null if active. All deleted templates are retained for evidence, migration, and compliance per system rules."}},"required":["id","code","name","version","template_data","business_status","created_at","updated_at"],"description":"Persistent entity for system business rule templates.\n\nRepresents a complete business rule template as persisted in ai_commerce_business_rule_templates. Critical to platform automation/approval/migration. All attributes strictly conform to business schema requirements and system documentation for auditability."},"IAiCommerceBusinessRuleTemplates.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Business rule template code (unique within version)."},"name":{"type":"string","description":"Display name of the template."},"version":{"type":"integer","description":"Semantic version number for rule template iteration."},"template_data":{"type":"string","description":"Serialized rules in config format (JSON/YAML/business rule DSL)."},"business_status":{"type":"string","description":"Workflow status for business operations (e.g., 'active', 'retired', etc.)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when this rule template was first authored."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when rule was most recently updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal; null if active."}},"required":["code","name","version","template_data","business_status","created_at","updated_at"],"description":"Request body for creating a new business rule template, matching ai_commerce_business_rule_templates table. Includes unique business rule code, template data as string, and version."},"IAiCommerceBusinessRuleTemplates":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key (UUID)."},"code":{"type":"string","description":"Business rule template code (unique within version)."},"name":{"type":"string","description":"Display name of the template."},"version":{"type":"integer","description":"Semantic version number for rule template iteration."},"template_data":{"type":"string","description":"Serialized rules/config (JSON/YAML/business rule DSL)."},"business_status":{"type":"string","description":"Operational workflow status ('active', 'retired', etc.)."},"created_at":{"type":"string","format":"date-time","description":"Template creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal; null if active."}},"required":["id","code","name","version","template_data","business_status","created_at","updated_at"],"description":"Response or entity structure for business rule templates. Maps to ai_commerce_business_rule_templates in database."},"IAiCommerceBusinessRuleTemplates.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Display name change."},"version":{"type":"integer","description":"Semantic version number increment."},"template_data":{"type":"string","description":"Serialized updated rules/config (JSON/YAML/business rule DSL)."},"business_status":{"type":"string","description":"Operational workflow status after update."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when update occurred."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal; null if still active."}},"required":[],"description":"Request body for updating an existing business rule template. All properties are optional and only those supplied will be patched."},"IAiCommerceAuditLogsSystem.IRequest":{"type":"object","properties":{"event_type":{"type":"string","description":"Type of event or action (e.g., 'CREATE_CHANNEL', 'EDIT_CATEGORY')."},"actor_id":{"type":"string","description":"UUID of the user, admin, or automated actor who performed the action."},"target_table":{"type":"string","description":"Name of the table (entity) in which the audited event occurred."},"target_id":{"type":"string","description":"UUID of the affected record in the target table."},"created_at_from":{"type":"string","format":"date-time","description":"Filter logs after this datetime."},"created_at_to":{"type":"string","format":"date-time","description":"Filter logs before this datetime."},"page":{"type":"integer","description":"Page for pagination."},"limit":{"type":"integer","description":"Number of results per page."},"sort_by":{"type":"string","description":"Field to sort by (e.g., 'created_at')."},"sort_dir":{"oneOf":[{"const":"asc","description":"Sort direction (asc/desc)."},{"const":"desc","description":"Sort direction (asc/desc)."}],"description":"Sort direction (asc/desc)."}},"required":[],"description":"Parameters for searching/filtering audit logs of system configuration events."},"IAiCommerceAuditLogsSystem":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key (UUID)."},"event_type":{"type":"string","description":"Type of event or action (e.g., 'CREATE_CHANNEL', 'EDIT_CATEGORY')."},"actor_id":{"type":"string","description":"UUID of the user/admin/automation that performed the action."},"target_table":{"type":"string","description":"Name of the target table/entity."},"target_id":{"type":"string","description":"UUID of the affected record in the table."},"before":{"type":"string","description":"JSON snapshot of the entity's state before the change/event (nullable)."},"after":{"type":"string","description":"JSON snapshot of the entity's state after the change/event (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the audit log was written."}},"required":["id","event_type","actor_id","target_table","target_id","created_at"],"description":"Entity/response structure for audit logs on system configuration actions (CREATE, UPDATE, DELETE, etc.)"},"IAiCommerceAnalyticsChannels.IRequest":{"type":"object","properties":{"stat_date_from":{"type":"string","format":"date-time","description":"Inclusive start date for analytics aggregation period filter (ISO 8601). Optional."},"stat_date_to":{"type":"string","format":"date-time","description":"Inclusive end date for analytics aggregation period filter (ISO 8601). Optional."},"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"Filter by sales channel unique identifier. Optional."},"min_total_orders":{"type":"integer","description":"Minimum value for total_orders metric (filter). Optional."},"max_total_orders":{"type":"integer","description":"Maximum value for total_orders metric (filter). Optional."},"min_total_sales":{"type":"number","description":"Minimum value for total_sales metric (filter). Optional."},"max_total_sales":{"type":"number","description":"Maximum value for total_sales metric (filter). Optional."},"min_total_buyers":{"type":"integer","description":"Minimum value for total_buyers metric (filter). Optional."},"max_total_buyers":{"type":"integer","description":"Maximum value for total_buyers metric (filter). Optional."},"sort_by":{"oneOf":[{"const":"stat_date","description":"Field for sorting the results. Optional."},{"const":"total_orders","description":"Field for sorting the results. Optional."},{"const":"total_sales","description":"Field for sorting the results. Optional."},{"const":"total_buyers","description":"Field for sorting the results. Optional."}],"description":"Field for sorting the results. Optional."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction (ascending or descending, default desc). Optional."},{"const":"desc","description":"Sort direction (ascending or descending, default desc). Optional."}],"description":"Sort direction (ascending or descending, default desc). Optional."},"page":{"type":"integer","description":"Pagination: page number for result set. Optional."},"limit":{"type":"integer","description":"Pagination: page size or limit per response. Optional."}},"required":[],"description":"Request filter and pagination options for analytics channel summary search, supporting date range and KPI constraints."},"IAiCommerceAnalyticsChannels":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the analytics summary record, referencing ai_commerce_analytics_channels.id."},"ai_commerce_channel_id":{"type":"string","format":"uuid","description":"Sales channel unique identifier, referencing ai_commerce_channels.id."},"stat_date":{"type":"string","format":"date-time","description":"Analytics snapshot/aggregation date (ISO 8601, typically midnight of period)."},"total_orders":{"type":"integer","description":"Total number of orders placed on the channel for the analytics/stat period."},"total_sales":{"type":"number","description":"Total sales amount for the reporting window/channel."},"total_buyers":{"type":"integer","description":"Total count of unique buyers in the reporting window/channel."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of analytics record creation (ISO 8601)."}},"required":["id","ai_commerce_channel_id","stat_date","total_orders","total_sales","total_buyers","created_at"],"description":"Aggregated channel analytics summary (ai_commerce_analytics_channels), as used in admin dashboards and reporting. Includes key KPIs and snapshot period information."},"IAiCommerceAttachments.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"ID of uploaded file owner (buyer, seller, admin, etc). Optional."},"business_type":{"type":"string","description":"Attachment business context/category for filtering (e.g., product_image, evidence, bulletin_attachment). Optional."},"filename_like":{"type":"string","description":"Case-insensitive partial match on filename for search. Optional."},"status":{"type":"string","description":"Attachment status for compliance filtering (e.g., active, quarantined, deleted). Optional."},"created_at_from":{"type":"string","format":"date-time","description":"Inclusive start time (ISO8601) for created_at range query. Optional."},"created_at_to":{"type":"string","format":"date-time","description":"Inclusive end time (ISO8601) for created_at range query. Optional."},"page":{"type":"integer","description":"Pagination parameter: page number (starting at 1, default 1). Optional."},"limit":{"type":"integer","description":"Pagination parameter: items per page (default 20, optional)."}},"required":[],"description":"Request filter and pagination criteria for attachment business query (ai_commerce_attachments), supporting advanced search for admin compliance and evidence use cases."},"IAiCommerceAttachment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the attachment object (ai_commerce_attachments.id)."},"user_id":{"type":"string","format":"uuid","description":"ID of the user account (buyer/seller/admin) that owns this attachment."},"filename":{"type":"string","description":"Original filename at time of upload."},"business_type":{"type":"string","description":"Attachment category or business context (e.g., product_image, notification_attachment)."},"status":{"type":"string","description":"Attachment state: allowed values typically include 'active', 'quarantined', 'deleted', or business-specific options."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for creation of the attachment record (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to the attachment metadata (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the attachment was soft deleted (ISO 8601) or null if still present."}},"required":["id","user_id","filename","business_type","status","created_at","updated_at"],"description":"Single attachment entity metadata record for file/evidence/asset, as used in admin/owner views. Matches ai_commerce_attachments core columns and state, and forms basis for file management and audit in compliance flows."},"IAiCommerceAttachment.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"ID of file owner (uploader), required for attachment creation and audit."},"filename":{"type":"string","description":"Original filename of the uploaded asset."},"business_type":{"type":"string","description":"Business category for the attachment (e.g., product_image, evidence, notification_attachment); determines platform usage/rules."}},"required":["user_id","filename","business_type"],"description":"Request body for creating/uploading a new file attachment to the commerce platform; does not include upload binary, only attachment metadata."},"IAiCommerceAttachment.IUpdate":{"type":"object","properties":{"filename":{"type":"string","description":"Optional. New filename for the attachment.\n\nThis property allows the file to be renamed for business purposes or clarity. The value must be a valid filename, excluding forbidden characters as defined by underlying storage constraints."},"business_type":{"type":"string","description":"Optional. Updated business type for the attachment (e.g., favorite_screenshot, notification_attachment).\n\nRefers to the organizational or application context in which the file is used. This may impact downstream business logic, attachment filtering, or evidence gathering."},"status":{"type":"string","description":"Optional. Updated status for the attachment (e.g., active, quarantined, deleted).\n\nPossible values are defined by business rules and may include 'active', 'quarantined', and 'deleted'. The status field is essential for compliance and file workflow control."}},"required":[],"description":"Request for updating attachment metadata for an existing attachment in ai_commerce_attachments.\n\nAny combination of filename, business type, and status may be provided. At least one field must be present to affect a change."},"IAiCommerceSellerOnboarding.IRequest":{"type":"object","properties":{"onboarding_status":{"type":"string","description":"Optional. Filter onboarding cases by their status (e.g., draft, submitted, reviewing, approved, rejected, escalated).\n\nIf provided, limits results to seller onboarding records with the specified workflow state."},"created_at_from":{"type":"string","format":"date-time","description":"Optional. Include records created after this time (ISO8601 timestamp).\n\nUseful for filtering applications submitted in a certain period."},"created_at_to":{"type":"string","format":"date-time","description":"Optional. Include records created before this time (ISO8601 timestamp).\n\nPaired with created_at_from, allows querying by date range."},"user_id":{"type":"string","description":"Optional. Restrict listing to a particular user (onboarding applicant's user_id).\n\nIf present, only records belonging to this user are returned."},"store_id":{"type":"string","description":"Optional. Filter applications associated with a given store ID.\n\nRestricts results to onboarding cases for this store, typically for administrative review."},"search":{"type":"string","description":"Optional. Full-text search filter for application_data or associated metadata.\n\nClients may use this to search for key terms or identifiers in application data blobs."},"page":{"type":"integer","format":"int32","description":"Pagination: page number to return (starts at 1).\n\nDefaults to 1 if omitted."},"limit":{"type":"integer","format":"int32","description":"Pagination: maximum records per page.\n\nTypical defaults are platform-configured values (such as 20, 50, 100)."}},"required":[],"description":"Request for paginated search or filtering of seller onboarding applications in ai_commerce_seller_onboarding table.\n\nAll fields are optional; any combination may be provided to tune list results."},"IAiCommerceSellerOnboarding":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique business UUID for the onboarding application record."},"user_id":{"type":"string","format":"uuid","description":"UUID (pk) of the user in ai_commerce_user_authentications applying for seller onboarding."},"store_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the store being created/linked by this onboarding, if present.\n\nThis field is nullable; onboarding may not have an associated store until the process is complete."},{"type":"null"}],"description":"UUID of the store being created/linked by this onboarding, if present.\n\nThis field is nullable; onboarding may not have an associated store until the process is complete."},"application_data":{"type":"string","description":"JSON-encoded string containing all onboarding application data, disclosures, and uploaded evidence documents.\n\nServes as a flexible blob field supporting arbitrary business input, documents, and compliance evidence."},"onboarding_status":{"type":"string","description":"Workflow status of the onboarding case (e.g., draft, submitted, reviewing, approved, rejected, escalated).\n\nRequired by the business process to track where the onboarding stands."},"current_stage":{"type":"string","description":"Current onboarding stage (e.g., identity_verification, business_submission, bank_verification).\n\nNullable; present only when staging is implemented for tracking user progress."},"notes":{"type":"string","description":"Business or admin notes for compliance findings, workflow observations, or review outcomes. May be null."},"created_at":{"type":"string","format":"date-time","description":"Timestamp indicating when this onboarding record was created.\n\nUTC time, ISO8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp indicating the last update to the onboarding record.\n\nUTC time, ISO8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete field for logical removal. Null if onboarding is active/present; otherwise a UTC ISO8601 timestamp for when onboarding is deleted (retained for compliance/audit)."},{"type":"null"}],"description":"Soft delete field for logical removal. Null if onboarding is active/present; otherwise a UTC ISO8601 timestamp for when onboarding is deleted (retained for compliance/audit)."}},"required":["id","user_id","application_data","onboarding_status","created_at","updated_at"],"description":"A seller onboarding application as recorded in ai_commerce_seller_onboarding. Each record covers the full business and compliance lifecycle, uniquely identified by id and user_id. Onboarding may progress through multiple statuses and carry flexible application/evidence data."},"IAiCommerceSellerOnboarding.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"UUID of the applicant in ai_commerce_user_authentications. Required."},"store_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. Store ID to associate if created in onboarding (may be null/unknown at creation time)."},{"type":"null"}],"description":"Optional. Store ID to associate if created in onboarding (may be null/unknown at creation time)."},"application_data":{"type":"string","description":"Required. JSON-encoded application data and supporting evidence (see schema comment).\n\nMust be a string serializing arbitrary-structure application forms, uploads, and compliance artifacts."},"onboarding_status":{"type":"string","description":"Required. Business workflow status at creation (e.g., 'draft', 'submitted', or 'under_review')."},"current_stage":{"type":"string","description":"Business progress stage label (if supported by workflow; e.g., KYC review, document submission, compliance hold).\n\nNot required for all flows, but may be present for audits or analytics."},"notes":{"type":"string","description":"Optional business or admin note at creation."}},"required":["user_id","application_data","onboarding_status"],"description":"Request body for creation of a new seller onboarding application. When onboarding is created, at minimum user_id, application_data and onboarding_status must be provided. Optional store_id, current_stage, and notes may be added if relevant at creation time."},"IAiCommerceSellerOnboarding.IUpdate":{"type":"object","properties":{"application_data":{"type":"string","description":"Optional. Updated JSON-encoded application data, used for state amendment, document upload, or business evidence refresh."},"onboarding_status":{"type":"string","description":"Optional. Business workflow state change (e.g., promotion to 'reviewing', escalation, or rejection).\n\nUpdate must comply with legal and business process rules."},"current_stage":{"type":"string","description":"Optional. Updated onboarding progress stage to reflect advancement or rollback in stages."},"notes":{"type":"string","description":"Optional. Updated admin/business notes for review, compliance, or onboarding assistance."},"store_id":{"type":"string","format":"uuid","description":"Optional. Set/modify the store entity linked by this onboarding (if approved or business logic requires)."}},"required":[],"description":"Request payload for updating an existing seller onboarding case. Any number of these fields may be provided for partial or full update. Fields not provided are left unchanged."},"IAiCommerceSellerKyc":{"type":"object","description":"Seller Know Your Customer (KYC) entity for compliance, identity verification, and onboarding in aiCommerce.\n\nThis object fully describes all attributes and state of a seller's KYC process during onboarding, compliance review, and status transitions. References unique relationships to onboarding workflow, provided identity or legal documents, audit notes, and timestamps. All details required for audit, evidence, and legal retention are present, following the original Prisma schema and ERD documentation.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the KYC record, auto-generated UUID according to the ai_commerce_seller_kyc table in the schema."},"user_id":{"type":"string","format":"uuid","description":"User authentication reference (ai_commerce_user_authentications.id) for whom this KYC applies."},"onboarding_id":{"type":"string","format":"uuid","description":"Reference to onboarding application (ai_commerce_seller_onboarding.id) for which KYC was submitted."},"kyc_status":{"type":"string","description":"Current status code for KYC workflow. Example values: 'pending', 'verified', 'rejected', 'escalated', etc. Sourced from domain rules and schema comments."},"document_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Type of submitted identity document. Example values: 'passport', 'business_license', 'driver_license'. Nullable per schema definition."},"document_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Additional details about document, typically JSON string. May contain extracted metadata, validation info, or image references. Nullable depending on step."},"verification_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Notes recorded by compliance/AI reviewer regarding this KYC record. Nullable, freeform field for compliance."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 date-time when KYC record was created (schema: created_at)."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 date-time when KYC record last updated (schema: updated_at)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If set, the ISO 8601 datetime KYC was soft-deleted for privacy/audit. Null if still active."}},"required":["id","user_id","onboarding_id","kyc_status","created_at","updated_at"]},"IAiCommerceSellerKyc.IRequest":{"type":"object","description":"Request parameters to search, filter, or page through seller KYC records for onboarding/compliance review in ai_commerce_seller_kyc table.\n\nFields match known filter columns used in KYC analytics and review UIs, and optionally include pagination parameters.\n\nOptional properties per client context, all values should match expected business state or search patterns.","properties":{"onboarding_id":{"type":"string","format":"uuid","description":"Target onboarding application to filter KYC results by (ai_commerce_seller_onboarding.id, optional)."},"user_id":{"type":"string","format":"uuid","description":"User authentication record, if filtering to a specific actor (ai_commerce_user_authentications.id)."},"kyc_status":{"type":"string","description":"KYC workflow state to filter by (pending, verified, rejected, etc.)."},"document_type":{"type":"string","description":"Type of submitted document to filter results (business_license, passport, etc.)."},"created_at_from":{"type":"string","format":"date-time","description":"Fetch KYC records created on or after this ISO 8601 date-time."},"created_at_to":{"type":"string","format":"date-time","description":"Fetch KYC records created on or before this ISO 8601 date-time."},"page":{"type":"integer","description":"Page number for pagination. Default is 1."},"limit":{"type":"integer","description":"Maximum number of records per page. Default/maximum is business-policy-defined."}},"required":[]},"IAiCommerceSellerKyc.ICreate":{"type":"object","description":"Payload to create a new seller KYC (Know Your Customer) verification application in aiCommerce onboarding workflows.\n\nAll required fields must be provided according to database and business logic. Only optional if value is not defined in this particular onboarding flow per schema.","properties":{"user_id":{"type":"string","format":"uuid","description":"User authentication ID for whom the KYC application is being created (ai_commerce_user_authentications.id)."},"onboarding_id":{"type":"string","format":"uuid","description":"Associated onboarding application ID (ai_commerce_seller_onboarding.id)."},"kyc_status":{"type":"string","description":"Initial workflow status for KYC. Often 'pending', 'awaiting_submission', or local default. Domain-specific codes align with system policy and schema docs."},"document_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional, the type of document provided (passport, business_license, etc). Defaults to null if missing."},"document_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional, additional metadata about the provided document (JSON string, can be null)."},"verification_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional, compliance notes or justification (nullable)."}},"required":["user_id","onboarding_id","kyc_status"]},"IAiCommerceSellerKyc.IUpdate":{"type":"object","description":"Update operation for seller KYC record. Allows modification during compliance review (such as setting workflow status, attaching review notes, or updating document details).\n\nOmit unchanged fields. Accepts only schema-defined fields for editing, following business and privacy constraints.","properties":{"kyc_status":{"type":"string","description":"New business status for this record. Must match recognized workflow state (pending, verified, rejected, escalated, etc.)."},"document_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update (or clear with null) the document type (e.g., 'passport', 'business_license')."},"document_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Replace or clear the metadata for the attached document (optional, freeform JSON)."},"verification_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Modify reviewer compliance notes if updating after review. (Optional, can be null to clear notes)."}},"required":[]},"IAiCommerceSellerProfiles.IRequest":{"type":"object","description":"Search/filter request for seller profiles in ai_commerce_seller_profiles table (backoffice/admin/business analytics interface).\n\nFilters by user ID, display name, approval status, date buckets, and supports basic pagination as per business requirements.","properties":{"user_id":{"type":"string","format":"uuid","description":"Optional, filter to specific user ID (ai_commerce_user_authentications.id)."},"display_name":{"type":"string","description":"Optional, search display names (exact or partial, per business logic)."},"approval_status":{"type":"string","description":"Optional, filter by workflow status (pending, active, suspended, terminated, etc.)."},"created_at_from":{"type":"string","format":"date-time","description":"Optional, start date filter for record creation (ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Optional, end date filter for record creation (ISO 8601)."},"page":{"type":"integer","description":"Optional, page number for paginated results (defaults as per system policy)."},"limit":{"type":"integer","description":"Optional, max number of results per page (policy-defined restraints apply)."}},"required":[]},"IAiCommerceSellerProfiles":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the seller profile."},"user_id":{"type":"string","format":"uuid","description":"User's unique identifier (referenced from ai_commerce_user_authentications.id)."},"display_name":{"type":"string","description":"Name shown on storefronts and analytics for this seller."},"profile_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON snapshot of seller's business description, branding info, and regulatory disclosures for compliance."},"approval_status":{"type":"string","description":"Approval/workflow status (e.g., active, pending, suspended, terminated)."},"suspension_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reason for suspension/termination as determined by platform/admin."},"created_at":{"type":"string","format":"date-time","description":"Profile creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Profile last update time (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for this profile (null if active)."}},"required":["id","user_id","display_name","approval_status","created_at","updated_at"],"description":"A seller's public and private profile information for AI commerce, including display name, branding, approval status, and profile metadata. Links to the primary user and optionally to a default store. Editable by sellers/admins with audit trail."},"IAiCommerceSellerProfiles.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"User's unique identifier to whom the seller profile is assigned."},"display_name":{"type":"string","description":"Display name for the seller, required, shown on storefronts, analytics, and audit."},"profile_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON object describing business details, branding, disclosures. Optional."},"approval_status":{"type":"string","description":"Initial approval or workflow state (e.g., 'pending', 'active', 'suspended')."},"suspension_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Suspend/termination reason. Usually empty at creation."}},"required":["user_id","display_name","approval_status"],"description":"Request schema for creating a new seller profile in ai_commerce_seller_profiles. Follows Prisma constraints and business rules."},"IAiCommerceSellerProfiles.IUpdate":{"type":"object","properties":{"display_name":{"type":"string","description":"Updated display name for seller profile."},"profile_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated branding/business metadata. JSON string or null."},"approval_status":{"type":"string","description":"Updated approval or workflow status for the profile (e.g., 'active', 'suspended'). Optional for partial update."},"suspension_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reason for suspension/termination, set by admin; otherwise may be omitted."}},"required":[],"description":"Request schema for updating an existing seller profile in ai_commerce_seller_profiles. Supports partial updates."},"IAiCommerceStores.IRequest":{"type":"object","properties":{"store_name":{"type":"string","description":"Store's public-facing name (partial or full) for search filter."},"store_code":{"type":"string","description":"Unique business code or internal store identifier. Used for filter/search."},"approval_status":{"type":"string","description":"Filter for approval/workflow status (active, pending, suspended, closed, terminated)."},"owner_user_id":{"type":"string","format":"uuid","description":"Filter for user that owns/administers this store."},"seller_profile_id":{"type":"string","format":"uuid","description":"Filter for related seller profile."},"page":{"type":"integer","description":"Page number for pagination.","minimum":1},"limit":{"type":"integer","description":"Number of items per page.","minimum":1},"sort":{"type":"string","description":"Field name to sort by (store_name, approval_status, created_at, etc.)."},"order":{"oneOf":[{"const":"asc","description":"Sort order (ascending or descending)."},{"const":"desc","description":"Sort order (ascending or descending)."}],"description":"Sort order (ascending or descending)."}},"required":[],"description":"Request/query schema for searching, filtering, and paginating stores in the ai_commerce_stores model. Supports full-text and direct field queries."},"IAiCommerceStores":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for the store record."},"owner_user_id":{"type":"string","format":"uuid","description":"FK pointing to the user who owns/administers this store (ai_commerce_user_authentications.id)."},"seller_profile_id":{"type":"string","format":"uuid","description":"FK reference to associated seller profile (ai_commerce_seller_profiles.id)."},"store_name":{"type":"string","description":"Public-facing store name as viewed by customers and on analytics dashboards."},"store_code":{"type":"string","description":"Unique business or internal store identifier; must be unique in the system."},"store_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business profile, configuration, or additional metadata for the store (JSON blob)."},"approval_status":{"type":"string","description":"Workflow status (e.g., active, pending, suspended, closed, terminated)."},"closure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"If store is closed/terminated, the main reason or justification (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Datetime when the store was created (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Last store update time (ISO 8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp (logical deletion), or null if store is active."}},"required":["id","owner_user_id","seller_profile_id","store_name","store_code","approval_status","created_at","updated_at"],"description":"Represents an individual store managed by sellers in ai_commerce_stores. Contains store branding, owner linkage, approval status, and business configuration metadata. Tied to seller profiles and used for analytics, compliance, and workflow management."},"IAiCommerceStores.ICreate":{"type":"object","properties":{"owner_user_id":{"type":"string","format":"uuid","description":"The user ID (UUID) of the store owner. Must reference a valid user. Used for store-management authorization and analytics traceability. Cannot be updated after creation."},"seller_profile_id":{"type":"string","format":"uuid","description":"The seller profile ID (UUID) associated with the store. Links to the seller's business context and compliance profile. This relationship is immutable after creation."},"store_name":{"type":"string","description":"The public-facing name of the store. Must be unique per seller and meaningful for buyers."},"store_code":{"type":"string","description":"A unique, internal code for the store (SKU, merchant code, etc). Must not conflict with existing codes on the platform. Used for analytics, search, and integration."},"store_metadata":{"oneOf":[{"type":"string","description":"(Optional) Store business and configuration metadata as a JSON string, for extensibility. Contains items such as branding, operational details, and custom configuration settings."},{"type":"null"}],"description":"(Optional) Store business and configuration metadata as a JSON string, for extensibility. Contains items such as branding, operational details, and custom configuration settings."},"approval_status":{"type":"string","description":"The current approval or workflow status of the store (e.g., active, pending, suspended, closed, terminated). This field determines availability on the platform."},"closure_reason":{"oneOf":[{"type":"string","description":"(Optional) If the store is closed or terminated, this field describes the business or compliance reason."},{"type":"null"}],"description":"(Optional) If the store is closed or terminated, this field describes the business or compliance reason."}},"required":["owner_user_id","seller_profile_id","store_name","store_code","approval_status"],"description":"DTO for creating a new store entity on the aiCommerce platform. Enforces uniqueness and business workflow for store onboarding."},"IAiCommerceStores.IUpdate":{"type":"object","properties":{"store_name":{"type":"string","description":"Updated public name for the store."},"store_metadata":{"oneOf":[{"type":"string","description":"(Optional) Updated JSON-encoded metadata for the store. Used for extensibility and business branding."},{"type":"null"}],"description":"(Optional) Updated JSON-encoded metadata for the store. Used for extensibility and business branding."},"approval_status":{"type":"string","description":"(Optional) Store's new approval or business status. Changing from 'pending' to 'active' or to 'closed', etc. Requires business workflow compliance."},"closure_reason":{"oneOf":[{"type":"string","description":"(Optional) Business or compliance reason for closure/termination. Set when status is 'closed' or 'terminated'."},{"type":"null"}],"description":"(Optional) Business or compliance reason for closure/termination. Set when status is 'closed' or 'terminated'."}},"required":[],"description":"DTO for updating modifiable fields of an existing store. Owner/seller and profile ID are immutable after creation."},"IAiCommerceStoreAnalytics.IRequest":{"type":"object","properties":{"store_id":{"type":"string","format":"uuid","description":"(Optional) Filter analytics records to a specific store by its UUID."},"date_from":{"type":"string","format":"date-time","description":"(Optional) Return analytics records from this date (inclusive). ISO 8601 datetime format."},"date_to":{"type":"string","format":"date-time","description":"(Optional) Return analytics records up to this date (inclusive). ISO 8601 datetime format."},"min_conversion_rate":{"type":"number","description":"(Optional) Minimum conversion rate filter. Returns records with conversion_rate greater than or equal to this value."},"max_conversion_rate":{"type":"number","description":"(Optional) Maximum conversion rate filter. Returns records with conversion_rate less than or equal to this value."},"sort":{"type":"string","description":"(Optional) Sorting expression for results (e.g., 'date_bucket:desc', 'sales_volume:asc')."},"page":{"type":"integer","description":"(Optional) Result page number. Paged results start from 1. Used with limit for pagination."},"limit":{"type":"integer","description":"(Optional) Number of records per page. Used for pagination control."}},"required":[],"description":"Request DTO for searching/paginating store analytics records. Used for dashboards and advanced queries."},"IAiCommerceStoreAnalytics":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the store analytics row."},"store_id":{"type":"string","format":"uuid","description":"Store's unique identifier (UUID) linked to this analytics bucket."},"date_bucket":{"type":"string","format":"date-time","description":"Date or time period start represented by this analytics record (e.g., for daily/weekly/monthly analytics)."},"sales_volume":{"type":"number","description":"Total sales revenue for the store for this analytics bucket (floating point, usually in platform currency)."},"orders_count":{"type":"integer","description":"Number of orders generated in this store during this period (integer count)."},"visitors_count":{"type":"integer","description":"Number of unique visitors to the store during this period (integer count)."},"conversion_rate":{"type":"number","description":"Conversion rate for the period (typically a float in [0, 1] interval)."},"analytics_json":{"oneOf":[{"type":"string","description":"(Optional) Additional analytics, campaign data, or denormalized metrics as JSON string. For extensibility and non-standard analytics fields."},{"type":"null"}],"description":"(Optional) Additional analytics, campaign data, or denormalized metrics as JSON string. For extensibility and non-standard analytics fields."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when this analytics record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to this analytics record (ISO 8601 format)."}},"required":["id","store_id","date_bucket","sales_volume","orders_count","visitors_count","conversion_rate","created_at","updated_at"],"description":"DTO for a single analytics period (bucket) for a store in aiCommerce, including all key KPIs, performance, and extensible analytics data."},"IAiCommerceStoreBanking.IRequest":{"type":"object","properties":{"store_id":{"type":"string","format":"uuid","description":"(Optional) Filter records by target store ID (UUID) for precise banking data lookup."},"bank_name":{"type":"string","description":"(Optional) Filter by bank or payment provider's business name."},"account_holder_name":{"type":"string","description":"(Optional) Filter records by the name of bank account holder at the bank."},"account_number":{"type":"string","description":"(Optional) Filter by the bank/payment account number for audit or matching."},"verified":{"type":"boolean","description":"(Optional) Filter for banking records only in a verified/unverified state."},"created_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound filter for record creation date (ISO 8601 format)."},"created_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound for record creation date filter (ISO 8601 format)."},"sort":{"type":"string","description":"(Optional) Sorting expression for query result ordering. (e.g., 'created_at:desc', 'bank_name:asc')."},"page":{"type":"integer","description":"(Optional) Pagination start page. Use with 'limit' for paged search results."},"limit":{"type":"integer","description":"(Optional) Number of records to return per page. For pagination.)"}},"required":[],"description":"Request DTO for paginated/search queries against ai_commerce_store_banking. Used for banking record discovery, compliance, and dashboards."},"IAiCommerceStoreSetting.IRequest":{"type":"object","properties":{"store_id":{"type":"string","format":"uuid","description":"The unique identifier of the associated store (ai_commerce_stores.id)."},"active":{"type":"boolean","description":"Whether this setting is currently active and in use."},"key":{"type":"string","description":"Configuration key name for searching/filtering."},"value":{"type":"string","description":"Configuration value for searching/filtering."},"page":{"type":"integer","description":"Page number for pagination (1-based index)."},"limit":{"type":"integer","description":"Maximum number of items per page for pagination."},"sort":{"type":"string","description":"Sorting criteria, e.g., 'created_at desc' or 'key asc'."}},"required":[],"description":"Request schema for listing and filtering store settings. Allows searching by store, status, key, value, pagination and sort options."},"IAiCommerceStoreSetting":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the store setting."},"store_id":{"type":"string","format":"uuid","description":"Reference to ai_commerce_stores.id to indicate which store this setting belongs to."},"settings_json":{"type":"string","description":"Store's settings as a JSON blob; may include shipping, return policy, business rules, etc."},"active":{"type":"boolean","description":"If true, these settings are currently in use."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if the record is active."}},"required":["id","store_id","settings_json","active","created_at","updated_at"],"description":"Represents a settings record for a store in aiCommerce. Encapsulates configuration metadata for advanced business logic and store operation, supporting extensibility, soft deletion, and compliance audit."},"IAiCommerceStoreSetting.ICreate":{"type":"object","properties":{"store_id":{"type":"string","format":"uuid","description":"Store's unique identifier (ai_commerce_stores.id)."},"settings_json":{"type":"string","description":"JSON blob containing the store's settings, e.g., shipping, return, and configuration info."},"active":{"type":"boolean","description":"Flag whether this settings record is currently active. Only one active per store is allowed."}},"required":["store_id","settings_json","active"],"description":"Used for creating a new store setting record. Fields must include a valid store reference, configuration JSON, and explicit activation status. Enforces uniqueness of active flag per store. Handled by admin or authorized seller as per business rules."},"IAiCommerceStoreSetting.IUpdate":{"type":"object","properties":{"settings_json":{"type":"string","description":"Updated settings JSON payload, with revised business rules/config."},"active":{"type":"boolean","description":"Flag to activate/deactivate this settings version. Only one active record per store is allowed."}},"required":[],"description":"Used when updating an existing store settings record. Allows for updating JSON config or the 'active' flag. Does not permit changing the 'store_id' or primary key. Managed by admin or authorized seller roles."},"IAiCommerceStoreBanking":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for this store banking record."},"store_id":{"type":"string","format":"uuid","description":"The store's unique identifier (ai_commerce_stores.id) this bank info belongs to."},"bank_name":{"type":"string","description":"Legal name of the banking institution or payment provider."},"account_number":{"type":"string","description":"Bank or payment account number for payouts; may be masked in outputs for confidentiality."},"account_holder_name":{"type":"string","description":"Name on the account for payer verification."},"routing_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Bank routing/transit/SWIFT code. Optional for international/wire transfers."},"banking_metadata":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Additional compliance info or bank config, as JSON (nullable)."},"verified":{"type":"boolean","description":"Whether the banking info has been verified for payout eligibility (admin/AI process)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp. If present, record is logically removed, but retained for compliance/audit."}},"required":["id","store_id","bank_name","account_number","account_holder_name","verified","created_at","updated_at"],"description":"Store's banking and payout account information, supporting verification, compliance, and audit. Fields are sensitive and may be masked/redacted in certain outputs. Admins/sellers may configure or review per business rules."},"IAiCommerceStoreBanking.ICreate":{"type":"object","properties":{"store_id":{"type":"string","format":"uuid","description":"ID of the store to register this banking information for.\n\nReferences the specific store entity in the system. Must be a valid UUID corresponding to a store owned by the seller or managed by the admin."},"bank_name":{"type":"string","description":"Name of the bank where the store's account is held.\n\nThis must be the legal financial institution's name as required for compliance and payout transfer."},"account_number":{"type":"string","description":"Account number for payouts.\n\nMust be the valid bank or payment account number where platform funds will be deposited. This field is checked for format and accuracy by compliance."},"account_holder_name":{"type":"string","description":"Name on the bank account (for verification and payout).\n\nMust match the legal entity or person entitled to receive payouts from the store. Required for compliance and banking verification."},"routing_code":{"oneOf":[{"type":"string","description":"SWIFT/routing code if applicable for international or wire payout transfers."},{"type":"null"}],"description":"SWIFT/routing code if applicable for international or wire payout transfers.\n\nOptional—may be null if not required for bank/country."},"banking_metadata":{"oneOf":[{"type":"string","description":"JSON metadata for compliance, additional payout configuration, or bank details."},{"type":"null"}],"description":"JSON metadata for compliance, additional payout configuration, or bank details. Optional for extensibility. Can include payout preferences, additional banking fields, or compliance snapshots."}},"required":["store_id","bank_name","account_number","account_holder_name"],"description":"Create store banking configuration and payout account information. This type is used when registering or onboarding a store's payout information for the first time. Enforces compliance, verification, and legal requirements, supporting audit and payout workflows."},"IAiCommerceStoreBanking.IUpdate":{"type":"object","properties":{"bank_name":{"type":"string","description":"Bank name for the payout account. Optional—can be updated when changing bank affiliation or correcting errors."},"account_number":{"type":"string","description":"Account number for payouts."},"account_holder_name":{"type":"string","description":"Name on the bank account."},"routing_code":{"oneOf":[{"type":"string","description":"SWIFT/routing code or similar for bank identification."},{"type":"null"}],"description":"SWIFT/routing code or similar for bank identification. Optional for domestic accounts."},"banking_metadata":{"oneOf":[{"type":"string","description":"JSON representation of additional compliance/bank details."},{"type":"null"}],"description":"JSON representation of additional compliance/bank details. Optional, used for extensibility or compliance updates."},"verified":{"type":"boolean","description":"Whether the bank account has passed platform verification checks. Setting this field is typically a privileged/admin action."}},"required":[],"description":"Update banking configuration for store payouts. Allows optional mutation of all updatable fields on the banking record, including administrative verification gating. Mutation is fully audited for compliance, with restricted access on 'verified' property."},"IAiCommerceSellerStatusHistory.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Filter for status history events related to a specific user ID (seller onboarding/account)."},"seller_profile_id":{"type":"string","format":"uuid","description":"Filter for status history events for a specific seller profile (store/business identity)."},"previous_status":{"type":"string","description":"Optional, filter for old status before transition (e.g., filtering all suspensions by previous operational state)."},"new_status":{"type":"string","description":"Optional, filter for status after transition. Enables targeted analytics/reporting for events such as approval, escalation, penalty."},"transition_reason":{"type":"string","description":"Optional, search for status transitions including this reason or note (full or partial match allowed for search)."},"transition_actor":{"type":"string","description":"Optional, search for status changes performed by a specific actor (e.g., admin, AI system, automation routine, seller)."},"created_from":{"type":"string","format":"date-time","description":"Inclusive UTC timestamp representing the earliest creation date for records in the filter."},"created_to":{"type":"string","format":"date-time","description":"Inclusive UTC timestamp representing the latest status change in the result set."},"page":{"type":"integer","minimum":1,"description":"Result page (1-based for user-facing queries). Defaults to 1."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Number of results per page for pagination. Business policy may enforce upper bound (e.g., 100)."}},"required":[],"description":"Query parameters for paginated, filtered search of seller status change history, supporting compliance, audit, and analytics. Supports full and partial query for advanced admin or reporting UI."},"IAiCommerceSellerStatusHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) uniquely identifying each status history record."},"user_id":{"type":"string","format":"uuid","description":"FK for the user who had the status transition. References seller onboarding or account entity."},"seller_profile_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK reference to the affected seller profile (may be null if not applicable)."},{"type":"null"}],"description":"Optional FK to the affected seller profile (UUID or null when transition occurred before profile creation or demotion/withdrawal event)."},"previous_status":{"oneOf":[{"type":"string","description":"Previous role or approval status before the transition (null for initial onboarding)."},{"type":"null"}],"description":"The status value (role, approval, penalty, etc.) before transition. Null for onboarding/initial role grant."},"new_status":{"type":"string","description":"The status value (role, approval, penalty, etc.) after the transition. Must be a valid business status/role string."},"transition_reason":{"oneOf":[{"type":"string","description":"Reason for the status change, provided by admin/automation/AI."},{"type":"null"}],"description":"Reason provided for the status transition (e.g., moderation violation, onboarding approval, penalty, AI escalation). May be null for automated or silent transitions."},"transition_actor":{"type":"string","description":"Actor performing or initiating the status change (admin ID, seller, or system/AI identifier)."},"created_at":{"type":"string","format":"date-time","description":"UTC ISO timestamp when the status change event occurred. Used for compliance, analytics, and audit evidence."}},"required":["id","user_id","new_status","transition_actor","created_at"],"description":"Status change record for a seller. Used for audit, analytics, moderation review, and legal/compliance events. Linked to onboarding, escalation, penalty, or demotion/withdrawal events as applicable."},"IAiCommerceSellerAppeal.IRequest":{"type":"object","properties":{"seller_profile_id":{"type":"string","format":"uuid","description":"Filter search to specific seller profile."},"status":{"type":"string","description":"Filter appeals by status (e.g., open, in_review, resolved, rejected, closed)."},"appeal_type":{"type":"string","description":"Filter appeals by type (e.g., penalty, dispute, payout_issue, demotion, rejection, fraud_escalation, other)."},"created_from":{"type":"string","format":"date-time","description":"Inclusive UTC timestamp representing earliest appeal creation date for filter."},"created_to":{"type":"string","format":"date-time","description":"Inclusive UTC timestamp representing latest time for appeals returned in this search."},"page":{"type":"integer","minimum":1,"description":"Result page (1-based UI conventions). Defaults to 1."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum results per page. System may restrict value to max of 100."}},"required":[],"description":"Query parameters for paginated, filtered search of seller appeal records (escalations, dispute, penalty). All fields are optional."},"IAiCommerceSellerAppeal":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) of the seller appeal record. Used for audit, compliance, and workflow referencing. Sourced from ai_commerce_seller_appeals.id."},"seller_profile_id":{"type":"string","format":"uuid","description":"The seller profile's UUID this appeal is for. References ai_commerce_seller_profiles.id. Determines appeal scope and traceability."},"appeal_type":{"type":"string","description":"The nature of the appeal (e.g., rejection, penalty, demotion, payout). String value—business logic may restrict to certain enums. Sourced from ai_commerce_seller_appeals.appeal_type."},"appeal_data":{"type":"string","description":"JSON-encoded details or evidence attached to this appeal. Should include supporting documentation, case context, or facts. ai_commerce_seller_appeals.appeal_data."},"status":{"type":"string","description":"Current status of the appeal (e.g., open, in_review, resolved, rejected, closed). Value should conform to status business logic and enum list. ai_commerce_seller_appeals.status."},"resolution_notes":{"oneOf":[{"type":"string","description":"(Optional) Platform/admin summary on how the appeal was processed and resolved. ai_commerce_seller_appeals.resolution_notes."},{"type":"null"}],"description":"(Optional) Platform/admin summary on how the appeal was processed and resolved. ai_commerce_seller_appeals.resolution_notes."},"created_at":{"type":"string","format":"date-time","description":"Appeal creation timestamp (ISO 8601). ai_commerce_seller_appeals.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for the appeal (ISO 8601). ai_commerce_seller_appeals.updated_at."}},"required":["id","seller_profile_id","appeal_type","appeal_data","status","created_at","updated_at"],"description":"A request/response object representing a single seller appeal record as defined in ai_commerce_seller_appeals. Contains the appeal type, data, status, resolution notes, and timestamps. Used in seller compliance, escalation, and platform review workflows."},"IAiCommerceSellerAppeal.ICreate":{"type":"object","properties":{"seller_profile_id":{"type":"string","format":"uuid","description":"UUID referencing the seller profile making the appeal. Required. ai_commerce_seller_appeals.seller_profile_id."},"appeal_type":{"type":"string","description":"Nature of the appeal (e.g., rejection, penalty). Application logic may restrict values. ai_commerce_seller_appeals.appeal_type."},"appeal_data":{"type":"string","description":"Supporting evidence or documentation for the appeal, must be JSON-encoded string. ai_commerce_seller_appeals.appeal_data."},"status":{"type":"string","description":"Initial status of the appeal (e.g., open, in_review). Must conform to business workflow. ai_commerce_seller_appeals.status."}},"required":["seller_profile_id","appeal_type","appeal_data","status"],"description":"A request object for creating a new seller appeal in ai_commerce_seller_appeals. Must specify seller_profile_id, appeal_type, appeal_data, and status fields."},"IAiCommerceSellerAppeal.IUpdate":{"type":"object","properties":{"appeal_data":{"type":"string","description":"(Optional) Updated supporting evidence or documentation (should be JSON-encoded string). ai_commerce_seller_appeals.appeal_data."},"status":{"type":"string","description":"(Optional) New status after update (per appeal workflow, e.g., resolved, rejected). ai_commerce_seller_appeals.status."},"resolution_notes":{"type":"string","description":"(Optional) Platform/admin summary of appeal outcome. ai_commerce_seller_appeals.resolution_notes."}},"required":[],"description":"A request object for updating a seller appeal (ai_commerce_seller_appeals). Supply any subset of fields to update: appeal_data, status, or resolution_notes."},"IAiCommerceSellerDispute":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the seller dispute. ai_commerce_seller_disputes.id"},"seller_profile_id":{"type":"string","format":"uuid","description":"UUID of the seller profile involved in the dispute case. ai_commerce_seller_disputes.seller_profile_id"},"dispute_type":{"type":"string","description":"Type of dispute/penalty/escalation (e.g., policy_violation, fraud_investigation, payout_hold). ai_commerce_seller_disputes.dispute_type"},"dispute_data":{"type":"string","description":"JSON data containing dispute details, context, and evidence. ai_commerce_seller_disputes.dispute_data"},"status":{"type":"string","description":"Current status in the dispute workflow (e.g., open, in_progress, resolved, closed, escalated, withdrawn). ai_commerce_seller_disputes.status"},"resolution_notes":{"oneOf":[{"type":"string","description":"(Optional) Platform/admin notes on process, outcome, or decision-making. ai_commerce_seller_disputes.resolution_notes"},{"type":"null"}],"description":"(Optional) Platform/admin notes on process, outcome, or decision-making. ai_commerce_seller_disputes.resolution_notes"},"created_at":{"type":"string","format":"date-time","description":"Dispute creation timestamp (ISO 8601). ai_commerce_seller_disputes.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for this dispute (ISO 8601). ai_commerce_seller_disputes.updated_at"}},"required":["id","seller_profile_id","dispute_type","dispute_data","status","created_at","updated_at"],"description":"A request/response object representing a single seller dispute case as defined in ai_commerce_seller_disputes. Contains type, data, status, resolution notes, and audit timestamps. Used in administrative/legal workflows for escalation, penalties, or dispute resolution."},"IAiCommerceSellerDispute.IRequest":{"type":"object","properties":{"seller_profile_id":{"type":"string","format":"uuid","description":"(Optional) Filter – only disputes for the given seller profile. ai_commerce_seller_disputes.seller_profile_id"},"status":{"type":"string","description":"(Optional) Filter by status (e.g., open, resolved, closed, escalated). ai_commerce_seller_disputes.status"},"dispute_type":{"type":"string","description":"(Optional) Filter by dispute type (e.g., penalty, policy_violation, fraud_investigation, payout_hold). ai_commerce_seller_disputes.dispute_type"},"created_from":{"type":"string","format":"date-time","description":"(Optional) Filter – include disputes created at/after this ISO 8601 date. Not persisted in the table, used for query filtering only."},"created_to":{"type":"string","format":"date-time","description":"(Optional) Filter – include disputes created at/before this ISO 8601 date. Not persisted in the table, used for query filtering only."},"page":{"type":"integer","minimum":1,"description":"(Optional) Page number for pagination (1-based)."},"limit":{"type":"integer","minimum":1,"description":"(Optional) Page size (number of records per page)."},"sort":{"type":"string","description":"(Optional) Sort order, e.g., '-created_at' for descending by creation timestamp. Implementation-dependent."}},"required":[],"description":"Request object for searching/discovering seller disputes (ai_commerce_seller_disputes). Used as body in PATCH/POST endpoints. All fields are optional filters/pagination/sort criteria."},"IAiCommerceSellerDispute.ICreate":{"type":"object","properties":{"seller_profile_id":{"type":"string","format":"uuid","description":"The unique identifier of the seller profile this dispute is related to."},"dispute_type":{"type":"string","description":"Indicates the type of dispute (e.g., 'policy_violation', 'fraud_investigation', 'payout_hold')."},"dispute_data":{"type":"string","description":"JSON string containing detailed/structured information and evidence for this dispute."},"status":{"type":"string","description":"The workflow state for this dispute ('open', 'in_progress', 'resolved', etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for dispute creation."},"updated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp for the last update to the record."},"resolution_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-form notes or summary on how the dispute was resolved; nullable."}},"required":["seller_profile_id","dispute_type","dispute_data","status","created_at"],"description":"Schema for creating a new seller dispute. All required fields (e.g., seller_profile_id, dispute_type, dispute_data, status, created_at) must be provided. Optional audit fields (updated_at, resolution_notes) are included for completeness."},"IAiCommerceSellerDispute.IUpdate":{"type":"object","properties":{"dispute_type":{"type":"string","description":"(optional) New type of the dispute, if being corrected or reclassified."},"dispute_data":{"type":"string","description":"(optional) Updated JSON data/evidence for the dispute."},"status":{"type":"string","description":"(optional) Updated workflow status for the dispute."},"resolution_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(optional) Updated resolution note or closure reason."},"updated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(optional) Timestamp for the update/modification."}},"required":[],"description":"Schema for updating an existing seller dispute. All fields are optional and can be supplied as needed; at least one should be present per business logic."},"IAiCommerceProduct.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"(optional) Filter products by name (supports partial match)."},"status":{"type":"string","description":"(optional) Filter by product listing status (e.g., 'active', 'draft', 'paused')."},"seller_id":{"type":"string","format":"uuid","description":"(optional) Restrict to products belonging to this seller."},"store_id":{"type":"string","format":"uuid","description":"(optional) Restrict to products at this store."},"category_id":{"type":"string","format":"uuid","description":"(optional) Restrict to products in this category."},"min_price":{"type":"number","description":"(optional) Minimum product price for price range filtering."},"max_price":{"type":"number","description":"(optional) Maximum product price for price range filtering."},"page":{"type":"integer","minimum":1,"default":1,"description":"(optional) Page number for pagination, defaults to 1."},"limit":{"type":"integer","minimum":1,"default":20,"description":"(optional) Page size for pagination, defaults to 20."},"sort_by":{"type":"string","description":"(optional) Field by which to sort (e.g., 'name', 'price', 'created_at')."},"sort_order":{"oneOf":[{"const":"asc","description":"(optional) Sorting direction, 'asc' or 'desc'."},{"const":"desc","description":"(optional) Sorting direction, 'asc' or 'desc'."}],"description":"(optional) Sorting direction, 'asc' or 'desc'."}},"required":[],"description":"Schema for product search/listing requests, supporting advanced filtering, pagination, and sorting."},"IAiCommerceProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the product."},"seller_id":{"type":"string","format":"uuid","description":"Seller's unique identifier."},"store_id":{"type":"string","format":"uuid","description":"Store unique identifier where product is listed."},"product_code":{"type":"string","description":"Business/SKU code for this product, unique in the system."},"name":{"type":"string","description":"Product display name."},"description":{"type":"string","description":"Product long-form description/content."},"status":{"type":"string","description":"Product lifecycle/status (e.g., active, draft, suspended, discontinued)."},"business_status":{"type":"string","description":"Operational/business workflow status (e.g., pending_approval, compliance_hold)."},"current_price":{"type":"number","description":"The current price of the product."},"inventory_quantity":{"type":"integer","description":"Current inventory stock count for product."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for product creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last product update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If soft deleted, timestamp of deletion; null otherwise."}},"required":["id","seller_id","store_id","product_code","name","description","status","business_status","current_price","inventory_quantity","created_at","updated_at"],"description":"Schema representing a product record in ai_commerce_products, reflecting all business, pricing, inventory, and status fields."},"IAiCommerceProduct.ICreate":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"The unique seller ID who owns the product."},"store_id":{"type":"string","format":"uuid","description":"Unique store identifier for context."},"product_code":{"type":"string","description":"Unique SKU/business code for the product."},"name":{"type":"string","description":"Product name, mandatory."},"description":{"type":"string","description":"Product description, long-text."},"status":{"type":"string","description":"Product workflow status (e.g., draft, active, paused, etc)."},"business_status":{"type":"string","description":"Operational business status at creation (e.g., pending_approval, compliance_hold)."},"current_price":{"type":"number","description":"Initial/current price for product."},"inventory_quantity":{"type":"integer","description":"Starting inventory/stock level."}},"required":["seller_id","store_id","product_code","name","description","status","business_status","current_price","inventory_quantity"],"description":"Schema for creating a new ai_commerce_products record. All fields are required on creation per the business and regulatory logic."},"IAiCommerceProductVariant":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product variant (UUID).\n\nThis is a system-generated, immutable identifier aligned with the primary key in the ai_commerce_product_variants table."},"product_id":{"type":"string","format":"uuid","description":"The ID of the parent product (UUID).\n\nReferences ai_commerce_products.id. This field establishes a strict parent-child relationship."},"sku_code":{"type":"string","description":"Unique code for this SKU within the product.\n\nMust be unique among variants of a product as per schema constraint. Used for business and logistics reference."},"option_summary":{"type":"string","description":"Human-readable summary of option/attributes for the variant (e.g., 'Size: M / Color: Red').\n\nRepresents the combination of values that define the variant."},"variant_price":{"type":"number","description":"Variant-specific price (overrides product price).\n\nThis is the price for this particular variant, supporting dynamic and promo pricing."},"inventory_quantity":{"type":"integer","description":"Available inventory for this variant (SKU).\n\nRepresents current stock for this SKU. Used for sale/checkout validation."},"status":{"type":"string","description":"Lifecycle/status of the SKU (e.g., 'active', 'paused', 'discontinued').\n\nSupports inventory/merchandising/availability business logic."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the variant was created.\n\nThis is an ISO8601 date-time (with timezone) for audit and history tracking."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the variant was last updated.\n\nThis is an ISO8601 date-time (with timezone) for audit and history tracking."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for the variant. Null if active.\n\nWhen set, the record is logically deleted but retained for compliance/audit."}},"required":["id","product_id","sku_code","option_summary","variant_price","inventory_quantity","status","created_at","updated_at"],"description":"Represents a product option or variant SKU, containing unique business attributes and current inventory/price/status data. Maps to ai_commerce_product_variants in the DB, supporting product variant APIs and UI detail lists."},"IAiCommerceProductVariant.IRequest":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Filter by parent product UUID."},"sku_code":{"type":"string","description":"Filter by SKU code (substring or exact match, as supported)."},"option_summary":{"type":"string","description":"Filter by option summary (substring or exact match)."},"status":{"type":"string","description":"Filter by variant/SKU status (e.g., 'active', 'paused')."},"min_price":{"type":"number","description":"Minimum price filter."},"max_price":{"type":"number","description":"Maximum price filter."},"min_inventory":{"type":"number","description":"Lowest inventory filter."},"max_inventory":{"type":"number","description":"Maximum inventory filter."},"page":{"type":"integer","description":"Page number for pagination (default = 1)."},"limit":{"type":"integer","description":"Number of records per page (default = system default, e.g., 20)."},"sort":{"type":"string","description":"Optional sort parameter, e.g., 'variant_price:asc','inventory_quantity:desc'."}},"required":[],"description":"Filtering, searching, and pagination structure for querying product variants or options under a parent product. Used with PATCH endpoints for M:N (many variants per product)."},"IAiCommerceProductVariant.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"The UUID of the parent product this variant SKU belongs to.\n\nRequired. Must match an existing ai_commerce_products.id."},"sku_code":{"type":"string","description":"Unique SKU/variant code within the parent product.\n\nRequired. Must be unique within that product's variants."},"option_summary":{"type":"string","description":"Summary of option values (e.g., 'Size: M / Color: Red').\n\nRequired."},"variant_price":{"type":"number","description":"Variant-specific price (overrides product price if set).\n\nRequired. Must be >=0 (enforced at business logic layer)."},"inventory_quantity":{"type":"integer","description":"Available inventory for this variant/SKU.\n\nRequired. Must be >=0."},"status":{"type":"string","description":"Variant/SKU status (e.g., 'active', 'paused', 'discontinued').\n\nRequired. Must comply with business status enum/rules."}},"required":["product_id","sku_code","option_summary","variant_price","inventory_quantity","status"],"description":"Request DTO for creating a product variant/option under a product. Validates presence and uniqueness for SKU/option fields, ties variant to parent product, and enforces business status requirements."},"IAiCommerceProductVariant.IUpdate":{"type":"object","properties":{"sku_code":{"type":"string","description":"Update the unique SKU/variant code within the product. Optional."},"option_summary":{"type":"string","description":"Update the options summary (e.g., after changing attribute selection). Optional."},"variant_price":{"type":"number","description":"Update the variant-specific price. Optional. Must be >=0 if present."},"inventory_quantity":{"type":"integer","description":"Update inventory for the variant/SKU. Optional. Must be >=0 if present."},"status":{"type":"string","description":"Update lifecycle/status of the variant/SKU. Optional. E.g., 'active', 'paused'."}},"required":[],"description":"Request DTO for updating a variant's properties: code, option summary, price, quantity, or status. All fields are optional and only provided values will be updated."},"IAiCommerceProduct.IUpdate":{"type":"object","properties":{"product_code":{"type":"string","description":"Update the business SKU/product code. Must be unique globally."},"name":{"type":"string","description":"Update product name/display label (localization handled externally)."},"description":{"type":"string","description":"Update business/marketing description."},"status":{"type":"string","description":"Update product listing/publish status (e.g., 'active', 'paused', 'draft')."},"business_status":{"type":"string","description":"Update workflow or moderation status string (e.g., 'pending_approval')."},"current_price":{"type":"number","description":"Update current display price (minimum = 0; enforced externally)."},"inventory_quantity":{"type":"integer","description":"Update the top-level inventory count (not variant-specific)."},"store_id":{"type":"string","format":"uuid","description":"Update target store this product belongs to. Must match ai_commerce_stores.id."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Mark product as soft-deleted (timestamp) or restore (null)."},"updated_at":{"type":"string","description":"Update modified timestamp (ISO8601 string with timezone). Optional; usually set by backend."}},"required":[],"description":"Update DTO for editing product business fields (all optional). Allows partial updates of inventory, price, workflow status, assignment, and other modifiable attributes, as supported by the ai_commerce_products table. No ownership or creation fields may be updated."},"IAiCommerceProductBundle.IRequest":{"type":"object","properties":{"productId":{"type":"string","description":"The UUID of the parent product to filter bundles for."},"bundleCode":{"type":"string","description":"Unique business code for the bundle product."},"name":{"type":"string","description":"Bundle display name for filtering."},"status":{"type":"string","description":"The status of the bundle to filter by (e.g., active, paused, discontinued, deleted)."},"page":{"type":"integer","description":"Page number for paginated results."},"limit":{"type":"integer","description":"Records per page for pagination."},"sort":{"type":"string","description":"Field to sort by."},"order":{"oneOf":[{"const":"asc","description":"Sort order."},{"const":"desc","description":"Sort order."}],"description":"Sort order."}},"required":[],"description":"Filter and pagination criteria for searching product bundles.\n\nEnables clients to search, filter, and page through the list of bundles linked to a parent product by various business fields. See parent product/bundle entity comments for detail."},"IAiCommerceProductBundle.IBundleItem.ICreate":{"type":"object","properties":{"child_product_id":{"type":"string","description":"UUID of the child product if applicable."},"child_variant_id":{"type":"string","description":"UUID of the child variant if applicable."},"item_type":{"type":"string","description":"Type of bound item: 'product' or 'variant'."},"quantity":{"type":"integer","description":"The quantity of this item in the bundle."},"required":{"type":"boolean","description":"True if this item is required for the bundle."},"sort_order":{"type":"integer","description":"Display/business order in the bundle."}},"required":["item_type","quantity","required","sort_order"],"description":"Inner model for items in a bundle at creation.\n\nReferencing business rule for composition and bundle item uniqueness. Used as the 'items' array of IAiCommerceProductBundle.ICreate."},"IAiCommerceProductBundle.IBundleItem.IUpdate":{"type":"object","properties":{"id":{"type":"string","description":"UUID of the bundle item, if updating an existing."},"child_product_id":{"type":"string","description":"UUID of the child product if applicable."},"child_variant_id":{"type":"string","description":"UUID of the child variant if applicable."},"item_type":{"type":"string","description":"Type of bound item: 'product' or 'variant'."},"quantity":{"type":"integer","description":"The quantity of this item in the bundle."},"required":{"type":"boolean","description":"True if this item is required for the bundle."},"sort_order":{"type":"integer","description":"Display/business order in the bundle."}},"required":[],"description":"Inner model for items in a bundle at update.\n\nUsed within the 'items' array for IAiCommerceProductBundle.IUpdate."},"IAiCommerceProductBundle.ICreate":{"type":"object","properties":{"parent_product_id":{"type":"string","description":"UUID of the parent (container) product for this bundle."},"bundle_code":{"type":"string","description":"Unique code for the bundle product."},"name":{"type":"string","description":"Bundle display name."},"description":{"type":"string","description":"Bundle description/marketing details."},"status":{"type":"string","description":"Bundle status, must match business rule list (e.g., active, paused, discontinued, deleted)."},"current_price":{"type":"number","description":"Bundle price for all items."},"items":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductBundle.IBundleItem.ICreate"},"description":"Bundle composition: array of child products/variants."}},"required":["parent_product_id","bundle_code","name","status","current_price","items"],"description":"Payload to create a new product bundle.\n\nIncludes all required business fields and array of child item info. Refer to ai_commerce_product_bundles schema for rules."},"IAiCommerceProductBundle.IUpdate":{"type":"object","properties":{"bundle_code":{"type":"string","description":"Bundle business code to update."},"name":{"type":"string","description":"Bundle display name."},"description":{"type":"string","description":"Bundle description/marketing details."},"status":{"type":"string","description":"Bundle status to update."},"current_price":{"type":"number","description":"Bundle price."},"items":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductBundle.IBundleItem.IUpdate"},"description":"Bundle composition array for replacement or update."}},"required":[],"description":"Payload to update an existing bundle.\n\nAllows full or partial patching for bundle business fields and child composition. Used in PUT/PATCH endpoints for IAiCommerceProductBundle."},"IAiCommerceProductBundle.IBundleItem":{"type":"object","properties":{"id":{"type":"string","description":"UUID of this bundle item."},"child_product_id":{"type":"string","description":"UUID of the child product if present."},"child_variant_id":{"type":"string","description":"UUID of the child variant if present."},"item_type":{"type":"string","description":"Type of bundle item: 'product' or 'variant'."},"quantity":{"type":"integer","description":"Quantity of this child in the bundle."},"required":{"type":"boolean","description":"If true, the bundle must contain this item."},"sort_order":{"type":"integer","description":"Item's position in the bundle's composition array."}},"required":["id","item_type","quantity","required","sort_order"],"description":"Concrete bundle item representation, for use in IAiCommerceProductBundle."},"IAiCommerceProductBundle":{"type":"object","properties":{"id":{"type":"string","description":"UUID of the bundle."},"parent_product_id":{"type":"string","description":"UUID of the parent (container) product."},"bundle_code":{"type":"string","description":"Unique code for the bundle product."},"name":{"type":"string","description":"Bundle name for product display and business management."},"description":{"type":"string","description":"Long-form description providing marketing and business context for the bundle."},"status":{"type":"string","description":"Bundle status."},"current_price":{"type":"number","description":"Bundle price."},"created_at":{"type":"string","format":"date-time","description":"Bundle creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Bundle last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Bundle soft delete timestamp, or null if active."},"items":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceProductBundle.IBundleItem"},"description":"Bundle component items (child products/variants)."}},"required":["id","parent_product_id","bundle_code","name","status","current_price","created_at","updated_at","items"],"description":"Full product bundle entity representation as per ai_commerce_product_bundles."},"IAiCommerceProductImage.IRequest":{"type":"object","properties":{"productId":{"type":"string","description":"UUID of the parent product to filter images for."},"locale":{"type":"string","description":"Locale/language code to filter displayed image versions (e.g., 'en-US', 'ko-KR')."},"sort":{"type":"string","description":"Sort field for image selection."},"order":{"oneOf":[{"const":"asc","description":"Sort order."},{"const":"desc","description":"Sort order."}],"description":"Sort order."},"page":{"type":"integer","description":"Page number for paginated results."},"limit":{"type":"integer","description":"Records per page for pagination."}},"required":[],"description":"Request body for paginating and searching product images associated with a product.\n\nSupports filtering by product, locale, and supports sort and pagination for large product image galleries."},"IAiCommerceProductImage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the product image record as stored in ai_commerce_product_images. Always a UUID."},"product_id":{"type":"string","format":"uuid","description":"UUID of the parent product this image belongs to. References ai_commerce_products.id."},"attachment_id":{"type":"string","format":"uuid","description":"UUID identifying the uploaded attachment file linked to this image. References ai_commerce_attachments.id."},"display_order":{"type":"integer","description":"Numeric order (ascending) for this image in product image arrays. Used for primary image selection and gallery sequencing."},"locale":{"oneOf":[{"type":"string","description":"BCP 47 locale (e.g., en-US, ko-KR) for this image, or omitted/null for default."},{"type":"null"}],"description":"Optional locale of the image if localized, null/default for non-localized."}},"required":["id","product_id","attachment_id","display_order"],"description":"Product image record for a product, as in ai_commerce_product_images table. Includes all persisted fields and metadata for UI/photo gallery rendering. Used as response type for image detail and image list/indexing endpoints. References only persisted properties as described in schema. Does not include attachment metadata—see IAiCommerceAttachment for file information."},"IAiCommerceProductImage.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"UUID of the parent product for which this image is being uploaded. Must reference an existing ai_commerce_products.id."},"attachment_id":{"type":"string","format":"uuid","description":"UUID identifier of the attachment being referenced as the image source. Must reference an existing ai_commerce_attachments.id."},"display_order":{"type":"integer","description":"Display order (ascending) for this image in the product's image gallery. 0 indicates the primary/default image. Used for UI sorting."},"locale":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional locale (e.g., en-US, ko-KR) for localization of images in multi-region catalogs. If omitted or null, image is default/global."}},"required":["product_id","attachment_id","display_order"],"description":"Request body for creating a new product image record linked to a product. Used for admin or seller routes for uploading/associating images. Required fields are defined in the database schema."},"IAiCommerceProductImage.IUpdate":{"type":"object","properties":{"attachment_id":{"type":"string","format":"uuid","description":"If supplied, updates the linked attachment file for this product image. Must reference an existing ai_commerce_attachments.id."},"display_order":{"type":"integer","description":"If supplied, updates the display/sort order of this image in the product gallery."},"locale":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"If supplied, updates the locale/region code for this image. Null clears localization."}},"required":[],"description":"Request body for updating an existing product image. Only supplied fields are updated; omitted properties are unchanged. Used for PATCH/PUT endpoints by admin or seller. Keys must conform to the property types and constraints described in the schema."},"IAiCommerceProductContent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the product content record from ai_commerce_product_contents."},"product_id":{"type":"string","format":"uuid","description":"UUID of the product this content is associated with. References ai_commerce_products.id."},"content_type":{"type":"string","description":"Type of product content, e.g., 'description', 'detail', 'spec', 'how_to', as defined in the business logic or UIs. Must not exceed schema limits."},"format":{"type":"string","description":"Format of the content, e.g., 'markdown', 'html', 'plain_text' as supported by schema. Must be consistent with input."},"locale":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional locale code (BCP 47, e.g., en-US, ko-KR) for localization. Null or omitted for the product's default language."},"content_body":{"type":"string","description":"Text or rich content to be displayed for this product section. Must not exceed content length limits imposed by schema or UI."},"display_order":{"type":"integer","description":"Integer for ordering this content within the product. Used to sequence blocks in UI or detail pages."}},"required":["id","product_id","content_type","format","content_body","display_order"],"description":"Represents a single structured content entry (description, spec, etc.) for a product as defined by ai_commerce_product_contents. Used for full detail display, editing, or UI navigation."},"IAiCommerceProductContent.IRequest":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"UUID of the product to filter content for. References ai_commerce_products.id. Optional in admin/global queries."},"content_type":{"type":"string","description":"Filter content records to a specific content_type (e.g., 'description', 'spec'). Optional."},"format":{"type":"string","description":"Filter by content format, such as 'markdown', 'html', 'plain_text'. Optional."},"locale":{"type":"string","description":"Restrict to a specific locale/BCP 47 tag (e.g., 'en-US'). Optional; if omitted, returns all locales."},"search":{"type":"string","description":"Full-text search string to filter content body or meta fields. Optional."},"page":{"type":"integer","description":"Page index for pagination result set. Optional; default varies by implementation."},"limit":{"type":"integer","description":"Maximum number of records to return per page. Optional; default varies by implementation."},"sortBy":{"type":"string","description":"Field name to sort results by (e.g., 'display_order', 'content_type'). Optional."},"order":{"oneOf":[{"const":"asc","description":"Sort direction for ordering (ascending or descending). Only 'asc' or 'desc' allowed. Optional; default is implementation-defined."},{"const":"desc","description":"Sort direction for ordering (ascending or descending). Only 'asc' or 'desc' allowed. Optional; default is implementation-defined."}],"description":"Sort direction for ordering (ascending or descending). Only 'asc' or 'desc' allowed. Optional; default is implementation-defined."}},"required":[],"description":"Request query body for searching, filtering, and paginating product content records. Follows IAiCommerceProductContent.IRequest TypeScript namespace."},"IAiCommerceProductContent.ICreate":{"type":"object","description":"DTO for creating a new product content record. Used for POST /products/{productId}/contents. Only the properties listed here may be used when creating new content records.","properties":{"content_type":{"type":"string","description":"Type of content block for the product (e.g., 'description', 'detail', 'spec', 'instruction', etc.). Must follow the available content types defined in the business logic or configuration. See ai_commerce_product_contents.content_type for reference."},"format":{"type":"string","description":"Format for this content block (e.g., 'html', 'markdown', 'plain_text'). See ai_commerce_product_contents.format."},"locale":{"oneOf":[{"type":"string","description":"Language/region code for this content, such as 'en-US', 'ko-KR', etc. May be null for default."},{"type":"null"}],"description":"Language/region code for this content, such as 'en-US', 'ko-KR', etc. May be null for default."},"content_body":{"type":"string","description":"The actual content data. Maximum 10,000 characters. See ai_commerce_product_contents.content_body."},"display_order":{"type":"integer","description":"Order (ascending) for display of this content among contents for the same product. See ai_commerce_product_contents.display_order."}},"required":["content_type","format","content_body","display_order"]},"IAiCommerceProductContent.IUpdate":{"type":"object","description":"DTO for updating a product content record. Used for PUT /products/{productId}/contents/{contentId}. All properties are optional and may be sent for partial updates.","properties":{"content_type":{"type":"string","description":"Type of content block for the product (see create DTO)."},"format":{"type":"string","description":"Format for this content block (see create DTO)."},"locale":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Language/region code or null to default."},"content_body":{"type":"string","description":"The updated content data. Up to 10,000 characters."},"display_order":{"type":"integer","description":"New display order value."}},"required":[]},"IAiCommerceProductSeo":{"type":"object","description":"Product SEO/search metadata record. This type covers all fields in the ai_commerce_product_seo table and is returned for GET product SEO endpoints. Values may be null where the database supports it.","properties":{"id":{"type":"string","description":"System-assigned unique SEO record ID. UUID format."},"product_id":{"type":"string","description":"Parent product's UUID. See ai_commerce_product_seo.product_id."},"seo_title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO page title for this product (localized or default). May be null."},"seo_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO meta description for this product. May be null."},"canonical_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Canonical/public URL to the product. May be null."},"seo_keywords":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO keywords (comma-separated). May be null."},"og_image_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Image URL for OpenGraph/social sharing. May be null."}},"required":["id","product_id"]},"IAiCommerceProductSeo.IUpdate":{"type":"object","description":"DTO for updating/creating product SEO metadata. Used for PUT /products/{productId}/seo endpoints. All properties are optional; null may be supplied (to clear or unset).","properties":{"seo_title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO page title for this product (localized or default)."},"seo_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO meta description text."},"canonical_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Canonical or main URL for product page (may be null/empty to clear)."},"seo_keywords":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"SEO keywords (may be null/empty to clear)."},"og_image_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"OpenGraph/social image URL (may be null/empty to clear)."}},"required":[]},"IAiCommerceProductLegalCompliance":{"type":"object","description":"Legal/compliance metadata record for a product. Based on the ai_commerce_product_legal_compliance table. Returned by GET operations (public/readable) or as part of product detail. Many fields may be nullable for non-compliance or old products. Refer to schema and description for details.","properties":{"id":{"type":"string","description":"Unique identifier for this compliance row. UUID."},"product_id":{"type":"string","description":"Parent product's UUID. See ai_commerce_product_legal_compliance.product_id."},"compliance_region":{"type":"string","description":"Jurisdiction (country/region) for this compliance entry. E.g., 'KR', 'EU', 'US'."},"certification_numbers":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated list of certification, approval, or regulatory numbers for this product in the specified region. May be null for non-required."},"restricted_age":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum age for purchase (may be null if not age-restricted)."},"hazard_flag":{"type":"boolean","description":"True if product is hazardous/restricted/special handling."},"compliance_status":{"type":"string","description":"Current compliance status: 'pending', 'approved', 'rejected', 'expired', etc."},"last_reviewed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO-8601 date-time of last compliance review. Null if never reviewed."},"evidence_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Serialized JSON describing evidence or attachments for compliance. May be null if no evidence present."}},"required":["id","product_id","compliance_region","hazard_flag","compliance_status"]},"IAiCommerceProductLegalCompliance.IUpdate":{"type":"object","properties":{"compliance_region":{"type":"string","description":"Jurisdiction code for which this compliance entry applies. Must match a recognized jurisdiction string as defined by the business logic or region mapping."},"certification_numbers":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated list of certificate or approval numbers required for the product's regulatory or compliance status in this region. May be null if not applicable."},"restricted_age":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum age required for purchase/use under local law if applicable, as per compliance check. Omit or set to null for unrestricted items."},"hazard_flag":{"type":"boolean","description":"True if the item is hazardous, restricted, or requires special handling in this jurisdiction. False otherwise."},"compliance_status":{"type":"string","description":"Current compliance workflow status for the product in this region. Examples: 'pending', 'approved', 'rejected', 'expired'. Must match one of the allowed domain status names."},"last_reviewed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the last compliance check or regulatory review for this product in this jurisdiction. Use ISO 8601 UTC format. May be null if new or never reviewed."},"evidence_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON-encoded evidence or attachments array (as stringified JSON) for providing supporting compliance documentation, e.g., file IDs, review context. May be null if no evidence attached."}},"required":["compliance_region","hazard_flag","compliance_status"],"description":"Upsert legal/compliance metadata for a product in a given region or jurisdiction. This entity reflects the structure of ai_commerce_product_legal_compliance and must be used only with actual fields existing in the schema. Required fields: compliance_region (region code), hazard_flag (bool), compliance_status (business status). Optional fields: certification_numbers, restricted_age, last_reviewed_at, evidence_json."},"IAiCommerceProductCategoryBindings.IRequest":{"type":"object","properties":{"product_id":{"type":"string","description":"Filter by product UUID."},"category_id":{"type":"string","description":"Filter by category UUID."},"created_after":{"type":"string","format":"date-time","description":"If specified, only bindings created after this ISO date are returned."},"created_before":{"type":"string","format":"date-time","description":"If specified, only bindings created before this ISO date are returned."},"sort_by":{"type":"string","description":"Sort by field. Allowed fields: 'created_at', 'category_id'."},"sort_order":{"oneOf":[{"const":"asc","description":"Sorting order. Allowed values: 'asc', 'desc'."},{"const":"desc","description":"Sorting order. Allowed values: 'asc', 'desc'."}],"description":"Sorting order. Allowed values: 'asc', 'desc'."},"page":{"type":"integer","description":"Page number for paginated results. If not specified, defaults to 1."},"limit":{"type":"integer","description":"How many records to return per page. If not specified, use platform default (e.g., 20 or 50)."}},"required":[],"description":"Request type for paginated/filtered product-category binding queries. Used by sellers and admins."},"IAiCommerceProductCategoryBindings":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the product-category binding (UUID, PK)."},"product_id":{"type":"string","description":"Unique identifier for the product (UUID, FK)."},"category_id":{"type":"string","description":"Unique identifier for the category (UUID, FK)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this binding was created in ISO 8601 UTC format."}},"required":["id","product_id","category_id","created_at"],"description":"Represents the association between a product and a category. This is a join table entity from ai_commerce_product_category_bindings, tracking assignments of products to categories for discovery, filtering, and analytics. Does not inline product/category, only the IDs."},"IAiCommerceProductCategoryBindings.ICreate":{"type":"object","properties":{"category_id":{"type":"string","description":"Unique identifier of the category to which the product will be assigned (UUID, FK)."}},"required":["category_id"],"description":"Request DTO for creating a product-category binding. Only category_id is required; product ID is inferred from path or context."},"IAiCommerceProductSectionBinding.IRequest":{"type":"object","properties":{"product_id":{"type":"string","description":"Filter by product UUID (FK)."},"section_id":{"type":"string","description":"Filter by section UUID (FK)."},"sort_by":{"type":"string","description":"Field by which to sort the results. Allowed values: 'section_id', 'product_id', 'display_order', 'created_at'."},"sort_order":{"oneOf":[{"const":"asc","description":"Sorting order: 'asc' or 'desc'."},{"const":"desc","description":"Sorting order: 'asc' or 'desc'."}],"description":"Sorting order: 'asc' or 'desc'."},"page":{"type":"integer","description":"Page number for paginated queries. Defaults to 1 unless specified."},"limit":{"type":"integer","description":"Page size (number of records per page). Platform default if omitted."}},"required":[],"description":"Request DTO for product-section binding/paginated queries in ai_commerce_product_section_bindings. May be used by sellers or admins for advanced section-product mapping management."},"IAiCommerceProductSectionBinding":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this product-section binding record. Corresponds to the primary key."},"product_id":{"type":"string","format":"uuid","description":"The unique identifier of the referenced product (foreign key to ai_commerce_products.id)."},"section_id":{"type":"string","format":"uuid","description":"The unique identifier of the referenced section (foreign key to ai_commerce_sections.id)."},"display_order":{"type":"integer","description":"The display order for the product within the section. Used to establish ordering for merchandising or curation."}},"required":["id","product_id","section_id","display_order"],"description":"Represents a binding between a product and a merchandising section in ai_commerce_product_section_bindings. Used for displaying products in specific channel sections, supports advanced ordering and curation."},"IAiCommerceProductSectionBinding.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"The unique identifier of the product to bind (ai_commerce_products.id)"},"section_id":{"type":"string","format":"uuid","description":"The unique identifier of the section to bind the product to (ai_commerce_sections.id)"},"display_order":{"type":"integer","description":"Ordering number for the product within the section."}},"required":["product_id","section_id","display_order"],"description":"Request body type for creating a new product-section binding (ai_commerce_product_section_bindings)"},"IAiCommerceProductSnapshot.IRequest":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Product ID to filter snapshots. Optional."},"event_type":{"type":"string","description":"Filter by event type (e.g., 'create', 'update', 'compliance_review'). Optional."},"actor_id":{"type":"string","format":"uuid","description":"Filter snapshots by the actor (user/admin) who triggered the event. Optional."},"page":{"type":"integer","description":"Page number for pagination. Optional."},"limit":{"type":"integer","description":"Number of entries per page for pagination. Optional."}},"required":[],"description":"Search and pagination query for fetching product snapshots (ai_commerce_product_snapshots). Use filters and pagination to locate desired records."},"IAiCommerceProductSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product snapshot."},"product_id":{"type":"string","format":"uuid","description":"UUID of the parent product whose state was snapshotted."},"event_type":{"type":"string","description":"Event that triggered the snapshot (such as 'create', 'update', 'price_change', etc.)."},"actor_id":{"type":"string","format":"uuid","description":"ID of the user/admin who triggered the snapshot event."},"snapshot_json":{"type":"string","description":"Serialized JSON snapshot of the full product state at this point in time."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this snapshot was created."}},"required":["id","product_id","event_type","actor_id","snapshot_json","created_at"],"description":"Immutable, append-only snapshot of product state for audit, compliance, or rollback. Matches ai_commerce_product_snapshots schema."},"IAiCommerceProductAuditLog.IRequest":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Product ID to filter audit logs. Optional."},"event_type":{"type":"string","description":"Type of event logged (e.g., 'create', 'update', 'compliance_review'). Optional."},"actor_id":{"type":"string","format":"uuid","description":"Filter audit events performed by a particular user/admin. Optional."},"page":{"type":"integer","description":"Pagination page number. Optional."},"limit":{"type":"integer","description":"Pagination page size. Optional."}},"required":[],"description":"Request and filter parameters for searching product audit logs (ai_commerce_product_audit_logs). Supports pagination and common filtering."},"IAiCommerceProductAuditLog":{"type":"object","properties":{"id":{"type":"string","description":"Primary key of the product audit log entry."},"product_id":{"type":"string","description":"Product identifier this audit log entry is associated with."},"event_type":{"type":"string","description":"Event/action performed (create, update, compliance_review, price_change, content_edit, etc.)."},"actor_id":{"type":"string","description":"ID of the actor (user/admin/system) who performed the audit action."},"before_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON stringified state before the action (null for create events)."},"after_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON stringified state after the action (null for deletes)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the audit log was created (ISO 8601)."}},"required":["id","product_id","event_type","actor_id","created_at"],"description":"Product audit log entity, immutable entry for capturing historical edit/compliance/evidence for a product, as per ai_commerce_product_audit_logs table."},"IAiCommerceTag.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"Full or partial tag name filter; case-insensitive search."},"status":{"type":"string","description":"Status enum filter (active, under_review, suspended, deleted)."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: include only tags created after this date/time."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: include only tags created before this date/time."},"updated_at_from":{"type":"string","format":"date-time","description":"Filter: include only tags updated after this date/time."},"updated_at_to":{"type":"string","format":"date-time","description":"Filter: include only tags updated before this date/time."},"page":{"type":"integer","minimum":1,"description":"Page number for paginated listing (default 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Records per page (default 20, max 100)."}},"required":[],"description":"Request DTO for searching, filtering, and paginating tags for admin discovery interfaces."},"IAiCommerceTag":{"type":"object","properties":{"id":{"type":"string","description":"Primary key; UUID of the tag entity."},"name":{"type":"string","description":"Tag label (alphanumeric, globally unique, used in search/discovery modules)."},"description":{"type":"string","description":"Optional business/contextual description for moderation and analytics."},"status":{"type":"string","description":"Status string (enum: active, under_review, suspended, deleted), used for platform moderation."},"created_at":{"type":"string","format":"date-time","description":"Tag creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Tag last update timestamp (ISO 8601)."}},"required":["id","name","status","created_at","updated_at"],"description":"Tag entity for product/discovery/analytics modules in aiCommerce. Contains moderation status, display label, timestamps, and context. Primary business key: name (unique); moderation key: status."},"IAiCommerceTag.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"New tag label (case-insensitive alphanumeric, unique among tags)."},"status":{"type":"string","description":"Initial status value for the new tag, must be one of business enum (e.g., 'active', 'under_review')."},"description":{"type":"string","description":"Optional moderation/business/context description for the tag."}},"required":["name","status"],"description":"Payload for creating a new tag (admin/moderator interface). Uniqueness enforced on name; description is optional."},"IAiCommerceTag.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Tag label to update (case-insensitive alphanumeric, must remain unique)."},"status":{"type":"string","description":"Updated status value for the tag ('active', 'under_review', etc.)."},"description":{"type":"string","description":"Updated description (can be changed for moderation/business context)."}},"required":["name","status"],"description":"Payload for fully updating tag properties. Used in tag moderation, curation, or analytics tuning."},"IAiCommerceTagModeration.IRequest":{"type":"object","properties":{"tagId":{"type":"string","format":"uuid","description":"The tag's unique identifier to filter moderation events (optional)"},"action":{"type":"string","description":"Filter by moderation action (approve/reject/flag/suspend) (optional)"},"fromDate":{"type":"string","format":"date-time","description":"ISO 8601 string for filtering moderation records created after this time (optional)"},"toDate":{"type":"string","format":"date-time","description":"ISO 8601 string for filtering moderation records created before this time (optional)"},"moderatorId":{"type":"string","format":"uuid","description":"Filter to moderation events performed by the specified moderator/admin (optional)"},"page":{"type":"integer","description":"Page number for pagination (optional)"},"limit":{"type":"integer","description":"Number of results per page"}},"description":"DTO for searching/moderation log paging for tag moderation events. Fields are optional.","required":[]},"IAiCommerceTagModeration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"ai_commerce_tag_id":{"type":"string","format":"uuid","description":"Associated tag's id for this moderation event."},"moderation_action":{"type":"string","description":"Type of moderation taken: 'approve', 'reject', 'flag', 'suspend'."},"moderated_by":{"type":"string","format":"uuid","description":"Moderator's admin user id."},"moderation_reason":{"type":"string","description":"Description/rationale for moderation action (optional)."},"created_at":{"type":"string","format":"date-time","description":"Moderation event creation timestamp (ISO 8601 format)."}},"required":["id","ai_commerce_tag_id","moderation_action","moderated_by","created_at"],"description":"Moderation log entry for tags, capturing audit fields, action taken, moderator and reason."},"IAiCommerceProductTag.IRequest":{"type":"object","properties":{"ai_commerce_product_id":{"type":"string","format":"uuid","description":"If provided, filters tag binding records to this product"},"ai_commerce_tag_id":{"type":"string","format":"uuid","description":"If provided, filters to this tag"},"page":{"type":"integer","description":"Page number for pagination (optional)"},"limit":{"type":"integer","description":"Number of results per page"}},"description":"Query DTO for searching (filtering/pagination) over product-tag bindings.","required":[]},"IAiCommerceProductTag":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the binding."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"The product this binding is attached to."},"ai_commerce_tag_id":{"type":"string","format":"uuid","description":"The tag this binding refers to."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601)"}},"required":["id","ai_commerce_product_id","ai_commerce_tag_id","created_at"],"description":"Product-tag binding entity (join table); associates a tag with a product for discovery/search."},"IAiCommerceProductTag.ICreate":{"type":"object","properties":{"ai_commerce_product_id":{"type":"string","format":"uuid","description":"UUID of the product to tag."},"ai_commerce_tag_id":{"type":"string","format":"uuid","description":"UUID of the tag to assign to the product."}},"required":["ai_commerce_product_id","ai_commerce_tag_id"],"description":"DTO for creating a new product-tag association (join table row)."},"IAiCommerceProductTag.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"(Optional) Status or state of the tag binding (e.g., 'active', 'inactive', 'suspended'). This may be used for soft moderation or business review purposes."},"note":{"type":"string","description":"(Optional) Moderation or business note for the tag binding update. Used for audit, evidence, or additional context."}},"required":[],"description":"Update object for ai_commerce_product_tags, representing changes to status or business note for product-tag association. Used in moderation, automated curation, or business audit flows. All properties are optional; schema allows partial update patterns."},"IAiCommerceTagModeration.ICreate":{"type":"object","properties":{"moderation_action":{"type":"string","description":"Moderation action performed on the tag. Acceptable values: 'approve', 'reject', 'flag', 'suspend'. Required."},"moderation_reason":{"type":"string","description":"(Optional) Business/workflow reason for moderation. Used for compliance, business audit, or moderation record clarity."}},"required":["moderation_action"],"description":"Create object for moderation record (ai_commerce_tag_moderation). Used for admins to apply or record a moderation action to a tag entity. Includes required moderation_action (enum allowed), optional moderation_reason for audit."},"IAiCommerceTagModeration.IUpdate":{"type":"object","properties":{"moderation_action":{"type":"string","description":"(Optional) Updated moderation action for the tag. Allowed values: 'approve', 'reject', 'flag', 'suspend'. Not required; schema allows partial/patched update."},"moderation_reason":{"type":"string","description":"(Optional) Updated business reason for moderation change. Used for audit and for record keeping."}},"required":[],"description":"Update object for a tag moderation record. Either field may be supplied independently for patch-like updates; both are optional. Business logic applies for valid transitions."},"IAiCommerceTrendingProduct.IRequest":{"type":"object","properties":{"keyword":{"type":"string","description":"(Optional) Search keyword filtering on product name, code, or search fields. Used for free-form search and discovery optimization."},"min_score":{"type":"number","description":"(Optional) Filter minimum analytics score for trending threshold. Inclusive boundary."},"max_score":{"type":"number","description":"(Optional) Filter maximum analytics score for search. Inclusive boundary."},"is_manual_override":{"type":"boolean","description":"(Optional) Filter for manually overridden trending entries. True=only manual, False=only auto, omitted=all."},"created_from":{"type":"string","format":"date-time","description":"(Optional) ISO8601 start date to filter created_at field (inclusive)."},"created_to":{"type":"string","format":"date-time","description":"(Optional) ISO8601 end date to filter created_at field (inclusive)."},"sort":{"type":"string","description":"(Optional) Field to sort by (e.g., 'analytics_score', 'created_at'). Prepend '-' for descending order (e.g., '-analytics_score'). Must match available properties."},"page":{"type":"integer","description":"(Optional) Page number for pagination (starting from 1)."},"limit":{"type":"integer","description":"(Optional) Page size for pagination. Platform default/maximum applies if omitted."}},"required":[],"description":"Request object for searching/paginating trending product entries. All fields are optional for flexible query construction. Relates to ai_commerce_trending_products table."},"IAiCommerceTrendingProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of trending product entry (UUID)."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"Target product being reported as trending (UUID). ForeignKey to ai_commerce_products."},"analytics_score":{"type":"number","description":"Trending analytics score (float, multi-dimensional factors). Must reflect computed trend."},"is_manual_override":{"type":"boolean","description":"Whether this entry was created/overridden manually by admin (True) or analytics only (False)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for trending entry (ISO 8601 datetime, in UTC). Read-only."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for trending entry (ISO 8601, UTC). Read-only."}},"required":["id","ai_commerce_product_id","analytics_score","is_manual_override","created_at","updated_at"],"description":"Trending product entry returned from ai_commerce_trending_products. Represents an individual trending status record for a product, with analytics score, override flag, and full audit history. Read-only; all required fields present."},"IAiCommerceTrendingProduct.ICreate":{"type":"object","properties":{"ai_commerce_product_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) of the product to be marked as trending. Sourced from ai_commerce_products.id. Required."},"analytics_score":{"type":"number","description":"The analytics-based numeric score determining the trending weight for ranking and selection. Required."},"is_manual_override":{"type":"boolean","description":"Optional. If true, overrides algorithmic trending and manually pins product as trending for administrative campaign/business override purposes."}},"required":["ai_commerce_product_id","analytics_score"],"description":"Payload for creating a new trending product in ai_commerce_trending_products. This payload establishes trending status for a product, assigning a trending analytics score and (optionally) a manual override flag per business rules."},"IAiCommerceTrendingProduct.IUpdate":{"type":"object","properties":{"analytics_score":{"type":"number","description":"Optional. Adjusts the trending analytics score for this entry. Used for real-time re-ranking."},"is_manual_override":{"type":"boolean","description":"Optional. Change manual override/promotion flag. If true, admin manually sustains trending status beyond analytics triggers."}},"required":[],"description":"Payload for updating an existing trending product's analytics score or manual override flag in ai_commerce_trending_products. Enables business-side adjustment for trending campaign management."},"IAiCommerceHighlightedProduct.IRequest":{"type":"object","properties":{"product_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional. Filter results to a specific product by UUID."},"highlighted_by":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional. Filter by admin or seller who created the highlight entry (UUID referencing ai_commerce_admin.id or ai_commerce_seller.id)."},"highlight_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Filter by current highlight status (e.g., active, scheduled, expired)."},"start_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Lower bound for highlight_start_at filtering (ISO 8601 datetime)."},"start_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Upper bound for highlight_start_at filtering (ISO 8601 datetime)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination. Optional."},"limit":{"type":"integer","minimum":1,"description":"Records per page for pagination. Optional."}},"required":[],"description":"Filter and search criteria for listing highlighted products (ai_commerce_highlighted_products), supporting product/user/time/status filters and standard pagination."},"IAiCommerceHighlightedProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the highlight record (UUID)."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"Reference to the highlighted product's unique id (ai_commerce_products.id)."},"highlighted_by":{"type":"string","format":"uuid","description":"UUID of the seller or admin user who performed the highlight operation (references ai_commerce_admin.id or ai_commerce_seller.id)."},"highlight_start_at":{"type":"string","format":"date-time","description":"Scheduled start time for the product highlight (ISO 8601)."},"highlight_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End time for the highlight schedule (ISO 8601). Optional—null for indefinite highlights."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Business rationale or note for highlighting. String or null."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when highlight record was created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to the highlight record (ISO 8601)."}},"required":["id","ai_commerce_product_id","highlighted_by","highlight_start_at","created_at","updated_at"],"description":"A single highlighted product entity in ai_commerce_highlighted_products, including metadata about scheduling, business rationale, and audit timestamps. Used for admin/seller campaign management and personalized spotlighting."},"IAiCommerceHighlightedProduct.ICreate":{"type":"object","properties":{"ai_commerce_product_id":{"type":"string","format":"uuid","description":"Unique identifier of the product to highlight. References ai_commerce_products.id. Required."},"highlighted_by":{"type":"string","format":"uuid","description":"UUID of the admin or seller user assigning the highlight (ai_commerce_admin.id or ai_commerce_seller.id). Required."},"highlight_start_at":{"type":"string","format":"date-time","description":"Scheduled highlight window start time (ISO 8601/RFC 3339). Required."},"highlight_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Scheduled end time; null for open-ended."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Rationale, campaign code, or business note for the highlight."}},"required":["ai_commerce_product_id","highlighted_by","highlight_start_at"],"description":"Payload for creating a new highlighted product for spotlighting or promotional use in ai_commerce_highlighted_products. Includes mandatory product ref, creator/ref, start time, and optional end time or campaign note."},"IAiCommerceHighlightedProduct.IUpdate":{"type":"object","properties":{"highlight_start_at":{"type":"string","format":"date-time","description":"The timestamp for when highlighting of the product begins. This field must be an ISO8601 date-time string. Used to schedule a product to become highlighted at a specific date and time."},"highlight_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp for when highlighting ends. If null, highlight runs indefinitely. Must be ISO8601 date-time if provided."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business reason or context for the update. Used for campaign analytics, internal explanation, or tagging. Can be null."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) of the product being highlighted."},"highlighted_by":{"type":"string","format":"uuid","description":"UUID of the user (admin/seller) who is assigning or updating the highlight status."}},"required":[],"description":"Update (PATCH) request schema for an aiCommerce highlighted product. This DTO allows scheduling highlight windows, specifying a business reason, and referencing the relevant product and curator.\n\nReferences table: ai_commerce_highlighted_products.\n\nOnly properties listed may be updated."},"IAiCommerceSearchHistory.IRequest":{"type":"object","properties":{"query_string":{"type":"string","description":"Search keyword or phrase to filter search histories by query text."},"search_timestamp_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) for search timestamp. ISO 8601 date-time string."},"search_timestamp_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) for search timestamp. ISO 8601 date-time string."},"ai_commerce_buyer_id":{"type":"string","format":"uuid","description":"UUID of buyer/user for whom to filter search histories. Omit or null for all users."},"locale":{"type":"string","description":"Locale filter for historical queries (e.g., \"ko-KR\")."},"page":{"type":"integer","description":"Page number (1-based). Optional. Default: 1 if omitted."},"limit":{"type":"integer","description":"Number of records per page. Optional. Default: 20 if omitted."}},"required":[],"description":"Filter/search and pagination type for aiCommerce user search history log listing.\n\nProvides advanced search capability for querying historical search entries by query, timestamp, buyer, and locale. Supports pagination for UI/analytics workloads."},"IAiCommerceSearchHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the search history record."},"ai_commerce_buyer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of buyer/user submitting the search. May be null for anonymous search."},"query_string":{"type":"string","description":"Text of the search input by user."},"filters_applied":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON-encoded (string) representing the filters used for this search event, or null if none."},"result_count":{"type":"integer","description":"Total number of results returned from the search event."},"search_timestamp":{"type":"string","format":"date-time","description":"ISO 8601 date-time string for search event."},"locale":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Locale string for the search context (e.g., 'en-US', 'ko-KR'), or null if not specified."}},"required":["id","query_string","result_count","search_timestamp"],"description":"Single row from ai_commerce_search_histories, representing a user (or guest) search submission and analytic context. Provides details for analytics, personalization, or compliance review."},"IAiCommerceRecommendationSnapshot.IRequest":{"type":"object","properties":{"ai_commerce_buyer_id":{"type":"string","format":"uuid","description":"UUID of the buyer to filter recommendation snapshots (optional)."},"snapshot_timestamp_from":{"type":"string","format":"date-time","description":"Lower bound of snapshot timestamp (inclusive, ISO8601)."},"snapshot_timestamp_to":{"type":"string","format":"date-time","description":"Upper bound of snapshot timestamp (inclusive, ISO8601)."},"page":{"type":"integer","description":"Page number for pagination (1-based)."},"limit":{"type":"integer","description":"Number of records per page for pagination."}},"required":[],"description":"Request query DTO for searching/paginating recommendation snapshot logs. Allows advanced analytics filtering by buyer, snapshot timestamp, and paging."},"IAiCommerceRecommendationSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the recommendation snapshot event (uuid)."},"ai_commerce_buyer_id":{"type":"string","format":"uuid","description":"UUID of the buyer/user who received the recommendations."},"snapshot_timestamp":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601 format) indicating when the snapshot event occurred."},"recommendations_data":{"type":"string","description":"JSON-serialized recommendations list (typically an array/object stringified for audit/compliance)."},"context_data":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON-encoded string with recommendation context (may include session, search data, or event triggers; nullable)."}},"required":["id","ai_commerce_buyer_id","snapshot_timestamp","recommendations_data"],"description":"Single row from ai_commerce_recommendation_snapshots. Encapsulates a point-in-time log of recommendations issued to a user, with full context, for compliance, analytics, or responsible-AI auditing."},"IAiCommerceSearchAnalytics.IRequest":{"type":"object","properties":{"aggregation_key":{"type":"string","description":"Search analytics aggregation key, e.g., keyword, filter, or facet used for the analysis period."},"aggregation_value":{"type":"string","description":"Aggregation value (e.g., value of keyword or filter for analytic breakdown)."},"from":{"type":"string","format":"date-time","description":"Start of analysis period (ISO 8601 date or date-time). Optional filter."},"to":{"type":"string","format":"date-time","description":"End of analysis period (ISO 8601 date or date-time). Optional filter."},"page":{"type":"integer","minimum":1,"description":"Result page index, starting from 1."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Page size for results."},"sort":{"type":"string","description":"Sort key (e.g., aggregation_key, aggregation_value, search_count, period_start, etc.)."},"order":{"oneOf":[{"const":"asc","description":"Sort order for result set."},{"const":"desc","description":"Sort order for result set."}],"description":"Sort order for result set."}},"required":[],"description":"Request body for searching and filtering platform search analytics (period, aggregation key, filter/pagination, etc.)."},"IAiCommerceSearchAnalytics":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the search analytics event/row."},"aggregation_key":{"type":"string","description":"Key for aggregation of analytics, such as a query string, filter, or facet."},"aggregation_value":{"type":"string","description":"Value of the aggregation key for analytic grouping (e.g., filter value, query, or segment)."},"search_count":{"type":"integer","description":"Number of searches/events for this aggregation."},"result_total":{"type":"integer","description":"Number of total search results aggregated for this entry."},"analyzed_period_start":{"type":"string","format":"date-time","description":"Start of analytic calculation period (ISO 8601)."},"analyzed_period_end":{"type":"string","format":"date-time","description":"End of analytic calculation period (ISO 8601)."}},"required":["id","aggregation_key","aggregation_value","search_count","result_total","analyzed_period_start","analyzed_period_end"],"description":"Platform search analytics event as stored and used in ai_commerce_search_analytics; includes all analytic and business breakdown details."},"IAiCommerceCart.IRequest":{"type":"object","properties":{"buyer_id":{"type":"string","description":"Buyer user ID to filter carts by."},"store_id":{"type":"string","description":"Store ID to filter carts by."},"status":{"type":"string","description":"Status of shopping cart (active, draft, checked_out, etc.)."},"min_quantity":{"type":"integer","description":"Minimum total quantity of items in cart."},"max_quantity":{"type":"integer","description":"Maximum total quantity of items in cart."},"created_from":{"type":"string","format":"date-time","description":"Earliest creation timestamp for filtering."},"created_to":{"type":"string","format":"date-time","description":"Latest creation timestamp for filtering."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Number of records to return per page."},"sort":{"type":"string","description":"Sort key (e.g., created_at, status, quantity, etc.)."},"order":{"oneOf":[{"const":"asc","description":"Ordering direction for results."},{"const":"desc","description":"Ordering direction for results."}],"description":"Ordering direction for results."}},"required":[],"description":"Full-featured search/filter request for shopping carts, supporting buyer, store, status, date filtering, and pagination."},"IAiCommerceCart":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"System unique identifier of the cart."},"buyer_id":{"type":"string","description":"Buyer user id, if this is a persistent cart."},"store_id":{"type":"string","description":"Store the cart is associated with (if applicable)."},"status":{"type":"string","description":"Cart's workflow/business status (draft, active, checked_out, expired, etc.)."},"total_quantity":{"type":"integer","description":"Total items (quantity sum) in cart."},"created_at":{"type":"string","format":"date-time","description":"Cart creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp the cart was last modified (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete logical removal timestamp; null if not deleted."}},"required":["id","status","total_quantity","created_at","updated_at"],"description":"Complete shopping cart record as stored in ai_commerce_carts; includes all persistent fields and main audit columns."},"IAiCommerceCart.ICreate":{"type":"object","properties":{"buyer_id":{"type":"string","description":"Buyer user id, linking cart for persistence (nullable for guest sessions)."},"store_id":{"type":"string","description":"Store ID the cart is being created for (optional for store-centric logic)."},"status":{"type":"string","description":"Business status for cart upon creation (default: 'active')."},"total_quantity":{"type":"integer","description":"Initial total quantity if known on creation; otherwise defaults to 0."}},"required":[],"description":"Shopping cart creation request body: buyer/store association, status, and optionally initial total quantity."},"IAiCommerceCart.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Status of the cart. Should match business logic constraints; common values include 'draft', 'active', 'checked_out', etc."},"store_id":{"type":"string","format":"uuid","description":"Associated store UUID if changing the store for the cart."},"note":{"type":"string","description":"Optional business logic or custom user note for the cart (if supported by implementation)."}},"required":[],"description":"Request to update a shopping cart, allowing changes to status, store reference, or business metadata. Properties are optional and only supplied when a change is intended. Business logic must enforce allowed status/field transitions. This type maps to non-item-level attributes of ai_commerce_carts."},"IAiCommerceCartItem.IRequest":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Filter cart items by product ID (UUID)."},"variant_id":{"type":"string","format":"uuid","description":"Filter cart items by variant ID (UUID)."},"status":{"type":"string","description":"Filter by item-specific status (e.g., 'active', 'deleted')."},"min_quantity":{"type":"number","description":"Minimum item quantity for range filtering."},"max_quantity":{"type":"number","description":"Maximum item quantity for range filtering."},"added_after":{"type":"string","format":"date-time","description":"Filter for items added after this ISO8601 datetime."},"added_before":{"type":"string","format":"date-time","description":"Filter for items added before this ISO8601 datetime."},"sort_by":{"type":"string","description":"Field to sort by (e.g., 'added_at', 'quantity')."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction ('asc' or 'desc')."},{"const":"desc","description":"Sort direction ('asc' or 'desc')."}],"description":"Sort direction ('asc' or 'desc')."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (1-based)."},"page_size":{"type":"integer","minimum":1,"description":"Number of items per page for pagination."}},"required":[],"description":"Filter/search/pagination object for listing items in a cart. All fields are optional and only used when supplied."},"IAiCommerceCartItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique cart item ID."},"cart_id":{"type":"string","format":"uuid","description":"Parent cart UUID."},"product_id":{"type":"string","format":"uuid","description":"Product this item refers to (UUID)."},"variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional SKU/variant (UUID)."},{"type":"null"}],"description":"Optional SKU/variant (UUID)."},"quantity":{"type":"integer","minimum":1,"description":"Quantity for this item."},"unit_price":{"type":"number","description":"Unit price at time of item addition (for compliance/snapshot)."},"item_total":{"type":"number","description":"Total price for this cart item (quantity × unit price, at time of update)."},"added_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when item added to cart."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp of last modification."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If item is soft-deleted, deletion timestamp; else null."},{"type":"null"}],"description":"If item is soft-deleted, deletion timestamp; else null."},"options":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartItemOption"},"description":"Option name/value pairs selected for this cart item (may be empty array or omitted if not used)."},{"type":"null"}],"description":"Option name/value pairs selected for this cart item (may be empty array or omitted if not used)."}},"required":["id","cart_id","product_id","quantity","unit_price","item_total","added_at","updated_at"],"description":"Represents a cart item (ai_commerce_cart_items table row) in a shopping cart, including optional variant, options, quantity, pricing, and modification timestamps. Soft deletion is reflected via deleted_at. Option combinations are listed in options."},"IAiCommerceCartItem.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Add this product to the cart (UUID)."},"variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Variant/SKU (UUID) to add; nullable if product has no options."},{"type":"null"}],"description":"Variant/SKU (UUID) to add; nullable if product has no options."},"quantity":{"type":"integer","minimum":1,"description":"Number of units to add. Must be >= 1."},"options":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartItemOption"},"description":"Selected options (option_name/option_value pairs). Optional; include only if item has options to select."},{"type":"null"}],"description":"Selected options (option_name/option_value pairs). Optional; include only if item has options to select."}},"required":["product_id","quantity"],"description":"Request structure for creating a cart item. Product ID and quantity are required; variant_id and options are optional. Options are key/value array for item configuration."},"IAiCommerceCartItem.IUpdate":{"type":"object","properties":{"variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update to this variant/SKU if changing option selection."},{"type":"null"}],"description":"Update to this variant/SKU if changing option selection."},"quantity":{"type":"integer","minimum":1,"description":"Change quantity for this cart item (must be >=1 or business-specified minimum)."},"options":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartItemOption"},"description":"Full set of options to replace current option selection. Optional."},{"type":"null"}],"description":"Full set of options to replace current option selection. Optional."}},"required":[],"description":"Update one or more fields of a cart item: change quantity, select new variant, or modify the current option array. All fields optional."},"IAiCommerceCartItemOption":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of this cart item option selection."},"cart_item_id":{"type":"string","format":"uuid","description":"The UUID referencing the cart item to which this option selection belongs."},"option_name":{"type":"string","description":"Name of the option as configured by the business logic (e.g., 'color', 'size')."},"option_value":{"type":"string","description":"The selected value for the option (e.g., 'red', 'XL')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this option selection was made (ISO8601)."}},"required":["id","cart_item_id","option_name","option_value","created_at"],"description":"Represents a single option selection for a cart item (e.g., color or size on a product added to cart). Used for downstream order, analytics, and fulfillment logic."},"IAiCommerceCartItemOption.IRequest":{"type":"object","properties":{"cartId":{"type":"string","format":"uuid","description":"The UUID identifying the cart whose item options to search."},"optionName":{"type":"string","description":"Search keyword for filtering option names. Partial match, case-insensitive."},"page":{"type":"integer","description":"Page number for pagination (1-based).","minimum":1},"limit":{"type":"integer","description":"Maximum number of items to return per page."}},"required":["cartId"],"description":"Search and pagination request for listing cart item options belonging to a specific cart. Used to retrieve, filter, and browse option selections for editing, audit, or checkout logic.\n\nReference: ai_commerce_cart_item_options, ai_commerce_cart_items."},"IAiCommerceCartItemOption.ICreate":{"type":"object","properties":{"cart_item_id":{"type":"string","format":"uuid","description":"UUID of the cart item this option is being selected for."},"option_name":{"type":"string","description":"Business-defined option name, such as 'color', 'addon', etc."},"option_value":{"type":"string","description":"User-selected value for the option."}},"required":["cart_item_id","option_name","option_value"],"description":"Request payload for creating a new option selection on a cart item, during cart update or item customization logic."},"IAiCommerceCartItemOption.IUpdate":{"type":"object","properties":{"option_name":{"type":"string","description":"If modifiable, the option name may be changed (business rule: typically immutable except in admin/advanced flows)."},"option_value":{"type":"string","description":"Updated value for the option; e.g., changing from 'Red' to 'Blue'."}},"required":[],"description":"Payload for updating an existing cart item option's selected value."},"IAiCommerceCartSession.IRequest":{"type":"object","properties":{"buyer_id":{"type":"string","format":"uuid","description":"(Optional) Buyer UUID to filter cart sessions by owner."},"session_token":{"type":"string","description":"Session token to filter or search among sessions (full or partial match supported)."},"status":{"type":"string","description":"Session status, e.g., 'active', 'expired', 'merged', etc. (case-insensitive)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (1-based index)."},"limit":{"type":"integer","description":"Number of results per page."}},"required":[],"description":"Search and filter request for listing cart session entities matching buyer, token, or status. Used for buyer session management, cross-device and audit flows."},"IAiCommerceCartSession":{"type":"object","description":"Represents a session for a shopping cart, tracking linkage to buyer and cart objects, authentication token, status, expiration, and audit timestamps. Used for session bridging, cart recovery, guest/member cart merge, and compliance tracing. Maps to the ai_commerce_cart_sessions table in the database, and is central for persistent or cross-device cart experience. See schema for field types and business rules.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the cart session (UUID, PK)."},"buyer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to the buyer who owns this session, or null if guest session."},{"type":"null"}],"description":"Reference to the buyer who owns this session, or null if this is a guest cart session. Optional."},"cart_id":{"type":"string","format":"uuid","description":"Unique identifier to the associated cart (FK, UUID). Required."},"session_token":{"type":"string","description":"Opaque session identifier (token or device/session string)."},"status":{"type":"string","description":"Session status (active, expired, merged, etc.)"},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Session expiration timestamp as ISO8601 string."},{"type":"null"}],"description":"Session expiration timestamp in ISO8601/RFC3339, or null if not set. Optional."},"created_at":{"type":"string","format":"date-time","description":"Cart session creation timestamp (ISO8601, required)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for cart session (ISO8601, required)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when session was soft deleted, or null if active."},{"type":"null"}],"description":"Soft delete timestamp, if session was logically removed. Otherwise null or undefined."}},"required":["id","cart_id","session_token","status","created_at","updated_at"]},"IAiCommerceCartSession.ICreate":{"type":"object","description":"Request payload for creating a new cart session. Maps to ai_commerce_cart_sessions. Required fields include cart_id, session_token, status, created_at, and updated_at. Optional: buyer_id (for member carts), expires_at (for expirable sessions).","properties":{"buyer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to the member buyer for this session (FK to buyer id), or null if guest."},"cart_id":{"type":"string","format":"uuid","description":"Unique cart identifier to link this session to."},"session_token":{"type":"string","description":"Opaque session token string as generated by client/server."},"status":{"type":"string","description":"Current status of session: active, expired, merged, etc."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Session expiration timestamp, if applicable (ISO8601), else null."},"created_at":{"type":"string","format":"date-time","description":"Session creation time (ISO8601/RFC3339, required)."},"updated_at":{"type":"string","format":"date-time","description":"Latest edit or access time (ISO8601/RFC3339, required)."}},"required":["cart_id","session_token","status","created_at","updated_at"]},"IAiCommerceCartSession.IUpdate":{"type":"object","description":"Update payload for modifying a cart session entity. Can change status, session token, expiration, buyer assignment, and updates timestamp. All optional except updated_at, which is required to track last change.","properties":{"buyer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated reference for buyer if changed, or null to unset. Optional."},"session_token":{"type":"string","description":"Current or new session token, if being changed. Optional."},"status":{"type":"string","description":"Session status after update (active, merged, expired, etc.). Optional."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"New expiration timestamp, if being changed; null to clear. Optional."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for this update (required)."}},"required":["updated_at"]},"IAiCommerceCartTemplate.IRequest":{"type":"object","description":"Advanced search and filter payload for cart template (ai_commerce_cart_templates) searching. Controls which templates are retrieved for listing, dashboard, or analytics. Used for filtering by creator, store, template name, active flag, creation date, sorting, and paging.","properties":{"creator_id":{"type":"string","format":"uuid","description":"Searcher can filter by creator's id (admin/seller). Optional."},"store_id":{"type":"string","format":"uuid","description":"Limit templates returned to a specific store id. Optional."},"template_name":{"type":"string","description":"Search or match templates by (partial) name. Optional."},"active":{"type":"boolean","description":"Limit to only active (or inactive) templates."},"created_from":{"type":"string","format":"date-time","description":"Filter for templates created at or after this timestamp (ISO8601 datetime). Optional."},"created_to":{"type":"string","format":"date-time","description":"Filter for templates created at or before this timestamp (ISO8601 datetime). Optional."},"sort_by":{"type":"string","description":"Sort key, one of the template entity's field names."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order, either 'asc' (ascending) or 'desc' (descending)."},{"const":"desc","description":"Sort order, either 'asc' (ascending) or 'desc' (descending)."}],"description":"Sort order, either 'asc' (ascending) or 'desc' (descending)."},"page":{"type":"integer","description":"Page number for result paging (minimum 1). Required."},"limit":{"type":"integer","description":"Maximum number of templates to return per page. Required."}},"required":["page","limit"]},"IAiCommerceCartTemplate":{"type":"object","description":"Represents a shopping cart template (ai_commerce_cart_templates) enabling users or admins to create pre-filled carts for marketing or rapid checkout. Contains metadata for creator, association to store, naming, description, active/archival status, and timestamped audit trail fields.","properties":{"id":{"type":"string","format":"uuid","description":"Unique cart template ID, system-generated UUID."},"creator_id":{"type":"string","format":"uuid","description":"UUID of the admin/seller/creator user of the template."},"store_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to the store this cart template belongs to, or null for global use."},"template_name":{"type":"string","description":"Name/label for the cart template (required, unique per creator)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business/UX description or marketing note for the template, or null."},"active":{"type":"boolean","description":"Whether the template is currently active and available for use."},"created_at":{"type":"string","format":"date-time","description":"Template creation timestamp (ISO8601, required)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the template's last update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when template was soft deleted/logically removed, null if still active."}},"required":["id","creator_id","template_name","active","created_at","updated_at"]},"IAiCommerceCartTemplate.ICreate":{"type":"object","properties":{"creator_id":{"type":"string","format":"uuid","description":"Reference to the admin or seller user who created the cart template. Required. UUID format."},"store_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Store ID to which the template is associated, if store-specific."},{"type":"null"}],"description":"(Optional) Store ID to which the template is associated, if store-specific."},"template_name":{"type":"string","description":"Business name of the cart template. Must be unique per creator. Required."},"description":{"oneOf":[{"type":"string","description":"(Optional) Long-form description of the cart template's business purpose. May be null."},{"type":"null"}],"description":"(Optional) Long-form description of the cart template's business purpose. May be null."},"active":{"type":"boolean","description":"Whether this template is active/available for use. Required."}},"required":["creator_id","template_name","active"],"description":"Payload for creating a cart template, including all required business fields and metadata. Follows the ai_commerce_cart_templates schema."},"IAiCommerceCartTemplate.IUpdate":{"type":"object","properties":{"template_name":{"type":"string","description":"(Optional) New business name for the cart template. Must be unique per creator."},"description":{"oneOf":[{"type":"string","description":"(Optional) Business description for the template."},{"type":"null"}],"description":"(Optional) Business description for the template."},"store_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Store ID the template is now associated with."},{"type":"null"}],"description":"(Optional) Store ID the template is now associated with."},"active":{"type":"boolean","description":"(Optional) Flag indicating if the template remains active and usable."}},"required":[],"description":"Fields for updating a cart template, according to ai_commerce_cart_templates schema. All fields are optional, so partial updates/subset allowed."},"IAiCommerceCartMerge.IRequest":{"type":"object","properties":{"source_cart_id":{"type":"string","format":"uuid","description":"(Optional) ID of the source cart (merged from)."},"target_cart_id":{"type":"string","format":"uuid","description":"(Optional) ID of the target cart (merged to)."},"actor_id":{"type":"string","format":"uuid","description":"(Optional) Buyer (user) or admin who initiated the merge."},"reason":{"type":"string","description":"(Optional) Business reason for the merge filtering/search, e.g. 'login_merge', 'device_switch'."},"created_from":{"type":"string","format":"date-time","description":"(Optional) Start date for searching merge records (inclusive). ISO 8601 format."},"created_to":{"type":"string","format":"date-time","description":"(Optional) End date for searching merge records (inclusive). ISO 8601 format."},"page":{"type":"integer","minimum":1,"default":1,"description":"(Optional) Page number for pagination (starting from 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"(Optional) Records per page for pagination (max 100)."},"sort":{"const":"created_at","description":"(Optional) Which field to sort result by. Only 'created_at' supported."},"order":{"oneOf":[{"const":"asc","description":"(Optional) Sort order for pagination. Accepts 'asc' or 'desc'."},{"const":"desc","description":"(Optional) Sort order for pagination. Accepts 'asc' or 'desc'."}],"description":"(Optional) Sort order for pagination. Accepts 'asc' or 'desc'."}},"required":[],"description":"Search, sorting, and pagination parameters for querying ai_commerce_cart_merges records. All fields are optional."},"IAiCommerceCartMerge":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for cart merge record."},"source_cart_id":{"type":"string","format":"uuid","description":"Reference to the source cart (merged from)."},"target_cart_id":{"type":"string","format":"uuid","description":"Reference to the target cart (merged to; this survives post-merge)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"Buyer or admin who initiated the cart merge. Nullable if automated."},{"type":"null"}],"description":"Buyer or admin who initiated the cart merge. Nullable if automated."},"reason":{"type":"string","description":"Business code, e.g. 'login_merge', 'device_switch', attached as justification for the merge."},"created_at":{"type":"string","format":"date-time","description":"Timestamp the cart merge operation took place (ISO 8601 format, UTC timezone)."}},"required":["id","source_cart_id","target_cart_id","reason","created_at"],"description":"Schema for ai_commerce_cart_merges record, capturing merge event evidence, actors, and reason."},"IAiCommerceCartMerge.ICreate":{"type":"object","properties":{"source_cart_id":{"type":"string","format":"uuid","description":"ID of the cart being merged FROM (discarded after merge). Required."},"target_cart_id":{"type":"string","format":"uuid","description":"ID of the cart being merged TO (receives merged contents). Required."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Buyer or admin who performed the merge. Nullable if system/automated."},{"type":"null"}],"description":"(Optional) Buyer or admin who performed the merge. Nullable if system/automated."},"reason":{"type":"string","description":"Required reason code for merge, e.g. 'login_merge', 'device_switch', 'admin_action'. Required."}},"required":["source_cart_id","target_cart_id","reason"],"description":"Payload to create a new ai_commerce_cart_merges record with references, reason, and audit actor."},"IAiCommerceCartMerge.IUpdate":{"type":"object","properties":{"business_notes":{"type":"string","description":"Optional business notes or internal remarks related to the cart merge."},"investigation_flag":{"type":"boolean","description":"Optional investigation flag for alerting, escalation, or advanced audit processes."}},"required":[],"description":"Payload to update annotatable (business note, flags) fields for a cart merge. Immutable historic fields such as actor, cart IDs, and reason MAY NOT be updated. Only non-core, auxiliary business fields are permitted for modification. Designed for admin/audit curation."},"IAiCommerceCartExpiration.IRequest":{"type":"object","properties":{"cart_id":{"type":"string","format":"uuid","description":"Filter cart expirations by associated cart's UUID."},"actor_id":{"type":"string","format":"uuid","description":"Filter by the actor (admin/system) UUID."},"event_type":{"type":"string","description":"Event type filter. One of: expiration, recovery, retry, auto_reopen."},"start_date":{"type":"string","format":"date","description":"Start of the date range for expiration/recovery event search (ISO 8601, YYYY-MM-DD)."},"end_date":{"type":"string","format":"date","description":"End of the date range for expiration/recovery event search (ISO 8601, YYYY-MM-DD)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (default 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Records per page for pagination (default 20, max 100)."}},"required":[],"description":"Request parameters to filter/search cart expiration (and recovery) records. Used for admin audit, analytics, or compliance review of cart lifecycle events."},"IAiCommerceCartExpiration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the cart expiration/recovery record."},"cart_id":{"type":"string","format":"uuid","description":"FK to the cart whose expiration/recovery this record logs."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the user/admin/system responsible for triggering the event (nullable for auto-expiration)."},{"type":"null"}],"description":"UUID of the user/admin/system responsible for triggering the event (nullable for auto-expiration)."},"event_type":{"type":"string","description":"Event type (expiration, recovery, retry, auto_reopen)."},"details":{"oneOf":[{"type":"string","description":"Detailed business context, manual notes, or automatic description about the cart expiration/recovery event."},{"type":"null"}],"description":"Detailed business context, manual notes, or automatic description about the cart expiration/recovery event."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the expiration or recovery event was logged (ISO 8601 date-time)."}},"required":["id","cart_id","event_type","created_at"],"description":"Represents a single expiration or recovery event for a cart—append-only business record for compliance, recovery, and analytics. Directly models ai_commerce_cart_expirations table in the schema."},"IAiCommerceOrder.IRequest":{"type":"object","properties":{"order_code":{"type":"string","description":"Search by full or partial order code."},"buyer_id":{"type":"string","format":"uuid","description":"Filter orders by associated buyer's UUID."},"channel_id":{"type":"string","format":"uuid","description":"Filter by source channel UUID."},"status":{"type":"string","description":"Order status filter (created, payment_pending, shipped, delivered, cancelled, closed, etc)."},"business_status":{"type":"string","description":"Workflow or business-specific status field for advanced filtering."},"from_date":{"type":"string","format":"date","description":"Start date (inclusive) for filtering orders by creation time (ISO date)."},"to_date":{"type":"string","format":"date","description":"End date (inclusive) for filtering orders by creation time (ISO date)."},"min_total_price":{"type":"number","description":"Minimum total order amount for price-based query filter."},"max_total_price":{"type":"number","description":"Maximum total order amount for price-based query filter."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (default 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Records per page for pagination (default 20, max 100)."},"sort_by":{"type":"string","description":"Field to sort by (created_at, status, order_code, total_price, etc)."},"sort_dir":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc' (default 'desc')."},{"const":"desc","description":"Sort direction: 'asc' or 'desc' (default 'desc')."}],"description":"Sort direction: 'asc' or 'desc' (default 'desc')."}},"required":[],"description":"Filtering and pagination payload for advanced order search/listing. For use by admin or dashboard interfaces; supports all major order query dimensions, pagination, and sorting."},"IAiCommerceOrder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Order's primary key UUID."},"buyer_id":{"type":"string","format":"uuid","description":"UUID for the buyer who placed the order."},"channel_id":{"type":"string","format":"uuid","description":"UUID of the channel from which the order was created."},"order_code":{"type":"string","description":"Unique business/tracking code for display and integrations (e.g., 'ORD-20250001')."},"status":{"type":"string","description":"Required current order status (created, payment_pending, shipped, delivered, cancelled, closed, etc)."},"business_status":{"oneOf":[{"type":"string","description":"Optional workflow context field for advanced automation or custom business rules."},{"type":"null"}],"description":"Optional workflow context field for advanced automation or custom business rules."},"total_price":{"type":"number","description":"Total price for the order, locked in at time of checkout."},"paid_amount":{"type":"number","description":"Amount paid toward total order cost (may be partial until fully paid)."},"currency":{"type":"string","description":"ISO currency code for the order (e.g., 'USD', 'KRW')."},"address_snapshot_id":{"type":"string","format":"uuid","description":"Foreign key referencing the snapshot of the shipping/billing address at order time."},"created_at":{"type":"string","format":"date-time","description":"Order creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the most recent update to the order."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete (logical removal); set if the order is deleted for compliance."},{"type":"null"}],"description":"Soft delete (logical removal); set if the order is deleted for compliance."}},"required":["id","buyer_id","channel_id","order_code","status","total_price","paid_amount","currency","address_snapshot_id","created_at","updated_at"],"description":"Full order entity as persisted in ai_commerce_orders, minus related entities. Used in both response DTOs and for storage/Aggregate logic."},"IAiCommerceOrder.ICreate":{"type":"object","properties":{"buyer_id":{"type":"string","format":"uuid","description":"Unique identifier for the buyer placing the order. Must reference an existing ai_commerce_buyer.id."},"channel_id":{"type":"string","format":"uuid","description":"Unique identifier for the sales channel where the order is placed. Must reference an existing ai_commerce_channels.id."},"order_code":{"type":"string","description":"Unique business/tracking code for the order. Human-readable, e.g., 'ORD-20250001'."},"status":{"type":"string","description":"Initial order status, e.g., 'created', 'payment_pending'."},"total_price":{"type":"number","description":"Total price for the order at checkout. Locked at payment."},"currency":{"type":"string","description":"ISO currency code (e.g., 'KRW', 'USD')."},"address_snapshot_id":{"type":"string","format":"uuid","description":"Reference to the address snapshot (ai_commerce_user_address_snapshots.id) used for this order."},"ai_commerce_order_items":{"type":"array","description":"Line items for this order. Each entry must conform to IAiCommerceOrderItem.ICreate specification.","items":{"$ref":"#/components/schemas/IAiCommerceOrderItem.ICreate"}}},"required":["buyer_id","channel_id","order_code","status","total_price","currency","address_snapshot_id","ai_commerce_order_items"],"description":"Order creation payload. See ai_commerce_orders schema for mapping to DB. Required fields mapped to business rules, with nested order item creation."},"IAiCommerceOrder.IUpdate":{"type":"object","properties":{"business_status":{"type":"string","description":"New or updated workflow status for order."},"address_snapshot_id":{"type":"string","format":"uuid","description":"(Optional) Update delivery address snapshot for formats supporting address changes pre-fulfillment."},"paid_amount":{"type":"number","description":"(Optional, admin-only) Update cumulative paid amount, typically in conjunction with payment events."},"status":{"type":"string","description":"(Optional) New order status, e.g., 'shipped', 'delivered'."},"note":{"type":"string","description":"Optional business note, escalation reason or support field."}},"required":[],"description":"Update fields for an order as supported by allowed business transitions. Optional fields only; partial update pattern."},"IAiCommerceOrderItem.IRequest":{"type":"object","properties":{"product_name":{"type":"string","description":"Search filter for product name, supports partial match."},"delivery_status":{"type":"string","description":"Filter by delivery status of order item."},"seller_id":{"type":"string","format":"uuid","description":"Restrict results to order items associated with specific seller."},"min_quantity":{"type":"integer","description":"Minimum purchased quantity filter."},"max_quantity":{"type":"integer","description":"Maximum purchased quantity filter."},"created_start":{"type":"string","format":"date-time","description":"Filter order items created after this time."},"created_end":{"type":"string","format":"date-time","description":"Filter order items created before this time."}},"required":[],"description":"Order item search/index request fields for advanced querying or filtering order items."},"IAiCommerceOrderItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the order item."},"order_id":{"type":"string","format":"uuid","description":"Parent order's unique identifier."},"product_variant_id":{"type":"string","format":"uuid","description":"Product variant identifier (FK to ai_commerce_product_variants.id)."},"seller_id":{"type":"string","format":"uuid","description":"(Optional) Seller ID associated with order item (nullable)."},"item_code":{"type":"string","description":"Human-readable code for logistics or buyer UX."},"name":{"type":"string","description":"Display name shown to the buyer at purchase."},"quantity":{"type":"integer","description":"Quantity purchased for this order item."},"unit_price":{"type":"number","description":"Unit price at the time of checkout."},"total_price":{"type":"number","description":"Total price for this line item."},"delivery_status":{"type":"string","description":"Current delivery lifecycle status for this item."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the order item was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the order item was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"Soft delete marker if the item is canceled/removed (nullable)."}},"required":["id","order_id","product_variant_id","item_code","name","quantity","unit_price","total_price","delivery_status","created_at","updated_at"],"description":"Schema for a single order item as defined by ai_commerce_order_items. Includes business and FK context fields."},"IAiCommerceOrderItem.ICreate":{"type":"object","properties":{"product_variant_id":{"type":"string","format":"uuid","description":"FK for product variant purchased (ai_commerce_product_variants.id)."},"seller_id":{"type":"string","format":"uuid","description":"(Optional) Seller ID responsible for this order item if multi-seller. Nullable."},"item_code":{"type":"string","description":"Human-readable item code for logistics/business use."},"name":{"type":"string","description":"Product/item name shown to buyer at purchase."},"quantity":{"type":"integer","description":"Quantity purchased for this order item (required)."},"unit_price":{"type":"number","description":"Unit price at checkout for this item (required)."},"total_price":{"type":"number","description":"Total price = unit_price × quantity at checkout snapshot."}},"required":["product_variant_id","item_code","name","quantity","unit_price","total_price"],"description":"Payload for creating a single order item row under ai_commerce_order_items. Maps directly to schema fields on order creation. Seller ID is optional (when multi-seller)."},"IAiCommerceOrderItem.IUpdate":{"type":"object","properties":{"delivery_status":{"type":"string","description":"The delivery lifecycle status for the order item (e.g., 'pending', 'shipped', 'delivered')."},"quantity":{"type":"integer","description":"Updated quantity for the order item. Must be a non-negative integer."},"unit_price":{"type":"number","description":"Updated per-unit price for the order item if allowed. Should be non-negative."},"total_price":{"type":"number","description":"Updated total price for the order item. Should be the product of quantity and unit_price."}},"required":[],"description":"Object for updating order item fields in ai_commerce_order_items, used for administrative corrections or fulfillment/after-sales updates. Only allowed fields per business logic are updatable. All changes are strictly audited."},"IAiCommerceSubOrder.IRequest":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"UUID of the seller responsible for the sub-order, used as a filter."},"status":{"type":"string","description":"Filter sub-orders by their current status (e.g., 'payment_pending', 'shipped', 'delivered', 'cancelled')."},"shipping_method":{"type":"string","description":"Filter sub-orders by shipping method used."},"tracking_number":{"type":"string","description":"Filter by tracking number (partial or full match)."},"from_date":{"type":"string","format":"date-time","description":"Start date for filtering sub-orders by created_at."},"to_date":{"type":"string","format":"date-time","description":"End date for filtering sub-orders by created_at."},"page":{"type":"integer","description":"Pagination: the page number for result set."},"limit":{"type":"integer","description":"Pagination: the number of results per page."}},"required":[],"description":"Search/filtering structure for querying sub-orders associated with an order (ai_commerce_sub_orders). All fields are optional; combined to form advanced queries for operational and analytics workflows."},"IAiCommerceSubOrder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the sub-order."},"order_id":{"type":"string","format":"uuid","description":"Reference to the parent order (ai_commerce_orders.id)."},"seller_id":{"type":"string","format":"uuid","description":"UUID of the seller fulfilling this sub-order."},"suborder_code":{"type":"string","description":"Unique business code/identifier for this sub-order, e.g., parent order + segment."},"status":{"type":"string","description":"Current status for this sub-order (e.g., 'payment_pending', 'shipped', 'delivered', 'completed', 'cancelled')."},"shipping_method":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Selected shipping method for this fulfillment segment. Nullable."},"tracking_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Tracking waybill or reference number for this sub-order (nullable)."},"total_price":{"type":"number","description":"Total price allocated to this sub-order portion, must match sum of linked items."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when this sub-order was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update to this sub-order."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete marker for sub-order (if present, sub-order is logically deleted)."}},"required":["id","order_id","seller_id","suborder_code","status","total_price","created_at","updated_at"],"description":"Full sub-order business entity as described in ai_commerce_sub_orders. Used for order segmentation, multi-vendor fulfillment, and admin tracking in split order processing."},"IAiCommerceSubOrder.ICreate":{"type":"object","properties":{"order_id":{"type":"string","format":"uuid","description":"Parent order's ai_commerce_orders.id to attach sub-order to."},"seller_id":{"type":"string","format":"uuid","description":"Seller's ai_commerce_seller.id responsible for this sub-order."},"suborder_code":{"type":"string","description":"Business code for the sub-order (unique per set, recommended to combine order code and segment)."},"status":{"type":"string","description":"Initial status for the sub-order (e.g., 'payment_pending', 'shipped', etc.)."},"shipping_method":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Shipping method for the sub-order. Nullable."},"tracking_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Tracking waybill or reference number for this sub-order (nullable)."},"total_price":{"type":"number","description":"Total price assigned to this sub-order at creation."}},"required":["order_id","seller_id","suborder_code","status","total_price"],"description":"Creation DTO for sub-order entity (ai_commerce_sub_orders). Used when splitting orders into multi-vendor or fulfillment segments. Shipping/tracking fields are optional/null at creation."},"IAiCommerceSubOrders.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Update sub-order status (e.g., 'shipped', 'delivered', etc.)."},"shipping_method":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update to shipping method for this sub-order (nullable)."},"tracking_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update or add tracking number for this sub-order (nullable)."},"total_price":{"type":"number","description":"Update the total price on sub-order, if permitted by business policy."}},"required":[],"description":"Object for updating one or more fields on an existing sub-order (ai_commerce_sub_orders). Only allowed properties, e.g., status or shipping/tracking, can be updated per workflow and compliance rules."},"IAiCommerceSubOrders":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the sub-order. Uniquely distinguishes each sub-order in the database. Referenced as ai_commerce_sub_orders.id in the schema."},"order_id":{"type":"string","format":"uuid","description":"Parent order's unique identifier. Links to the ai_commerce_orders.id field. Crucial for associating this sub-order to the correct parent order, as per Prisma and ERD specification."},"seller_id":{"type":"string","format":"uuid","description":"Unique identifier of the seller fulfilling the sub-order. References ai_commerce_seller.id. Ensures proper assignment and tracking of seller responsibilities."},"suborder_code":{"type":"string","description":"Unique business code for this sub-order, derived from order code and a segment. Enforced as unique in ai_commerce_sub_orders and utilized for business workflows, fulfillment, and audits. Must follow platform-established scheme."},"status":{"type":"string","description":"Current status for this sub-order (e.g., payment_pending, shipped, delivered, completed, cancelled). Business logic depends on this field for order management throughout the platform."},"shipping_method":{"oneOf":[{"type":"string","description":"Shipping method for this sub-order (nullable, optional)."},{"type":"null"}],"description":"Method used for fulfillment of this segment (e.g., courier, pickup, express). Can be null if not assigned, as per schema."},"tracking_number":{"oneOf":[{"type":"string","description":"Carrier/tracking number for this sub-order (nullable, optional)."},{"type":"null"}],"description":"Tracking reference for logistics, as per ai_commerce_sub_orders. May be null if not yet assigned."},"total_price":{"type":"number","format":"double","description":"Total price allocable to this sub-order segment. Vital for split/partial order support and analytics. Sourced from ai_commerce_sub_orders.total_price."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation for this sub-order record. References ai_commerce_sub_orders.created_at. Preserved for audit and compliance."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last updating of this sub-order. Used for synchronization and concurrency tracking. Sourced from updated_at field in schema."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for soft deletion, if sub-order is no longer active. References deleted_at in schema."},{"type":"null"}],"description":"When the sub-order was soft-deleted, if applicable. Null if active."}},"required":["id","order_id","seller_id","suborder_code","status","total_price","created_at","updated_at"],"description":"Sub-order entity representing a fulfillment segment (per seller, channel, or fulfillment method) of a parent order. Supports split shipment, multi-seller, and advanced fulfillment workflows. Corresponds to ai_commerce_sub_orders in the Prisma ERD. All fields are mapped and documented per schema, with type, purpose, and business context. Contains core operational, financial, and logistical data for order segmentation and audit."},"IAiCommerceOrderStatusHistory.IRequest":{"type":"object","properties":{"order_id":{"type":"string","format":"uuid","description":"Unique identifier for the order whose status history is being queried. Required for lookup. References ai_commerce_order_status_history.order_id."},"actor_id":{"type":"string","format":"uuid","description":"(Optional) Actor (user/admin/seller) responsible for the status change. Filters results if supplied."},"old_status":{"type":"string","description":"(Optional) Previous status to filter results by. Useful for audit or state change queries."},"new_status":{"type":"string","description":"(Optional) New status value after state transition. Filter for matching new state."},"changed_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound (inclusive) for filtering status changes by date/time. Supports auditing, paging, or dashboard queries."},"changed_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound (inclusive) for filtering by status change timestamp. Scrolls/searches window for results."},"page":{"type":"integer","format":"int32","description":"Page number (for pagination of large status history results). Optional."},"limit":{"type":"integer","format":"int32","description":"Maximum number of results per page (pagination support). Optional; default determined by system config."},"sort_by":{"type":"string","description":"Field name to sort the results by (e.g., 'changed_at'). Optional."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction, either 'asc' or 'desc'. Optional; default may be platform- or API-dependent."},{"const":"desc","description":"Sort direction, either 'asc' or 'desc'. Optional; default may be platform- or API-dependent."}],"description":"Sort direction, either 'asc' or 'desc'. Optional; default may be platform- or API-dependent."}},"required":["order_id"],"description":"DTO for querying status history for a given order (ai_commerce_order_status_history). Supports filtering, sorting, and pagination, as defined by business/ERD schema."},"IAiCommerceOrderStatusHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the order status history record (ai_commerce_order_status_history.id)."},"order_id":{"type":"string","format":"uuid","description":"Identifier of the parent order for this status history record. Links to ai_commerce_orders.id for referential integrity."},"actor_id":{"type":"string","format":"uuid","description":"User/Admin/Seller responsible for performing the status change. References actor role/performance in ai_commerce_order_status_history."},"old_status":{"type":"string","description":"Previous order status value prior to this transition. Used for audit, support, or rollback use cases."},"new_status":{"type":"string","description":"New status of the order after this state transition. References business process workflow state."},"old_business_status":{"oneOf":[{"type":"string","description":"Previous business workflow state, if present (nullable)."},{"type":"null"}],"description":"Previous business/workflow state value for the order. Nullable per schema."},"new_business_status":{"oneOf":[{"type":"string","description":"New/updated business workflow state. Nullable."},{"type":"null"}],"description":"Current business/workflow status for the order after transition. Null if not present."},"note":{"oneOf":[{"type":"string","description":"Revision note or summary (nullable)."},{"type":"null"}],"description":"(Optional) Audit/comment/summary provided by actor justifying state transition, escalation, or compliance finding. Null if not supplied."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp at which the status change event was recorded. References ai_commerce_order_status_history.changed_at."}},"required":["id","order_id","actor_id","old_status","new_status","changed_at"],"description":"Represents a history/audit record of an order's status transition from one state to another. Used for compliance, audit, support, and rollback. Bound to ai_commerce_order_status_history as per ERD/Prisma specification. Contains full workflow, actor, and timing context for each change in order lifecycle."},"IAiCommercePayments.ICreate":{"type":"object","properties":{"payment_reference":{"type":"string","description":"Unique business or gateway-assigned identifier for the payment. Critical for reconciling and reporting. Maps to ai_commerce_payments.payment_reference."},"status":{"type":"string","description":"Current status string, e.g., pending / paid / failed / refunded. Constrained by business rules and mapped to ai_commerce_payments.status."},"amount":{"type":"number","format":"double","description":"Monetary value of the payment event. Must be valid per business/integration rules. Schema: ai_commerce_payments.amount."},"currency_code":{"type":"string","description":"ISO currency code (e.g., 'USD', 'KRW'). Enforced by ai_commerce_payments.currency_code."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp when the payment was created/initated. ai_commerce_payments.issued_at."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) When payment was confirmed/settled. Nullable."},{"type":"null"}],"description":"(Optional) Confirmation timestamp, if available. Null if not confirmed."},"failure_reason":{"oneOf":[{"type":"string","description":"(Optional) For failed events, error/diagnostic string. Nullable."},{"type":"null"}],"description":"(Optional) Populated for failure events. Null if not failed."}},"required":["payment_reference","status","amount","currency_code","issued_at"],"description":"DTO for creating a new payment record (ai_commerce_payments) per schema and ERD documentation. Supports all required fields, optional confirmation/failure information, and necessary context for compliance events."},"IAiCommercePayments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique payment identifier (ai_commerce_payments.id)."},"payment_reference":{"type":"string","description":"Unique payment identifier per business or payment gateway. Used to reconcile with external networks and ensure idempotency."},"status":{"type":"string","description":"Current payment status (pending, paid, failed, refunded, etc.). See ai_commerce_payments.status."},"amount":{"type":"number","format":"double","description":"Payment value as recorded, per ai_commerce_payments.amount."},"currency_code":{"type":"string","description":"Currency code (ISO 4217). ai_commerce_payments.currency_code."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp the payment was issued (ai_commerce_payments.issued_at)."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Timestamp payment was settled/confirmed, if available."},{"type":"null"}],"description":"Confirmation timestamp for settled payments. Null if not applicable."},"failure_reason":{"oneOf":[{"type":"string","description":"(Optional) Failure/error diagnostic. Only present if payment failed."},{"type":"null"}],"description":"Error code or explanation for failed payments. Null if not failed."},"created_at":{"type":"string","format":"date-time","description":"Persistent record creation date (ai_commerce_payments.created_at)."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update timestamp (ai_commerce_payments.updated_at)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp, nullable (ai_commerce_payments.deleted_at)."},{"type":"null"}],"description":"Soft deletion marker for compliance. Null if active."}},"required":["id","payment_reference","status","amount","currency_code","issued_at","created_at","updated_at"],"description":"Represents a payment event record in the system, as stored in ai_commerce_payments. Captures transaction status, value, currency, timestamps, and audit/compliance context. All fields are mapped per Prisma DB/ERD schema and described for their operational, financial, or compliance significance."},"IAiCommerceOrderFulfillments.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number (1-based)"},"limit":{"type":"integer","description":"Number of records per page"},"suborder_id":{"type":"string","format":"uuid","description":"Filter by sub-order id"},"status":{"type":"string","description":"Filter by fulfillment status (e.g., delivered, shipped)"},"carrier":{"type":"string","description":"Filter by carrier"},"from_date":{"type":"string","format":"date-time","description":"Filter by date range (start)"},"to_date":{"type":"string","format":"date-time","description":"Filter by date range (end)"},"search":{"type":"string","description":"Free-form search, e.g., for tracking number"}},"required":[],"description":"Request for searching/filtering order fulfillment events."},"IAiCommerceOrderFulfillments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key (fulfillment record UUID)"},"order_id":{"type":"string","format":"uuid","description":"Order ID referencing ai_commerce_orders.id"},"suborder_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional sub-order id (if segmented/fulfilled by sub vendor/warehouse)"},"fulfillment_code":{"type":"string","description":"Carrier/fulfillment tracking code (unique) for this event."},"status":{"type":"string","description":"Current status of fulfillment event (e.g., in transit, delivered, returned)."},"carrier":{"type":"string","description":"Logistics carrier/service used (DHL, CJ, etc)."},"carrier_contact":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Contact info/reference for carrier as of fulfillment date."},"fulfilled_at":{"type":"string","format":"date-time","description":"Timestamp for fulfillment event."},"updated_at":{"type":"string","format":"date-time","description":"Latest recorded update for fulfillment info."}},"required":["id","order_id","fulfillment_code","status","carrier","fulfilled_at","updated_at"],"description":"Complete order fulfillment event record referencing ai_commerce_order_fulfillments in Prisma schema."},"IAiCommerceOrderAfterSales.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number (1-based)"},"limit":{"type":"integer","description":"Number of records per page"},"type":{"type":"string","description":"Filter by after-sales type (return/exchange/warranty/dispute)"},"status":{"type":"string","description":"Filter by after-sales status"},"actor_id":{"type":"string","format":"uuid","description":"Filter by actor (user who initiated)"},"order_item_id":{"type":"string","format":"uuid","description":"Filter by order item id"},"search":{"type":"string","description":"Free-form search (note, fields)"},"from_opened_at":{"type":"string","format":"date-time","description":"Filter by opened date (start)"},"to_opened_at":{"type":"string","format":"date-time","description":"Filter by opened date (end)"}},"required":[],"description":"Request for searching/filtering order after-sales records."},"IAiCommerceOrderAfterSales":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key (after-sales record UUID)"},"order_id":{"type":"string","format":"uuid","description":"Reference to ai_commerce_orders.id"},"order_item_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to specific line item affected."},"actor_id":{"type":"string","format":"uuid","description":"Actor (buyer/seller/admin) who triggered after-sales event"},"type":{"type":"string","description":"After-sales event type: return, exchange, dispute, warranty, etc."},"status":{"type":"string","description":"Progress state of after-sales case (pending, in_review, approved, rejected, resolved, etc.)"},"opened_at":{"type":"string","format":"date-time","description":"Time when request was created/received."},"closed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Final time after-sales request was resolved/closed (nullable if still active)."},"note":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business note/case reason/summary for future analytics/audit."}},"required":["id","order_id","actor_id","type","status","opened_at"],"description":"Full after-sales event record as in ai_commerce_order_after_sales table."},"IAiCommerceOrderAfterSales.ICreate":{"type":"object","properties":{"order_item_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to specific line item affected."},"type":{"type":"string","description":"After-sales event type: e.g., return, exchange, dispute, warranty, etc."},"note":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional case note/justification for after-sales creation."}},"required":["type"],"description":"DTO for creating an after-sales case (required for after-sales creation operations)."},"IAiCommerceOrderAfterSales.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Status field indicating the progression of the after-sales case (e.g. pending, in_review, approved, resolved, rejected). Aligned with business logic."},"note":{"type":"string","description":"Human-readable note, explanation, or context, such as reason for escalation, details from buyer, or dispute comment."},"type":{"type":"string","description":"The after-sales event type, such as 'return', 'exchange', 'dispute', or 'warranty'."}},"required":[],"description":"Update payload for an after-sales service record, such as return, dispute, or warranty case. Allows changing status, note, event type, etc. for an existing after-sales entity."},"IAiCommerceOrderCancellation.IRequest":{"type":"object","properties":{"status":{"type":"array","items":{"type":"string"},"description":"List of status values to filter on (e.g. [\"requested\", \"approved\"])."},"actor_ids":{"type":"array","items":{"type":"string"},"description":"List of actor IDs (who requested the cancellation) to filter on."},"requested_start":{"type":"string","description":"Start time (inclusive) for the requested_at field, ISO date-time."},"requested_end":{"type":"string","description":"End time (inclusive) for the requested_at field, ISO date-time."},"search":{"type":"string","description":"Optional search term for cancellation reason or code."},"page":{"type":"integer","description":"Pagination: page number (1-based)."},"limit":{"type":"integer","description":"Pagination: page size/limit."},"sort_by":{"type":"string","description":"Sorting field (e.g. \"requested_at\", \"status\")."},"sort_dir":{"type":"string","description":"Sorting direction: \"asc\" or \"desc\"."}},"required":[],"description":"Request filter for searching order cancellation events. Use to retrieve cancellation records across orders with advanced querying."},"IAiCommerceOrderCancellation":{"type":"object","properties":{"id":{"type":"string","description":"Unique ID of this cancellation record (UUID)."},"order_id":{"type":"string","description":"Parent order ID this cancellation is related to."},"actor_id":{"type":"string","description":"Actor ID who initiated the cancellation (buyer/seller/admin)."},"cancellation_code":{"type":"string","description":"Unique business or reference code for this cancellation."},"reason":{"type":"string","description":"Optional reason/comment from the user for requesting cancellation."},"status":{"type":"string","description":"Workflow/process status: 'requested', 'processing', 'approved', 'denied', 'completed'."},"requested_at":{"type":"string","description":"Timestamp for when cancellation was requested (ISO date-time)."},"approved_at":{"oneOf":[{"type":"string","description":"Timestamp for when cancellation was approved/confirmed (may be null)."},{"type":"null","description":"Timestamp for when cancellation was approved/confirmed (may be null)."}],"description":"Timestamp for when cancellation was approved/confirmed (may be null)."},"finalized_at":{"oneOf":[{"type":"string","description":"When cancellation was finalized/closed (may be null if open)."},{"type":"null","description":"When cancellation was finalized/closed (may be null if open)."}],"description":"When cancellation was finalized/closed (may be null if open)."}},"required":["id","order_id","actor_id","cancellation_code","status","requested_at"],"description":"An order cancellation entity representing a request to cancel an order or item. Directly maps to ai_commerce_order_cancellations in the DB schema."},"IAiCommerceOrderCancellation.ICreate":{"type":"object","properties":{"reason":{"type":"string","description":"Internal or user-facing reason/comment for the cancellation. Required for audit/compliance."},"item_ids":{"type":"array","items":{"type":"string"},"description":"List of order item IDs (if partial cancellation; omit for full order cancellation)."},"status":{"type":"string","description":"Optionally specify initial status (rare); typically defaults to 'requested' in business logic."},"business_context":{"type":"string","description":"Optional: Freeform business context, escalation source, or resolution link. Not persisted unless supported by API."}},"required":["reason"],"description":"Creation payload for submitting an order cancellation request."},"IAiCommerceOrderCancellation.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"New status for the cancellation ('approved', 'denied', 'completed', etc). See business rules."},"reason":{"type":"string","description":"Update or append to the cancellation reason (e.g., for escalation or audit trail)."},"business_context":{"type":"string","description":"Optionally update/clarify the business context for this cancellation entry."}},"required":[],"description":"Update payload for an order cancellation entity. Used for status transitions, business note updates, or reason clarification."},"IAiCommerceOrderRefund":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the order refund record (UUID)."},"order_id":{"type":"string","format":"uuid","description":"Unique identifier of the associated order (UUID)."},"actor_id":{"type":"string","format":"uuid","description":"Actor (buyer, seller, admin) who initiated the refund (UUID)."},"refund_code":{"type":"string","description":"Unique refund code for cross-platform reference."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional reason/comment for the refund action."},"status":{"type":"string","description":"Workflow/status: pending, processing, denied, approved, paid, failed, etc."},"amount":{"type":"number","description":"Refunded monetary amount (must be <= paid amount)."},"currency":{"type":"string","description":"Refund transaction currency code (must match original payment/order currency)."},"requested_at":{"type":"string","format":"date-time","description":"Date/time refund was requested."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Date/time refund was resolved, if completed/canceled (nullable)."}},"required":["id","order_id","actor_id","refund_code","status","amount","currency","requested_at"],"description":"Order refund record containing reference to the associated order, status workflow, amount, and timestamps for compliance, analytics, and legal evidence.\n\nCorresponds to ai_commerce_order_refunds table. Includes business and workflow fields as defined in the ERP and legal/audit requirements."},"IAiCommerceOrderRefund.IRequest":{"type":"object","properties":{"status":{"type":"array","items":{"type":"string"},"description":"Filter by status (optional): e.g. 'pending', 'completed', etc."},"order_id":{"type":"string","format":"uuid","description":"Filter by order_id (optional)."},"refund_code":{"type":"string","description":"Filter by refund_code (optional)."},"actor_id":{"type":"string","format":"uuid","description":"Filter by actor_id (optional)."},"min_amount":{"type":"number","description":"Minimum refund amount (optional)."},"max_amount":{"type":"number","description":"Maximum refund amount (optional)."},"requested_after":{"type":"string","format":"date-time","description":"Date/time window for requested_at (ISO string, optional)."},"requested_before":{"type":"string","format":"date-time","description":"Date/time window for requested_at (ISO string, optional)."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number (starting from 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Pagination: limit records per page (default 20, max 100)."},"search":{"type":"string","description":"General search string (optional, searches reason and code fields)."},"sort_by":{"type":"string","description":"Sort key (e.g., 'requested_at', 'resolved_at')."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order ('asc' or 'desc', default 'desc')."},{"const":"desc","description":"Sort order ('asc' or 'desc', default 'desc')."}],"description":"Sort order ('asc' or 'desc', default 'desc')."}},"required":[],"description":"Filtering, searching, and pagination schema for querying order refund records.\n\nAll parameters are optional; when not provided, default values and maximum paging are applied. Used for admin dashboards, compliance, and business intelligence."},"IAiCommerceOrderRefund.ICreate":{"type":"object","properties":{"actor_id":{"type":"string","format":"uuid","description":"Actor (UUID) requesting/initiating the refund."},"amount":{"type":"number","description":"Refund amount requested (must not exceed paid amount for order)."},"currency":{"type":"string","description":"Currency code for refund (must match payment/order currency)."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional reason for the refund request."}},"required":["actor_id","amount","currency"],"description":"Create DTO for order refund request, as accepted by API. Only permitted fields (amount, currency, reason) exposed for user input; order linkage and status managed internally."},"IAiCommerceOrderRefund.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Workflow/status to set (e.g., 'approved', 'denied', 'paid')."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional update to refund reason/comment (e.g., escalation details)."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Admin/operator only: set resolved_at timestamp."}},"required":[],"description":"Update DTO for existing order refund record.\n\nPermits mutation of allowed fields for compliance, status transitions, and comment update. Used by workflow automation and admin users only."},"IAiCommerceOrderAnalytics":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for order analytics record (UUID)."},"order_id":{"type":"string","format":"uuid","description":"Associated order ID (UUID)."},"order_date":{"type":"string","format":"date-time","description":"Date when order was placed (ISO 8601)."},"order_value":{"type":"number","description":"Order value aggregated for analytics/reporting."},"items_count":{"type":"integer","description":"Number of unique items in order."},"refund_count":{"type":"integer","description":"Number of refunds within order."},"after_sales_count":{"type":"integer","description":"Number of after-sales/complaints associated with order."},"completion_time_seconds":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Completion latency in seconds (nullable)."},"last_status":{"type":"string","description":"Final/most recent status for reporting."},"updated_at":{"type":"string","format":"date-time","description":"Updated at timestamp (ISO 8601)."}},"required":["id","order_id","order_date","order_value","items_count","refund_count","after_sales_count","last_status","updated_at"],"description":"Aggregated analytics for a single order, including value, item/refund/after-sales counts, completion performance, and status. Used for KPI dashboards, monitoring, customer reporting."},"IAiCommerceOrderSnapshotLog.IRequest":{"type":"object","description":"Request schema for searching historical order snapshot logs in the ai_commerce_order_snapshot_logs table. Supports filtering by order ID, snapshot type (capture_type), actor, and date ranges. Used for compliance audits, forensic analysis, and troubleshooting historical order state transitions. Optional paging fields are provided for scalable search.","properties":{"orderId":{"type":"string","format":"uuid","description":"Filter down to snapshots belonging to the specified order. This is the ai_commerce_orders.id. Optional filter when retrieving logs across multiple orders within the system."},"snapshotType":{"type":"string","description":"Type of snapshot capture event, mapping to capture_type in the schema. E.g. 'creation', 'edit', 'cancel', 'fulfillment', 'aftersales', etc. Used to narrow down logs of interest."},"actorId":{"type":"string","format":"uuid","description":"Filter snapshots by the user or system actor performing the event, as stored in actor_id. Enables targeting audit trails by responsible party."},"fromDate":{"type":"string","format":"date-time","description":"Optional ISO 8601 date string to filter logs created after or at this timestamp. Allows for period-based querying."},"toDate":{"type":"string","format":"date-time","description":"Optional ISO 8601 date string to filter logs created before or at this timestamp. Allows for period-based querying."},"page":{"type":"integer","minimum":1,"description":"Pagination - page number for results. Defaults to 1 if omitted. Used with limit."},"limit":{"type":"integer","minimum":1,"description":"Pagination - maximum records per page. Defaults per business policy, recommended 20/50/100."}},"required":[]},"IAiCommerceOrderAuditLog.IRequest":{"type":"object","description":"Request schema for searching order audit logs (ai_commerce_order_audit_logs). Supports filtering by orderId, event type, actor, and date range with full pagination per compliance and traceability requirements.","properties":{"orderId":{"type":"string","format":"uuid","description":"Unique identifier of the target order for which audit logs are being requested. Only audit log entries related to this order are returned when specified."},"event":{"type":"string","description":"Filter audit logs by event type (e.g., 'create', 'update', 'payment', 'refund', 'fulfillment', etc.). Enables focused querying on audit event types."},"actorId":{"type":"string","format":"uuid","description":"Filter results by the actor (user/admin/system) who performed the audit log action. Allows tracing responsibility or changes by individual identity."},"fromDate":{"type":"string","format":"date-time","description":"Inclusive lower bound for audit log created_at timestamp, in ISO 8601 format. Limits logs to those on or after this date."},"toDate":{"type":"string","format":"date-time","description":"Inclusive upper bound for audit log created_at timestamp, in ISO 8601 format. Limits logs to those on or before this date."},"page":{"type":"integer","minimum":1,"description":"Pagination - page number, defaults to 1. Used with limit for scalable results."},"limit":{"type":"integer","minimum":1,"description":"Pagination - number of audit log entries per page. Default/recommended: 20/50/100."}},"required":[]},"IAiCommercePayment.IRequest":{"type":"object","description":"Request schema for searching and querying payment records from ai_commerce_payments. Supports filtering on payment status, method, currency, amount range, and date window. Paging fields are included for scalable analytics and dashboard perspectives.","properties":{"status":{"type":"string","description":"Payment status to filter by - e.g., 'pending', 'paid', 'failed', 'refunded'. Directly maps to status column. Enables searching by business/payment state."},"method":{"type":"string","description":"Payment method to filter by (e.g., 'credit_card', 'virtual_account', etc.). Business field used for reporting or configuration analysis."},"currencyCode":{"type":"string","description":"Filter records by payment currency (ISO 4217 code, e.g., 'KRW', 'USD'). Enables multi-currency reporting and compliance analysis."},"minAmount":{"type":"number","description":"Minimum payment amount to include in results. Used for thresholding analytics, fraud detection, or campaign KPIs."},"maxAmount":{"type":"number","description":"Maximum payment amount to include in results. Outlier, fraud, or reporting filter."},"fromDate":{"type":"string","format":"date-time","description":"Start of creation/issued_at date range for search. ISO 8601 datetime format."},"toDate":{"type":"string","format":"date-time","description":"End of creation/issued_at date range for search. ISO 8601 datetime format."},"page":{"type":"integer","minimum":1,"description":"Result page number for pagination (default: 1)."},"limit":{"type":"integer","minimum":1,"description":"Number of results per page for pagination (default: business limit)."}},"required":[]},"IAiCommercePayment":{"type":"object","description":"Represents a single payment transaction record as stored in ai_commerce_payments table. Includes core business fields, status, reference, monetary values, and audit/compliance timestamps. Returned for payment/search/detail APIs.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key identifier (ai_commerce_payments.id) for the payment event."},"payment_reference":{"type":"string","description":"Payment or business reference string assigned by system or gateway. Unique per payment process, e.g., 'ORD-20250313-1001'."},"status":{"type":"string","description":"Current business/payment status. Examples: 'pending', 'paid', 'failed', 'refunded'. Maps directly to status in the schema. Enum values should be analysis-driven."},"amount":{"type":"number","description":"Total payment amount in currency_code (e.g., monetary units, no formatting)."},"currency_code":{"type":"string","description":"Currency code (ISO 4217, e.g., 'KRW', 'USD', 'EUR')."},"issued_at":{"type":"string","format":"date-time","description":"Date/time when the payment was initiated/issued, in ISO 8601 datetime format."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If not null, date/time when payment was fully confirmed/settled. Null if pending/failure."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reason for payment failure if present (nullable). Used for audit/troubleshooting/analytics."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the payment record was created in the DB. Used for audit evidence."},"updated_at":{"type":"string","format":"date-time","description":"Latest update timestamp for this payment record. Reflects status, reconciliation, or corrections."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp. Null for active payment; non-null indicates logically deleted (for compliance purposes)."}},"required":["id","payment_reference","status","amount","currency_code","issued_at","created_at","updated_at"]},"IAiCommercePayment.ICreate":{"type":"object","description":"Schema for creating a new payment event in ai_commerce_payments table. Used for admin/system registration of payment events. Required for initial record: payment_reference, status, amount, currency_code, issued_at. Optional: confirmed_at/failure_reason for advanced workflows.","properties":{"payment_reference":{"type":"string","description":"Unique payment or business reference string to assign for this payment (e.g., 'ORD-20250313-1001'). Must be unique per payment."},"status":{"type":"string","description":"Initial payment status at creation (e.g., 'pending', 'issued')."},"amount":{"type":"number","description":"Total payment amount at time of creation (currency_code applies)."},"currency_code":{"type":"string","description":"Currency code consistent with platform reporting and funds flow (ISO 4217, e.g., 'KRW', 'USD')."},"issued_at":{"type":"string","format":"date-time","description":"Payment issuance datetime (ISO 8601 format)."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime at which payment is confirmed/settled. Optional - null if not yet confirmed."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Failure reason (if preset at creation time); nullable. For non-pending statuses."}},"required":["payment_reference","status","amount","currency_code","issued_at"]},"IAiCommercePaymentMethod":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the payment method."},"method_code":{"type":"string","description":"Unique business code for the payment method (e.g., 'CREDIT_CARD', 'VIRTUAL_ACCOUNT')."},"display_name":{"type":"string","description":"Human-readable name for the payment method."},"is_active":{"type":"boolean","description":"Whether payment method is available for use."},"configuration":{"oneOf":[{"type":"string","description":"Optional configuration for payment gateways or advanced integrations. May be JSON or URI."},{"type":"null"}],"description":"Optional configuration for payment gateways or advanced integrations. May be JSON or URI."},"created_at":{"type":"string","format":"date-time","description":"Created timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp. Null if active."}},"required":["id","method_code","display_name","is_active","created_at","updated_at"],"description":"IAiCommercePaymentMethod: Represents a supported payment method on the platform, mapped to ai_commerce_payment_methods table."},"IAiCommercePaymentMethod.IRequest":{"type":"object","properties":{"method_code":{"type":"string","description":"Filter by method_code (exact match)."},"display_name":{"type":"string","description":"Filter by display name (partial match supported)."},"is_active":{"type":"boolean","description":"Filter by active/inactive status."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: created_at >= this ISO8601 time."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: created_at <= this ISO8601 time."},"updated_at_from":{"type":"string","format":"date-time","description":"Filter: updated_at >= this ISO8601 time."},"updated_at_to":{"type":"string","format":"date-time","description":"Filter: updated_at <= this ISO8601 time."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Number of records per page."},"sortBy":{"type":"string","description":"Field to sort by (e.g., 'created_at', 'method_code')."},"sortDir":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc'."},{"const":"desc","description":"Sort direction: 'asc' or 'desc'."}],"description":"Sort direction: 'asc' or 'desc'."}},"required":[],"description":"IAiCommercePaymentMethod.IRequest: Filtering and pagination options for payment methods listing/search."},"IAiCommercePaymentMethod.ICreate":{"type":"object","properties":{"method_code":{"type":"string","description":"Unique code for the payment method to create."},"display_name":{"type":"string","description":"Human-readable name to show buyers at selection."},"is_active":{"type":"boolean","description":"(Optional) Whether the method is active immediately."},"configuration":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Configuration for the payment method; may be JSON or URI."}},"required":["method_code","display_name"],"description":"IAiCommercePaymentMethod.ICreate: Request body for creating a new platform payment method."},"IAiCommercePaymentMethod.IUpdate":{"type":"object","properties":{"display_name":{"type":"string","description":"New display name for the payment method."},"is_active":{"type":"boolean","description":"Activate/deactivate this payment method."},"configuration":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Configuration update for gateway or integration; may be string or null."}},"required":[],"description":"IAiCommercePaymentMethod.IUpdate: Patch body for updating an existing payment method."},"IAiCommercePayment.IUpdate":{"type":"object","properties":{},"required":[],"description":"IAiCommercePayment.IUpdate: There is not enough information to define fields. Please clarify requirements."},"IAiCommercePaymentGateway.IRequest":{"type":"object","properties":{"gateway_code":{"type":"string","description":"Business code for the payment gateway. Used for filtering. Corresponds to the 'gateway_code' in ai_commerce_payment_gateways."},"display_name":{"type":"string","description":"Display name of the payment gateway. Used in filter/search. Corresponds to 'display_name'."},"is_active":{"type":"boolean","description":"Filtering by whether the gateway is enabled (true) or disabled (false)."},"supported_currency":{"type":"string","description":"Filter for gateways supporting a given currency. Typical values: 'USD', 'KRW', 'JPY', etc."},"sort":{"oneOf":[{"const":"gateway_code","description":"Sort field for the payment gateway list."},{"const":"display_name","description":"Sort field for the payment gateway list."},{"const":"created_at","description":"Sort field for the payment gateway list."},{"const":"updated_at","description":"Sort field for the payment gateway list."}],"description":"Sort field for the payment gateway list."},"order":{"oneOf":[{"const":"asc","description":"Sort order: ascending or descending."},{"const":"desc","description":"Sort order: ascending or descending."}],"description":"Sort order: ascending or descending."},"page":{"type":"integer","description":"Page number for retrieval. Starts at 1."},"limit":{"type":"integer","description":"Number of records per page."}},"required":[],"description":"Filter and pagination options for listing/searching payment gateway configurations."},"IAiCommercePaymentGateway":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"System-generated unique identifier (UUID). Primary Key for ai_commerce_payment_gateways."},"gateway_code":{"type":"string","description":"Business code used for payment gateway integration (e.g., 'INICIS', 'KCP', 'PAYPAL'). Must be unique. Required for creation."},"display_name":{"type":"string","description":"Human-readable name of the payment gateway (e.g., 'Inicis', 'Korean Card Processor')."},"api_endpoint":{"type":"string","description":"Configured or external API endpoint (URI/base URL) for payment integration and callbacks."},"is_active":{"type":"boolean","description":"Indicates if the gateway is enabled for use (true/false)."},"supported_currencies":{"oneOf":[{"type":"string","description":"Comma-separated list of ISO currency codes the gateway supports (e.g., 'KRW,USD,JPY')."},{"type":"null"}],"description":"Comma-separated list of ISO currency codes the gateway supports (e.g., 'KRW,USD,JPY')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the payment gateway record was created. ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for most recent record update. ISO 8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp indicating when the payment gateway config was logically deleted (soft delete). Null if active."}},"required":["id","gateway_code","display_name","api_endpoint","is_active","created_at","updated_at"],"description":"Payment gateway configuration record. Represents a third-party payment provider or internal routing system for the aiCommerce platform. Reflects the ai_commerce_payment_gateways table."},"IAiCommercePaymentGateway.ICreate":{"type":"object","properties":{"gateway_code":{"type":"string","description":"Unique business code for the payment gateway (e.g., 'INICIS', 'KCP'). Value must be unique and immutable. Required."},"display_name":{"type":"string","description":"Display name for the payment gateway. Required."},"api_endpoint":{"type":"string","description":"Base URI or endpoint for gateway API integration. Required."},"is_active":{"type":"boolean","description":"Whether the gateway is active/enabled when created. Required."},"supported_currencies":{"oneOf":[{"type":"string","description":"Comma-separated list of currency codes this gateway supports, per ISO. Optional."},{"type":"null"}],"description":"Comma-separated list of currency codes this gateway supports, per ISO. Optional."}},"required":["gateway_code","display_name","api_endpoint","is_active"],"description":"Creation DTO for a payment gateway configuration. Input requirements are covered by unique and NOT NULL constraints in ai_commerce_payment_gateways table documentation."},"IAiCommercePaymentGateway.IUpdate":{"type":"object","properties":{"display_name":{"type":"string","description":"New display name for payment gateway (optional)."},"api_endpoint":{"type":"string","description":"New API endpoint (URI) for payment gateway (optional)."},"is_active":{"type":"boolean","description":"Set enabled status for payment gateway."},"supported_currencies":{"oneOf":[{"type":"string","description":"Comma-separated updated list of supported currencies. Optional."},{"type":"null"}],"description":"Comma-separated updated list of supported currencies. Optional."}},"required":[],"description":"Update DTO for a payment gateway configuration. Partial updates of modifiable fields. The gateway_code (unique code) cannot be modified after creation."},"IAiCommercePaymentTransaction.IRequest":{"type":"object","properties":{"transaction_reference":{"type":"string","description":"Unique transaction reference code for the payment transaction. Used for filtering/search."},"payment_id":{"type":"string","format":"uuid","description":"System-assigned UUID for the related payment event. Filtering on payment linkage."},"status":{"type":"string","description":"Transaction status (e.g., 'pending', 'completed', 'failed')."},"method_id":{"type":"string","format":"uuid","description":"UUID of associated payment method (ai_commerce_payment_methods.id)."},"gateway_id":{"type":"string","format":"uuid","description":"UUID of the payment gateway (ai_commerce_payment_gateways.id)."},"requested_at_from":{"type":"string","format":"date-time","description":"Minimum request date/time for filtering (inclusive, ISO 8601)."},"requested_at_to":{"type":"string","format":"date-time","description":"Maximum request date/time for filtering (inclusive, ISO 8601)."},"amount_min":{"type":"number","description":"Lower bound for transaction amount."},"amount_max":{"type":"number","description":"Upper bound for transaction amount."},"currency_code":{"type":"string","description":"Currency code filter (ISO 4217 standard; e.g., 'USD', 'KRW')."},"page":{"type":"integer","description":"Page number (starts at 1)."},"limit":{"type":"integer","description":"Records per page (pagination limit)."},"sort":{"oneOf":[{"const":"requested_at","description":"Sort field for ordering the result set."},{"const":"amount","description":"Sort field for ordering the result set."},{"const":"status","description":"Sort field for ordering the result set."}],"description":"Sort field for ordering the result set."},"order":{"oneOf":[{"const":"asc","description":"Sort order: 'asc' or 'desc'."},{"const":"desc","description":"Sort order: 'asc' or 'desc'."}],"description":"Sort order: 'asc' or 'desc'."}},"required":[],"description":"Search, filter, and pagination input DTO for payment transaction listing in ai_commerce_payment_transactions. Optional query parameters for all fields, with full pagination and sorting supported. Used for admin/finance log and payment analytics/reporting workloads."},"IAiCommercePaymentTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the payment transaction. References ai_commerce_payment_transactions.id."},"payment_id":{"type":"string","format":"uuid","description":"Associated payment's ID. References ai_commerce_payments.id."},"method_id":{"type":"string","format":"uuid","description":"Payment method used (e.g., credit card, deposit). References ai_commerce_payment_methods.id."},"gateway_id":{"type":"string","format":"uuid","description":"Payment gateway used for the transaction. References ai_commerce_payment_gateways.id."},"transaction_reference":{"type":"string","description":"Unique business/gateway reference code for this transaction."},"status":{"type":"string","description":"Current status of the payment transaction (e.g., 'pending', 'completed', 'failed', 'refunded')."},"amount":{"type":"number","description":"Transaction amount (must be positive, typically the amount to be settled or refunded)."},"currency_code":{"type":"string","description":"Standard ISO 4217 currency code (e.g., 'USD', 'KRW')."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when the payment request was issued."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when payment was completed (nullable if not settled)."},"gateway_payload":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Raw gateway payload/response data for compliance/audit (may be null)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this payment transaction record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this payment transaction."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this payment transaction was deleted (soft delete, nullable)."}},"required":["id","payment_id","method_id","gateway_id","transaction_reference","status","amount","currency_code","requested_at","created_at","updated_at"],"description":"A record representing a payment gateway transaction, mapped to ai_commerce_payment_transactions. Includes references to parent payment, payment method, and gateway, plus status, amount, timestamps, and raw gateway data (for compliance/evidence)."},"IAiCommercePaymentTransaction.ICreate":{"type":"object","properties":{"payment_id":{"type":"string","format":"uuid","description":"References ai_commerce_payments.id; payment entity being settled."},"method_id":{"type":"string","format":"uuid","description":"References ai_commerce_payment_methods.id; method chosen (credit card, deposit, etc)."},"gateway_id":{"type":"string","format":"uuid","description":"References ai_commerce_payment_gateways.id."},"transaction_reference":{"type":"string","description":"Gateway/business reference for this transaction (must be globally unique)."},"status":{"type":"string","description":"Initial status of transaction (e.g., 'pending', 'issued')."},"amount":{"type":"number","description":"Monetary amount requested/charged in this transaction."},"currency_code":{"type":"string","description":"ISO 4217 currency code (e.g., 'KRW', 'USD')."},"requested_at":{"type":"string","format":"date-time","description":"When the payment request was issued to the gateway/be."},"gateway_payload":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Raw initial gateway API response/payload (for audit)."}},"required":["payment_id","method_id","gateway_id","transaction_reference","status","amount","currency_code","requested_at"],"description":"Input required to create a payment transaction record in ai_commerce_payment_transactions. Used during gateway settlement and includes payment, gateway, method, unique reference, status, amount, and request time."},"IAiCommercePaymentTransaction.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Updated payment transaction status (e.g., 'completed', 'failed', 'refunded', etc)."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of final transaction completion (null if not yet completed/settled)."},"gateway_payload":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated/response data from payment gateway during reconciliation/error handling/audit. May be null."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of update event (required)."}},"required":["updated_at"],"description":"Fields allowed for updating a payment transaction record in ai_commerce_payment_transactions. Typical use: updating status, completion time, gateway data, and always update updated_at timestamp."},"IAiCommerceDepositAccount.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Filter deposit accounts belonging to this user."},"status":{"type":"string","description":"Optional filter for account status (active/suspended/closed, etc)."},"currency_code":{"type":"string","description":"Optional currency filter (ISO 4217, e.g., 'KRW')."},"page":{"type":"integer","minimum":1,"description":"Page of results (pagination, default 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Max results per page (pagination, default 20, max 100)."},"sort":{"type":"string","description":"Sort order (e.g., 'created_at desc', 'balance asc')."}},"required":[],"description":"Request/filters for searching/listing deposit accounts for admin review and analytics. All properties are optional; only supplied filters are applied."},"IAiCommerceDepositAccount":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the deposit account record (ai_commerce_deposit_accounts.id)"},"account_code":{"type":"string","description":"System/business identifier for account (unique, tracks user association, may be displayed or internal)."},"user_id":{"type":"string","format":"uuid","description":"UUID of the user associated with this account (references buyer/seller as per platform role), ai_commerce_buyer.id or seller id."},"balance":{"type":"number","description":"Current deposit balance in this account for user (must be non-negative)."},"currency_code":{"type":"string","description":"ISO 4217 currency code for the deposit account (e.g., 'KRW', 'USD')."},"status":{"type":"string","description":"Current status of account ('active', 'suspended', 'closed', etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp/account creation time."},"updated_at":{"type":"string","format":"date-time","description":"Last updated/account modification time."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for logical removal; null if active."}},"required":["id","account_code","user_id","balance","currency_code","status","created_at","updated_at"],"description":"Deposit/e-wallet account for user, supporting top-up (recharge), withdrawal, payment, and refund, with audit/compliance fields."},"IAiCommerceDepositAccount.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"User's unique identifier (UUID) owning the deposit account. This field is required and must refer to a valid ai_commerce_buyer or seller as described in the schema. Example: '15de455e-385f-4c99-ba2a-eab44c7e13ce'."},"account_code":{"type":"string","description":"Account code uniquely identifying the deposit account for the user. This is a business-assigned code and must be unique (see @@unique constraint in schema). Example: 'DA-20231101-001'."},"balance":{"type":"number","description":"Initial numeric balance for the deposit account at creation. This is a float value, typically set to 0.0 as most accounts start empty but may be non-zero for administrative adjustment. Example: 0.0."},"currency_code":{"type":"string","description":"Currency code in ISO 4217 format representing the currency for the deposit balance. Example: 'KRW' or 'USD'."},"status":{"type":"string","description":"Account status. Allowed values are 'active' or 'suspended'. Use only these exact values due to business requirements. Example: 'active'."}},"required":["user_id","account_code","balance","currency_code","status"],"description":"Create a new deposit account for a user/seller. All fields are required and correspond directly to database columns (see ai_commerce_deposit_accounts schema)."},"IAiCommerceDepositAccount.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Account status update. Only allowed values are 'active' or 'suspended' (must match allowed enum values in business logic)."},"currency_code":{"type":"string","description":"Update the deposit account's currency code (ISO 4217 string)."}},"required":[],"description":"Updates for deposit account. All fields are optional and only updatable per business rules. See ai_commerce_deposit_accounts schema documentation."},"IAiCommerceDepositTransaction.IRequest":{"type":"object","properties":{"deposit_account_id":{"type":"string","format":"uuid","description":"Deposit account UUID to filter/search transactions (optional)."},"type":{"type":"string","description":"Transaction type. Allowed values: 'recharge', 'withdraw', 'payment', 'refund'. Optional; can be used to filter results as per ai_commerce_deposit_transactions."},"status":{"type":"string","description":"Transaction status (optional). Allowed values: 'pending', 'confirmed', 'failed', 'expired'. Optional."},"from":{"type":"string","format":"date-time","description":"Optional filter start date for performed_at (inclusive, ISO 8601). Format: 'YYYY-MM-DDTHH:mm:ssZ'."},"to":{"type":"string","format":"date-time","description":"Optional filter end date for performed_at (inclusive, ISO 8601). Format: 'YYYY-MM-DDTHH:mm:ssZ'."}},"required":[],"description":"Request format for searching/filtering deposit transactions. Matches ai_commerce_deposit_transactions request patterns."},"IAiCommerceDepositTransaction.ICreate":{"type":"object","properties":{"deposit_account_id":{"type":"string","format":"uuid","description":"Deposit account for this transaction (UUID). Required; must refer to an existing account."},"type":{"type":"string","description":"Transaction type. Allowed values: 'recharge', 'withdraw', 'payment', 'refund'. Required."},"amount":{"type":"number","description":"Transaction amount. For positive transactions (e.g. recharge), use >0; for withdrawals/payments, negative values may be permitted according to business rules. Required."},"status":{"type":"string","description":"Transaction status. Allowed values: 'pending', 'confirmed', 'failed', 'expired'. Required."},"counterparty_reference":{"type":"string","description":"External or internal reference (optional, string; may be null)."},"performed_at":{"type":"string","format":"date-time","description":"Performance event time in ISO 8601 format. Required."}},"required":["deposit_account_id","type","amount","status","performed_at"],"description":"Creates a new deposit transaction according to business and schema rules. Required fields enforced, optional fields per schema documentation."},"IAiCommerceDepositTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for transaction row. Required."},"deposit_account_id":{"type":"string","format":"uuid","description":"Deposit account reference for which this transaction was logged. Required."},"type":{"type":"string","description":"Transaction type. One of: 'recharge', 'withdraw', 'payment', or 'refund'. Required."},"amount":{"type":"number","description":"Transaction amount (float, required). May be positive for recharges or negative/zero for deductions per business rules."},"status":{"type":"string","description":"Transaction status. Allowed: 'pending', 'confirmed', 'failed', or 'expired'. Required."},"counterparty_reference":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional external/internal reference for payment or refund source/target. May be null."},"performed_at":{"type":"string","format":"date-time","description":"Datetime when transaction was performed (ISO 8601, required)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the ledger entry was created (ISO 8601, required)."},"updated_at":{"type":"string","format":"date-time","description":"When the transaction was last updated (ISO 8601, required)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete field. Optional; non-null if transaction is logically deleted."}},"required":["id","deposit_account_id","type","amount","status","performed_at","created_at","updated_at"],"description":"Complete persisted deposit transaction entity. Corresponds directly to ai_commerce_deposit_transactions in schema; all properties reflect database columns."},"IAiCommerceDepositTransaction.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"The business or operational status of this deposit transaction. Must match allowed statuses: (e.g., 'pending', 'confirmed', 'failed'). Refer to ai_commerce_deposit_transactions.status."},"counterparty_reference":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"External or internal reference ID (e.g., payment, refund, etc) for this transaction. May be null."},"performed_at":{"type":"string","format":"date-time","description":"The timestamp when the transaction event was performed. Should be in ISO 8601 date-time format. Maps to ai_commerce_deposit_transactions.performed_at."}},"required":[],"description":"Fields for updating selected properties of a deposit transaction. Only allowed for status, counterparty reference, and performed_at.\n\nThis aligns with audit/compliance logic: amount/account_id are NOT updatable."},"IAiCommerceMileageAccount.IRequest":{"type":"object","properties":{"user_id":{"type":"string","description":"Filter for user (buyer/seller) ID linked to the mileage account."},"status":{"type":"string","description":"Filter for mileage account business status (e.g., 'active', 'suspended', 'closed')."},"account_code":{"type":"string","description":"Optional filter for the unique account code of the mileage account."},"min_balance":{"type":"number","description":"Minimum balance filter for account search."},"max_balance":{"type":"number","description":"Maximum balance filter for account search."},"created_from":{"type":"string","format":"date-time","description":"Lower bound for filtering based on creation datetime (ISO 8601)."},"created_to":{"type":"string","format":"date-time","description":"Upper bound for filtering based on creation datetime (ISO 8601)."},"updated_from":{"type":"string","format":"date-time","description":"Lower bound for filtering based on last update datetime (ISO 8601)."},"updated_to":{"type":"string","format":"date-time","description":"Upper bound for filtering based on last update datetime (ISO 8601)."},"page":{"type":"integer","description":"Page number for pagination; starts from 1.","minimum":1},"limit":{"type":"integer","description":"Records per page for pagination (max 100).","minimum":1,"maximum":100},"sort_by":{"type":"string","description":"Field name to sort by (e.g., 'created_at', 'balance', 'account_code')."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order. Must be either 'asc' or 'desc'."},{"const":"desc","description":"Sort order. Must be either 'asc' or 'desc'."}],"description":"Sort order. Must be either 'asc' or 'desc'."}},"required":[],"description":"Filtering/pagination/search request for listing mileage accounts. See business rules for field use."},"IAiCommerceMileageAccount":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key for mileage account (UUID)."},"account_code":{"type":"string","description":"Unique code/token for identifying this mileage account."},"user_id":{"type":"string","description":"User (buyer/seller) that owns this mileage account."},"balance":{"type":"number","description":"Current mileage (loyalty point) balance for this account. Cannot be negative per business rules."},"status":{"type":"string","description":"Status for this mileage account (active, suspended, closed). Business logic governs allowed transitions."},"created_at":{"type":"string","format":"date-time","description":"When the mileage account was created (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"When the mileage account was last updated (ISO 8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When this mileage account was soft deleted (null if active)."}},"required":["id","account_code","user_id","balance","status","created_at","updated_at"],"description":"Mileage/point account record for a buyer or seller in the platform. Business entity for tracking reward/loyalty account status, balance, compliance, and audit trails."},"IAiCommerceMileageAccount.ICreate":{"type":"object","properties":{"user_id":{"type":"string","description":"User (buyer or seller) for which the mileage account is being created."},"account_code":{"type":"string","description":"Unique code for this account. Must NOT duplicate existing codes."},"balance":{"type":"number","description":"Initial balance. Optional—if omitted, typically defaults to 0."},"status":{"type":"string","description":"Account status (e.g., 'active', 'suspended', 'closed'). Business logic may require 'active' by default."}},"required":["user_id","account_code"],"description":"Creation data for a new mileage (loyalty) account for a user. Used in onboarding, rewards, or role escalation. Defaults for balance/status will be set per business rules if not provided."},"IAiCommerceMileageAccount.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Update the current status for the mileage account (active, suspended, closed). Must comply with business logic."}},"required":[],"description":"Update payload for a mileage account—currently only supports status update. Balance is not directly updatable except via transactions."},"IAiCommerceMileageTransaction.IRequest":{"type":"object","properties":{"accountId":{"type":"string","description":"The unique identifier of the mileage account to filter transactions for. Optional."},"type":{"oneOf":[{"const":"accrual","description":"Transaction type.\n\n- 'accrual': Points or mileage earned by the user.\n- 'redemption': Points redeemed or spent.\n- 'adjustment': Administrative adjustment of balance (positive or negative).\n- 'expiration': Points expired from the user's account."},{"const":"redemption","description":"Transaction type.\n\n- 'accrual': Points or mileage earned by the user.\n- 'redemption': Points redeemed or spent.\n- 'adjustment': Administrative adjustment of balance (positive or negative).\n- 'expiration': Points expired from the user's account."},{"const":"adjustment","description":"Transaction type.\n\n- 'accrual': Points or mileage earned by the user.\n- 'redemption': Points redeemed or spent.\n- 'adjustment': Administrative adjustment of balance (positive or negative).\n- 'expiration': Points expired from the user's account."},{"const":"expiration","description":"Transaction type.\n\n- 'accrual': Points or mileage earned by the user.\n- 'redemption': Points redeemed or spent.\n- 'adjustment': Administrative adjustment of balance (positive or negative).\n- 'expiration': Points expired from the user's account."}],"description":"Transaction type.\n\n- 'accrual': Points or mileage earned by the user.\n- 'redemption': Points redeemed or spent.\n- 'adjustment': Administrative adjustment of balance (positive or negative).\n- 'expiration': Points expired from the user's account."},"status":{"type":"string","description":"Status of the transaction, such as 'confirmed', 'pending', 'failed', or 'expired'. Optional."},"minAmount":{"type":"number","description":"Minimum transaction amount to filter for."},"maxAmount":{"type":"number","description":"Maximum transaction amount to filter for."},"startDate":{"type":"string","format":"date-time","description":"Filter for transactions occurring after (or on) this ISO 8601 date/time. Optional."},"endDate":{"type":"string","format":"date-time","description":"Filter for transactions occurring before (or on) this ISO 8601 date/time. Optional."},"page":{"type":"integer","minimum":1,"default":1,"description":"Page number for paginated results. Optional."},"limit":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"Maximum number of records to return per page. Optional."},"sortBy":{"type":"string","description":"Field to sort results by. Optional."},"sortOrder":{"oneOf":[{"const":"asc","description":"Sort order. Can be 'asc' for ascending or 'desc' for descending. Optional."},{"const":"desc","description":"Sort order. Can be 'asc' for ascending or 'desc' for descending. Optional."}],"description":"Sort order. Can be 'asc' for ascending or 'desc' for descending. Optional."}},"required":[],"description":"Filter/search DTO for mileage transactions. Used to query transactions for an account or in the platform, supporting advanced filtering, sorting, and pagination. All fields are optional for maximal flexibility."},"IAiCommerceMileageTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the mileage transaction record."},"mileage_account_id":{"type":"string","format":"uuid","description":"Reference to the mileage account this transaction affects."},"type":{"oneOf":[{"const":"accrual","description":"Type of mileage transaction. See enum for details."},{"const":"redemption","description":"Type of mileage transaction. See enum for details."},{"const":"adjustment","description":"Type of mileage transaction. See enum for details."},{"const":"expiration","description":"Type of mileage transaction. See enum for details."}],"description":"Type of mileage transaction. See enum for details."},"amount":{"type":"number","description":"Amount of points/mileage (positive for accrual, negative for redemption or expiration)."},"status":{"type":"string","description":"Current status of the transaction: e.g. 'confirmed', 'pending', 'failed', 'expired'."},"reference_entity":{"oneOf":[{"type":"string","description":"Reference to a related entity, such as an order, campaign, or administrative event. Optional."},{"type":"null"}],"description":"Reference to a related entity, such as an order, campaign, or administrative event. Optional."},"transacted_at":{"type":"string","format":"date-time","description":"Date and time the transaction event occurred (ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when record was last modified (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp if the transaction is erased. Optional."},{"type":"null"}],"description":"Soft delete timestamp if the transaction is erased. Optional."}},"required":["id","mileage_account_id","type","amount","status","transacted_at","created_at","updated_at"],"description":"Business entity representing an individual mileage (point) transaction for accrual, redemption, adjustment, or expiration, linked to a user account. Fully aligns with ai_commerce_mileage_transactions database and audit/compliance tracing."},"IAiCommerceMileageTransaction.ICreate":{"type":"object","properties":{"mileage_account_id":{"type":"string","format":"uuid","description":"The mileage account to which this transaction will be applied."},"type":{"oneOf":[{"const":"accrual","description":"Type of mileage transaction."},{"const":"redemption","description":"Type of mileage transaction."},{"const":"adjustment","description":"Type of mileage transaction."},{"const":"expiration","description":"Type of mileage transaction."}],"description":"Type of mileage transaction."},"amount":{"type":"number","description":"Number of points/mileage units to add (positive) or subtract (negative)."},"status":{"type":"string","description":"Initial status for this transaction, such as 'pending', 'confirmed', etc."},"reference_entity":{"oneOf":[{"type":"string","description":"Link to the related entity (order, campaign, etc) for context. Optional."},{"type":"null"}],"description":"Link to the related entity (order, campaign, etc) for context. Optional."},"transacted_at":{"type":"string","format":"date-time","description":"Transaction timestamp (ISO 8601). Optional—omit for now and set server-side."}},"required":["mileage_account_id","type","amount","status"],"description":"Request DTO for creating a new mileage/point transaction in the system. Used by admin or automated business processes for accrual, redemption, adjustment, or expiration events."},"IAiCommerceMileageTransaction.IUpdate":{"type":"object","properties":{"type":{"oneOf":[{"const":"accrual","description":"Type of mileage transaction, if updating."},{"const":"redemption","description":"Type of mileage transaction, if updating."},{"const":"adjustment","description":"Type of mileage transaction, if updating."},{"const":"expiration","description":"Type of mileage transaction, if updating."}],"description":"Type of mileage transaction, if updating."},"amount":{"type":"number","description":"New amount for the transaction (if correction needed)."},"status":{"type":"string","description":"Updated status, such as 'confirmed', 'reversed', etc. (if correcting record)."},"reference_entity":{"oneOf":[{"type":"string","description":"Update/change the entity reference for this transaction, if needed."},{"type":"null"}],"description":"Update/change the entity reference for this transaction, if needed."},"transacted_at":{"type":"string","format":"date-time","description":"Modified timestamp for the transaction event (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Mark as deleted (soft delete) with timestamp, for audit purposes."},{"type":"null"}],"description":"Mark as deleted (soft delete) with timestamp, for audit purposes."}},"required":[],"description":"Request DTO for updating a mileage transaction. Used by admins for correction, cancellation, or account reconciliation. Only fields that are being updated must be included."},"IAiCommerceCoupon.IRequest":{"type":"object","properties":{"coupon_code":{"type":"string","description":"Filter by coupon code (exact match or partial, depending on backend logic). Optional."},"status":{"type":"string","description":"Coupon status, such as 'active', 'expired', or 'revoked'. Optional."},"type":{"type":"string","description":"Coupon type if filtering, e.g., 'percent', 'amount', 'shipping'. Optional."},"validFrom":{"type":"string","format":"date-time","description":"Lower bound for coupon validity period start (ISO 8601)."},"validUntil":{"type":"string","format":"date-time","description":"Upper bound for coupon validity period end (ISO 8601)."},"issuedBy":{"type":"string","description":"Admin/seller who issued this coupon."},"page":{"type":"integer","minimum":1,"default":1,"description":"Pagination page number. Optional."},"limit":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"Number of records per page. Optional."},"sortBy":{"type":"string","description":"Field for sorting results. Optional."},"sortOrder":{"oneOf":[{"const":"asc","description":"Sort order: ascending ('asc') or descending ('desc'). Optional."},{"const":"desc","description":"Sort order: ascending ('asc') or descending ('desc'). Optional."}],"description":"Sort order: ascending ('asc') or descending ('desc'). Optional."}},"required":[],"description":"Request DTO for filtering/searching coupons in admin analytics or reporting tool. Flexible for business use—many fields optional."},"IAiCommerceCoupon":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique coupon identifier in the system. Referenced by coupon issues and redemption events."},"coupon_code":{"type":"string","description":"Globally unique code or token for the coupon. Used for reference, validation, and user-facing application.\nMust be unique across all coupons. Typically set as an alphanumeric string matching platform or business conventions."},"type":{"type":"string","description":"Type of coupon (amount, percent, shipping, etc). Business-rule driven string value compliant with platform coupon policies.\nUsed to determine application logic, eligibility, and presentation."},"valid_from":{"type":"string","format":"date-time","description":"Coupon validity start date/time, following ISO 8601 extended format. Indicates when the coupon becomes eligible for use.\nEnforced upstream and referenced during user coupon application and validation."},"valid_until":{"type":"string","format":"date-time","description":"Coupon expiry date/time, following ISO 8601 extended format. Indicates the last moment the coupon may be used for redemption.\nBusiness logic disables or retires coupons at this timestamp."},"issued_by":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Issuer (admin or seller) user ID. May be null if system-issued or pooled coupon.\nReferences administrative or business actor responsible for coupon creation and campaign management."},"max_uses":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Total number of times this coupon can be used. Optional field that, if null, defaults to unlimited or business policy limit.\nEnforced at redemption time to clamp overall usage platform-wide."},"conditions":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON/YAML/Rule description of applicable entities or logic associated with this coupon.\nControls campaign, user group, product/category, or other business eligibility. May be null for globally applicable simple coupons."},"status":{"type":"string","description":"Current business status of the coupon: 'active', 'expired', 'revoked'. Drives visibility, eligibility, and admin dashboard metrics.\nUpdated according to campaign, usage, or business process automation."},"created_at":{"type":"string","format":"date-time","description":"Coupon creation timestamp (ISO 8601). Set once upon definition of the coupon for visibility, audit, and analytics."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this coupon entity (ISO 8601). Used for admin audits and campaign analytics."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete field (nullable). Indicates when the coupon was retired from the platform for audit/evidence compliance. Null if coupon is active or not deleted."}},"required":["id","coupon_code","type","valid_from","valid_until","status","created_at","updated_at"],"description":"Coupon entity representing discount, promotional, or incentive metadata, as defined in the ai_commerce_coupons table.\n\nMaps to campaigns, issues, and redemptions, and includes status management, conditions/rules, and audit fields.\nReflects business and regulatory requirements for digital incentives, compliance, and legal evidence."},"IAiCommerceCoupon.ICreate":{"type":"object","properties":{"coupon_code":{"type":"string","description":"Globally unique code or token for the coupon to create. Must be unique across all coupons.\nUsed for user-facing reference and platform processing."},"type":{"type":"string","description":"Type of coupon: amount, percent, shipping, etc. Drives business logic for redemption and display."},"valid_from":{"type":"string","format":"date-time","description":"Start date/time for coupon validity (ISO 8601 format). The coupon becomes active from this instant."},"valid_until":{"type":"string","format":"date-time","description":"End date/time for coupon usage (ISO 8601 format). Coupon is invalid after this point."},"issued_by":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Issuer (admin or seller) for tracking provenance and campaign analytics. May be null if system-issued."},"max_uses":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Limit on the number of uses for this coupon. Optional: null means unlimited, otherwise a non-negative integer."},"conditions":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Serialized business rule/eligibility configuration (JSON, YAML, or DSL) for limiting coupon application scope.\nMay be null or empty for unrestricted/global coupons."},"status":{"type":"string","description":"Initial status for the coupon: 'active', 'pending', 'archived', or other as per business rule. Used to control campaign lifecycle and user visibility."}},"required":["coupon_code","type","valid_from","valid_until","status"],"description":"DTO for coupon creation (POST). Used when registering new discount or incentive campaigns, enforcing all required fields to meet compliance and business rules."},"IAiCommerceCoupon.IUpdate":{"type":"object","properties":{"type":{"type":"string","description":"Type of coupon for update: amount, percent, shipping, etc. Optional except when changing redemption logic."},"valid_from":{"type":"string","format":"date-time","description":"(Optional) New validity start date/time (ISO 8601). Applies when changing campaign schedules or activating a dormant coupon."},"valid_until":{"type":"string","format":"date-time","description":"(Optional) Revised expiry date/time (ISO 8601). Changes accepted if campaign date is moving forward/back."},"issued_by":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Issuer ID update (uuid string or null). Optional, reflects campaign ownership or admin override."},"max_uses":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"New total usage limit for the coupon (optional). Must be increased generally, but not reduced below current usage counts for integrity."},"conditions":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) New serialized business rules for eligibility/restriction. May be null to unset or update campaign coverage."},"status":{"type":"string","description":"Update status for the coupon: active, archived, expired, or revoked. Optional. Used to manage campaign lifecycle and platform analytics."}},"required":[],"description":"DTO for coupon updates (PUT). Supports all mutable fields, used in campaign corrections, admin overrides, or lifecycle transitions.\nAll fields are optional to allow for partial PATCH-like updates. Must validate business constraints on current state and update eligibility."},"IAiCommerceCouponIssue.IRequest":{"type":"object","properties":{"coupon_id":{"type":"string","format":"uuid","description":"(Optional) Reference to the parent coupon. Filtering all issues by a particular campaign/coupon, using uuid format."},"issued_to":{"type":"string","format":"uuid","description":"(Optional) Target user/account to whom the coupon was issued. Used for searching records per user in summary analytics and support workflows."},"status":{"type":"string","description":"(Optional) Current issue status: 'issued', 'redeemed', 'expired', 'revoked', etc. Multiple statuses are filterable to support campaign, support, or analytics views."},"issued_at_from":{"type":"string","format":"date-time","description":"(Optional) Start of issuance date/time window (ISO 8601). Used to filter records issued after this instant."},"issued_at_to":{"type":"string","format":"date-time","description":"(Optional) End of issuance date/time window (ISO 8601). Used to filter coupon issues up to this time."},"redeemed_at_from":{"type":"string","format":"date-time","description":"(Optional) Start of redemption time window. Used for analytics and review of coupon usage cadence."},"redeemed_at_to":{"type":"string","format":"date-time","description":"(Optional) End of redemption time window for analytics."},"expires_at_from":{"type":"string","format":"date-time","description":"(Optional) Start of coupon issue expiry range. Enables cleanup of expiring coupons or user reminder logic."},"expires_at_to":{"type":"string","format":"date-time","description":"(Optional) End of coupon expiry window. For analytics filters and reporting."},"batch_reference":{"type":"string","description":"(Optional) Reference to campaign batch/campaign identifier for bulk issue tracking. Used in advanced marketing and compliance queries."},"page":{"type":"integer","format":"int32","description":"(Optional) Pagination: page number to retrieve. Defaults to 1 if not provided."},"limit":{"type":"integer","format":"int32","description":"(Optional) Pagination: number of results per page. Configurable by admin and defaults to system or API policy value."}},"required":[],"description":"DTO for searching or filtering issued coupons (ai_commerce_coupon_issues), supporting advanced analytics, campaign reporting, and user-specific incentives.\nIncludes pagination fields to allow scalable retrieval in admin or dashboard interfaces."},"IAiCommerceCouponIssue":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for issued coupon record. Uniquely identifies the coupon-user assignment in the system."},"coupon_id":{"type":"string","format":"uuid","description":"Reference to master coupon for this issuance, using system-wide coupon uuid (foreign key)."},"issued_to":{"type":"string","format":"uuid","description":"Target account/user to whom this coupon was issued. Reference UUID to ai_commerce_buyer or similar."},"status":{"type":"string","description":"Issued coupon status: 'issued', 'redeemed', 'expired', 'revoked', etc. Statuses drive business workflows and reporting compliance."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp of coupon issue (ISO 8601 format). Set at assignment and used for lifecycle tracking."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when this coupon issue will expire (ISO 8601). Driven by parent coupon's valid_until, campaign, or override."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when coupon was redeemed, if ever (ISO 8601). Null if never redeemed, set automatically upon successful usage."},"batch_reference":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reference campaign or batch ID for campaign-wide issuance tracking and analytics aggregation. Optional."},"created_at":{"type":"string","format":"date-time","description":"Record creation time for issued coupon (ISO 8601), used for admin review and compliance analytics."},"updated_at":{"type":"string","format":"date-time","description":"Last update to the coupon issue entity. Provides temporal trace for audit or re-issue/withdrawal flows."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp (nullable), set if issue is logically removed for compliance. Null if active or never deleted."}},"required":["id","coupon_id","issued_to","status","issued_at","expires_at","created_at","updated_at"],"description":"Entity representing a specific coupon issued to a user/account, as recorded in ai_commerce_coupon_issues.\nIncludes redemption, expiry, and campaign linkage for analytics and business rule enforcement. Soft delete retained for privacy and audit evidence as per compliance requirements."},"IAiCommerceCouponIssue.ICreate":{"type":"object","properties":{"coupon_id":{"type":"string","format":"uuid","description":"Unique identifier of the master coupon that is being issued to the user. This must match an existing row in ai_commerce_coupons."},"user_id":{"type":"string","format":"uuid","description":"Unique identifier of the recipient user account (buyer or seller as eligible)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Expiration timestamp for the issued coupon (ISO 8601). Null for no explicit expiry."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief detail or campaign note for analytics or compliance. Null if unused."}},"required":["coupon_id","user_id"],"description":"Request body for issuing a new coupon to a user. Must provide coupon_id and user_id. Optional: expires_at, description."},"IAiCommerceCouponIssue.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"New status for the coupon issue. Example values: 'issued', 'redeemed', 'expired', 'revoked'."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Update the expiration timestamp for this coupon issue. ISO 8601 format or null."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update the optional description, campaign note, or compliance context. Null if clearing."}},"required":[],"description":"Request body for updating issued coupon fields: status, expiry, or note. All fields optional."},"IAiCommerceCouponUse.IRequest":{"type":"object","properties":{"status":{"type":"string","description":"Filter by coupon use status, e.g., 'redeemed', 'failed', 'revoked', etc."},"user_id":{"type":"string","format":"uuid","description":"Filter by user uuid."},"coupon_issue_id":{"type":"string","format":"uuid","description":"Filter by issued coupon reference (uuid)."},"from":{"type":"string","format":"date-time","description":"Filter by redemption/usage period: start (ISO 8601)."},"to":{"type":"string","format":"date-time","description":"Filter by redemption/usage period: end (ISO 8601)."},"order_id":{"type":"string","format":"uuid","description":"Filter by order id (uuid)."},"page":{"type":"integer","minimum":1,"description":"Paging: page number. Optional, default 1."},"limit":{"type":"integer","minimum":1,"maximum":500,"description":"Paging: max entries to return (default 20, max 500)."}},"required":[],"description":"Filter and pagination for searching coupon use events. All properties are optional."},"IAiCommerceCouponUse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the coupon use event (redemption record)."},"coupon_issue_id":{"type":"string","format":"uuid","description":"Reference to the issued coupon instance (ai_commerce_coupon_issues.id)."},"user_id":{"type":"string","format":"uuid","description":"User who redeemed the coupon."},"status":{"type":"string","description":"Status of the coupon use event, e.g. 'redeemed', 'revoked', 'failed'."},"redeemed_at":{"type":"string","format":"date-time","description":"Timestamp that coupon was redeemed (ISO 8601)."},"order_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Order associated with this coupon use (if any). Null if not linked to order."}},"required":["id","coupon_issue_id","user_id","status","redeemed_at"],"description":"Represents a coupon redemption event; includes coupon issue, redeemed user, status, timestamp, and optional order link."},"IAiCommerceCouponUse.ICreate":{"type":"object","properties":{"coupon_issue_id":{"type":"string","format":"uuid","description":"Required. Unique identifier of the issued coupon (ai_commerce_coupon_issues.id)."},"user_id":{"type":"string","format":"uuid","description":"Required. The user who is redeeming the coupon."},"order_id":{"type":"string","format":"uuid","description":"Optional. The order the coupon was used for, or omitted if not applicable."},"status":{"type":"string","description":"Required. Status at creation. Usually 'redeemed', but may be 'failed' or as allowed by business rules."},"redeemed_at":{"type":"string","format":"date-time","description":"Required. ISO 8601 timestamp when the coupon was redeemed."}},"required":["coupon_issue_id","user_id","status","redeemed_at"],"description":"Request body for creating a coupon use record. Required: issued coupon id, user id, status, redeemed_at. Optional: order_id."},"IAiCommerceCouponUse.IUpdate":{"type":"object","properties":{"coupon_issue_id":{"type":"string","description":"Coupon issue ID this usage is tied to. References the base coupon issue entry."},"redeemed_by":{"type":"string","description":"User or account who redeemed the coupon."},"order_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Order ID where the coupon was used. Null if not linked to an order."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Redemption timestamp (ISO 8601). Null if not yet redeemed."},"status":{"type":"string","description":"Redemption status: valid values depend on business rules (success, rejected, failed, revoked, etc)."}},"required":[],"description":"Request DTO for updating an existing coupon use/redemption record."},"IAiCommerceCouponAudit.IRequest":{"type":"object","properties":{"coupon_id":{"type":"string","description":"Coupon ID to filter audit log entries for a specific coupon."},"event_type":{"type":"string","description":"Coupon audit event type to filter (issue, use, validate, expire, revoke, adjust)."},"event_timestamp_start":{"type":"string","format":"date-time","description":"ISO 8601 start datetime for filtering audit logs by event_timestamp."},"event_timestamp_end":{"type":"string","format":"date-time","description":"ISO 8601 end datetime for filtering audit logs by event_timestamp."},"event_reference":{"type":"string","description":"Reference entity (order, payment, campaign, etc) for filtering."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (default 1)."},"limit":{"type":"integer","minimum":1,"description":"Number of results per page (default 20-50)."},"sort":{"oneOf":[{"const":"asc","description":"Sort audit logs by event_timestamp (asc/desc)."},{"const":"desc","description":"Sort audit logs by event_timestamp (asc/desc)."}],"description":"Sort audit logs by event_timestamp (asc/desc)."}},"required":[],"description":"Filtering, search and pagination params for coupon audit logs."},"IAiCommerceCouponAudit":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the coupon audit record."},"coupon_id":{"type":"string","description":"ID of the coupon this audit record refers to."},"event_type":{"type":"string","description":"Business event: issue, use, validate, expire, revoke, adjust, etc."},"event_reference":{"type":"string","description":"Reference entity (order, payment, campaign, etc) for this audit record."},"note":{"type":"string","description":"Business note or audit reason for this log entry."},"event_timestamp":{"type":"string","format":"date-time","description":"Timestamp when audit event was recorded."}},"required":["id","coupon_id","event_type","event_timestamp"],"description":"Coupon audit trail record. Immutable evidence for all lifecycle business actions."},"IAiCommercePaymentFraudEvent.IRequest":{"type":"object","properties":{"event_code":{"type":"string","description":"Fraud event code: MULTI_REDEMPTION, ABUSE, EXTERNAL_INCIDENT, etc."},"entity_type":{"type":"string","description":"Affected entity type: payment, coupon, deposit, mileage, transaction."},"status":{"type":"string","description":"Fraud investigation status (detected, under_review, confirmed, dismissed)."},"detected_at_start":{"type":"string","format":"date-time","description":"Start timestamp ISO 8601 for detection event filtering."},"detected_at_end":{"type":"string","format":"date-time","description":"End timestamp ISO 8601 for detection event filtering."},"description":{"type":"string","description":"Free-text description search."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (default 1)."},"limit":{"type":"integer","minimum":1,"description":"Results per page (default 20-50)."},"sort":{"oneOf":[{"const":"asc","description":"Sort by detected_at field (asc/desc)."},{"const":"desc","description":"Sort by detected_at field (asc/desc)."}],"description":"Sort by detected_at field (asc/desc)."}},"required":[],"description":"Filtering, search, and pagination params for querying fraud event history."},"IAiCommercePaymentFraudEvent":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the fraud event."},"event_code":{"type":"string","description":"Business/analytics event code indicating the type of fraud detected."},"entity_type":{"type":"string","description":"Type of affected entity (payment, coupon, deposit, mileage, transaction)."},"entity_id":{"type":"string","description":"Primary key of the affected entity."},"status":{"type":"string","description":"Fraud investigation status: detected, under_review, confirmed, or dismissed."},"description":{"type":"string","description":"Human readable free-form description of the event."},"detected_at":{"type":"string","format":"date-time","description":"Timestamp the fraud event was detected (ISO 8601)."},"reviewed_at":{"type":"string","format":"date-time","description":"Timestamp the event was reviewed/resolved/audited (ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"Fraud record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Fraud record last updated timestamp (ISO 8601)."},"deleted_at":{"type":"string","format":"date-time","description":"Timestamp for soft deletion of the fraud event record. Null if active."}},"required":["id","event_code","entity_type","entity_id","status","detected_at","created_at","updated_at"],"description":"Fraud/abuse audit event record. Immutable evidence and analytics for compliance."},"IAiCommercePaymentFraudEvent.ICreate":{"type":"object","properties":{"event_code":{"type":"string","description":"Fraud event code (e.g. MULTI_REDEMPTION, ABUSE, EXTERNAL_INCIDENT) - case sensitive."},"entity_type":{"type":"string","description":"Entity type for fraud link (payment, coupon, deposit, mileage, transaction)."},"entity_id":{"type":"string","description":"UUID string referring to entity within entity_type."},"status":{"type":"string","description":"Fraud event investigation status (detected, under_review, confirmed, dismissed), etc."},"description":{"oneOf":[{"type":"string","description":"Human-readable description/reason/context for audit or compliance. May be omitted or null."},{"type":"null"}],"description":"Human-readable description/reason/context for audit or compliance. May be omitted or null."},"detected_at":{"type":"string","format":"date-time","description":"ISO 8601 date/time when this event was detected/created."}},"required":["event_code","entity_type","entity_id","status","detected_at"],"description":"Create a new fraud event log entry. All fields required except description, which may be omitted/null. Used by admins and compliance to register detected fraud events."},"IAiCommercePaymentFraudEvent.IUpdate":{"type":"object","properties":{"event_code":{"type":"string","description":"Fraud event code update (optional)."},"entity_type":{"type":"string","description":"Entity type for fraud link (optional)."},"entity_id":{"type":"string","description":"UUID string referring to entity within entity_type (optional)."},"status":{"type":"string","description":"Fraud event status update (optional)."},"description":{"oneOf":[{"type":"string","description":"Update fraud event human-description (optional)"},{"type":"null"}],"description":"Update fraud event human-description (optional)"},"detected_at":{"oneOf":[{"type":"string","format":"date-time","description":"Detection time (ISO8601, optional if not changing)."},{"type":"null"}],"description":"Detection time (ISO8601, optional if not changing)."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When this event was last reviewed/updated (optional, may be null)."},{"type":"null"}],"description":"When this event was last reviewed/updated (optional, may be null)."}},"required":[],"description":"Update an existing fraud event. All fields optional. Use null for detected_at or reviewed_at to clear them, string for date otherwise. Not all properties need changing; only supply those being updated."},"IAiCommercePaymentAnalytics.IRequest":{"type":"object","properties":{"period_start":{"oneOf":[{"type":"string","format":"date-time","description":"Start of analytics period (ISO8601, optional)"},{"type":"null"}],"description":"Start of analytics period (ISO8601, optional)"},"period_end":{"oneOf":[{"type":"string","format":"date-time","description":"End of analytics period (ISO8601, optional)"},{"type":"null"}],"description":"End of analytics period (ISO8601, optional)"},"channel_id":{"oneOf":[{"type":"string","description":"Channel UUID filter (optional, can be omitted or null)"},{"type":"null"}],"description":"Channel UUID filter (optional, can be omitted or null)"},"method_id":{"oneOf":[{"type":"string","description":"Payment method UUID filter (optional)"},{"type":"null"}],"description":"Payment method UUID filter (optional)"},"gateway_id":{"oneOf":[{"type":"string","description":"Payment gateway UUID filter (optional)"},{"type":"null"}],"description":"Payment gateway UUID filter (optional)"},"page":{"oneOf":[{"type":"integer","description":"Pagination: page number, optional, default = 1"},{"type":"null"}],"description":"Pagination: page number, optional, default = 1"},"limit":{"oneOf":[{"type":"integer","description":"Pagination: page size, optional, default = 50"},{"type":"null"}],"description":"Pagination: page size, optional, default = 50"}},"required":[],"description":"Search/payment analytics query filters. Set only desired criteria and paging (all are optional)."},"IAiCommercePaymentAnalytics":{"type":"object","properties":{"id":{"type":"string","description":"Primary key UUID for this analytics record."},"period_start":{"type":"string","format":"date-time","description":"Start of analytics period (ISO8601)."},"period_end":{"type":"string","format":"date-time","description":"End of analytics period (ISO8601)."},"channel_id":{"type":"string","description":"UUID of channel referenced by this analytics record."},"method_id":{"type":"string","description":"UUID of payment method for analytics breakdown."},"gateway_id":{"type":"string","description":"UUID of payment gateway for this analytics bucket."},"total_payments":{"type":"integer","description":"Total number of completed payment events in this interval."},"total_amount":{"type":"number","description":"Total monetary value of all payment transactions for the window (float, typically platform currency)."},"total_refunds":{"type":"integer","description":"Count of refunds processed in this window (int)."},"coupon_uses":{"type":"integer","description":"Total coupons redeemed in this window (int)."},"mileage_redemptions":{"type":"integer","description":"Total mileage redemptions in this window (int)."},"deposit_usages":{"type":"integer","description":"Total usages of deposit account in this window (int)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of analytics window creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update/recalculation for this window."}},"required":["id","period_start","period_end","channel_id","method_id","gateway_id","total_payments","total_amount","total_refunds","coupon_uses","mileage_redemptions","deposit_usages","created_at","updated_at"],"description":"Analytics KPI summary for payments in a defined window/channel/method."},"IAiCommerceBulletin.IRequest":{"type":"object","properties":{"title":{"oneOf":[{"type":"string","description":"Filter by (partial) title for search UI. Optional."},{"type":"null"}],"description":"Filter by (partial) title for search UI. Optional."},"status":{"oneOf":[{"type":"string","description":"Bulletin status to filter (active, draft, suspended, etc.), optional."},{"type":"null"}],"description":"Bulletin status to filter (active, draft, suspended, etc.), optional."},"visibility":{"oneOf":[{"type":"string","description":"Bulletin visibility (public/private/role-based), optional."},{"type":"null"}],"description":"Bulletin visibility (public/private/role-based), optional."},"author_id":{"oneOf":[{"type":"string","description":"Filter by author id (UUID), optional."},{"type":"null"}],"description":"Filter by author id (UUID), optional."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Earliest creation time to include (ISO8601, optional)."},{"type":"null"}],"description":"Earliest creation time to include (ISO8601, optional)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Latest creation time to include (ISO8601, optional)."},{"type":"null"}],"description":"Latest creation time to include (ISO8601, optional)."},"sort_by":{"oneOf":[{"type":"string","description":"Field name to sort by (optional, e.g., 'created_at'). Feedback UI default if omitted."},{"type":"null"}],"description":"Field name to sort by (optional, e.g., 'created_at'). Feedback UI default if omitted."},"sort_dir":{"oneOf":[{"const":"asc","description":"Direction of sort: asc/desc, optional, default = desc."},{"const":"desc","description":"Direction of sort: asc/desc, optional, default = desc."},{"type":"null"}],"description":"Direction of sort: asc/desc, optional, default = desc."},"page":{"oneOf":[{"type":"integer","description":"Result page number, optional, default 1."},{"type":"null"}],"description":"Result page number, optional, default 1."},"limit":{"oneOf":[{"type":"integer","description":"Results per page (default 50, optional)."},{"type":"null"}],"description":"Results per page (default 50, optional)."}},"required":[],"description":"Advanced bulletin search: all parameters optional, set only for filtering relevant announcement records."},"IAiCommerceBulletin":{"type":"object","description":"Represents a bulletin (announcement or system notice) in the aiCommerce platform. Maps directly to the ai_commerce_bulletins database table. Contains details such as author reference, title, content, visibility, workflow status, and timestamps. Supports audit, moderation, and user-facing bulletin functionality.","properties":{"id":{"type":"string","format":"uuid","description":"Unique system identifier for the bulletin (ai_commerce_bulletins.id). UUID format."},"author_id":{"type":"string","format":"uuid","description":"Reference to the buyer/user who authored the bulletin. UUID format, links to ai_commerce_buyer.id."},"title":{"type":"string","description":"Bulletin title (subject line) as presented to users. Full-text searchable."},"body":{"type":"string","description":"Main content/body of the bulletin. May use HTML or markdown as per content management policy. Typically full-text, supports business, system, or marketing announcements."},"visibility":{"type":"string","description":"Controls who can see the bulletin: e.g., 'public', 'private', or specific audience code. Used to restrict or allow exposure based on business rules."},"status":{"type":"string","description":"Current state of the bulletin: e.g., 'draft', 'published', 'suspended', 'deleted'. Drives lifecycle, moderation, and evidence preservation logic."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for bulletin creation, for audit and chronological sorting."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of last change to the bulletin, updated for any edit or moderation."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 timestamp if the bulletin is soft-deleted. Null if active. Supports logical delete for compliance and audit."}},"required":["id","author_id","title","body","visibility","status","created_at","updated_at"]},"IAiCommerceBulletin.ICreate":{"type":"object","description":"Request DTO for creating a new bulletin. Includes all fields required for announcement registration as per the ai_commerce_bulletins schema.","properties":{"author_id":{"type":"string","format":"uuid","description":"Buyer or user UUID creating the bulletin. Must reference existing user."},"title":{"type":"string","description":"Bulletin title/subject line."},"body":{"type":"string","description":"Full bulletin content/body."},"visibility":{"type":"string","description":"Visibility flag or audience code ('public', 'private' etc.) for the bulletin."},"status":{"type":"string","description":"Initial status for the bulletin: typically 'draft' or 'published'."}},"required":["author_id","title","body","visibility","status"]},"IAiCommerceBulletin.IUpdate":{"type":"object","description":"DTO for updating properties (content/status/etc) of an existing bulletin. All fields are optional and updates are partial by default.","properties":{"title":{"type":"string","description":"Bulletin title/subject line."},"body":{"type":"string","description":"Full bulletin content/body."},"visibility":{"type":"string","description":"Visibility flag ('public', 'private') for the bulletin."},"status":{"type":"string","description":"Workflow status, e.g., 'published', 'draft', 'suspended'."}},"required":[]},"IAiCommerceComment":{"type":"object","description":"A comment entity on a bulletin, inquiry, or review, supporting full conversation, moderation and evidence logging. Maps to ai_commerce_comments table.","properties":{"id":{"type":"string","format":"uuid","description":"Unique system identifier for the comment record."},"author_id":{"type":"string","format":"uuid","description":"User UUID who authored the comment."},"parent_comment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Parent comment (for threads), nullable. UUID or null."},"bulletin_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If the comment is attached to a bulletin, parent bulletin's ID."},"inquiry_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If the comment is attached to a product inquiry, reference to inquiry ID."},"review_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If the comment is attached to a review, reference to review ID."},"body":{"type":"string","description":"Main content/body of the comment (user/member text)."},"status":{"type":"string","description":"Moderation/business status (e.g., 'published', 'flagged', 'deleted', etc.)."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 creation timestamp for the comment, for sorting/evidence."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 last update time (for edits/moderation)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If soft-deleted, timestamp of deletion. Null if active. Audit/compliance only."}},"required":["id","author_id","body","status","created_at","updated_at"]},"IAiCommerceComment.IRequest":{"type":"object","description":"Advanced query/search DTO for listing/filtering comments on bulletin, inquiry, or review entities. Used to power paginated UIs, moderator dashboards, or analytics.","properties":{"author_id":{"type":"string","format":"uuid","description":"Filter for comments authored by the specified user (UUID). Optional."},"status":{"type":"string","description":"Moderation/business status filter (e.g., 'published', 'flagged', etc.)."},"created_at_from":{"type":"string","format":"date-time","description":"ISO 8601 (inclusive) lower bound for comment creation time for filtering."},"created_at_to":{"type":"string","format":"date-time","description":"ISO 8601 (inclusive) upper bound for comment creation time for filtering."},"search":{"type":"string","description":"Full-text search/filter for comment content/body."},"parent_comment_id":{"type":"string","format":"uuid","description":"Filter for comments that are direct replies to the given parent (threaded)."},"bulletin_id":{"type":"string","format":"uuid","description":"Restrict query to comments on a particular bulletin."},"inquiry_id":{"type":"string","format":"uuid","description":"Restrict query to comments attached to a specific product inquiry."},"review_id":{"type":"string","format":"uuid","description":"Restrict query to comments attached to a review."},"page":{"type":"integer","minimum":1,"description":"Page number for paginated result sets. 1-based. Optional."},"limit":{"type":"integer","minimum":1,"description":"Pagination limit (number of results per page). Optional. Defaults system value."},"sort_by":{"type":"string","description":"Field name to sort by: e.g., 'created_at', 'status', etc."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order: 'asc' for ascending, 'desc' for descending."},{"const":"desc","description":"Sort order: 'asc' for ascending, 'desc' for descending."}],"description":"Sort order: 'asc' for ascending, 'desc' for descending."}},"required":[]},"IAiCommerceComment.ICreate":{"type":"object","properties":{"body":{"type":"string","description":"Content/body of the comment (required text value for all comment creations)."},"parent_comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"If replying to another comment, the parent comment's UUID. Null or absent for top-level comment."},{"type":"null"}],"description":"Parent comment ID for threading; null for top-level."},"visibility":{"oneOf":[{"type":"string","description":"Visibility/scope for comment (public/private/thread/etc.). String values determined by business/domain policy."},{"type":"null"}],"description":"Visibility/scope for this comment (optional, string; e.g., 'public', 'private', etc.)"},"status":{"oneOf":[{"type":"string","description":"Moderation status (draft/published/suspended/deleted). Optional, for moderate/AI workflows."},{"type":"null"}],"description":"Moderation status (optional). E.g., 'draft','published','suspended','deleted', etc."}},"required":["body"],"description":"Object for creating a new comment on a thread or user-generated content. Includes text, optional parent comment ID for threading, visibility scope, and moderation status. Follows audit and compliance rules for comment storage."},"IAiCommerceComment.IUpdate":{"type":"object","properties":{"body":{"type":"string","description":"Content/body for updating comment. If omitted, previous value is retained."},"status":{"type":"string","description":"Update the status of the comment (e.g., 'published','suspended','deleted'). String; domain values allowed."},"visibility":{"type":"string","description":"Optionally update the comment visibility ('public','private', etc)."}},"required":[],"description":"Object for updating a comment's body, moderation status, or visibility. Fields may be omitted to retain previous values."},"IAiCommerceInquiry.IRequest":{"type":"object","properties":{"keyword":{"type":"string","description":"Search text applied to the question/answer fields."},"product_id":{"type":"string","format":"uuid","description":"Filter by product UUID."},"author_id":{"type":"string","format":"uuid","description":"Filter inquiries by author/buyer UUID."},"status":{"type":"string","description":"Status filter for inquiries (e.g., 'open','answered','moderating','deleted')."},"visibility":{"type":"string","description":"Visibility/scope filter for queries ('public', 'private', etc.)."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number (starts at 1)"},"limit":{"type":"integer","minimum":1,"description":"Pagination: number of items per page"},"sort_field":{"type":"string","description":"Sorting: field name to order by, e.g., 'created_at'."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sorting direction; allowed values 'asc' or 'desc'."},{"const":"desc","description":"Sorting direction; allowed values 'asc' or 'desc'."}],"description":"Sorting direction; allowed values 'asc' or 'desc'."}},"required":[],"description":"Query parameters for search/filter/pagination of inquiries; supports search by product, author, keywords, status, visibility, and pagination/sorting."},"IAiCommerceInquiry":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for inquiry, generated as UUID."},"author_id":{"type":"string","format":"uuid","description":"UUID of the buyer/author who submitted the inquiry."},"product_id":{"type":"string","format":"uuid","description":"UUID of the product this inquiry references."},"question":{"type":"string","description":"Content of the inquiry, as submitted by user."},"answer":{"oneOf":[{"type":"string","description":"Answer or reply to inquiry, may be null if not yet answered."},{"type":"null"}],"description":"Answer/content provided by seller or admin; null if not yet answered."},"visibility":{"type":"string","description":"Scope/visibility of the inquiry, e.g., 'public','private', etc."},"status":{"type":"string","description":"Workflow or moderation status (open/answered/moderating/deleted)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the inquiry was created (RFC 3339/ISO 8601 format)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the inquiry was last updated, if at all (RFC 3339/ISO 8601 format)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when inquiry was deleted, if soft-deleted."},{"type":"null"}],"description":"If the inquiry has been deleted (soft delete), the deleted_at timestamp; else, null."}},"required":["id","author_id","product_id","question","visibility","status","created_at","updated_at"],"description":"Primary business entity for a product inquiry. Fields include UUIDs for inquiry, author, and referenced product, inquiry content, answer (if present), status, and visibility. Includes timestamps and supports soft delete via deleted_at."},"IAiCommerceInquiry.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Product to inquire about; required UUID."},"question":{"type":"string","description":"Question content for the inquiry."},"visibility":{"type":"string","description":"Scope/visibility for the inquiry (e.g., 'public','private')."}},"required":["product_id","question"],"description":"DTO for creating a new product inquiry. Requires product_id (UUID) and question string; optional visibility scope."},"IAiCommerceInquiry.IUpdate":{"type":"object","properties":{},"required":[],"description":"Updateable fields for a product inquiry. No direct update fields were specified in the derived schema for this component. Implement update objects with explicit property enumeration based on the business/prisma requirements."},"IAiCommerceReview.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for pagination; optional."},"limit":{"type":"integer","description":"Max records per page. Use as per platform default (e.g., 20/50/100)."},"order_item_id":{"type":"string","format":"uuid","description":"Filter by associated order item, if specified."},"status":{"oneOf":[{"const":"draft","description":"Review status filter."},{"const":"published","description":"Review status filter."},{"const":"moderating","description":"Review status filter."},{"const":"suspended","description":"Review status filter."},{"const":"deleted","description":"Review status filter."}],"description":"Review status filter."},"author_id":{"type":"string","format":"uuid","description":"Search for reviews by author. Only permitted with proper privilege."},"search":{"type":"string","description":"Keyword or full-text search across review bodies."}},"required":[],"description":"Review search/list filter DTO for paginated endpoints. Accepts search text, paging, status, and filter fields. Never includes forbidden/internal fields. Used only for input filtering."},"IAiCommerceReview":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the review (UUID, PK, ai_commerce_reviews.id)."},"author_id":{"type":"string","format":"uuid","description":"Author of the review (buyer) (UUID, FK ai_commerce_buyer.id)."},"order_item_id":{"type":"string","format":"uuid","description":"Unique order item identifier the review attaches to (UUID, FK ai_commerce_order_items.id)."},"rating":{"type":"integer","description":"Numeric review score (e.g., 1-5)."},"body":{"type":"string","description":"Free-text review content."},"seller_response":{"type":"string","description":"Seller's reply/response. Nullable/optional."},"visibility":{"type":"string","description":"Public/private/etc. Controls who can see the review."},"status":{"type":"string","description":"Moderation/publication status (e.g., published/suspended/deleted)."},"created_at":{"type":"string","format":"date-time","description":"Created timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."},"deleted_at":{"type":"string","format":"date-time","description":"Soft delete timestamp. Optional, present if review is deleted."}},"required":["id","author_id","order_item_id","rating","body","visibility","status","created_at","updated_at"],"description":"Full details of a review for a purchased product (ai_commerce_reviews table). Corresponds to review, buyer, rating, body, seller response, visibility, status, and audit fields. All fields specified in DB schema."},"IAiCommerceReview.ICreate":{"type":"object","properties":{"order_item_id":{"type":"string","format":"uuid","description":"UUID of the completed order item for which the buyer is writing the review."},"rating":{"type":"integer","description":"Numeric review score—typically 1-5 integer value."},"body":{"type":"string","description":"The main review text (required, up to schema max length)."},"visibility":{"type":"string","description":"Visibility for the review ('public', 'private', etc., see business rules)."}},"required":["order_item_id","rating","body","visibility"],"description":"Request payload to create a new review, referencing order item, numeric rating, review content, and visibility settings. Must comply with DB/business constraints on uniqueness, eligibility, and text content."},"IAiCommerceReview.IUpdate":{"type":"object","properties":{"rating":{"type":"integer","minimum":1,"maximum":5,"description":"Updated numeric review score, if altering. Optional, always validated if provided."},"body":{"type":"string","description":"Updated content/body for the review, if changed."},"visibility":{"oneOf":[{"const":"public","description":"Updated visibility setting if desired."},{"const":"private","description":"Updated visibility setting if desired."}],"description":"Updated visibility setting if desired."},"status":{"oneOf":[{"const":"published","description":"Update of status - e.g., move from draft to published, request moderation, suspension, etc."},{"const":"draft","description":"Update of status - e.g., move from draft to published, request moderation, suspension, etc."},{"const":"moderating","description":"Update of status - e.g., move from draft to published, request moderation, suspension, etc."},{"const":"suspended","description":"Update of status - e.g., move from draft to published, request moderation, suspension, etc."}],"description":"Update of status - e.g., move from draft to published, request moderation, suspension, etc."},"seller_response":{"type":"string","description":"Optional seller reply - only permitted for sellers/admins."}},"required":[],"description":"Review update DTO for PUT/PATCH requests. All fields optional; only those provided are changed. Excludes id, author_id, order_item_id, and system-generated fields. Complies with security and ownership controls."},"IAiCommercePageIComment.ISummary":{"type":"object","properties":{"total":{"type":"integer","description":"Total number of comment summary items returned by the pagination."},"page":{"type":"integer","description":"The current page number (1-based index)."},"limit":{"type":"integer","description":"The number of items per page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceComment.ISummary"},"description":"Array of comment summary objects on this page."}},"required":["total","page","limit","data"],"description":"Paginated summary result for comment lists. Contains a data array of comment summaries, total count, pagination, and page limits."},"IAiCommerceComment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the comment. This is a UUID string referencing the primary key of the comment record in the UGC system."},"author_id":{"type":"string","format":"uuid","description":"Unique identifier of the comment author (usually a buyer, but can be a seller or admin in some UGC flows)."},"body":{"type":"string","description":"Full content of the comment as posted by the author. May be plain text or filtered for moderation as needed."},"status":{"type":"string","description":"Business or moderation status of the comment. Common values: 'published', 'moderated', 'deleted', 'draft'. Follows the status values of ai_commerce_comments."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for when the comment was created. Referenced from ai_commerce_comments.created_at."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for when the comment was last edited or status was changed. Referenced from ai_commerce_comments.updated_at."}},"required":["id","author_id","body","status","created_at","updated_at"],"description":"Summary view of a comment (UGC context), typically used for listing or previews on bulletin, review, or inquiry discussions. Contains author, content, status, and timestamps, but not full reply threads or moderation histories."},"IAiCommerceFavoritesProduct.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for pagination (1-based). Optional."},"limit":{"type":"integer","description":"Number of items per page for pagination. Optional."},"sort":{"type":"string","description":"Field name to sort by (e.g., 'created_at', 'label'). Optional."},"order":{"oneOf":[{"const":"asc","description":"Sort order for results, either ascending ('asc') or descending ('desc'). Optional."},{"const":"desc","description":"Sort order for results, either ascending ('asc') or descending ('desc'). Optional."}],"description":"Sort order for results, either ascending ('asc') or descending ('desc'). Optional."},"product_id":{"type":"string","format":"uuid","description":"Filter: Only favorite records associated with this product UUID."},"label":{"type":"string","description":"Filter: Only favorites with this user-assigned label (exact match). Optional."},"folder_id":{"type":"string","format":"uuid","description":"Filter: Restrict results to favorites in a particular folder (UUID). Optional."},"created_from":{"type":"string","format":"date-time","description":"Filter: Start date for created_at timestamp (inclusive)."},"created_to":{"type":"string","format":"date-time","description":"Filter: End date for created_at timestamp (inclusive)."}},"required":[],"description":"Request body for searching or filtering a user's favorites products list, supporting search, sort, and pagination."},"IAiCommercePageIFavoritesProduct.ISummary":{"type":"object","properties":{"total":{"type":"integer","description":"Total number of favorite product summary items returned."},"page":{"type":"integer","description":"The current page number (1-based index)."},"limit":{"type":"integer","description":"The number of items per page (pagination)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesProduct.ISummary"},"description":"Array of favorite product summary records for this page."}},"required":["total","page","limit","data"],"description":"Paginated summary result for user's product favorites search; includes total, paging, and an array of summary favorite product entries."},"IAiCommerceFavoritesProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product favorite record (UUID)."},"product_id":{"type":"string","format":"uuid","description":"ID of the favorited product (UUID)."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User-assigned label for this favorite (optional, may be null if unset)."},"folder_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Folder assigned to this favorite (UUID), for organization (optional)."},"snapshot_id":{"type":"string","format":"uuid","description":"ID of the product snapshot associated at time of favoriting (UUID)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the favorite was added."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the favorite was last modified."}},"required":["id","product_id","snapshot_id","created_at","updated_at"],"description":"Summary information about a favorited product (for list display), includes product, label, folder association, and snapshot reference."},"IAiCommerceFavoritesProducts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product favorite (primary key, UUID)."},"product_id":{"type":"string","format":"uuid","description":"Product favorited (UUID)."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional label assigned by the user."},"folder_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional folder (UUID) for organizing this favorite."},"snapshot_id":{"type":"string","format":"uuid","description":"UUID reference for the favorited product snapshot (state at the time of favoriting)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the favorite was added."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the favorite record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the favorite was deleted (soft-delete) or null if not deleted."}},"required":["id","product_id","snapshot_id","created_at","updated_at"],"description":"The full entity for a user's favorited product, including organization, snapshot, and audit fields. Used for detail view and record management."},"IAiCommerceFavoritesProducts.ICreate":{"type":"object","properties":{"product_id":{"type":"string","format":"uuid","description":"Product to favorite (UUID). Required."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional label to apply to this favorite."},"folder_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional favorites folder UUID for organization."}},"required":["product_id"],"description":"Request body for creating a new product favorite, specifying the product, and optionally a label and folder for organization."},"IAiCommerceFavoritesProducts.IUpdate":{"type":"object","properties":{"label":{"type":"string","description":"(Optional) Custom label for favorite organization or quick filtering. Allows the user to assign a memorable tag or personal annotation to this favored product for easy recall or notification grouping."},"folder_id":{"type":"string","format":"uuid","description":"(Optional) Folder/group id for favorites organization. Represents the UUID of the folder entity (see Favorites Folder schema) for grouping the product favorite. Must match an existing folder owned by the user."}},"description":"Payload to update organizational attributes of a product favorite, such as label or folder assignment. Does not allow editing the favorite-product binding or snapshot. Used by the buyer/seller to personalize and manage organization of their product favorites.","required":[]},"IAiCommerceFavoritesInquiries.IRequest":{"type":"object","properties":{"folder_id":{"type":"string","format":"uuid","description":"(Optional) Filter for favorites stored in a particular organizational folder, referenced by its UUID."},"label":{"type":"string","description":"(Optional) Text label to search or filter favorites by custom annotation or grouping label."},"status":{"type":"array","items":{"type":"string"},"description":"(Optional) Filter by the workflow or business status of associated inquiries (e.g., ['answered','open']). Values reflect business logic for tracked inquiries."},"page":{"type":"integer","minimum":1,"description":"(Optional) Pagination page number to fetch, default 1."},"limit":{"type":"integer","minimum":1,"description":"(Optional) Number of items per page, default 20. Set up to business policy maximum (e.g., 100)."},"sort_by":{"type":"string","description":"(Optional) Name of field to sort by. Example: 'created_at', 'label', etc."},"sort_order":{"oneOf":[{"const":"asc","description":"(Optional) Direction of sort: ascending ('asc') or descending ('desc')."},{"const":"desc","description":"(Optional) Direction of sort: ascending ('asc') or descending ('desc')."}],"description":"(Optional) Direction of sort: ascending ('asc') or descending ('desc')."}},"description":"Filtering/search/pagination criteria for retrieving list of favorited inquiries. Allows user to customize retrieval of their favorite inquiries for management, batch notification/alert modification, or reporting workflows.","required":[]},"IAiCommerceFavoritesInquiries":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID primary key for the favorite inquiry record."},"user_id":{"type":"string","format":"uuid","description":"UUID reference to the user account (buyer/seller/admin) who owns this favorited inquiry."},"inquiry_id":{"type":"string","format":"uuid","description":"UUID of the inquiry entity favorited by this record."},"folder_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) UUID reference to favorites folder for organizational grouping. May be null or omitted."},{"type":"null"}],"description":"(Optional) UUID reference to favorites folder for organizational grouping. May be null or omitted."},"snapshot_id":{"type":"string","format":"uuid","description":"UUID of the snapshot entity for this inquiry at the time of favoriting (for audit/compliance/evidence purposes)."},"label":{"oneOf":[{"type":"string","description":"(Optional) Custom personal label or annotation assigned to this favorite."},{"type":"null"}],"description":"(Optional) Custom personal label or annotation assigned to this favorite."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp (UTC) of when the favorite was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp (UTC) of the last update to this favorite (e.g., label/folder change)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) ISO 8601 timestamp for soft-delete if this favorite was removed. Null if active."}},"required":["id","user_id","inquiry_id","snapshot_id","created_at","updated_at"],"description":"A favorited inquiry record for a user, linking an inquiry to the user's favorites with optional folder organization, label, and snapshot for audit/evidence. Used for personalized notification and compliance workflows."},"IAiCommerceFavoritesInquiries.ICreate":{"type":"object","properties":{"inquiry_id":{"type":"string","format":"uuid","description":"UUID of the inquiry to favorite."},"folder_id":{"type":"string","format":"uuid","description":"(Optional) Organizational folder UUID to group the favorite inquiry. Must reference a valid favorites folder owned by the user."},"label":{"type":"string","description":"(Optional) Custom annotation or label on this favorite (user defined)."}},"required":["inquiry_id"],"description":"Payload to register a new favorited inquiry for a user. Primary reference is 'inquiry_id'; additional organization or annotation is optional to power folder grouping, notification filtering, or evidence labeling. Folders must exist prior to assignment. Only logged-in users may create inquiry favorites."},"IAiCommerceFavoritesInquiries.IUpdate":{"type":"object","properties":{"folder_id":{"type":"string","format":"uuid","description":"(Optional) New folder UUID to move this favorite inquiry to; must be a valid folder owned by the user."},"label":{"type":"string","description":"(Optional) Label annotation for refiling/organizing this favorite inquiry."}},"description":"Payload to update organizational metadata (folder, label) for a user's favorited inquiry entry. Does not alter the favorite-inquiry relation or the snapshot. Commonly used to reorganize favorites, relabel, or update notification settings.","required":[]},"IAiCommerceFavoritesAddress.IRequest":{"type":"object","properties":{"folder_id":{"type":"string","format":"uuid","description":"Optional filter to return only favorite addresses in the specified organizational folder (UUID). Use for user-facing organization and UI navigation."},"label":{"type":"string","description":"Optional filter for searching labels attached to favorite addresses. Returns favorites containing the substring as a label."},"primary":{"type":"boolean","description":"If true, filter the result to only addresses marked as primary favorites. Used in checkout and fast access scenarios."},"address_id":{"type":"string","format":"uuid","description":"Optional filter to search favorite addresses linked to a particular address entry (UUID)."},"sort":{"type":"string","description":"Sort order, e.g., 'created_at desc', 'label asc'. If omitted, defaults to creation date descending."},"page":{"type":"integer","description":"Page number for pagination, 1-based index (default: 1)."},"limit":{"type":"integer","description":"Page size for pagination; maximum records per page (default: 20)."}},"description":"Filtering parameters for searching a user's favorite addresses. Enables UI to organize, query, and display paginated address favorites. Supports filtering by folder, label, primary status, address identity, and sorting/pagination.","required":[]},"IAiCommerceFavoritesAddress":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this favorite address record."},"user_id":{"type":"string","format":"uuid","description":"UUID referencing the buyer or seller account that owns this address favorite."},"address_id":{"type":"string","format":"uuid","description":"UUID of the user address that is being favorited."},"folder_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of the organizing folder this favorite belongs to. Null if not grouped."},"snapshot_id":{"type":"string","format":"uuid","description":"UUID of the address snapshot entity captured at favoriting."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional label set by user for organization/searching (e.g., 'Home', 'Company')."},"primary":{"type":"boolean","description":"Whether this address favorite is marked as the primary one in user's personal context."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the favorite address record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to this favorite address record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal (null if active)."}},"required":["id","user_id","address_id","snapshot_id","primary","created_at","updated_at"],"description":"Favorite address entity for a buyer/seller: links a user to a shipping or billing address with organization/folder, label, and primary flags. Includes snapshot for evidence."},"IAiCommerceFavoritesAddress.ICreate":{"type":"object","properties":{"address_id":{"type":"string","format":"uuid","description":"The UUID of the address entity to favorite. Must already exist and belong to the user."},"folder_id":{"type":"string","format":"uuid","description":"Optional UUID for the organization folder to include this favorite in."},"label":{"type":"string","description":"Optional user label for personal reference/organization (e.g., 'Gift', 'Grandma')."},"primary":{"type":"boolean","description":"Flag to mark this address as the primary favorite for user (optional, default false)."}},"required":["address_id"],"description":"Defines the payload for favoriting a user address and organizing it for rapid/AI-driven checkout, notifications, organization, or recovery."},"IAiCommerceFavoritesAddress.IUpdate":{"type":"object","properties":{"folder_id":{"type":"string","format":"uuid","description":"UUID of the new folder to move this favorite address to (if changing organization)."},"label":{"type":"string","description":"Update or assign a personal label to this favorite address."},"primary":{"type":"boolean","description":"Set/unset this address as the primary favorite in user's organizational context."}},"required":[],"description":"Request body for updating (relabeling or reorganizing) a user's favorite address. Only folder, label, or primary status can be changed."},"IAiCommerceFavoritesFolder.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"Optional folder name search string for filtering (substring match)."},"page":{"type":"integer","description":"1-based page number for pagination (default: 1)."},"limit":{"type":"integer","description":"Number of results per page for folder listing."},"sort":{"type":"string","description":"Sort key and order string (e.g., 'created_at desc', 'name asc'). Defaults to newest first if omitted."}},"required":[],"description":"Filter/pagination request for searching favorite folders for a buyer/seller. Enables user to browse/organize folders by name and creation date."},"IAiCommerceFavoritesFolder":{"type":"object","properties":{"id":{"type":"string","description":"UUID, unique folder record"},"user_id":{"type":"string","description":"UUID of the user who owns this folder (buyer/seller)"},"name":{"type":"string","description":"Folder name, unique per user"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of this favorites folder"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO date string)"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO date string)"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp (ISO date string) or null if active"}},"required":["id","user_id","name","created_at","updated_at"],"description":"A favorites folder entity for favorites organization (ai_commerce_favorites_folders)."},"IAiCommerceFavoritesFolder.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Folder name (unique per user)"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of the folder"}},"required":["name"],"description":"Object for creating a new favorites folder. Only name is required, description is optional."},"IAiCommerceFavoritesFolder.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Optional new name for the folder"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optionally update the description"}},"required":[],"description":"Update object for PATCH/PUT favorites folder properties. All fields optional."},"IAiCommerceFavoritesAlert":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product favorite alert record. This value is generated by the database and referenced in notification logic, audit logs, and user-action event trails."},"favorite_id":{"type":"string","format":"uuid","description":"References the specific favorited product (ai_commerce_favorites_products.id) to which this alert trigger is attached. Used for joining alert configurations with the user's favorites list and as the context for notifications."},"alert_type":{"type":"string","description":"Type of alert trigger for this favorite product (e.g., 'price_drop', 'restocked', 'answer_posted'). Used to determine what event will cause notification to be triggered for the user on this favorite. Business logic enforces that each favorite can only have one active alert of each type."},"is_enabled":{"type":"boolean","description":"Boolean toggle indicating whether alerting for this trigger is currently active for this favorite. If false, notifications for the associated event are suppressed."},"last_triggered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp in ISO 8601 format for when this alert was last triggered. Null if the alert has never fired. Used for audit trails and delivering context to the user regarding notification recency."}},"required":["id","favorite_id","alert_type","is_enabled"],"description":"Configuration of a single alert trigger associated with a product favorite.\n\nRepresents a user's personalized alert settings for a given favorited product (eg, notify on price drop, restock, answer posted, etc). Triggers notification logic upon matching business events in backend or by scheduled analytics jobs. Audit and notification flows rely on this entity for event routing and evidence."},"IAiCommerceFavoritesAlert.IUpdate":{"type":"object","properties":{"is_enabled":{"type":"boolean","description":"Administrative or user-set toggle for enabling/disabling this alert trigger on the favorite. Omitted if no change."}},"required":[],"description":"Request DTO for updating the enabled status of an existing alert trigger configuration for a favorited product. Allows user or platform logic to enable or disable alert delivery per favorite/trigger type."},"IAiCommerceFavoritesAlert.IUpdateRequest":{"type":"object","properties":{"updates":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesAlert.IUpdate"},"description":"Array of alert updates to apply for a favorite"}},"required":["updates"],"description":"Payload to batch update multiple alert configs for a favorite."},"IAiCommerceFavoritesAlert.IList":{"type":"object","properties":{"alerts":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceFavoritesAlert"},"description":"Current list of configured alert triggers for this favorite"}},"required":["alerts"],"description":"Response object for listing all alert triggers for a favorite resource."},"IAiCommerceFavoritesAlert.ICreate":{"type":"object","properties":{"alert_type":{"type":"string","description":"Type of alert trigger for this favorite product. Examples: 'price_drop', 'restocked', 'answer_posted'. Must match business-accepted alert type definitions for configuration. Required."},"is_enabled":{"type":"boolean","description":"Whether or not the alert trigger should be immediately active for the favorite. Defaults to true in most business contexts, but can be explicitly set false for pre-configuration or delayed enable."}},"required":["alert_type","is_enabled"],"description":"Request DTO for creating a new alert trigger configuration for a favorited product.\n\nUsed by the authenticated user to establish a new notification or alert for a business event associated with their favorited product (eg, price drop, restock). Business logic validates type, ownership, and uniqueness per favorite/alert_type tuple."},"IAiCommerceFavoritesProductNotification.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination (indexed from 1). Optional; required only for paginated responses."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum number of notification records to return per page. Defaults to business policy-defined limit (e.g., 20 or 50)."},"notification_type":{"type":"string","description":"Filter to notifications of a specific event type (eg, 'price_drop', 'status_update', etc). Optional."},"delivered_from":{"type":"string","format":"date-time","description":"Filter notifications delivered after (or at) this ISO 8601 datetime. Used to select notification window for searching. Optional."},"delivered_to":{"type":"string","format":"date-time","description":"Filter notifications delivered before (or at) this ISO 8601 datetime. Used for upper window bound. Optional."},"read_status":{"oneOf":[{"const":"read","description":"Filter to only unread or only read notifications on this favorite. Optional; if not present, returns both."},{"const":"unread","description":"Filter to only unread or only read notifications on this favorite. Optional; if not present, returns both."}],"description":"Filter to only unread or only read notifications on this favorite. Optional; if not present, returns both."},"sort_by":{"oneOf":[{"const":"delivered_at","description":"Which timestamp field to use for ordering notifications in result set. Defaults to delivered_at if not specified."},{"const":"created_at","description":"Which timestamp field to use for ordering notifications in result set. Defaults to delivered_at if not specified."}],"description":"Which timestamp field to use for ordering notifications in result set. Defaults to delivered_at if not specified."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction (ascending or descending). Defaults to descending (most recent first)."},{"const":"desc","description":"Sort direction (ascending or descending). Defaults to descending (most recent first)."}],"description":"Sort direction (ascending or descending). Defaults to descending (most recent first)."}},"required":[],"description":"Filtering, sorting, and pagination request DTO for searching notification events for a user's favorited product. Used for retrieving a custom, paginated view of recent and historical alerts in notification inbox or user analytics flows."},"IAiCommerceFavoritesProductNotification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the notification event as stored in ai_commerce_favorites_notifications. Used for audit, notification deduplication, and action/event routing."},"user_id":{"type":"string","format":"uuid","description":"User who received this notification (reference to ai_commerce_buyer.id). Used for dashboard/inbox display and enforcing access control for notification viewing and status updates."},"favorite_id":{"type":"string","format":"uuid","description":"References the favorited product entity (ai_commerce_favorites_products.id) associated with this notification event."},"notification_type":{"type":"string","description":"Type of notification event (e.g., 'price_drop', 'restocked', 'status_update'). Used to present icon/UX in the user's inbox and simplify filtering by notification category."},"delivered_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when this notification was delivered to the user (push, email, in-app, etc). Used for notification sorting, expiration, and display order."},"read_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 timestamp when the user marked this notification as read. Null if still in unread state."},"created_at":{"type":"string","format":"date-time","description":"UTC timestamp for the notification event (creation time in DB). Used for audit trail, deduplication, and time-based filtering."}},"required":["id","user_id","favorite_id","notification_type","delivered_at","created_at"],"description":"Business entity representing a notification (alert or update) related to a user's favorited product. Contains all metadata for delivery, UX presentation, and compliance/audit tracking."},"IAiCommerceSection.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the section. References the primary key in ai_commerce_sections."},"code":{"type":"string","description":"Unique code for the section within a channel."},"name":{"type":"string","description":"Display name of the section (e.g., 'Deals', 'Main Banner')."},"is_active":{"type":"boolean","description":"Whether this section is active and visible for merchandising/product display."},"business_status":{"type":"string","description":"Business workflow status for the section (e.g., 'normal', 'archived', 'pending')."},"sort_order":{"type":"integer","description":"Display sort order within the channel."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for section creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last section update."}},"required":["id","code","name","is_active","business_status","sort_order","created_at","updated_at"],"description":"Summary view of a channel section entity from ai_commerce_sections; includes core business and UI organization fields, used for management and list displays. Does not include detailed content, settings, or relationships."},"IAiCommerceCategory.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this category (ai_commerce_categories PK)."},"code":{"type":"string","description":"Unique category code for internal usage per channel."},"name":{"type":"string","description":"Display name of the category (e.g., 'Accessories')."},"level":{"type":"integer","description":"Depth level within the category hierarchy (0=top/root)."},"is_active":{"type":"boolean","description":"Whether the category is currently active/available for product assignment and discovery."},"business_status":{"type":"string","description":"Operational workflow/status for the category (e.g., 'active', 'archived')."},"sort_order":{"type":"integer","description":"Sort/display order within its siblings."},"parent_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional FK to parent category; null for root categories."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for category creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last modification."}},"required":["id","code","name","level","is_active","business_status","sort_order","created_at","updated_at"],"description":"Summary of a product category as used in list displays or hierarchy navigation. Includes only the core identifying and organizational fields needed for browsing, filtering, or selection."},"IAiCommerceSectionTemplate.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the section template (PK in ai_commerce_section_templates)."},"code":{"type":"string","description":"Template unique code for reference and API usage."},"name":{"type":"string","description":"Human-readable display name for the template (e.g., 'Electronics Default')."},"is_default":{"type":"boolean","description":"True if this template is set as system default for rapid section creation."},"business_status":{"type":"string","description":"Business workflow or operational status (e.g., 'active', 'archived')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for template creation."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp for audit/tracking."}},"required":["id","code","name","is_default","business_status","created_at","updated_at"],"description":"Summary data for a channel section template, presenting key configuration/management info for selection or analytics dashboards."},"IAiCommerceCategoryTemplate.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the category template."},"code":{"type":"string","description":"Unique category template code (e.g., 'FASHION_DEFAULT')."},"name":{"type":"string","description":"Human-friendly name for the template."},"is_default":{"type":"boolean","description":"Indicates if this template is the default for category onboarding/creation flows."},"business_status":{"type":"string","description":"Current workflow/approval status for the template."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for audit/evidence use."},"updated_at":{"type":"string","format":"date-time","description":"Last update time for version control."}},"required":["id","code","name","is_default","business_status","created_at","updated_at"],"description":"Summary view of a reusable category template, showing core metadata for quick UI selection or reporting; does not include full configuration data."},"IAiCommerceBusinessRuleTemplate.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the business rule template."},"code":{"type":"string","description":"Code identifying this rule template for API or management references."},"name":{"type":"string","description":"Human-readable name of the rule template."},"version":{"type":"integer","description":"Version number for audit/version control purposes."},"business_status":{"type":"string","description":"Workflow status for the rule template (e.g., 'active', 'retired', 'pending')."},"created_at":{"type":"string","format":"date-time","description":"When the rule template was created."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for evidence/versioning."}},"required":["id","code","name","version","business_status","created_at","updated_at"],"description":"Summary metadata for a business rule template. Useful for list/admin UIs and audit dashboards; covers core identification, workflow status, and audit fields only."},"IAiCommerceAttachments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the attachment file.\n\nCorresponds to the primary key in the ai_commerce_attachments table."},"user_id":{"type":"string","format":"uuid","description":"Reference to the user (buyer or seller) who uploaded the attachment.\n\nSee ai_commerce_attachments.user_id."},"filename":{"type":"string","description":"Original file name at upload, as present in the file system or provided by the user.\n\nRefer to ai_commerce_attachments.filename."},"business_type":{"type":"string","description":"Business context for the attachment, such as 'favorite_screenshot', 'notification_attachment', 'product_image', or other purpose.\n\nSee ai_commerce_attachments.business_type."},"status":{"type":"string","description":"Current attachment state. Example values: 'active', 'quarantined', 'deleted'.\n\nRefer to ai_commerce_attachments.status for business workflow."},"created_at":{"type":"string","format":"date-time","description":"Attachment creation timestamp in ISO8601.\n\nMaps to ai_commerce_attachments.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for attachment metadata in ISO8601 format.\n\nMaps to ai_commerce_attachments.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal (ISO8601 format) per ai_commerce_attachments.deleted_at. Use null if not deleted."}},"required":["id","user_id","filename","business_type","status","created_at","updated_at"],"description":"Represents a file attachment submitted by a user (buyer/seller) to the commerce platform for purposes such as favorites, notifications, evidence, or product gallery display. Fields map directly to ai_commerce_attachments table in the database. Includes metadata required for audit, compliance, and secure asset management.\n\nThis schema enforces presence of critical business and audit fields, along with support for soft deletion compliance. Each property references its underlying database column and is documented per backend and privacy standards."},"IAiCommerceSellerOnboarding.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the onboarding application (ai_commerce_seller_onboarding.id)."},"user_id":{"type":"string","format":"uuid","description":"Foreign key referencing the applicant's authentication account (ai_commerce_user_authentications.id)."},"store_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to the related store record (ai_commerce_stores.id) if established during onboarding."},"onboarding_status":{"type":"string","description":"Current onboarding workflow status, e.g., 'draft', 'submitted', 'reviewing', 'approved', 'rejected', 'escalated' (see ai_commerce_seller_onboarding.onboarding_status)."},"current_stage":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Indicates the present workflow stage, such as 'identity_verification', 'business_submission', etc. Null if not yet advanced (from ai_commerce_seller_onboarding.current_stage)."},"created_at":{"type":"string","format":"date-time","description":"Onboarding application creation timestamp (ai_commerce_seller_onboarding.created_at, ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the onboarding record (ai_commerce_seller_onboarding.updated_at, ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for logical removal of the onboarding record (ai_commerce_seller_onboarding.deleted_at, ISO8601). Null if active."}},"required":["id","user_id","onboarding_status","created_at","updated_at"],"description":"Summary view of seller onboarding application, omitting large text fields such as application_data and notes, focusing on workflow status, progress, and core linkages. Used in admin portals and onboarding task overviews. Field assignments and types are governed strictly by the ai_commerce_seller_onboarding table commentary and constraints."},"IAiCommerceStores.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique store identifier (ai_commerce_stores.id, PK)."},"store_name":{"type":"string","description":"Display name of the store (ai_commerce_stores.store_name)."},"store_code":{"type":"string","description":"Unique store business/internal code (ai_commerce_stores.store_code)."},"approval_status":{"type":"string","description":"Workflow approval status for store (e.g., active, pending, suspended, closed, terminated as defined in ai_commerce_stores.approval_status)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the store was first registered (ai_commerce_stores.created_at, ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last timestamp when the store metadata or status was changed (ai_commerce_stores.updated_at, ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if store is currently active. (ai_commerce_stores.deleted_at, ISO8601)."}},"required":["id","store_name","store_code","approval_status","created_at","updated_at"],"description":"Summary object capturing the core identity, approval status, and registration fields for a seller-managed store in the ai_commerce_stores table. Intended for store lists, overview dashboards, and business workflow management. Draws on Prisma schema documentation for constraints and field definitions."},"IAiCommerceStoreAnalytics.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key referencing the store analytics row (ai_commerce_store_analytics.id)."},"store_id":{"type":"string","format":"uuid","description":"Store identifier to which these analytics apply (ai_commerce_store_analytics.store_id, FK)."},"date_bucket":{"type":"string","format":"date-time","description":"Analytics bucket window start timestamp (e.g., day/week/month, ai_commerce_store_analytics.date_bucket)."},"sales_volume":{"type":"number","description":"Sum of total revenue or sales for the bucketed period (ai_commerce_store_analytics.sales_volume)."},"orders_count":{"type":"integer","description":"Count of fulfilled orders in the analytics window (ai_commerce_store_analytics.orders_count)."},"visitors_count":{"type":"integer","description":"Unique visitor count for the time period (ai_commerce_store_analytics.visitors_count)."},"conversion_rate":{"type":"number","description":"Conversion rate (0 to 1.0) capturing order ratio to visitors (ai_commerce_store_analytics.conversion_rate)."}},"required":["id","store_id","date_bucket","sales_volume","orders_count","visitors_count","conversion_rate"],"description":"Summary analytics object for a store, providing key business KPIs for a defined period. Used in reporting, performance dashboards, and analytics comparisons. Each property directly references the ai_commerce_store_analytics database commentary."},"IAiCommerceStoreBanking.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for store banking record (ai_commerce_store_banking.id)."},"store_id":{"type":"string","format":"uuid","description":"Foreign key to the store receiving the payout (ai_commerce_store_banking.store_id)."},"bank_name":{"type":"string","description":"Name of the bank or financial provider as recorded for payouts (ai_commerce_store_banking.bank_name)."},"account_number":{"type":"string","description":"Bank or provider account number registered for payout (ai_commerce_store_banking.account_number)."},"account_holder_name":{"type":"string","description":"Name on the payout account (ai_commerce_store_banking.account_holder_name)."},"routing_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Routing, SWIFT, or bank code for international payout; can be null for domestic payouts (ai_commerce_store_banking.routing_code)."},"verified":{"type":"boolean","description":"Whether this payout account has passed verification for compliance and fraud checks (ai_commerce_store_banking.verified)."}},"required":["id","store_id","bank_name","account_number","account_holder_name","verified"],"description":"Summary object for store banking info, summarizing payment routing, verification, and bank holder/account details. Follows ai_commerce_store_banking table constraints and descriptions."},"IAiCommerceStoreSetting.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the store setting. References the @id field in ai_commerce_store_settings."},"key":{"type":"string","description":"Configuration key for this setting (e.g., 'shipping_default', 'theme_color'). Must be unique within the store context."},"value":{"type":"string","description":"Value for the configuration key. May be a string, serialized object, URL, etc., depending on usage."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this setting was created (ISO 8601, timezone-aware)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this setting was last modified (ISO 8601, timezone-aware)."}},"required":["id","key","value","created_at","updated_at"],"description":"Summary representation of a store setting linked to a store (ai_commerce_store_settings).\n\nIncludes core fields necessary for displaying, searching, and managing store configuration. Used in summary tables, admin screens, and for analytics aggregation."},"IAiCommerceSellerDispute.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the seller dispute record (primary key @id in ai_commerce_seller_disputes)."},"seller_profile_id":{"type":"string","format":"uuid","description":"Reference to the seller profile involved in this dispute."},"dispute_type":{"type":"string","description":"Type of dispute or penalty/escalation (e.g., 'policy_violation', 'fraud_investigation', 'payout_hold')."},"status":{"type":"string","description":"Current workflow status of the dispute (e.g., 'open', 'in_progress', 'resolved', 'closed', 'escalated', 'withdrawn')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the dispute was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to this dispute record."}},"required":["id","seller_profile_id","dispute_type","status","created_at","updated_at"],"description":"Summary of key fields for a seller dispute (ai_commerce_seller_disputes).\n\nUsed in dashboards, dispute resolution lists, and for compliance reporting."},"IAiCommerceProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product (primary key @id in ai_commerce_products)."},"product_code":{"type":"string","description":"Product SKU or business code (must be globally unique)."},"name":{"type":"string","description":"Display name/title of the product."},"status":{"type":"string","description":"Product listing status (draft, active, paused, suspended, discontinued, deleted)."},"current_price":{"type":"number","description":"Current display price for this product."},"inventory_quantity":{"type":"integer","description":"Available inventory at the product level (not variant specific)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for product creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last product update."}},"required":["id","product_code","name","status","current_price","inventory_quantity","created_at","updated_at"],"description":"Summary view of key product information for listings, catalog management, and analytics.\n\nLists essential product facts for performance, compliance, and business display scenarios."},"IAiCommerceProductVariant.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this product variant/SKU."},"sku_code":{"type":"string","description":"Unique SKU code for this variant within its parent product."},"option_summary":{"type":"string","description":"Human-readable description of the option set (e.g., 'Size: M / Color: Red')."},"variant_price":{"type":"number","description":"Variant-specific display price (overrides parent product price where set)."},"inventory_quantity":{"type":"integer","description":"Stock available for this variant/SKU."},"status":{"type":"string","description":"Lifecycle status of the variant: active, paused, discontinued."},"created_at":{"type":"string","format":"date-time","description":"Variant creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Variant last updated timestamp."}},"required":["id","sku_code","option_summary","variant_price","inventory_quantity","status","created_at","updated_at"],"description":"Summary of a product variant/SKU option for listing, inventory management, and analytics.\n\nContains fast-access display and operational fields for variant-centric UI and reports."},"IAiCommerceProductBundle.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product bundle (primary key @id in ai_commerce_product_bundles)."},"bundle_code":{"type":"string","description":"Unique business code or external identifier for this bundle."},"name":{"type":"string","description":"Display name/title for the bundle."},"status":{"type":"string","description":"Current workflow status (active, paused, discontinued, deleted)."},"current_price":{"type":"number","description":"Display price for the bundle as currently configured."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the bundle was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the bundle was last updated."}},"required":["id","bundle_code","name","status","current_price","created_at","updated_at"],"description":"Summary of product bundle for catalog, analytics, and management lists.\n\nCovers core fields of composition, pricing, and visibility for merchandising."},"IAiCommerceProductImage.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Image UUID as per product image entity."},"display_order":{"type":"integer","description":"Display order in product image set (ascending)."},"locale":{"oneOf":[{"type":"string","description":"Locale string for localization/will be null if default."},{"type":"null"}],"description":"Optional locale of the image, will be null for default language/region."},"attachment_id":{"type":"string","format":"uuid","description":"Attachment UUID for the underlying physical image file."}},"required":["id","display_order","locale","attachment_id"],"description":"Summary of a product image entity as presented in list views. Contains only the fields necessary for listing/ordering in product image gallery or for preview in admin/seller management screens. No nesting or asset data—use attachment_id to link to actual file data."},"IAiCommerceTag.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Tag UUID. Used for all tag operations."},"name":{"type":"string","description":"Unique tag label for the system."},"status":{"type":"string","description":"Current lifecycle status of the tag (active, under_review, suspended, deleted)."}},"required":["id","name","status"],"description":"Summary structure for tag, used in tag listing, filters, or analytics. Returns only the minimal identifying and status info for performance and usability."},"IAiCommerceTrendingProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Trending product record UUID."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"UUID for the related product being flagged as trending."},"analytics_score":{"type":"number","description":"Current analytics trend score or ranking, used for sorting."},"is_manual_override":{"type":"boolean","description":"Indicates if trending was set manually by admin or is analytics-driven."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the product was first flagged as trending."}},"required":["id","ai_commerce_product_id","analytics_score","is_manual_override","created_at"],"description":"Summary for trending product record, used in trending lists, dashboards, and analytics feeds."},"IAiCommerceHighlightedProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Highlighted product record UUID."},"ai_commerce_product_id":{"type":"string","format":"uuid","description":"UUID for the associated product being highlighted."},"highlight_start_at":{"type":"string","format":"date-time","description":"Scheduled or actual start time of highlighting."},"highlight_end_at":{"oneOf":[{"type":"string","format":"date-time","description":"Scheduled end time of highlighting if set."},{"type":"null"}],"description":"Nullable end time—null means indefinitely highlighted unless revoked."},"is_active":{"type":"boolean","description":"Flag indicating whether highlight is currently in effect (true if now is between highlight_start_at and highlight_end_at, false otherwise)."},"reason":{"oneOf":[{"type":"string","description":"Optional reason or campaign description for highlighting."},{"type":"null"}],"description":"Explanation or context for the highlight (promotion, campaign, etc) if applicable."}},"required":["id","ai_commerce_product_id","highlight_start_at","highlight_end_at","is_active","reason"],"description":"Summary of a highlighted product for feeds, frontpages, campaign lists, or status analytics. Supplies metadata for activity, scheduling, and business logic."},"IAiCommerceCart.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique cart identifier (UUID)."},"status":{"type":"string","description":"Current cart status, such as draft, active, checked_out, expired, merged, deleted."},"total_quantity":{"type":"integer","description":"Total number of items in the cart."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for cart activity."},"store_id":{"oneOf":[{"type":"string","format":"uuid","description":"Store UUID linked to the cart if store-centric."},{"type":"null"}],"description":"Optional linkage to a store; null if not store-centric."}},"required":["id","status","total_quantity","updated_at","store_id"],"description":"Summary of a shopping cart entity for list, analytics, and cart selection UIs. Contains only those fields required for identifying and selecting a cart."},"IAiCommerceCartItem.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the cart item. Corresponds to ai_commerce_cart_items.id."},"product_id":{"type":"string","format":"uuid","description":"Unique identifier of the product associated with this item. Corresponds to ai_commerce_cart_items.product_id."},"product_name":{"type":"string","description":"The display name of the product as of the current cart state. Used for quick summary in cart UI or exports."},"variant_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Variant SKU ID associated with this cart item, if any. From ai_commerce_cart_items.variant_id. May be null if not applicable."},"option_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Short human-readable summary of option selections (e.g., \"Size: M / Color: Red\"). Derived from variant or explicit item options."},"quantity":{"type":"integer","description":"Number of units selected for this item in the cart."},"unit_price":{"type":"number","description":"Unit price at time of addition to cart (as snapshot for pricing stability)."},"item_total":{"type":"number","description":"Total price for this line item (quantity * unit_price), at last update."},"status":{"type":"string","description":"Current logical status of the item—such as 'active', 'deleted', or 'merged'—for UI/business logic partitioning."},"added_at":{"type":"string","format":"date-time","description":"Timestamp when item was first added to the cart."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update for this cart item."}},"required":["id","product_id","product_name","quantity","unit_price","item_total","status","added_at","updated_at"],"description":"Summary information for a cart item within a buyer's cart. Includes product reference, pricing, quantity, variant summary, and timestamps.\n\nDerived from ai_commerce_cart_items (with reference to ai_commerce_products for display fields). This summary type is used when listing cart items in overview contexts—such as in IPageIAiCommerceCartItem.ISummary—for both front-end user cart and backend analytics/reporting functions. Relationships to product name and variant details are denormalized here for performance and user experience.\n\nAll identifiers are UUIDs; timestamps follow ISO 8601 format. The summary always provides enough information for display and basic computation, but does not include full object graphs (see IAiCommerceCartItem for detail views).\n\nSee ai_commerce_cart_items schema and related product/variant documentation for precise source fields."},"IAiCommerceCartTemplate.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the cart template (UUID)."},"template_name":{"type":"string","description":"Business name of the cart template, for list views."},"description":{"oneOf":[{"type":"string","description":"Long-form description of the cart template's business purpose."},{"type":"null"}],"description":"Long-form description of the cart template's business purpose, if set."},"active":{"type":"boolean","description":"Indicates if the template is currently available for use."}},"required":["id","template_name","active"],"description":"Summary view of a cart template for use in paginated lists or overviews. Contains only essential identification and descriptive information (not the full configuration info)."},"IAiCommerceCartMerge.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the cart merge event (UUID)."},"source_cart_id":{"type":"string","format":"uuid","description":"Source cart being merged from (discarded after merge)."},"target_cart_id":{"type":"string","format":"uuid","description":"Target cart which receives contents and persists."},"reason":{"type":"string","description":"Business code or reason for the merge, such as 'login_merge', 'device_switch', or similar event type."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of merge event (ISO8601 UTC)."}},"required":["id","source_cart_id","target_cart_id","reason","created_at"],"description":"Summary view of a cart merge event for use in paginated listings, analytics, or admin search results. Contains only essential identifying and event information."},"IAiCommerceCartExpiration.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the cart expiration or recovery event (ai_commerce_cart_expirations.id)."},"cart_id":{"type":"string","format":"uuid","description":"Primary key of the cart affected by this expiration/recovery event (ai_commerce_cart_expirations.cart_id)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Admin UUID or null for automatic/system expiration (ai_commerce_cart_expirations.actor_id)."},"event_type":{"type":"string","description":"Type of expiration event ('expiration', 'recovery', 'retry', 'auto_reopen', etc.)"},"details":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional context/details for the expiration/recovery (ai_commerce_cart_expirations.details)."},"created_at":{"type":"string","format":"date-time","description":"Event creation timestamp (ISO 8601 date-time) (ai_commerce_cart_expirations.created_at)."}},"required":["id","cart_id","event_type","created_at"],"description":"Summary information for a cart expiration or recovery event, supporting analytics, audit, and recovery reporting. All identifier fields are UUIDs, timestamps use ISO 8601 format.\n\nDerived from ai_commerce_cart_expirations per business requirements: includes event type, context, actor ID, and origin cart."},"IAiCommerceOrder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Order UUID (ai_commerce_orders.id)."},"buyer_id":{"type":"string","format":"uuid","description":"Buyer UUID who placed the order (ai_commerce_orders.buyer_id)."},"channel_id":{"type":"string","format":"uuid","description":"Sales channel UUID the order belongs to (ai_commerce_orders.channel_id)."},"order_code":{"type":"string","description":"Human/business readable order code (e.g., ORD-20250001)."},"status":{"type":"string","description":"Current order status (e.g., 'created', 'payment_pending', 'shipped', 'delivered')."},"total_price":{"type":"number","description":"Total price amount for the order as recorded on checkout."},"paid_amount":{"type":"number","description":"Cumulative paid amount at time of summary (ai_commerce_orders.paid_amount)."},"currency":{"type":"string","description":"ISO currency code for payment/settlement (e.g., 'USD', 'KRW')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the order was created (ai_commerce_orders.created_at)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update to order state (ai_commerce_orders.updated_at)."}},"required":["id","buyer_id","channel_id","order_code","status","total_price","paid_amount","currency","created_at","updated_at"],"description":"Summary information for an order—buyer/channel linkage, code, status, amounts, and lifecycle timestamps.\n\nDrawn from ai_commerce_orders, these fields enable dashboards, lists, analytics, and high-level user/business reporting. All values adhere to type/format constraints as specified by the underlying schema. Relationships not expanded in this summary type (see IAICommerceOrder for detail views)."},"IAiCommerceOrderSnapshotLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key: ID of snapshot log"},"order_id":{"type":"string","format":"uuid","description":"Original order associated with this snapshot capture."},"capture_type":{"type":"string","description":"Nature of state capture: creation, edit, cancel, fulfilment, aftersales, etc."},"actor_id":{"type":"string","format":"uuid","description":"User/admin id making change when snapshot is taken."},"captured_at":{"type":"string","format":"date-time","description":"Time snapshot was taken."},"entity_json":{"type":"string","description":"Full JSON string of captured entity state/content for audit/future analysis."}},"required":["id","order_id","capture_type","actor_id","captured_at","entity_json"],"description":"Immutable time-based historical snapshots of orders and associated entities (items, fulfillments, disputes). Captures full state upon mutation for legal/forensic recovery. Required for auditability and legal compliance."},"IAiCommerceOrderAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key: audit log record"},"order_id":{"type":"string","format":"uuid","description":"Related order for this audit event."},"event_type":{"type":"string","description":"Type of action/event: create, update, payment, refund, fulfillment, cancellation, status_change, aftersales, etc."},"actor_id":{"type":"string","format":"uuid","description":"User or admin who performed the action."},"event_note":{"type":"string","description":"Optional log details/context for this action, escalation, or outcome."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when action/event took place."}},"required":["id","order_id","event_type","actor_id","occurred_at"],"description":"Append-only log of every critical action on orders, items, refunds, after-sales, or fulfillments—enables watertight evidence and forensic trace for compliance. Records who/what/when and detailed context of actions for transparency."},"IAiCommerceCoupon.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key: coupon id"},"coupon_code":{"type":"string","description":"Globally unique code or token for coupon."},"type":{"type":"string","description":"Type of coupon (amount, percent, shipping, etc)."},"valid_from":{"type":"string","format":"date-time","description":"Coupon validity start date/time."},"valid_until":{"type":"string","format":"date-time","description":"Coupon expiry date/time."},"issued_by":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Issuer (admin or seller)."},"max_uses":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Total number of times this coupon can be used on the platform (global limit)."},"conditions":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business rule conditions; JSON, YAML, or rules."},"status":{"type":"string","description":"Current status (active, expired, revoked, etc)."},"created_at":{"type":"string","format":"date-time","description":"Created timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete (retirement) if staged out of circulation."}},"required":["id","coupon_code","type","valid_from","valid_until","status","created_at","updated_at"],"description":"Summary DTO for coupon entities used in paging and list responses. Reflects major business attributes needed for UI listings and management."},"IAiCommerceCouponIssue.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key"},"coupon_id":{"type":"string","format":"uuid","description":"Reference to coupon master"},"issued_to":{"type":"string","format":"uuid","description":"FK reference to issued user/account (buyer, seller, etc.)"},"status":{"type":"string","description":"Issued coupon status (issued, redeemed, expired, revoked)."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp of coupon issue."},"expires_at":{"type":"string","format":"date-time","description":"Expiration for individual issue record."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When this issued coupon was redeemed (if used)."},"batch_reference":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Batch/campaign or unique series identifier if issued as part of a campaign."},"created_at":{"type":"string","format":"date-time","description":"Record creation time."},"updated_at":{"type":"string","format":"date-time","description":"Record update time."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp."}},"required":["id","coupon_id","issued_to","status","issued_at","expires_at","created_at","updated_at"],"description":"Summary DTO for issued coupons to a user/account, used for searches and listing. Contains identifiers and current status."},"IAiCommerceBulletin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key: bulletin ID"},"author_id":{"type":"string","format":"uuid","description":"FK to posting user account"},"title":{"type":"string","description":"Short content for search/UI"},"visibility":{"type":"string","description":"Scope: public/private/role-based"},"status":{"type":"string","description":"Publication/workflow status"},"created_at":{"type":"string","format":"date-time","description":"Created timestamp"},"updated_at":{"type":"string","format":"date-time","description":"Last update"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp"}},"required":["id","author_id","title","visibility","status","created_at","updated_at"],"description":"DTO for paginated bulletin search results—contains summary fields for list display and filtering. Used by admins and user UIs."},"IAiCommerceInquiry.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the product inquiry, primary key from ai_commerce_inquiries."},"author_id":{"type":"string","format":"uuid","description":"UUID of the user who created the inquiry, referencing a buyer (or sometimes seller for system Q&A)."},"product_id":{"type":"string","format":"uuid","description":"UUID of the product this inquiry references. Foreign key to ai_commerce_products.id."},"question":{"type":"string","description":"Main body of the inquiry as submitted by the buyer. Full text, usually pre-moderation or filtered for status=published."},"visibility":{"type":"string","description":"Access level: commonly one of 'public', 'private', or 'restricted'. Controls who may view the inquiry."},"status":{"type":"string","description":"Inquiry lifecycle status, such as 'open', 'answered', 'moderated', 'deleted'. Follows ai_commerce_inquiries.status business logic."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for inquiry creation."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for the most recent update to this inquiry."}},"required":["id","author_id","product_id","question","visibility","status","created_at","updated_at"],"description":"Summary record of a product inquiry, used for list results or previews in account/inquiry dashboards. Contains basic inquiry state, author, product, lifecycle, and timestamps."},"IAiCommerceReview.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the review record, from ai_commerce_reviews."},"author_id":{"type":"string","format":"uuid","description":"UUID of the review author (the buyer who placed the order and is leaving feedback)."},"order_item_id":{"type":"string","format":"uuid","description":"UUID of the order item being reviewed. Linked to ai_commerce_order_items.id, ensuring one review per purchased item."},"rating":{"type":"number","description":"Numeric review rating (e.g., 1-5 stars). Field is integer or float depending on platform policy, always present."},"body":{"type":"string","description":"Text content of the review—the user's feedback for the product and order item."},"status":{"type":"string","description":"Review status, such as 'published', 'moderated', 'deleted', etc. Follows status values allowed in ai_commerce_reviews."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601 date-time) of the review."},"updated_at":{"type":"string","format":"date-time","description":"Last update (edit/moderation) timestamp (ISO 8601 date-time) of the review."}},"required":["id","author_id","order_item_id","rating","body","status","created_at","updated_at"],"description":"Summary card of a review entry. Used for listing user/customer reviews, allows display of author, item/reference, rating, status and timestamps. Does not contain seller responses or comment threads."},"IAiCommerceFavoritesInquiries.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the favorites-inquiries record, primary key."},"user_id":{"type":"string","format":"uuid","description":"UUID for the user who favorited the inquiry (buyer or seller, depending on context)."},"inquiry_id":{"type":"string","format":"uuid","description":"UUID of the favorited inquiry. FK to ai_commerce_inquiries.id."},"snapshot_id":{"type":"string","format":"uuid","description":"UUID of the associated snapshot (immutable copy at favoriting time),"},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional user-supplied label for categorizing or annotating the favorite. Nullable."},"created_at":{"type":"string","description":"Timestamp at the moment of favoriting (ISO 8601)."},"updated_at":{"type":"string","description":"Timestamp of last metadata change (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"If deleted, the timestamp for soft-delete event (ISO 8601); null if active."}},"required":["id","user_id","inquiry_id","snapshot_id","label","created_at","updated_at","deleted_at"],"description":"Summary row for a favorited inquiry, including linkage fields (user, inquiry, snapshot), optional label, and favorite lifecycle timestamps. Used for favorites/bookmark lists."},"IAiCommerceFavoritesAddress.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the favorite-address record."},"user_id":{"type":"string","description":"UUID for the owner of the favorite (buyer or seller, as allowed)."},"address_id":{"type":"string","description":"UUID of the user address being favorited (ai_commerce_user_addresses.id)."},"snapshot_id":{"type":"string","description":"UUID of favorite's point-in-time snapshot (immutable copy of address at the time of favoriting)."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Descriptive label/annotation for organization/search within the user's favorites."},"primary":{"type":"boolean","description":"Indicates whether this favorite is designated primary for the user. Only one favorite address may be primary per user."},"created_at":{"type":"string","description":"ISO 8601 timestamp when address was favorited."},"updated_at":{"type":"string","description":"ISO 8601 timestamp when favorite was last updated (label/folder/metadata change)."},"deleted_at":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"If the favorite address is deleted, this contains the soft delete timestamp (ISO 8601); null if active."}},"required":["id","user_id","address_id","snapshot_id","label","primary","created_at","updated_at","deleted_at"],"description":"Summary/grouping view of a user's favorited address, with linkage to owner, address reference, label, snapshot, and primary flag. Used in personalized address management dashboards."},"IAiCommerceFavoritesFolder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the favorites folder as a UUID value. This is required for referencing the folder when organizing or retrieving favorites."},"name":{"type":"string","description":"User-defined name for the folder. Must be unique per user. Used for organizing or grouping favorites in UI and notification logic."},"description":{"oneOf":[{"type":"string","description":"Additional descriptive text for the folder's purpose, grouping, or context. This is optional and can be omitted if not provided."},{"type":"null"}],"description":"Optional description for the organizational folder, provided by the user for clarity or categorization purposes."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO8601, UTC) indicating when the favorites folder was created. Mirrors the created_at field in the database schema."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO8601, UTC) for the last time the folder was updated (e.g., renamed or description changed)."}},"required":["id","name","created_at","updated_at"],"description":"Summary view of a user's favorites folder for organizing saved addresses, products, or inquiries.\n\nThis type provides at-a-glance organizational metadata about a favorites folder belonging to the authenticated user. It does not include references to the user ID or soft deletion field, as it is designed for lightweight listing and UI rendering purposes in personalization, notification, or organization features.\n\nFields are based directly on ai_commerce_favorites_folders in the Prisma schema, preserving business intent and rules described in the schema commentary. The folder name is unique per user, creation and update dates support sorting/organization, and an optional description enables additional context."},"IReview.IUpdate":{"type":"object","properties":{"rating":{"type":"integer","minimum":1,"maximum":5,"description":"Updated numeric rating, if changed. Optional."},"body":{"type":"string","description":"Updated review content, if changed."},"visibility":{"type":"string","description":"Updated review visibility, if changed."},"seller_response":{"type":"string","description":"Only updatable by the seller; ignored otherwise. Represents seller communication to the review."}},"required":[],"description":"Request DTO for updating an existing review. All fields optional; partial update supported. SECURITY: Must never allow author_id, order_item_id, status, or audit/system fields to be changed by user request. Must not accept password/system sensitive data."},"IPageIAiCommerceCartTemplate":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiCommerceCartTemplate"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IAiCommerceBusinessRuleTemplate.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Change template display name"},"template_data":{"type":"string","description":"Update rule configuration data"},"version":{"type":"integer","description":"New version/iteration number to increment rule"},"business_status":{"type":"string","description":"Update workflow/approval state"}},"required":[],"description":"Update type for modifying rule template; all fields optional for PATCH/PUT."}}}}