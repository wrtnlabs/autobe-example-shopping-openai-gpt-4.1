{"operations":[{"specification":"This operation provides member-level user registration (join) for shopping mall customers. It is mapped to the 'shopping_mall_ai_backend_customers' table in the schema, which contains fields for unique 'email', verified 'phone_number', secure 'password_hash', full name, and account status. The purpose is to create new customer accounts having required identity fields as per regulatory and business policy, issue the initial JWT tokens, and record onboarding events. Security and compliance require that email and phone are unique per user, 'password_hash' is securely generated and never stored in cleartext, and onboarding must capture identity and initial verification as provided. The operation should create a new, active customer record, initiate email/mobile verification flow if needed, and return authorization tokens with user info for use in subsequent API calls. This is the principal entry-point for customer authentication in the platform. Error handling should include duplicate user/blocking, regulatory check failures, and rollback if any sub-step fails. This operation is related to customer login and token refresh, which complete the authentication lifecycle.","authorizationType":"join","description":"Customer registration endpoint for shopping mall service. It creates a new member account, requiring email, phone number, secure password hash, legal name, and (optional) nickname, mirroring the 'shopping_mall_ai_backend_customers' schema. The flow issues JWT tokens, sets 'is_active' and 'is_verified' states, and snapshots 'created_at' and 'updated_at' for audit. Security policies enforce uniqueness of email and phone, password hash integrity, and activity tracking (last_login_at null at registration). New account is returned with authentication tokens for API use. If duplicate, validation fails. The schema links this table to customer withdrawal/session entities for lifecycle management. Error scenarios include unique validation, identity verification failure, or transaction rollback. Related operations: customer login, token refresh, withdrawal. Only customers who complete onboarding will be 'is_active'.\n\nField mapping:\n- email, phone_number, password_hash, name from schema for onboarding\n- is_active true, is_verified as appropriate\n- last_login_at null on join, set on first login\n\nAll core authn details are present in the schema. Do not create extra fields.","summary":"Register new customer in 'shopping_mall_ai_backend_customers', issuing tokens.","parameters":[],"requestBody":{"description":"Customer registration for shopping mall service","typeName":"IShoppingMallAiBackendCustomer.IJoin"},"responseBody":{"description":"Authorized customer identity and tokens for API use","typeName":"IShoppingMallAiBackendCustomer.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/customer/join","method":"post"},{"specification":"This operation provides API-based member login for customers by validating email and password against the 'shopping_mall_ai_backend_customers' table. It checks the 'password_hash' for the given email, controls that the account is 'is_active' and not 'deleted_at', and, upon success, updates 'last_login_at', issues new authentication tokens, and links session tracking in 'shopping_mall_ai_backend_customer_sessions'. Passwords are matched via secure hash (do not use cleartext). The operation returns customer identity and new JWT tokens for follow-up API access. Failed attempts must enforce lockout business logic (e.g., temporary suspension after N failures) and return meaningful error codes. This login is related to join (registration) and refresh endpoints, completing user authentication workflows.","authorizationType":"login","description":"Customer API login endpoint for shopping mall service. Authenticates by validating provided email and password against the 'shopping_mall_ai_backend_customers' table's 'email' and 'password_hash'. Upon valid login, confirms that 'is_active' is true and 'deleted_at' is null. If successful, updates 'last_login_at', issues new JWT access/refresh tokens, and records session via 'shopping_mall_ai_backend_customer_sessions'. Error handling: accounts not found, password mismatch, disabled (is_active=false) or withdrawn (deleted_at set), lockout handling after failed attempts. The login endpoint is core to API auth flows, related to join (registration) and refresh endpoints. All auth info in schema: check email, password_hash, is_active; update last_login_at. No extra schema fields are needed or permitted.","summary":"Authenticate customer ('shopping_mall_ai_backend_customers') and issue tokens.","parameters":[],"requestBody":{"description":"API customer login parameters","typeName":"IShoppingMallAiBackendCustomer.ILogin"},"responseBody":{"description":"Authorized customer identity and tokens for API use","typeName":"IShoppingMallAiBackendCustomer.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/customer/login","method":"post"},{"specification":"This operation enables token refresh for customers using a valid refresh token from prior login/session, referencing 'shopping_mall_ai_backend_customer_sessions'. By supplying the current refresh token, a new pair of access/refresh tokens are issued, and session activity is updated. The process checks that the session's 'refresh_token' is valid, unexpired ('expires_at'), and matches the authenticated customer (also must not be 'terminated_at' or account 'deleted_at'). The new tokens and current identity are returned for continued API access. This extends login sessions for member users without re-entry of credentials. Handles token expiry, invalidation, and session termination. Related to customer login and join endpoints. All related session and user fields are present in the schema.","authorizationType":"refresh","description":"Customer API token refresh process (shopping mall service) using the existing refresh token. Validates the session's 'refresh_token' and 'expires_at' against 'shopping_mall_ai_backend_customer_sessions'. If valid and the account is still active/not withdrawn, issues new JWT tokens and updates session records. Invalidates old tokens when appropriate. Returns the authorized customer identity and tokens so APIs may continue without re-login. Error scenarios handled: refresh token expired/terminated, session not found, or user inactive/deleted. Closely related to login endpoint. Every session event is recorded in the schema for audit/compliance. No extra fields allowed. Crucial for securing extended API access. This operation completes the authentication cycle for member-level customer.","summary":"Refresh customer authentication tokens using session refresh token (member).","parameters":[],"requestBody":{"description":"API token refresh parameters (customer)","typeName":"IShoppingMallAiBackendCustomer.IRefresh"},"responseBody":{"description":"Authorized customer identity and renewed tokens for further API use","typeName":"IShoppingMallAiBackendCustomer.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/customer/refresh","method":"post"},{"specification":"Provides seller account registration and initial JWT authentication for the ShoppingMallAiBackend platform. Utilizes 'shopping_mall_ai_backend_sellers' table for business seller access. Ensures new seller mandates valid business email and registration number, with seller onboarding and is_verified flag support. Registers seller via POST, returning access and refresh tokens. No password, OTP, or extra verification required at registration. Used for onboarding new merchants; repeatable only for unregistered businesses. Requires is_active, is_verified, and unique email fields as per schema.","authorizationType":"join","description":"This operation enables a new seller to register and obtain authenticated API access to the system. It is based on the 'shopping_mall_ai_backend_sellers' table. Upon registration, the seller record includes an email (for platform identity), a business_registration_number (for compliance and uniqueness), and personal or business name information. Creation of a seller account immediately results in issuance of JWT tokens for API authentication and business logic workflow. The seller can begin listing products and fulfilling orders after successful registration. Security is enforced through unique email and business registration number per seller. Integration into business onboarding flows, dashboard creation, and audit event logging is supported. This operation is essential for onboarding new merchants.","summary":"Register a new seller and issue JWT tokens (shopping_mall_ai_backend_sellers)","parameters":[],"requestBody":{"description":"Information required to register a new seller business account.","typeName":"IShoppingMallAiBackendSeller.ICreate"},"responseBody":{"description":"Authorized payload including access and refresh tokens for the new seller.","typeName":"IShoppingMallAiBackendSeller.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/seller/join","method":"post"},{"specification":"Performs credential-based authentication for sellers using the 'shopping_mall_ai_backend_sellers' table. This operation allows sellers who have previously registered to log in using their business email and password. Upon successful authentication, issues JWT access and refresh tokens as required by the business platform. Denies authentication for inactive or unverified accounts (is_active=false or is_verified=false). Designed for ongoing seller API use and session renewal. Relies on sellers' email and password_hash; does not integrate external authentication providers. Security logging for successful and failed logins is enforced for compliance and auditability.","authorizationType":"login","description":"This authentication endpoint allows an existing seller to log in using their business email and password. The information is checked against the 'shopping_mall_ai_backend_sellers' table with password_hash, is_active, and is_verified status for account eligibility. If authentication is successful and the account is active and verified, the seller receives JWT access and refresh tokens, enabling API-based business operations such as order management, fulfillment, and analytics dashboard access. This operation supports business session management, allows only credential-based logins (no external/OAuth options), and is integral to secure, auditable platform operations. Failed login attempts are logged for security compliance. Related APIs: /auth/seller/join (registration) and /auth/seller/refresh (token renewal).","summary":"Login as an existing seller and receive tokens (shopping_mall_ai_backend_sellers)","parameters":[],"requestBody":{"description":"Seller's email and password used for login authentication.","typeName":"IShoppingMallAiBackendSeller.ILogin"},"responseBody":{"description":"Authorized payload including access and refresh tokens for the seller session.","typeName":"IShoppingMallAiBackendSeller.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/seller/login","method":"post"},{"specification":"Provides JWT access and refresh token renewal for sellers, backed by the 'shopping_mall_ai_backend_sellers' table and session state management. Requires a valid refresh token from a previous successful login. Renewed tokens extend session validity for the active seller. Security validation includes token existence, expiration, and seller account state (is_active). Updates last_login_at for session extension and audit. Used to preserve session without requiring password re-authentication. Failure scenarios include invalid/expired refresh token, suspended seller, or revoked session. Directly supports secure API and dashboard operation for active sellers.","authorizationType":"refresh","description":"This operation allows an authenticated seller to renew their session tokens using a valid refresh token. Session renewal is only available for sellers whose accounts are active in the 'shopping_mall_ai_backend_sellers' database table. Upon successful validation, the system issues new JWT access and refresh tokens for continued API operations. This endpoint updates the last_login_at field for the seller, maintaining accurate audit and activity tracking. Clients should invoke this operation before token expiry to ensure uninterrupted access to protected API resources. Related endpoints: /auth/seller/login, /auth/seller/join.","summary":"Renew JWT tokens for an active seller session (shopping_mall_ai_backend_sellers)","parameters":[],"requestBody":{"description":"Refresh token to request new session tokens for seller.","typeName":"IShoppingMallAiBackendSeller.IRefresh"},"responseBody":{"description":"New access and refresh tokens for the seller.","typeName":"IShoppingMallAiBackendSeller.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/seller/refresh","method":"post"},{"specification":"This operation registers a new admin user in the system. It requires key identity fields available in the shopping_mall_ai_backend_admins table: username (unique admin username), password_hash (for credential storage, not plain password), name (real admin name for trace), email (unique, for notifications, audit, recovery), and optionally phone_number (if SMS/2FA implemented). Additional attributes: is_active (whether the admin can use the system upon creation). On successful registration, a new admin account is created and an access/refresh token pair is issued, enabling subsequent secure API access. The operation aligns with business rules for admin onboarding, KYC/auditability, and mandates full field validation including unique constraints on username/email. Uses IShoppingMallAiBackendAdmin.ICreate request body and responds with IShoppingMallAiBackendAdmin.IAuthorized DTO. This implements the essential 'join' operation for admin onboarding in strict accordance with the Prisma schema.","authorizationType":"join","description":"This API endpoint allows creation of a new admin account by registering required fields from the shopping_mall_ai_backend_admins table. The operation gathers username, password_hash (securely hashed by the backend), real name, email (unique and validated), and optional phone_number, establishing a new system operator for global platform management.\n\nUpon registration, the system enforces all unique constraints (username, email) and business validation rules relevant to regulatory requirements, platform audit trail, and administrator onboarding. Success results in creation of an eligible admin account with 'is_active' state set according to policy (default active unless compliance/approval is required).\n\nIf registration is successful, the backend issues a pair of access and refresh JWT tokens, mapped to the session and audit trail. Token issuance details are captured for compliance, security traceability and for grant/revoke flows in future privilege escalations.\n\nThis join operation is restricted to onboarding a new admin via API (not interactive UI). Credentials are never exposed in cleartext; non-compliant attempts result in validation or business errors. Admin registration is subject to further review and enablement by super-admins where applicable.\n\nThe operation is complementary to the login and refresh endpoints, which handle subsequent credential validation and token renewal for API-centric management. All operations defer credential hashing and security best practices to backend subsystems for regulatory compliance and auditability.","summary":"Register a new admin account (shopping_mall_ai_backend_admins table) and issue initial authorization tokens.","parameters":[],"requestBody":{"description":"Registration data for new admin account, including username, hashed password, name, email, is_active, and optionally phone_number.","typeName":"IShoppingMallAiBackendAdmin.ICreate"},"responseBody":{"description":"Authorization token pair and account details for the newly created admin.","typeName":"IShoppingMallAiBackendAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/admin/join","method":"post"},{"specification":"This endpoint enables credential-based login for admin users. Required shopping_mall_ai_backend_admins fields for authentication: username and password_hash (checked against hash of submitted password). Upon validation, it authenticates the admin, verifies is_active status, records last_login_at timestamp, and issues new access and refresh tokens recorded as a session. Business rules ensure login is denied for inactive, suspended, or deleted accounts (checked via is_active and deleted_at). Responses are JWT tokens with admin identity and permissions, suitable for subsequent API operations. The operation utilizes the IShoppingMallAiBackendAdmin.ILogin DTO for request and IShoppingMallAiBackendAdmin.IAuthorized for response. All credential validation and session security flows are aligned with Prisma schema references.","authorizationType":"login","description":"This API endpoint implements credential-based login for admin users by accepting username and password. It references the shopping_mall_ai_backend_admins schema, where username uniquely identifies each admin and password_hash stores a securely hashed credential.\n\nThe operation validates the provided credentials, confirms that the admin account is active (is_active=true), not deleted (deleted_at is null), and if authentication is successful, updates last_login_at for activity monitoring and audit. It then generates and returns new access and refresh JWT tokens with session metadata.\n\nFailed login attempts for suspended, deactivated, or non-existent accounts are denied with appropriate business error codes, maintaining compliance and evidence. All credential handling adheres to backend storage and transmission security, never exposing hashes or plain text. The authentication supports standard business login workflows, including error handling for duplicates, concurrent sessions, and lockout policies as defined in business rules.\n\nThis operation is to be used in tandem with join (registration) and refresh endpoints, forming the core of the admin authentication system for secure API management. It is tightly coupled with the administrator lifecycle and evidence preservation policies as dictated by compliance needs.","summary":"Authenticate admin using username/password and issue authorization tokens (shopping_mall_ai_backend_admins table).","parameters":[],"requestBody":{"description":"Admin login credentials (username, password). Password is securely validated against stored password_hash.","typeName":"IShoppingMallAiBackendAdmin.ILogin"},"responseBody":{"description":"Authorization token pair and admin account details for authenticated admin session, including roles and permissions.","typeName":"IShoppingMallAiBackendAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/admin/login","method":"post"},{"specification":"This endpoint issues new access and refresh tokens to authenticated admin users using a valid refresh token. It references the Prisma shopping_mall_ai_backend_admins table to validate the refresh token and admin session. Success results in new tokens, invalidates the old refresh token, and updates session audit information, following required business compliance and evidence logging for admin operations. Access is denied if the refresh token is invalid, expired, or if the admin is deactivated/suspended or deleted. The operation supports session renewal without re-entering credentials, using the IShoppingMallAiBackendAdmin.IRefresh DTO for request and IShoppingMallAiBackendAdmin.IAuthorized for response. The entire flow is backed by backend session management, as described in the schema.","authorizationType":"refresh","description":"This API endpoint implements authentication token renewal for admin users. It is based on secure validation of a refresh token, which maps to an active session and admin account in shopping_mall_ai_backend_admins. Upon validation, the endpoint invalidates the used refresh token, issues new access and refresh tokens, and updates audit/session state for evidence.\n\nThe operation ensures all admin and session requirements: the admin must be active (is_active=true), not deleted (deleted_at null), and the refresh token must correspond to an active, unexpired session. Any failures—invalid/expired tokens, deactivated account—result in access denial with business error codes for compliance and traceability.\n\nToken renewal is managed in full accordance with JWT lifecycle, session security, and backend audit policies. This operation is a critical component of secure API-based admin management, enabling ongoing authenticated interaction without resubmitting credentials for each session.\n\nThis endpoint should be used in conjunction with the join (admin registration) and login endpoints to provide a complete admin authentication flow, and aligns with evidence preservation, role management, and regulatory compliance requirements for privileged operations.","summary":"Renew admin authentication tokens using a valid refresh token (shopping_mall_ai_backend_admins table).","parameters":[],"requestBody":{"description":"Refresh token for session renewal. Must map to an eligible admin and an active session.","typeName":"IShoppingMallAiBackendAdmin.IRefresh"},"responseBody":{"description":"New admin token pair and up-to-date admin account details, issued upon successful refresh.","typeName":"IShoppingMallAiBackendAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/admin/refresh","method":"post"},{"specification":"This operation provides a paginated and filterable list of all sales channels available in the commerce backend. Each channel represents a distinct storefront (web, mobile, affiliate) with its own branding, configuration, and compliance settings. The endpoint supports complex querying by channel code, name, country, currency, and activation window. It closely follows the shopping_mall_ai_backend_channels model in the Prisma schema, including soft deletion support via the deleted_at field. Business logic may restrict results by authorization role or compliance context, and the result includes essential fields and summary details.","path":"/shoppingMallAiBackend/admin/channels","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_channels {\n  id String @id @db.Uuid\n  code String\n  name String\n  description String?\n  country String\n  currency String\n  language String\n  timezone String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_channel_sections shopping_mall_ai_backend_channel_sections[]\n  shopping_mall_ai_backend_channel_categories shopping_mall_ai_backend_channel_categories[]\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_articles shopping_mall_ai_backend_articles[]\n  @@unique([code])\n  @@index([country])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Retrieve a paginated and filterable list of all sales channels defined in the shopping mall backend. Allows filtering by channel code, name, country, currency, and active status. The operation leverages the shopping_mall_ai_backend_channels table and exposes channel metadata needed for administrative management, reporting, and customer-facing selection.\n\nSupports advanced queries, pagination, and sorting for business use across regions. Only channels not marked as soft-deleted (deleted_at is null) are included by default, unless otherwise specified. Access may be restricted to administrative or authorized roles based on compliance policy.\n\nThis API is essential for global and multichannel management in the platform and is frequently called for operational dashboards, onboarding flows, and system-wide configuration scenarios. Error handling includes invalid filter parameters and authorization errors.","summary":"Search and retrieve a paginated, filterable list of sales channels.","parameters":[],"requestBody":{"description":"Filter, pagination, and query options for searching channels.","typeName":"IShoppingMallAiBackendChannel.IRequest"},"responseBody":{"description":"Paginated list of channel summary information matching search criteria.","typeName":"IPageIShoppingMallAiBackendChannel.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_channels","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific sales channel by its unique identifier. Channels are top-level business entities controlling branding, legal, and configuration context for all business operations in a storefront (web, app, affiliate, etc.). This endpoint maps to the shopping_mall_ai_backend_channels schema and returns all relevant fields, including compliance configuration.","path":"/shoppingMallAiBackend/admin/channels/{channelId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_channels {\n  id String @id @db.Uuid\n  code String\n  name String\n  description String?\n  country String\n  currency String\n  language String\n  timezone String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_channel_sections shopping_mall_ai_backend_channel_sections[]\n  shopping_mall_ai_backend_channel_categories shopping_mall_ai_backend_channel_categories[]\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_articles shopping_mall_ai_backend_articles[]\n  @@unique([code])\n  @@index([country])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Retrieve detailed information about a single sales channel by its unique identifier. The endpoint returns the entire record as present in the shopping_mall_ai_backend_channels table, exposing all relevant business configuration fields for the channel, such as branding assets, regulatory information, and operational settings.\n\nUsed for administrative channel management, compliance review, and detailed operational dashboards. This API is essential when viewing or configuring a single channel in system interfaces. Returns null if the channel does not exist or is soft deleted, unless otherwise configured by business logic.","summary":"Get detailed information for a specific sales channel by ID.","parameters":[{"name":"channelId","description":"Unique identifier of the target channel.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the selected sales channel.","typeName":"IShoppingMallAiBackendChannel"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_channels","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new sales channel in the commerce backend. Channels represent storefronts, each with unique branding, legal, and configuration information. The operation maps to the shopping_mall_ai_backend_channels table and requires unique business code, name, regional and language configurations, and compliance information. Only administrative users are permitted to create channels.","path":"/shoppingMallAiBackend/admin/channels","method":"post","prisma_schemas":"model shopping_mall_ai_backend_channels {\n  id String @id @db.Uuid\n  code String\n  name String\n  description String?\n  country String\n  currency String\n  language String\n  timezone String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_channel_sections shopping_mall_ai_backend_channel_sections[]\n  shopping_mall_ai_backend_channel_categories shopping_mall_ai_backend_channel_categories[]\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_articles shopping_mall_ai_backend_articles[]\n  @@unique([code])\n  @@index([country])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Create a new sales channel representing a separate business storefront, localized entity, or operational domain. The request must provide a unique code, name, region configuration, language, and legal compliance data. This operation is restricted to authorized administrators to ensure compliance and consistent business logic enforcement.\n\nUpon successful channel creation, returns the full entity as stored in the shopping_mall_ai_backend_channels table. Enforces business validation such as unique code per channel, region compliance, and configuration completeness. Handles error scenarios including duplicate codes, validation failures, or lack of authorization.","summary":"Create a new sales channel for a web, app, or affiliate storefront.","parameters":[],"requestBody":{"description":"Information and configuration for the new sales channel.","typeName":"IShoppingMallAiBackendChannel.ICreate"},"responseBody":{"description":"Detailed newly created sales channel information.","typeName":"IShoppingMallAiBackendChannel"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_channels","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing sales channel with new business or configuration information. Uses unique channel ID to locate the record. Only channels not soft-deleted may be updated. This operation maps to the shopping_mall_ai_backend_channels model and allows changing branding, regional, or compliance attributes. Must validate for uniqueness and regulatory constraints.","path":"/shoppingMallAiBackend/admin/channels/{channelId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_channels {\n  id String @id @db.Uuid\n  code String\n  name String\n  description String?\n  country String\n  currency String\n  language String\n  timezone String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_channel_sections shopping_mall_ai_backend_channel_sections[]\n  shopping_mall_ai_backend_channel_categories shopping_mall_ai_backend_channel_categories[]\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_articles shopping_mall_ai_backend_articles[]\n  @@unique([code])\n  @@index([country])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Update details for an existing sales channel identified by its ID. Allows changing displays, legal compliance, currency, or other configuration properties. The operation validates business rules, including unique code, region suitability, and non-deleted status. Restricted to administrative roles for proper change management and compliance tracking.\n\nReturns the updated channel record on success. Failure scenarios include attempting to update a deleted channel, validation failures, or lack of authorization. The channel's last updated timestamp is amended upon a successful update.","summary":"Update configuration or details of a specific sales channel.","parameters":[{"name":"channelId","description":"Unique identifier of the channel to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New configuration or business information to update the channel.","typeName":"IShoppingMallAiBackendChannel.IUpdate"},"responseBody":{"description":"Updated channel information after the operation.","typeName":"IShoppingMallAiBackendChannel"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_channels","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation logically deletes (soft-deletes) a sales channel using its unique ID, marking it as removed in the system while preserving all records for compliance and evidence. It references the shopping_mall_ai_backend_channels model and only sets the deleted_at column. The operation is restricted to administrator roles. Soft-deleted channels will be excluded from all normal queries, but their records remain accessible for audit purposes until permanently purged by policy.","path":"/shoppingMallAiBackend/admin/channels/{channelId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_channels {\n  id String @id @db.Uuid\n  code String\n  name String\n  description String?\n  country String\n  currency String\n  language String\n  timezone String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_channel_sections shopping_mall_ai_backend_channel_sections[]\n  shopping_mall_ai_backend_channel_categories shopping_mall_ai_backend_channel_categories[]\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_articles shopping_mall_ai_backend_articles[]\n  @@unique([code])\n  @@index([country])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Logically delete (soft delete) a sales channel record, marking it as deleted by setting the deleted_at column. The operation retains the record for audit and compliance purposes, ensuring no data is actually physically removed.\n\nAvailable only to authorized administrator users. Provides compliance with regulatory and business policy about data preservation. If a channel has already been deleted, the operation is idempotent. Attempts to delete non-existent records result in no operation or an error, depending on system policy.","summary":"Soft-delete a sales channel by marking the deleted_at field.","parameters":[{"name":"channelId","description":"Unique identifier of the channel to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_channels","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Returns a paginated and filterable list of all channel sections (such as home, sale, featured) within a given channel. Each section is organized as a node in a tree, supporting nesting and ordering. Maps to shopping_mall_ai_backend_channel_sections in the Prisma schema. The result assists administrators in configuring the storefront layout and navigation for a given channel. Sections logically deleted (soft-deleted) are excluded by default. Requires channelId as a path parameter.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/sections","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_23b251ba\")\n  parent shopping_mall_ai_backend_channel_sections? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_channel_sections[] @relation(\"recursive\")\n  shopping_mall_ai_backend_channel_category_mappings shopping_mall_ai_backend_channel_category_mappings[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  @@index([parent_id])\n  @@unique([shopping_mall_ai_backend_channel_id, code], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_792bdc54\")\n  @@index([shopping_mall_ai_backend_channel_id, order], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_5e042da3\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Obtain a list of sections configured for a specified channel, supporting pagination, section code/name filtering, and tree structure organization. This operation returns section information relevant for storefront setup, hierarchical layout, and navigation placement.\n\nOnly sections not logically deleted (deleted_at is null) are returned by default. Used in administrative interfaces and storefront configuration workflows. Error handling includes invalid channel IDs, filter parameters, and unauthorized access attempts.","summary":"Paginated, filterable list of channel sections by channel ID.","parameters":[{"name":"channelId","description":"Unique identifier of the channel whose sections to query.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, tree depth, and pagination parameters for querying channel sections.","typeName":"IShoppingMallAiBackendChannelSection.IRequest"},"responseBody":{"description":"Paginated list of summary information for channel sections.","typeName":"IPageIShoppingMallAiBackendChannelSection.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_channel_sections","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a specific section from a given channel, identified by unique section and channel IDs. A section organizes content or features within a storefront (such as home, sale, featured, etc.). Returns the full business and display context for the section. Follows shopping_mall_ai_backend_channel_sections schema.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/sections/{sectionId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_23b251ba\")\n  parent shopping_mall_ai_backend_channel_sections? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_channel_sections[] @relation(\"recursive\")\n  shopping_mall_ai_backend_channel_category_mappings shopping_mall_ai_backend_channel_category_mappings[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  @@index([parent_id])\n  @@unique([shopping_mall_ai_backend_channel_id, code], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_792bdc54\")\n  @@index([shopping_mall_ai_backend_channel_id, order], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_5e042da3\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Fetch the full details for a specific section within a channel. Details include section code, name, description, order, hierarchical structure, and configuration for business and navigation purposes. Returns all section fields as defined in the Prisma schema. Only accessible to administrators.\n\nIf the section is missing or has been soft-deleted, the response will be null or an error depending on implementation. Input validation ensures both channelId and sectionId are valid UUIDs with existing references.","summary":"Get detailed information for a specific channel section.","parameters":[{"name":"channelId","description":"ID of the parent channel.","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"ID of the target section to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full section record with configuration data.","typeName":"IShoppingMallAiBackendChannelSection"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_channel_sections","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new storefront section under a specified channel, configuring homepage, category, or feature areas. This operation allows administrators to add new navigation or presentation areas on the sales channel. The section is organized according to the tree structure in the shopping_mall_ai_backend_channel_sections table. Only authorized administrators can create sections. The section will be included in subsequent storefront navigation and configuration listings.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/sections","method":"post","prisma_schemas":"model shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_23b251ba\")\n  parent shopping_mall_ai_backend_channel_sections? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_channel_sections[] @relation(\"recursive\")\n  shopping_mall_ai_backend_channel_category_mappings shopping_mall_ai_backend_channel_category_mappings[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  @@index([parent_id])\n  @@unique([shopping_mall_ai_backend_channel_id, code], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_792bdc54\")\n  @@index([shopping_mall_ai_backend_channel_id, order], map: \"shopping_mall_ai_backend_channel_sections_shopping_mal_5e042da3\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Add a new section node within a given channel, configuring new navigation, homepage, featured area, or other conceptual area in the storefront. Supports nesting under existing sections. Administration privileges are required. All section business properties (code, name, order, description) must comply with unique and validation constraints.\n\nReturns the full new section record as stored. Failure scenarios include duplicate section codes, invalid parent section, or insufficient permissions. This operation is critical for enterprise business operations or new sales rollout.","summary":"Add a new nested or root section to a sales channel.","parameters":[{"name":"channelId","description":"Parent channel's unique identifier.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New section's business and configuration parameters.","typeName":"IShoppingMallAiBackendChannelSection.ICreate"},"responseBody":{"description":"Detailed data for the newly created channel section.","typeName":"IShoppingMallAiBackendChannelSection"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_channel_sections","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates a specific channel section by sectionId for a given channelId. It supports modification of properties such as the section's name, code, ordering, parent relationship, and business description. Used in maintaining channel navigation, business taxonomy, and section-based personalization. The model includes soft deletion and reference integrity for hierarchical section structure. Only admins can perform this update as it affects channel navigation and business logic.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/sections/{sectionId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  // Relations omitted for brevity\n}","description":"Update details of a specific channel section, such as its display name, code, ordering for navigation, parent/child relationships, and business-use description. Sections are used to organize content and navigation structure in sales channels, and updates may affect business analytics, UI, and personalized experiences.\n\nSecurity: This operation should be restricted to admin roles as section changes can impact core navigation and end-user experience across channels. The request will validate for code uniqueness within the channel, check for valid parent section if provided, and update timestamps accordingly.\n\nAll fields except id and channelId are updatable except relations; usage of a deleted parent section or code collision is forbidden. The updated timestamp will record this change for audit.\n\nRelated: The GET endpoint retrieves individual section details, while PATCH lists/searches sections within a channel.","summary":"Update a sales channel section's business details (name, code, parent, order, description).","parameters":[{"name":"channelId","description":"Channel unique identifier (UUID) for the section's parent channel.","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"Unique identifier of the section to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating the channel section. Includes name, code, order, parent_id, description.","typeName":"IShoppingMallAiBackendChannelSection.IUpdate"},"responseBody":{"description":"The updated channel section entity.","typeName":"IShoppingMallAiBackendChannelSection"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_channel_sections","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation performs a soft delete on a specific channel section by sectionId within a given channelId. It sets the deleted_at timestamp rather than removing the section, preserving history and audit capabilities. Used by admins to manage navigation structure, evidence, and compliance. Sections with active dependencies (e.g., children) must be handled by the business logic.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/sections/{sectionId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Soft delete a channel section by marking its deleted_at field with the current timestamp. This operation preserves the section for audit and evidence purposes while removing it from regular navigation and business flows.\n\nSecurity: Restricted to admin roles as it affects navigation and structural integrity. Attempting to delete a section with dependent active relations must raise a validation error. Audit history and compliance requirements are met through logical (soft) deletion rather than hard removal.\n\nThis operation is commonly used to temporarily or permanently hide sections, supporting rollback if needed by retaining the data.","summary":"Soft delete a channel section while preserving audit history and evidence.","parameters":[{"name":"channelId","description":"Channel unique identifier (UUID) for the section's parent channel.","schema":{"type":"string","format":"uuid"}},{"name":"sectionId","description":"Unique identifier of the section to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_channel_sections","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a paginated, filterable list of all categories for a specific channel. This operation is used by channel managers or admins to search and manage category taxonomies, navigational groupings, and business analytics. Categories may be filtered by code, name, parent, or active state. Supports complex queries, with pagination and sorting. Only channelId is required; advanced search behaviors are defined by request body fields.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/categories","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Search and list all business categories within the given channel, supporting query by code, name, ordering, parent, and is_active status. Pagination and sorting provides efficient handling of large taxonomies, supporting admin UI and business analytics scenarios.\n\nSecurity: Only accessible to admin roles. Filters applied for code, name, order, and navigation hierarchy help manage business content and validate structure integrity.\n\nThis operation supports complex business context for hierarchical category structures, personalized navigation, and channel-specific taxonomy maintenance.\n\nRelated: GET operation retrieves individual category. POST creates a new category under the channel.","summary":"List/search categories within a channel with filters, sorting, and pagination.","parameters":[{"name":"channelId","description":"The parent channel unique identifier (UUID) for which categories are managed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for categories, including paging, sorting, code/name, parent, and status.","typeName":"IShoppingMallAiBackendChannelCategory.IRequest"},"responseBody":{"description":"Paginated list of categories matching search/filter criteria, for admin/manager UI.","typeName":"IPageIShoppingMallAiBackendChannelCategory"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_channel_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full details for a single category within a channel by categoryId. This operation is used to display category details, navigation attributes, audit history, and status for editing or review. The operation is restricted to admin as category management affects business navigation and analytics.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/categories/{categoryId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Retrieve all key business attributes for a specific category within the given channel, including name, code, parent, order, and description. Used for edit flows, validation, and business analytics. Only accessible to admins responsible for channel management.\n\nThe response provides a complete category object, supporting integrations and hierarchical taxonomy awareness for UI, navigation logic, or audit workflows.\n\nRelated: PATCH endpoint lists/filter categories; PUT updates details; DELETE performs soft delete.","summary":"Retrieve full details of a channel category for edit, review, or analytics.","parameters":[{"name":"channelId","description":"Unique channel identifier (UUID) scoping the category.","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Unique identifier for the category within the channel (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Business category object with all editable and audit fields included.","typeName":"IShoppingMallAiBackendChannelCategory"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_channel_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new category under a specific sales channel. Used for building and evolving category navigation, business taxonomy, and analytics segments. The new category is defined with required fields such as name, code, parent, and optional business description. Only admins may create categories as it affects navigation, sorting, and business analytics.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/categories","method":"post","prisma_schemas":"model shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Create a new category under a specific channel, defining code, name, order, parent (for hierarchical navigation), and optional business description. Validates that category code is unique within the channel and attaches to an existing parent if provided.\n\nSecurity: Restricted to admin; improper parent assignment or code collision will return a validation error. New categories support business content taxonomy, navigation experiences, and analytics segmentation.\n\nEach created category is tracked for audit and possible future modification or soft delete.","summary":"Create a new business category under a sales channel, scoping code, name, and navigation properties.","parameters":[{"name":"channelId","description":"The unique channel identifier (UUID) under which the category is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for new channel category including code, name, order, parent, and (optional) description.","typeName":"IShoppingMallAiBackendChannelCategory.ICreate"},"responseBody":{"description":"The newly created channel category with all business/audit fields.","typeName":"IShoppingMallAiBackendChannelCategory"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_channel_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update key fields of a specific channel category for a given channel, adjusting business navigation, code, order, name, parent, or description. Supports evolving business taxonomy, personalized navigation, and channel configuration for admins. The operation maintains full audit trail and verifies code uniqueness and parent assignment.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/categories/{categoryId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Update details of a channel category, such as code, name, parent, sort order, and description. All changes are reflected in the updated_at timestamp for audit. Operation checks for uniqueness of code within the channel and ensures consistency for navigational structure by validation against parent assignment and relation constraints.\n\nAdmin access required; database-level constraints prevent code duplications or parent/child loops. Used in business taxonomy management, analytics, and UI navigation flows.","summary":"Update properties of a channel category, including name, code, order, and parent.","parameters":[{"name":"channelId","description":"Channel unique identifier (UUID) for the category's parent channel.","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Unique identifier of the category to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for patching channel category fields, e.g., code, name, order, description, parent.","typeName":"IShoppingMallAiBackendChannelCategory.IUpdate"},"responseBody":{"description":"The updated channel category business object.","typeName":"IShoppingMallAiBackendChannelCategory"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_channel_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation soft deletes a specified category from a channel, marking it as deleted_at without removing. Used for compliance, evidence, or temporary removal from navigation and business analytics. Managed by admins. Any usage as a parent must be checked in business logic.","path":"/shoppingMallAiBackend/admin/channels/{channelId}/categories/{categoryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Mark a channel category as deleted-at (soft delete). This prevents visibility in end-user navigation and disables as a parent for hierarchy, but retains the record and its full audit evidence. Only admin can soft delete; business logic must prevent deletion if used as active parent of another category.\n\nDeletion preserves information for regulatory, audit, and business evidence. Use PATCH for recovery if reinstatement is required.","summary":"Soft delete a category in the navigation taxonomy, preserving evidence and audit trail.","parameters":[{"name":"channelId","description":"Channel unique identifier (UUID) for the parent of the category.","schema":{"type":"string","format":"uuid"}},{"name":"categoryId","description":"Unique identifier of the category to be soft deleted (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_channel_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves paginated and filterable list of all category mappings for a given section, including their assigned categories and mapping details. Primarily designed for admin users to manage and audit section-category relationships, platform navigation, and business analytics. Supports advanced query, filter, and pagination on relationships.","path":"/shoppingMallAiBackend/admin/sections/{sectionId}/categoryMappings","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_channel_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n}","description":"List and search all category mappings for a section, supporting admin audit of navigation configuration, content relationships, and UI organization. This enables cross-linking or assignment between sections and categories, which drives content discovery and personalization.\n\nOnly accessible by admin roles; supports filtering by related category code/name, mapping created_at, and pagination for managing large taxonomies. Mappings cannot be updated or created via this endpoint, only listed.","summary":"Search and paginate section's category mappings for management and audit.","parameters":[{"name":"sectionId","description":"Unique identifier of the section for category mapping listing (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, sorting, and filter criteria for searching section's category mappings.","typeName":"IShoppingMallAiBackendChannelCategoryMapping.IRequest"},"responseBody":{"description":"Paginated list of category mappings with section/category relationship detail.","typeName":"IPageIShoppingMallAiBackendChannelCategoryMapping"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_channel_category_mappings","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve details of a specific mapping between a channel section and a category by mapping ID within the given section. This endpoint is associated with the shopping_mall_ai_backend_channel_category_mappings table, enabling clients to access all business and administrative context for a unique section-to-category relationship. Commonly used in administrative navigation, management UIs, and analytics tools; not intended for public end users or customer-level interactions.","path":"/shoppingMallAiBackend/admin/sections/{sectionId}/categoryMappings/{mappingId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_channel_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n  section shopping_mall_ai_backend_channel_sections @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade)\n  category shopping_mall_ai_backend_channel_categories @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_channel_category_id])\n  @@unique([shopping_mall_ai_backend_channel_section_id, shopping_mall_ai_backend_channel_category_id])\n}\nmodel shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade)\n}\nmodel shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String @db.Uuid\n  parent_id String? @db.Uuid\n  code String\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade)\n}\n","description":"Retrieve all details pertaining to a specific section-to-category mapping, identified by mappingId, under a given sectionId. This API is instrumental for admins or operators managing channel navigation structures, analytics configurations, or synchronizations. Security considerations require authorization as an admin or system operator. If mapping does not exist, a 404 is returned.","summary":"Get detailed channel section-category mapping by mappingId.","parameters":[{"name":"sectionId","description":"Unique identifier for the channel section (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"mappingId","description":"Unique identifier for the section/category mapping (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the section-category mapping, including references to the section and category.","typeName":"IShoppingMallAiBackendChannelCategoryMapping"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_channel_category_mappings","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Create a new mapping between a specific channel section and a category, allowing for flexible navigation schema and analytics linkage in a multi-channel environment. This operation targets the shopping_mall_ai_backend_channel_category_mappings table and involves associating a channel section (sectionId) with a product/category entity (or similar), supporting admin-driven content structuring and reporting.","path":"/shoppingMallAiBackend/admin/sections/{sectionId}/categoryMappings","method":"post","prisma_schemas":"model shopping_mall_ai_backend_channel_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n  section shopping_mall_ai_backend_channel_sections @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade)\n  category shopping_mall_ai_backend_channel_categories @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade)\n}\nmodel shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n}\nmodel shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n}\n","description":"Create a new mapping between the channel section identified by sectionId and a target channel category or business entity. Used by administrators to extend navigation, enable analytics-specific taxonomies, or create channel-specific category overlays. Authorization required (admin only). If mapping with the same composite keys exists, an error is returned.","summary":"Create a new channel section-category mapping.","parameters":[{"name":"sectionId","description":"Unique identifier of the parent channel section (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information needed to create a new mapping between the channel section and the target category.","typeName":"IShoppingMallAiBackendChannelCategoryMapping.ICreate"},"responseBody":{"description":"Created mapping's details, including section and category references.","typeName":"IShoppingMallAiBackendChannelCategoryMapping"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_channel_category_mappings","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Update the mapping between a specified channel section and a category by mappingId, supporting business-driven changes to navigation or analytics schema. Associated with shopping_mall_ai_backend_channel_category_mappings. Enables admin users to re-map, re-categorize, or revise mapping details for flexible site structure.","path":"/shoppingMallAiBackend/admin/sections/{sectionId}/categoryMappings/{mappingId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_channel_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n  section shopping_mall_ai_backend_channel_sections @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade)\n  category shopping_mall_ai_backend_channel_categories @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade)\n}\nmodel shopping_mall_ai_backend_channel_sections {\n  id String @id @db.Uuid\n}\nmodel shopping_mall_ai_backend_channel_categories {\n  id String @id @db.Uuid\n}\n","description":"Update details of a specific section-to-category mapping identified by mappingId within a given sectionId. This operation permits modification of mapping keys or associated properties to reflect evolving business rules. Authorization by admin required. Changes are audited for evidence and compliance. Not available for public users.","summary":"Update a channel section-category mapping by mappingId.","parameters":[{"name":"sectionId","description":"Unique identifier for the channel section (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"mappingId","description":"Unique identifier for the section-category mapping (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data to update the mapping between section and category.","typeName":"IShoppingMallAiBackendChannelCategoryMapping.IUpdate"},"responseBody":{"description":"Updated mapping information after update is applied.","typeName":"IShoppingMallAiBackendChannelCategoryMapping"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_channel_category_mappings","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Remove an existing mapping between a channel section and category by mappingId. Associated with shopping_mall_ai_backend_channel_category_mappings, this operation is used by admins to delete specific navigation/analytics relationships when business logic or site structure changes. Implements soft deletion, marking the mapping as deleted without physical removal, in compliance with audit and evidence requirements.","path":"/shoppingMallAiBackend/admin/sections/{sectionId}/categoryMappings/{mappingId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_channel_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n  // Implements soft delete mechanism.\n  deleted_at DateTime? @db.Timestamptz\n  section shopping_mall_ai_backend_channel_sections @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade)\n  category shopping_mall_ai_backend_channel_categories @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade)\n}\n","description":"Delete an existing channel section-category mapping by mappingId and sectionId. This implements soft deletion by setting the deleted_at timestamp, preserving evidence for compliance and rollback. Only accessible by admin authorization. If mapping doesn't exist, a 404 error is returned.","summary":"Soft delete a channel section-category mapping by mappingId.","parameters":[{"name":"sectionId","description":"Unique identifier for the channel section (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"mappingId","description":"Unique identifier for the mapping to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_channel_category_mappings","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a paginated, filtered list of all system/global configuration settings defined in shopping_mall_ai_backend_system_configs. Supports advanced search/sort by key, value, date, and description for administrative review. Used to manage platform business logic, feature toggles, and compliance flags. Only accessible to administrators and DevOps roles.","path":"/shoppingMallAiBackend/admin/systemConfigs","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_system_configs {\n  id String @id @db.Uuid\n  key String\n  value String\n  description String?\n  effective_from DateTime? @db.Timestamptz\n  effective_to DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Search and retrieve system-level configuration definitions with flexible filtering by config key, time ranges, description, or status. Results are paginated to handle potentially large config sets. Security restrictions require admin/system operator authorization. This endpoint is essential for platform management, policy review, and troubleshooting global feature settings.","summary":"Search, filter, and retrieve paginated global system configurations.","parameters":[],"requestBody":{"description":"Search, filter and pagination criteria for configs.","typeName":"IShoppingMallAiBackendSystemConfig.IRequest"},"responseBody":{"description":"Paginated response containing multiple configuration detail records.","typeName":"IPageIShoppingMallAiBackendSystemConfig"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_system_configs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a specific system/global configuration record as defined in shopping_mall_ai_backend_system_configs by unique configId. Commonly used for DevOps, admin consoles, or policy audit requirements to view config details, history, and current status.","path":"/shoppingMallAiBackend/admin/systemConfigs/{configId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_system_configs {\n  id String @id @db.Uuid\n  key String\n  value String\n  description String?\n  effective_from DateTime? @db.Timestamptz\n  effective_to DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Retrieve all properties of a single system/global configuration from its unique configId. Used for viewing current, scheduled, or archived config entries and their details. Security restrictions apply—admin/DevOps only. If config does not exist, endpoint returns 404.","summary":"Get a single global system configuration by configId.","parameters":[{"name":"configId","description":"Unique identifier of the configuration record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed configuration entry fields, including key, value, time bounds, and metadata.","typeName":"IShoppingMallAiBackendSystemConfig"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_system_configs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new global system configuration entry in shopping_mall_ai_backend_system_configs. Used for adding new platform-wide business rules, toggling features, or operational parameters. Only available to admins with proper authorization. Each config is assigned a unique key, value, description, and optional time bounds (for scheduled configs).","path":"/shoppingMallAiBackend/admin/systemConfigs","method":"post","prisma_schemas":"model shopping_mall_ai_backend_system_configs {\n  id String @id @db.Uuid\n  key String\n  value String\n  description String?\n  effective_from DateTime? @db.Timestamptz\n  effective_to DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Add a new configuration entry to the system configs table, defining the key, value, and optional attributes such as description and time bounds. New configuration enables admins to control platform features and policies in a dynamic and auditable manner. Only users with config/admin privileges may call this endpoint.","summary":"Create a new global system configuration entry.","parameters":[],"requestBody":{"description":"Configuration parameters to create the new system config.","typeName":"IShoppingMallAiBackendSystemConfig.ICreate"},"responseBody":{"description":"Created configuration entry with details set.","typeName":"IShoppingMallAiBackendSystemConfig"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_system_configs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update the details of an existing global system configuration entry by unique configId in shopping_mall_ai_backend_system_configs. This permits admins to adjust platform feature toggles, business rule parameters, rollout schedules, and operational settings without downtime or direct DB access. All updates are auditable and must not break key uniqueness constraints.","path":"/shoppingMallAiBackend/admin/systemConfigs/{configId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_system_configs {\n  id String @id @db.Uuid\n  key String\n  value String\n  description String?\n  effective_from DateTime? @db.Timestamptz\n  effective_to DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Update an existing global system configuration entry using its configId. The update can modify key, value, description, or scheduling time bounds. Used by authorized administrators to dynamically adjust business rules and system properties with full audit and rollback support. Only users with system/config privileges allowed. Changes are reflected in system operations immediately.","summary":"Update an existing global system configuration by configId.","parameters":[{"name":"configId","description":"Unique identifier for the configuration entry (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for this system configuration record.","typeName":"IShoppingMallAiBackendSystemConfig.IUpdate"},"responseBody":{"description":"Updated config record details after applying changes.","typeName":"IShoppingMallAiBackendSystemConfig"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_system_configs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes a system configuration entry identified by its unique configId. The operation is associated with the shopping_mall_ai_backend_system_configs table from the Prisma schema. It is used to irreversibly remove global or scoped system configuration parameters and their business context from the platform, ensuring they are no longer considered in application-level logic, feature toggling, or dynamic business rules. This action is only suitable for configurations that should be fully eliminated from the system, and an audit trail should be maintained separately. The endpoint enforces strict access control, suitable only for administrators overseeing system settings.","path":"/shoppingMallAiBackend/admin/systemConfigs/{configId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_system_configs {\n  id String @id @db.Uuid\n  key String\n  value String\n  description String?\n  effective_from DateTime? @db.Timestamptz\n  effective_to DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([key])\n}","description":"Permanently remove a system configuration entry from the platform using its configId. This action is irreversible and eliminates the specified configuration record from the database, so it is no longer available or considered by the system. Strict administrative privileges are required due to the potential risk of system functionality loss when deleting configuration keys that impact operational flags, global settings, or feature toggles.\n\nDeleted configurations are not recoverable through this endpoint, and consistency with corresponding audit or compliance requirements must be maintained by the system separately (e.g., via audit trails in other tables).\n\nAttempting to remove a configuration that is referenced elsewhere or protected by policy will result in appropriate error handling and business messaging.\n\nOnly users with explicit admin role can invoke this endpoint. The endpoint is mapped directly to the shopping_mall_ai_backend_system_configs Prisma model and operates on a hard delete basis (deleted_at is not used, the row is truly removed).","summary":"Permanently remove a system configuration entry by its configId from shopping_mall_ai_backend_system_configs.","parameters":[{"name":"configId","description":"Unique identifier of the system configuration to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_system_configs","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered, and sorted list of system audit trail records. It enables authorized administrators to search, review, and analyze system-level audit events related to configuration changes, administrative actions, errors, sensitive operations, and business evidence. The endpoint operates on the shopping_mall_ai_backend_system_audit_trails table and supports advanced queries for audit, compliance, and legal review. Audit records are append-only, immutable, and serve as tamper-evident business documentation.","path":"/shoppingMallAiBackend/admin/systemAuditTrails","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_system_audit_trails {\n  id String @id @db.Uuid\n  event_type String\n  actor_id String @db.Uuid\n  description String\n  metadata String?\n  created_at DateTime @db.Timestamptz\n  @@index([event_type])\n  @@index([actor_id])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve a filtered and paginated list of system-level audit trail entries. This operation is used for compliance reviews, incident investigations, and administrative monitoring. It supports complex query capabilities including filtering by event types, actors, time ranges, and full-text search of event descriptions.\n\nThe audit trail records are append-only and immutable—each record captures the event type (such as config_change, access, permission changes, or errors), the actor responsible, a textual business description, optional machine-readable metadata, and the timestamp of occurrence.\n\nOnly privileged admin users may invoke this operation, and all access is itself auditable. Large result sets are paginated for efficiency and security. If no records match the query parameters, an empty result page is returned. This endpoint does not allow modification or deletion of audit trail data. The results help fulfill regulatory, security, and forensic requirements for the shopping mall backend.","summary":"Search and retrieve a filtered, paginated list of system audit trails from shopping_mall_ai_backend_system_audit_trails.","parameters":[],"requestBody":{"description":"Query parameters for filtering, searching, and paginating system audit trail entries","typeName":"IShoppingMallAiBackendSystemAuditTrail.IRequest"},"responseBody":{"description":"Paginated system audit trail records matching the search criterion","typeName":"IPageIShoppingMallAiBackendSystemAuditTrail.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_system_audit_trails","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full details of a specific system audit trail entry by auditTrailId. This operation is used for regulatory, compliance, and security teams to inspect significant platform events, including configuration changes, critical administrative actions, or sensitive operations. Each audit trail is guaranteed immutable and serves as legal evidence for system behavior. The auditTrailId uniquely identifies the audit record in shopping_mall_ai_backend_system_audit_trails.","path":"/shoppingMallAiBackend/admin/systemAuditTrails/{auditTrailId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_system_audit_trails {\n  id String @id @db.Uuid\n  event_type String\n  actor_id String @db.Uuid\n  description String\n  metadata String?\n  created_at DateTime @db.Timestamptz\n  @@index([event_type])\n  @@index([actor_id])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve the details of an individual system audit trail entry specified by auditTrailId. Used for legal, compliance, and security reviews, this endpoint allows administrators to view comprehensive information including event type, responsible actor, description, metadata, and precise timestamp for critical actions in the shopping mall platform.\n\nAudit trail entries serve as immutable, tamper-evident evidence. Access is tightly restricted to authorized administrators, and every access may itself be logged for further traceability. If the specified auditTrailId does not exist, an appropriate error is returned.\n\nThis operation maps directly to the shopping_mall_ai_backend_system_audit_trails Prisma model and provides granular visibility into platform history.","summary":"Get details of a specific system audit trail entry from shopping_mall_ai_backend_system_audit_trails by auditTrailId.","parameters":[{"name":"auditTrailId","description":"Unique identifier of the audit trail record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the system audit trail entry","typeName":"IShoppingMallAiBackendSystemAuditTrail"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_system_audit_trails","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation searches and paginates the list of file metadata records across the platform. It operates on the shopping_mall_ai_backend_files table, enabling platform-level management and searchability of file uploads, attachments, and evidence assets. Administrators can filter by uploader, original filename, file type, upload date, and deletion status. Bulk file search is useful for content review, legal evidence management, and compliance audits.","path":"/shoppingMallAiBackend/admin/files","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_files {\n  id String @id @db.Uuid\n  original_filename String\n  mime_type String\n  storage_uri String @db.VarChar(80000)\n  size_bytes Int @db.Integer\n  uploaded_by_id String @db.Uuid\n  uploaded_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([storage_uri])\n  @@index([uploaded_by_id])\n  @@index([original_filename(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve a paginated and filtered list of uploaded file metadata from across the platform. This operation allows administrators to search files based on file type, uploader, unique storage URI, file name patterns, or upload date ranges. The search results are used for compliance reviews, evidence management, and platform-wide content governance.\n\nOnly admin users may use this endpoint due to sensitivity of file access and potential privacy concerns. The operation respects logical deletion (deleted_at); by default, it only returns active files unless filters for deleted items are included. Bulk export or legal production workflows may require this API.\n\nResults include file URI, original filename, uploader, content type, file size, and upload timestamp for each record, supporting traceability and operational maintenance.","summary":"Search and paginate file metadata records on shopping_mall_ai_backend_files.","parameters":[],"requestBody":{"description":"Complex criteria for searching or paginating file metadata","typeName":"IShoppingMallAiBackendFile.IRequest"},"responseBody":{"description":"Paginated list of file metadata entries fitting the search query","typeName":"IPageIShoppingMallAiBackendFile.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_files","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve all metadata fields for a specific file entity by fileId, including storage URI, mime type, uploader’s ID, file size, and upload timestamp from shopping_mall_ai_backend_files. Used for direct access, review, or evidence purposes by system administrators or legal reviewers. Returns the full record including soft delete status.","path":"/shoppingMallAiBackend/admin/files/{fileId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_files {\n  id String @id @db.Uuid\n  original_filename String\n  mime_type String\n  storage_uri String @db.VarChar(80000)\n  size_bytes Int @db.Integer\n  uploaded_by_id String @db.Uuid\n  uploaded_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([storage_uri])\n  @@index([uploaded_by_id])\n  @@index([original_filename(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Fetch the metadata of an individual file, such as is required for evidence, admin review, legal production, or managing file content in enterprise systems. This operation allows retrieval of the file’s unique storage URI, original filename, mime type, file size in bytes, who uploaded it, and the upload datetime. If the file is logically deleted, metadata including the deleted_at timestamp is also returned.\n\nThis endpoint helps power administrative dashboards, secure resource fetches, and audit queries. Only admins may access this information, protecting sensitive or private files. Attempts to access a non-existent file or without permission return appropriate errors.","summary":"Get file metadata by fileId from shopping_mall_ai_backend_files.","parameters":[{"name":"fileId","description":"Unique identifier of the file to fetch metadata for","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete file metadata, including uploader, storage_uri, deleted_at status, etc.","typeName":"IShoppingMallAiBackendFile"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_files","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation registers a new file in the system by saving its metadata record, such as original filename, mime type, storage URI, file size, and uploader information, in the shopping_mall_ai_backend_files table. This endpoint does not upload the file content itself, but records essential metadata so the object store or CDN can reference the resource securely. Only admin users can invoke this endpoint due to operational and privacy risks.","path":"/shoppingMallAiBackend/admin/files","method":"post","prisma_schemas":"model shopping_mall_ai_backend_files {\n  id String @id @db.Uuid\n  original_filename String\n  mime_type String\n  storage_uri String @db.VarChar(80000)\n  size_bytes Int @db.Integer\n  uploaded_by_id String @db.Uuid\n  uploaded_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([storage_uri])\n  @@index([uploaded_by_id])\n  @@index([original_filename(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Register a new file metadata record in the shopping mall backend, capturing essential details about the uploaded resource. This does not handle binary data; instead, the file is expected to be uploaded separately (such as to S3, Blob, or CDN) and the storage URI referenced here. Recorded fields include the original filename, content type, unique storage URI, total file size in bytes, uploader’s UUID, and upload timestamp.\n\nAll writes to this endpoint require strict permissions due to security, privacy, and governance concerns (e.g., evidence files, legal documents). The created record enables subsequent access, auditing, or business notification.\n\nOn success, the created record is returned. Attempts to register duplicate file URIs or forbidden metadata will result in business errors, following unique constraints.","summary":"Register a new file metadata entry in shopping_mall_ai_backend_files.","parameters":[],"requestBody":{"description":"New file metadata to register (not file content itself, but reference to storage and metadata)","typeName":"IShoppingMallAiBackendFile.ICreate"},"responseBody":{"description":"The newly registered file metadata record","typeName":"IShoppingMallAiBackendFile"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_files","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates metadata for an existing file entity identified by fileId in shopping_mall_ai_backend_files. It allows admins to modify attributes such as file name, mime type, or update storage references if the file location changes. This does not change the file content itself. Strict permissions and audit trails are required to ensure security and regulatory compliance.","path":"/shoppingMallAiBackend/admin/files/{fileId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_files {\n  id String @id @db.Uuid\n  original_filename String\n  mime_type String\n  storage_uri String @db.VarChar(80000)\n  size_bytes Int @db.Integer\n  uploaded_by_id String @db.Uuid\n  uploaded_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([storage_uri])\n  @@index([uploaded_by_id])\n  @@index([original_filename(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update the file metadata record for a specific fileId. This operation covers modifications to fields such as the file name, mime type, storage URI, or even uploader metadata, but not the file content itself. Used when a file’s metadata needs correction (such as if migrated to a new CDN or new content-type is detected).\n\nThe endpoint mandates strict administrative access as incorrect file metadata could impact business evidence, system resources, or violate security policy. All such changes should be auditable. Attempts to update a non-existent file or forbidden fields return business or permission errors.","summary":"Update file metadata for a file in shopping_mall_ai_backend_files by fileId.","parameters":[{"name":"fileId","description":"Unique identifier of file to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"File metadata updates (does not change file content, only metadata)","typeName":"IShoppingMallAiBackendFile.IUpdate"},"responseBody":{"description":"Updated file metadata record","typeName":"IShoppingMallAiBackendFile"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_files","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation logically deletes a file metadata record by fileId using the deleted_at field on shopping_mall_ai_backend_files. The file metadata is preserved for audit and evidence but is not returned in normal queries unless specifically filtered for deleted entries. Actual file content retention or deletion must be managed by business or infrastructure policies. Only admin users may logically delete files, and all such actions should be auditable.","path":"/shoppingMallAiBackend/admin/files/{fileId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_files {\n  id String @id @db.Uuid\n  original_filename String\n  mime_type String\n  storage_uri String @db.VarChar(80000)\n  size_bytes Int @db.Integer\n  uploaded_by_id String @db.Uuid\n  uploaded_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([storage_uri])\n  @@index([uploaded_by_id])\n  @@index([original_filename(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Mark a file metadata record as deleted by setting its deleted_at timestamp, effectively hiding it from standard platform queries but retaining the audit trail. This is a soft delete. Such logical deletion preserves file history for business evidence and compliance cases. Only admin users can invoke this action, and any actual file content removal is outside the scope.\n\nIf the file does not exist or is already deleted, a suitable business error is returned. All operations must be auditable for compliance. The operation follows the Prisma model’s typical logical deletion pattern using the deleted_at nullable DateTime field.","summary":"Soft delete a file metadata entry by fileId in shopping_mall_ai_backend_files.","parameters":[{"name":"fileId","description":"Unique identifier of the file to logically delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_files","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of all codebooks defined within the shoppingMallAiBackend system. Codebooks are used as business dictionaries for statuses, regions, option tags, etc., and are critical to dynamic business logic configuration. It allows advanced searching by code, name, or description, and provides support for sorting and pagination. Operates directly on the shopping_mall_ai_backend_codebooks Prisma schema table. The returned response includes summary details for each codebook, supporting both administrative and integration use cases.","path":"/shoppingMallAiBackend/admin/codebooks","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_codebooks { id String @id @db.Uuid code String name String description String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_codebook_entries shopping_mall_ai_backend_codebook_entries[] @@unique([code]) @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve a structured, paginated list of all available codebooks configured in the system. This supports dynamic dictionary management for business logic, lookup values, and admin configuration. The response includes meta-information such as code, name, description, and timestamps. Only users with admin privileges can access the complete codebook list for configuration or integration purposes.","summary":"List and search codebooks with pagination for business configuration","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for codebooks.","typeName":"IShoppingMallAiBackendCodebook.IRequest"},"responseBody":{"description":"Paginated, summarized codebook data matching the filter/search criteria.","typeName":"IPageIShoppingMallAiBackendCodebook.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_codebooks","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the details of a single business codebook by its unique identifier. This operation reads from the shopping_mall_ai_backend_codebooks Prisma table and returns all relevant attributes, including associated metadata. It is primarily for use in admin and integration scenarios needing full codebook detail.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_codebooks { id String @id @db.Uuid code String name String description String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_codebook_entries shopping_mall_ai_backend_codebook_entries[] @@unique([code]) @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve the full detail of a single codebook given its unique codebookId. The result contains all business and administrative information needed to present, configure, or integrate with this codebook. Suitable for system admins or integration services referencing business dictionaries.","summary":"Get codebook details by its unique identifier","parameters":[{"name":"codebookId","description":"The unique identifier (UUID) of the target codebook.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified codebook entity.","typeName":"IShoppingMallAiBackendCodebook"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_codebooks","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new codebook entry in the shoppingMallAiBackend codebooks table. This operation allows admin users to expand system-controlled dictionaries for business logic, statuses, option tags, etc. The request takes the code, name, description, and any initial configuration values. Upon creation, the new codebook metadata is returned. Strict uniqueness and validation are applied based on the Prisma model's constraints.","path":"/shoppingMallAiBackend/admin/codebooks","method":"post","prisma_schemas":"model shopping_mall_ai_backend_codebooks { id String @id @db.Uuid code String name String description String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_codebook_entries shopping_mall_ai_backend_codebook_entries[] @@unique([code]) @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Create a new codebook for structuring a business dictionary or lookup values. Admin users provide code, name, and optional description/details. System validates uniqueness of code and stores the entity with full timestamps. This enables dynamic, admin-managed extension of business logic dictionaries.","summary":"Create a new codebook for business dictionary/enum management","parameters":[],"requestBody":{"description":"The details of the new codebook to be created.","typeName":"IShoppingMallAiBackendCodebook.ICreate"},"responseBody":{"description":"Metadata for the newly created codebook entity.","typeName":"IShoppingMallAiBackendCodebook"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_codebooks","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates basic properties of an existing codebook entity, such as name and description. Per Prisma schema, this operation does not allow modification of the codebook's unique code, but allows business/administrative fields to be changed. Admins can use this to maintain accurate, auditable codebook metadata. Only system/admin accounts can perform this action.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_codebooks { id String @id @db.Uuid code String name String description String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_codebook_entries shopping_mall_ai_backend_codebook_entries[] @@unique([code]) @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Update certain properties of a specified codebook using its codebookId. Only mutable fields such as name and description may be edited; the business code remains immutable for consistency and audit compliance. This API enforces strict permissions for admin/operators.","summary":"Update the metadata of an existing codebook entity by codebookId","parameters":[{"name":"codebookId","description":"The unique identifier (UUID) of the codebook to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the codebook (excluding code field).","typeName":"IShoppingMallAiBackendCodebook.IUpdate"},"responseBody":{"description":"The updated codebook entity reflecting changes.","typeName":"IShoppingMallAiBackendCodebook"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_codebooks","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently deletes a codebook by its unique codebookId. This performs a soft delete operation by setting the deleted_at timestamp, preserving the entity for future compliance and audit. Only system or admin-level users can perform codebook deletion due to the impact on system-wide business logic references.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_codebooks { id String @id @db.Uuid code String name String description String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_codebook_entries shopping_mall_ai_backend_codebook_entries[] @@unique([code]) @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Permanently deactivate (soft delete) a codebook in the system by marking the deleted_at timestamp. This operation prevents further use in business logic, but retains the record for audit, history, and compliance evidence. This is an admin-only operation as it can impact running business rules or integrations.","summary":"Soft-delete a codebook by its UUID, retaining for audit/evidence","parameters":[{"name":"codebookId","description":"The unique identifier (UUID) of the codebook to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_codebooks","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a paginated, searchable list of all entries within a given codebook. Entries correspond to the detailed options, statuses, or values that form the codebook's dictionary. Supports searching, sorting, and filtering by entry code, label, order, and visibility. All results are scoped to the specified codebook via its codebookId. This operation leverages the shopping_mall_ai_backend_codebook_entries table and supports admin-level codebook configuration workflows.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}/entries","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_codebook_entries { id String @id @db.Uuid shopping_mall_ai_backend_codebook_id String @db.Uuid code String label String description String? order Int @db.Integer visible Boolean created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz codebook shopping_mall_ai_backend_codebooks @relation(fields: [shopping_mall_ai_backend_codebook_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_3a47ac71\") @@unique([shopping_mall_ai_backend_codebook_id, code], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_0338dcbd\") @@index([shopping_mall_ai_backend_codebook_id, order], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_f583a7e5\") @@index([label(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve all codebook entries (options/values) belonging to a specified codebook. Results include code, label, description, sort order, and visibility. Supports advanced search, filtering, and sorted pagination for use in business logic, admin dashboard, and integration scenarios. Access restricted to administrators.","summary":"List codebook entries for a specific codebook, supporting filtering and pagination","parameters":[{"name":"codebookId","description":"The UUID of the codebook whose entries are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination info for codebook entries.","typeName":"IShoppingMallAiBackendCodebookEntry.IRequest"},"responseBody":{"description":"Paginated summary of codebook entries for admin or integration use.","typeName":"IPageIShoppingMallAiBackendCodebookEntry.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_codebook_entries","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the full business details for a single codebook entry (such as a specific status or option) by codebookId and entryId. The operation reads from the shopping_mall_ai_backend_codebook_entries table and returns all attributes for the entry, supporting admin and system-level dictionary inspection.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}/entries/{entryId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_codebook_entries { id String @id @db.Uuid shopping_mall_ai_backend_codebook_id String @db.Uuid code String label String description String? order Int @db.Integer visible Boolean created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz codebook shopping_mall_ai_backend_codebooks @relation(fields: [shopping_mall_ai_backend_codebook_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_3a47ac71\") @@unique([shopping_mall_ai_backend_codebook_id, code], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_0338dcbd\") @@index([shopping_mall_ai_backend_codebook_id, order], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_f583a7e5\") @@index([label(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve complete detail for a specific codebook entry, referenced by both codebookId and entryId. Returns all business/context metadata, supporting admin workflows to inspect or configure business dictionaries and lookup sets. Access is limited to admin or system-level users.","summary":"Get details for a specific codebook entry by IDs","parameters":[{"name":"codebookId","description":"UUID of the codebook containing the entry.","schema":{"type":"string","format":"uuid"}},{"name":"entryId","description":"UUID of the entry to lookup within the codebook.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full context-rich data for the requested codebook entry.","typeName":"IShoppingMallAiBackendCodebookEntry"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_codebook_entries","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new entry within a given codebook, allowing administrators to expand or manage business logic dictionaries. Written to the shopping_mall_ai_backend_codebook_entries table and requires the parent codebook's UUID (codebookId) and entry details. Enforces uniqueness of code within the codebook and validates for business completeness. Only accessible to admin-level users.","path":"/shoppingMallAiBackend/admin/codebooks/{codebookId}/entries","method":"post","prisma_schemas":"model shopping_mall_ai_backend_codebook_entries { id String @id @db.Uuid shopping_mall_ai_backend_codebook_id String @db.Uuid code String label String description String? order Int @db.Integer visible Boolean created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz codebook shopping_mall_ai_backend_codebooks @relation(fields: [shopping_mall_ai_backend_codebook_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_3a47ac71\") @@unique([shopping_mall_ai_backend_codebook_id, code], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_0338dcbd\") @@index([shopping_mall_ai_backend_codebook_id, order], map: \"shopping_mall_ai_backend_codebook_entries_shopping_mal_f583a7e5\") @@index([label(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Create a new entry (option, status, tag, etc.) within the given codebook. Accepts code, label, and business metadata, storing it as a new entity in the codebook_entries table. Only admin users can create new entries, with strict duplicate code checks. Supports structured expansion of lookup dictionaries to accommodate business evolution.","summary":"Add a new entry to a codebook by its codebookId","parameters":[{"name":"codebookId","description":"UUID of the parent codebook to which this entry will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Entry details (code, label, order, etc.) for the new codebook entry.","typeName":"IShoppingMallAiBackendCodebookEntry.ICreate"},"responseBody":{"description":"Details of the newly created codebook entry entity.","typeName":"IShoppingMallAiBackendCodebookEntry"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_codebook_entries","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of customer accounts from the ShoppingMallAiBackend system. It is based on the shopping_mall_ai_backend_customers table and supports search criteria such as email, phone number, name, nickname, account activation status, and verification status. The endpoint enables advanced search functionality, allowing for user management, onboarding monitoring, and compliance checks. It also supports sorting and pagination to efficiently handle large customer datasets and can be used by admin roles needing visibility into the customer user base.\n\nFiltering capabilities extend to last login times, account creation and update timestamps, as well as logical deletion markers. Relationships to withdrawal events, sessions, and identity providers are available for extended auditing use cases. The API is designed for administrator-driven, backoffice, or support flows where full customer lists or targeted searches are required. Sensitive information is protected and only accessible to authorized roles.","prisma_schemas":"model shopping_mall_ai_backend_customers {\n  id String @id @db.Uuid\n  email String\n  phone_number String\n  password_hash String\n  name String\n  nickname String?\n  is_active Boolean\n  is_verified Boolean\n  last_login_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_customer_withdrawals shopping_mall_ai_backend_customer_withdrawals[]\n  shopping_mall_ai_backend_customer_sessions shopping_mall_ai_backend_customer_sessions[]\n  shopping_mall_ai_backend_customer_external_identities shopping_mall_ai_backend_customer_external_identities[]\n}","authorizationRoles":["admin"],"description":"Retrieve a paginated list of customers registered in the ShoppingMallAiBackend. The endpoint supports complex search criteria such as filtering by email address, phone number, real name, nickname, account status (active/inactive), and verification status. Administrators can leverage this API to search for newly registered users, identify unverified or suspended accounts, and view users' recent activity dates for business monitoring.\n\nSecurity is crucial; only users with admin permissions may access this endpoint. Returned customer details include essential profile information, account status, verification flags, and last login time. Information about logically deleted (withdrawn) accounts is filtered or annotated per compliance requirements. This endpoint is often used in conjunction with customer detail retrieval and update APIs when more granular management actions are needed.\n\nUnderlying schema relationships allow for querying session activity and withdrawal history through additional endpoints. Search results are paginated, enabling efficient browsing or export for audits and compliance reports. Error responses are returned if the query contains invalid filters, or the requesting user lacks sufficient privileges.","summary":"Search and retrieve a paginated list of customers for admin management.","path":"/shoppingMallAiBackend/admin/customers","method":"patch","parameters":[],"requestBody":{"description":"Customer search, filter, and pagination parameters for advanced admin queries.","typeName":"IShoppingMallAiBackendCustomer.IRequest"},"responseBody":{"description":"Paginated customer summary records matching search and filter criteria.","typeName":"IPageIShoppingMallAiBackendCustomer.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_customers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the full details of a single customer account from the ShoppingMallAiBackend system, based on the shopping_mall_ai_backend_customers table. It is primarily used by administrators for account management, compliance validation, customer support, and profile audits. The endpoint returns comprehensive information including profile, contact details, account status, verification state, and activity timestamps. Related session, withdrawal, and external identity information is accessible through subsidiary endpoints.","prisma_schemas":"model shopping_mall_ai_backend_customers {\n  id String @id @db.Uuid\n  email String\n  phone_number String\n  password_hash String\n  name String\n  nickname String?\n  is_active Boolean\n  is_verified Boolean\n  last_login_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","authorizationRoles":["admin"],"description":"Retrieve detailed information for a single customer user in the ShoppingMallAiBackend system. Administrators utilize this endpoint to review or audit customer profile, contact channels, account status, verification state, and log-in activity. This information is critical for compliance review, support, and account management workflows.\n\nSensitive fields such as phone number and email are only viewable by admin roles for security. Profile information may be cross-referenced with session, withdrawal, or external identity endpoints for full user activity history. Related withdrawal or external identity data must be fetched through their respective endpoints.\n\nIf the customer account is logically deleted (withdrawn), the response will be annotated accordingly. Error scenarios include not found, insufficient privileges, or attempts to access removed accounts.","summary":"Get full details for a single customer account by admin.","path":"/shoppingMallAiBackend/admin/customers/{customerId}","method":"get","parameters":[{"name":"customerId","description":"Unique identifier of the customer to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested customer account.","typeName":"IShoppingMallAiBackendCustomer"},"name":"at","model_name":"shopping_mall_ai_backend_customers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing customer account record in the ShoppingMallAiBackend system, referencing the shopping_mall_ai_backend_customers table. It is used by administrators to change profile fields including name, status, or verification state. The API performs validation on updatable fields and ensures only altered values are changed. Audit trail is maintained for compliance.\n\nSensitive fields such as email or phone_number may require special checks or re-verification. Any changes to password_hash are subject to rehashing policy, and password changes are typically handled via separate flows. Updatable values are cross-checked with the corresponding Prisma model and current business rules. Logical deletions are not performed by this endpoint; see the dedicated delete endpoint.","prisma_schemas":"model shopping_mall_ai_backend_customers {\n  id String @id @db.Uuid\n  email String\n  phone_number String\n  password_hash String\n  name String\n  nickname String?\n  is_active Boolean\n  is_verified Boolean\n  last_login_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","authorizationRoles":["admin"],"description":"Update one or more fields of a customer's account by administrator control. The admin can modify the real name, nickname, account activation or suspension status, and the verification state. Email and phone number updates undergo business checks for uniqueness and potential re-verification requirements.\n\nAll changes are validated against the model and business logic. Modification events are logged for auditing, with full before/after recording in the compliance trail. Password update is not supported in this endpoint and may require separate processes with additional authentication.\n\nPost-update, the response returns the complete, up-to-date customer record. Error scenarios include invalid fields, violation of business rules, or attempts to update a logically deleted (withdrawn) account.","summary":"Update customer account profile and status for admin management.","path":"/shoppingMallAiBackend/admin/customers/{customerId}","method":"put","parameters":[{"name":"customerId","description":"Unique identifier of the customer to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the customer account, following admin validation.","typeName":"IShoppingMallAiBackendCustomer.IUpdate"},"responseBody":{"description":"The updated customer account object with all new values.","typeName":"IShoppingMallAiBackendCustomer"},"name":"update","model_name":"shopping_mall_ai_backend_customers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation performs a logical deletion (withdrawal) of a customer account in the ShoppingMallAiBackend system, utilizing the 'deleted_at' field on the shopping_mall_ai_backend_customers model. It is intended for use by administrators to deactivate a user profile for compliance, abuse, or support reasons while preserving audit evidence. Withdrawals via this endpoint do not irreversibly erase customer information; data is retained for evidence and regulatory obligations. Associated records such as orders or sessions remain accessible for admin review and compliance. Access to this endpoint is strictly limited to admin roles.","prisma_schemas":"model shopping_mall_ai_backend_customers {\n  id String @id @db.Uuid\n  email String\n  phone_number String\n  password_hash String\n  name String\n  nickname String?\n  is_active Boolean\n  is_verified Boolean\n  last_login_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","authorizationRoles":["admin"],"description":"Mark the specified customer account in the ShoppingMallAiBackend as logically deleted (withdrawn) by setting the deleted_at timestamp. This operation does not remove data but restricts further use and blocks login while retaining the account for audit and regulatory compliance. All linked data and audit logs remain accessible for authorized roles.\n\nAdministrators use this functionality to handle account withdrawal requests, respond to policy violations, or suspend accounts in line with business or legal requirements. The operation is idempotent if already logically deleted. Attempts to delete already-withdrawn or non-existent accounts will return appropriate errors.","summary":"Logically delete (withdraw) a customer without permanent data removal.","path":"/shoppingMallAiBackend/admin/customers/{customerId}","method":"delete","parameters":[{"name":"customerId","description":"Unique identifier of the customer to withdraw.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_customers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of session records for a specific customer in the ShoppingMallAiBackend system. It queries the shopping_mall_ai_backend_customer_sessions table, filtered by the provided customerId. The endpoint allows administrators to inspect login activity, device/IP information, and session validity periods for a given user. It is useful for security auditing, suspicious activity investigations, and compliance checks. Only admin roles may access session records to protect sensitive customer security data.","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n}","authorizationRoles":["admin"],"description":"List all current and historical session records associated with a particular customer, for administrative auditing or support. This includes login details such as device, IP address, session creation and expiry times, and termination events. Sessions reflect both API and UI authentications and are used to trace user activity or support account recovery in case of security incidents.\n\nAccess to session details is strictly limited to admin roles due to sensitivity of access tokens and personal device identifiers. Not intended for customer self-service. Sessions may be further filtered or scoped in business logic, and results are paginated for performance.","summary":"Retrieve all sessions for a customer with pagination and filtering.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/sessions","method":"patch","parameters":[{"name":"customerId","description":"Unique identifier of the customer whose sessions are being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Session search parameters, such as date ranges, status, or pagination settings.","typeName":"IShoppingMallAiBackendCustomerSession.IRequest"},"responseBody":{"description":"Paginated list of the customer's sessions, including metadata for audit/audit trail.","typeName":"IPageIShoppingMallAiBackendCustomerSession"},"name":"index","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detail information for a specific session record belonging to a customer in the ShoppingMallAiBackend platform. It provides administrative insights into the session identity, lifecycle, login source device/IP, and tokens. This is primarily intended for diagnosis, security investigation, or audit purposes. Based on the shopping_mall_ai_backend_customer_sessions table.","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n}","authorizationRoles":["admin"],"description":"Retrieve details and audit information for a single session belonging to a customer. This includes origin IP/device/user-agent, session creation and expiry times, and (cautiously) access and refresh tokens for forensic or support evaluation. Session status is determined from expiry and termination fields.\n\nStrictly for administrative use in compliance, audit, or security scenarios. Attempting to access a non-existent or unauthorized session returns an appropriate error. Data returned is sensitive and should be displayed only in secure backoffice/admin UI.","summary":"Get single session detail for a customer for audit/forensics.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/sessions/{sessionId}","method":"get","parameters":[{"name":"customerId","description":"Unique identifier of the customer who owns the session.","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Unique identifier of the session record to be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed session record for the specified customer's session.","typeName":"IShoppingMallAiBackendCustomerSession"},"name":"at","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Update an existing customer session identified by sessionId for a particular customer. This operation allows the system or an authenticated user to modify attributes of an active or historical session for audit, security, or device management purposes. It is based on the shopping_mall_ai_backend_customer_sessions table in the Prisma schema, supporting updates such as token rotation, session expiration extension, forced logout/termination, and updating context information (IP address, user agent, etc.). Business rules include ensuring only the session owner or admins with permission can update sessions, with operation audit-logged for compliance. The sessionId and customerId must be valid UUIDs corresponding to the session and customer, respectively. The request body follows the IShoppingMallAiBackendCustomerSession.IUpdate DTO, and the operation returns the updated session details.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/sessions/{sessionId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]\n  @@unique([access_token])\n  @@index([customer_id])\n  @@index([expires_at])\n}","authorizationRoles":["customer","admin"],"description":"This API updates attributes of a customer session, such as session tokens, expiration, IP address, or termination status. It ensures session state and security can be managed efficiently for scenarios like forced logout (by admin or self), session renewal, or device deactivation. Only the session owner (customer) or administrators can perform this update, aligning with platform security policies and audit requirements.\n\nThe session is identified by its sessionId and cross-verified with the customerId for ownership and integrity. All modifications are logged for compliance. If the session is expired or belongs to a different customer, an error will be returned.\n\nTypical use cases include user-initiated device management, admin security operations, or incident response that require explicit update of session information. All updates conform with business logic for audit, evidence, and regulatory compliance.","summary":"Update a specific customer session for security, device, or lifecycle management.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer.","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Unique identifier (UUID) of the customer session to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Session update payload (e.g., to terminate session, rotate token, or extend expiry).","typeName":"IShoppingMallAiBackendCustomerSession.IUpdate"},"responseBody":{"description":"Updated customer session details after modification.","typeName":"IShoppingMallAiBackendCustomerSession"},"name":"update","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":"terminated_at","authorizationRole":"customer","authorizationType":null},{"specification":"Update an existing customer session identified by sessionId for a particular customer. This operation allows the system or an authenticated user to modify attributes of an active or historical session for audit, security, or device management purposes. It is based on the shopping_mall_ai_backend_customer_sessions table in the Prisma schema, supporting updates such as token rotation, session expiration extension, forced logout/termination, and updating context information (IP address, user agent, etc.). Business rules include ensuring only the session owner or admins with permission can update sessions, with operation audit-logged for compliance. The sessionId and customerId must be valid UUIDs corresponding to the session and customer, respectively. The request body follows the IShoppingMallAiBackendCustomerSession.IUpdate DTO, and the operation returns the updated session details.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/sessions/{sessionId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]\n  @@unique([access_token])\n  @@index([customer_id])\n  @@index([expires_at])\n}","authorizationRoles":["customer","admin"],"description":"This API updates attributes of a customer session, such as session tokens, expiration, IP address, or termination status. It ensures session state and security can be managed efficiently for scenarios like forced logout (by admin or self), session renewal, or device deactivation. Only the session owner (customer) or administrators can perform this update, aligning with platform security policies and audit requirements.\n\nThe session is identified by its sessionId and cross-verified with the customerId for ownership and integrity. All modifications are logged for compliance. If the session is expired or belongs to a different customer, an error will be returned.\n\nTypical use cases include user-initiated device management, admin security operations, or incident response that require explicit update of session information. All updates conform with business logic for audit, evidence, and regulatory compliance.","summary":"Update a specific customer session for security, device, or lifecycle management.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer.","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Unique identifier (UUID) of the customer session to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Session update payload (e.g., to terminate session, rotate token, or extend expiry).","typeName":"IShoppingMallAiBackendCustomerSession.IUpdate"},"responseBody":{"description":"Updated customer session details after modification.","typeName":"IShoppingMallAiBackendCustomerSession"},"name":"update","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":"terminated_at","authorizationRole":"admin","authorizationType":null},{"specification":"Logically delete (terminate) a customer session by sessionId for a given customer. This operation provides a secure API for session deactivation, supporting explicit logout/force-logout, device unlinking, or incident response. The target is the shopping_mall_ai_backend_customer_sessions table, with deletion implemented as setting terminated_at rather than removing the row. Typical clients are mobile/web logout flows or security-conscious administrative actions. The operation requires both customerId and sessionId in the path and is authorized for session owners (users) or platform admins. No request body is required and no complex response is returned.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/sessions/{sessionId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]\n  @@unique([access_token])\n  @@index([customer_id])\n  @@index([expires_at])\n}","authorizationRoles":["customer","admin"],"description":"This API performs logical deletion (termination) of a user session identified by sessionId for a specific customer. It is used for explicit log-out, forced device deactivation, or security event-driven session termination.\n\nBy setting terminated_at instead of removing the record, auditability and session traceability are preserved for business compliance. The operation ensures only the session owner (customer) or authorized administrators can destroy the session, and all actions are logged for regulatory requirements.\n\nAfter successful termination, the session cannot be reused for API authentication. Error responses are provided if the session or customer does not exist or is already terminated.","summary":"Logically terminate (logout) a specific customer session for security/audit purposes.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer.","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Unique identifier (UUID) for the customer session being terminated.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":"terminated_at","authorizationRole":"customer","authorizationType":null},{"specification":"Logically delete (terminate) a customer session by sessionId for a given customer. This operation provides a secure API for session deactivation, supporting explicit logout/force-logout, device unlinking, or incident response. The target is the shopping_mall_ai_backend_customer_sessions table, with deletion implemented as setting terminated_at rather than removing the row. Typical clients are mobile/web logout flows or security-conscious administrative actions. The operation requires both customerId and sessionId in the path and is authorized for session owners (users) or platform admins. No request body is required and no complex response is returned.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/sessions/{sessionId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_customer_sessions {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  access_token String\n  refresh_token String?\n  ip_address String\n  user_agent String\n  expires_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  terminated_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]\n  @@unique([access_token])\n  @@index([customer_id])\n  @@index([expires_at])\n}","authorizationRoles":["customer","admin"],"description":"This API performs logical deletion (termination) of a user session identified by sessionId for a specific customer. It is used for explicit log-out, forced device deactivation, or security event-driven session termination.\n\nBy setting terminated_at instead of removing the record, auditability and session traceability are preserved for business compliance. The operation ensures only the session owner (customer) or authorized administrators can destroy the session, and all actions are logged for regulatory requirements.\n\nAfter successful termination, the session cannot be reused for API authentication. Error responses are provided if the session or customer does not exist or is already terminated.","summary":"Logically terminate (logout) a specific customer session for security/audit purposes.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer.","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Unique identifier (UUID) for the customer session being terminated.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_customer_sessions","soft_delete_column":"terminated_at","authorizationRole":"admin","authorizationType":null},{"specification":"Search and retrieve a paginated list of all external identities (social/OAuth-linked accounts) associated with a specific customer. This operation is essential for customer profile management, security review, and account linking/unlinking flows. The endpoint returns the summary of external identities, including provider name, provider key, link time, and last verification. Pagination, search, and filter capabilities must be provided in the request body per IShoppingMallAiBackendCustomerExternalIdentity.IRequest. This API operates on the shopping_mall_ai_backend_customer_external_identities table in the Prisma schema.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/externalIdentities","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This operation provides a paginated list and search of all external identity connections (social login providers, OAuth links, SSO) for a particular customer account. It is essential for account and security management, enabling users or admins to review, link, or decouple external authentication providers.\n\nEach result contains provider information, identity key, time of linkage, and last verified timestamp. The request can filter by provider, link status, or search by provider_key. Pagination enables scalable query for customers with many external logins.\n\nThe API only returns external identities for the requested customerId. Unauthorized requests or attempts to view another user's data are forbidden and logged for audit.","summary":"List/search all external identity providers linked to a customer account.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer owner of the external identities.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for external identities.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity.IRequest"},"responseBody":{"description":"Paginated response including each external identity's summary data.","typeName":"IPageIShoppingMallAiBackendCustomerExternalIdentity.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Search and retrieve a paginated list of all external identities (social/OAuth-linked accounts) associated with a specific customer. This operation is essential for customer profile management, security review, and account linking/unlinking flows. The endpoint returns the summary of external identities, including provider name, provider key, link time, and last verification. Pagination, search, and filter capabilities must be provided in the request body per IShoppingMallAiBackendCustomerExternalIdentity.IRequest. This API operates on the shopping_mall_ai_backend_customer_external_identities table in the Prisma schema.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/externalIdentities","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This operation provides a paginated list and search of all external identity connections (social login providers, OAuth links, SSO) for a particular customer account. It is essential for account and security management, enabling users or admins to review, link, or decouple external authentication providers.\n\nEach result contains provider information, identity key, time of linkage, and last verified timestamp. The request can filter by provider, link status, or search by provider_key. Pagination enables scalable query for customers with many external logins.\n\nThe API only returns external identities for the requested customerId. Unauthorized requests or attempts to view another user's data are forbidden and logged for audit.","summary":"List/search all external identity providers linked to a customer account.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer owner of the external identities.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for external identities.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity.IRequest"},"responseBody":{"description":"Paginated response including each external identity's summary data.","typeName":"IPageIShoppingMallAiBackendCustomerExternalIdentity.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve details for a given external identity linked to a specific customer by externalIdentityId. Enables customer or admin to review the properties of a linked OAuth/social account, e.g., provider, key, linkage and verification timestamps. Operates on shopping_mall_ai_backend_customer_external_identities, requires customerId and externalIdentityId as UUIDs in the path. Response includes all entity fields per IShoppingMallAiBackendCustomerExternalIdentity DTO. Authorization required for customer or admin.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This API enables users or admins to retrieve details about a specific external identity provider account (such as Google, Apple, Naver, etc) linked to a user's account. The operation is secured so only the account owner or platform admin can query this linked identity.\n\nIt returns provider, provider key, linkage time, and last verified timestamp. If the target external identity does not belong to the customer, an error is returned.\n\nThis API is essential for profile review, account linking history display, and security troubleshooting. Actions are audit-logged for compliance where required.","summary":"Get specific external identity provider info for a customer.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer owner of the external identity.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of the external identity record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the external identity provider linked to customer.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity"},"name":"at","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve details for a given external identity linked to a specific customer by externalIdentityId. Enables customer or admin to review the properties of a linked OAuth/social account, e.g., provider, key, linkage and verification timestamps. Operates on shopping_mall_ai_backend_customer_external_identities, requires customerId and externalIdentityId as UUIDs in the path. Response includes all entity fields per IShoppingMallAiBackendCustomerExternalIdentity DTO. Authorization required for customer or admin.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This API enables users or admins to retrieve details about a specific external identity provider account (such as Google, Apple, Naver, etc) linked to a user's account. The operation is secured so only the account owner or platform admin can query this linked identity.\n\nIt returns provider, provider key, linkage time, and last verified timestamp. If the target external identity does not belong to the customer, an error is returned.\n\nThis API is essential for profile review, account linking history display, and security troubleshooting. Actions are audit-logged for compliance where required.","summary":"Get specific external identity provider info for a customer.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the target customer owner of the external identity.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of the external identity record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the external identity provider linked to customer.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity"},"name":"at","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Update a specific external identity provider record for a customer. This is used for updating provider association metadata, like last_verified_at, provider_key changes, or error recovery when a provider re-maps account information. Operation is performed on shopping_mall_ai_backend_customer_external_identities. Put method requires customerId and externalIdentityId UUIDs in the path to target the record. Only profile owner or admin may perform the update. Request body structure conforms to IShoppingMallAiBackendCustomerExternalIdentity.IUpdate. The updated record is returned upon success. Authorization/enforcement must ensure cross-account update is forbidden.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This endpoint enables update of properties for a linked external identity, such as last verification time, provider key, or correction of external account linkage problems. Common use cases include reconnection after an external provider updates keys, or admin-driven correction or audit of social account links.\n\nOperation is restricted to the customer who owns the external identity or platform administrators. The path ensures both customerId and externalIdentityId match. Attempts to update identities not owned by the customer are forbidden and trigger audit logging.\n\nThe request payload must follow the update DTO structure; successful update returns the revised identity info.","summary":"Update the mapping/properties for a customer's external identity record.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of customer owner of the external identity.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of the target external identity record.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload describing fields to update in linked external identity.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity.IUpdate"},"responseBody":{"description":"Updated external identity provider info after modification.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity"},"name":"update","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Update a specific external identity provider record for a customer. This is used for updating provider association metadata, like last_verified_at, provider_key changes, or error recovery when a provider re-maps account information. Operation is performed on shopping_mall_ai_backend_customer_external_identities. Put method requires customerId and externalIdentityId UUIDs in the path to target the record. Only profile owner or admin may perform the update. Request body structure conforms to IShoppingMallAiBackendCustomerExternalIdentity.IUpdate. The updated record is returned upon success. Authorization/enforcement must ensure cross-account update is forbidden.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This endpoint enables update of properties for a linked external identity, such as last verification time, provider key, or correction of external account linkage problems. Common use cases include reconnection after an external provider updates keys, or admin-driven correction or audit of social account links.\n\nOperation is restricted to the customer who owns the external identity or platform administrators. The path ensures both customerId and externalIdentityId match. Attempts to update identities not owned by the customer are forbidden and trigger audit logging.\n\nThe request payload must follow the update DTO structure; successful update returns the revised identity info.","summary":"Update the mapping/properties for a customer's external identity record.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of customer owner of the external identity.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of the target external identity record.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload describing fields to update in linked external identity.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity.IUpdate"},"responseBody":{"description":"Updated external identity provider info after modification.","typeName":"IShoppingMallAiBackendCustomerExternalIdentity"},"name":"update","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Unlink or remove a specific external identity provider connection from a customer's profile. This API is used for security, privacy, and data management workflows such as de-linking a social account or fulfilling user requests for account decoupling. The endpoint operates on shopping_mall_ai_backend_customer_external_identities with customerId and externalIdentityId as path parameters. Only the identity owner or an admin may perform this action. Physical deletion is performed from the database (no soft delete column in the schema).","path":"/shoppingMallAiBackend/customer/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This operation removes a linked external identity (social sign-in, OAuth, etc.) from a user's profile. Used on user request (unlink a social account) or by admin for identity/data management and privacy compliance. The schema has no soft delete field, so the linked identity is physically removed from the database.\n\nOnly the customer owner or authorized platform admins may perform this deletion. Actions are audit-logged. Attempting to delete a non-owned or already-deleted mapping will result in error.","summary":"Remove/unlink a specific external identity from a customer profile. (Hard delete)","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of target customer.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of external identity to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Unlink or remove a specific external identity provider connection from a customer's profile. This API is used for security, privacy, and data management workflows such as de-linking a social account or fulfilling user requests for account decoupling. The endpoint operates on shopping_mall_ai_backend_customer_external_identities with customerId and externalIdentityId as path parameters. Only the identity owner or an admin may perform this action. Physical deletion is performed from the database (no soft delete column in the schema).","path":"/shoppingMallAiBackend/admin/customers/{customerId}/externalIdentities/{externalIdentityId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_customer_external_identities {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  provider String\n  provider_key String\n  linked_at DateTime @db.Timestamptz\n  last_verified_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_customer_external_identities__695ddaff\")\n  @@unique([provider, provider_key], map: \"shopping_mall_ai_backend_customer_external_identities__7be59c46\")\n  @@index([customer_id], map: \"shopping_mall_ai_backend_customer_external_identities__c0cd5f8c\")\n}","authorizationRoles":["customer","admin"],"description":"This operation removes a linked external identity (social sign-in, OAuth, etc.) from a user's profile. Used on user request (unlink a social account) or by admin for identity/data management and privacy compliance. The schema has no soft delete field, so the linked identity is physically removed from the database.\n\nOnly the customer owner or authorized platform admins may perform this deletion. Actions are audit-logged. Attempting to delete a non-owned or already-deleted mapping will result in error.","summary":"Remove/unlink a specific external identity from a customer profile. (Hard delete)","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of target customer.","schema":{"type":"string","format":"uuid"}},{"name":"externalIdentityId","description":"Unique identifier (UUID) of external identity to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_customer_external_identities","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Search and filter historical customer withdrawal (account deactivation) events for a given customer. Returns all (or filtered) withdrawal snapshots including reason, withdrawal timestamp, and any regulatory evidence for withdrawal events. Used by users to review withdrawal history or by admins for compliance, evidence audits, and legal reporting. The underlying table is shopping_mall_ai_backend_customer_withdrawals, with customerId as required path parameter. The request body should be of type IShoppingMallAiBackendCustomerWithdrawal.IRequest (supports additional filters, date ranges, and pagination). The response is a paginated list of withdrawal history summary objects.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/withdrawals","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_customer_withdrawals {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  reason String?\n  withdrawn_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  @@index([customer_id])\n}","authorizationRoles":["customer","admin"],"description":"This API lists all withdrawal snapshots (account deactivations or removals) performed on a user account, with full audit evidence (reason, withdrawn_at, created_at). Useful for reviewing past deactivation events, onboarding audits, or regulatory requests. The user (or admin) may filter by dates, reason, or other criteria provided by IShoppingMallAiBackendCustomerWithdrawal.IRequest.\n\nTypical use includes customer self-review, admin compliance checks, or processing data export/archival requests after withdrawal. All records are returned in chronological order and paginated for large event history.","summary":"Retrieve paginated withdrawal history for a customer account.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the customer whose withdrawal records are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter criteria and pagination info for withdrawal history search.","typeName":"IShoppingMallAiBackendCustomerWithdrawal.IRequest"},"responseBody":{"description":"Paginated response containing withdrawal summary records for audit/regulatory use.","typeName":"IPageIShoppingMallAiBackendCustomerWithdrawal.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_customer_withdrawals","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Search and filter historical customer withdrawal (account deactivation) events for a given customer. Returns all (or filtered) withdrawal snapshots including reason, withdrawal timestamp, and any regulatory evidence for withdrawal events. Used by users to review withdrawal history or by admins for compliance, evidence audits, and legal reporting. The underlying table is shopping_mall_ai_backend_customer_withdrawals, with customerId as required path parameter. The request body should be of type IShoppingMallAiBackendCustomerWithdrawal.IRequest (supports additional filters, date ranges, and pagination). The response is a paginated list of withdrawal history summary objects.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/withdrawals","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_customer_withdrawals {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  reason String?\n  withdrawn_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  @@index([customer_id])\n}","authorizationRoles":["customer","admin"],"description":"This API lists all withdrawal snapshots (account deactivations or removals) performed on a user account, with full audit evidence (reason, withdrawn_at, created_at). Useful for reviewing past deactivation events, onboarding audits, or regulatory requests. The user (or admin) may filter by dates, reason, or other criteria provided by IShoppingMallAiBackendCustomerWithdrawal.IRequest.\n\nTypical use includes customer self-review, admin compliance checks, or processing data export/archival requests after withdrawal. All records are returned in chronological order and paginated for large event history.","summary":"Retrieve paginated withdrawal history for a customer account.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the customer whose withdrawal records are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter criteria and pagination info for withdrawal history search.","typeName":"IShoppingMallAiBackendCustomerWithdrawal.IRequest"},"responseBody":{"description":"Paginated response containing withdrawal summary records for audit/regulatory use.","typeName":"IPageIShoppingMallAiBackendCustomerWithdrawal.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_customer_withdrawals","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the details of a single withdrawal event (account deactivation/removal) for a customer by withdrawalId. Used for business audit, compliance, or evidence provision. Returns all fields in shopping_mall_ai_backend_customer_withdrawals: reason, withdrawn timestamp, evidence created_at. Only authorized user or admin can retrieve this. Both customerId and withdrawalId must be valid UUIDs in the path. The response uses the IShoppingMallAiBackendCustomerWithdrawal DTO.","path":"/shoppingMallAiBackend/customer/customers/{customerId}/withdrawals/{withdrawalId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_customer_withdrawals {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  reason String?\n  withdrawn_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  @@index([customer_id])\n}","authorizationRoles":["customer","admin"],"description":"This operation retrieves all evidence and detail for a single customer withdrawal (account deactivation) event. Auditable details include the business reason, withdrawal date, and evidence timestamp. It is typically called by the customer reviewing their own history or an admin for compliance reporting. Both the customerId and withdrawalId are required as UUIDs. Attempts to access withdrawals not owned by the customer are forbidden.\n\nThis API supports regulatory audit operations, evidence review, and customer post-withdrawal requests. Actions are logged for compliance.","summary":"Retrieve details of a specific customer withdrawal record for audit or evidence.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the customer whose withdrawal record is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"withdrawalId","description":"Unique identifier (UUID) of the specific withdrawal record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete account withdrawal/deactivation event details.","typeName":"IShoppingMallAiBackendCustomerWithdrawal"},"name":"at","model_name":"shopping_mall_ai_backend_customer_withdrawals","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve the details of a single withdrawal event (account deactivation/removal) for a customer by withdrawalId. Used for business audit, compliance, or evidence provision. Returns all fields in shopping_mall_ai_backend_customer_withdrawals: reason, withdrawn timestamp, evidence created_at. Only authorized user or admin can retrieve this. Both customerId and withdrawalId must be valid UUIDs in the path. The response uses the IShoppingMallAiBackendCustomerWithdrawal DTO.","path":"/shoppingMallAiBackend/admin/customers/{customerId}/withdrawals/{withdrawalId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_customer_withdrawals {\n  id String @id @db.Uuid\n  customer_id String @db.Uuid\n  reason String?\n  withdrawn_at DateTime @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  @@index([customer_id])\n}","authorizationRoles":["customer","admin"],"description":"This operation retrieves all evidence and detail for a single customer withdrawal (account deactivation) event. Auditable details include the business reason, withdrawal date, and evidence timestamp. It is typically called by the customer reviewing their own history or an admin for compliance reporting. Both the customerId and withdrawalId are required as UUIDs. Attempts to access withdrawals not owned by the customer are forbidden.\n\nThis API supports regulatory audit operations, evidence review, and customer post-withdrawal requests. Actions are logged for compliance.","summary":"Retrieve details of a specific customer withdrawal record for audit or evidence.","parameters":[{"name":"customerId","description":"Unique identifier (UUID) of the customer whose withdrawal record is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"withdrawalId","description":"Unique identifier (UUID) of the specific withdrawal record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete account withdrawal/deactivation event details.","typeName":"IShoppingMallAiBackendCustomerWithdrawal"},"name":"at","model_name":"shopping_mall_ai_backend_customer_withdrawals","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Enables advanced search and filtering of sellers (merchant accounts) in the shopping mall backend. This operation targets the shopping_mall_ai_backend_sellers table. It supports filtering by legal name, business registration number, email, verification state, and account status. Pagination, search, and sorting are provided for large-scale seller management. Only authorized admin users can access this endpoint, and results include details suitable for compliance review and onboarding/tracking workflows.","path":"/shoppingMallAiBackend/admin/sellers","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_verifications shopping_mall_ai_backend_seller_verifications[]\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?\n  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]\n  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve a paginated, filtered list of seller merchant accounts for administrative or compliance purposes. Supports advanced search by legal name, business registration number, email, account activation, and verification status. Useful for onboarding reviews, regulatory audits, and global vendor management.\n\nAdmin authentication is required to access the full seller roster. The response includes basic seller details as well as metadata like creation and update dates, verification, and activation status. Sensitive business fields are only retrievable by admin roles. Supports pagination and sorting on primary searchable fields.\n\nThis operation contributes to compliance and regulatory workflows by allowing bulk review, onboarding, and forensic investigation of sellers in the system. Errors or misuse generate access-denied and context-specific feedback.\n\nRelated endpoints: individual seller retrieval, update, and lifecycle management.","summary":"Search and retrieve filtered, paginated seller accounts (admin-only, soft delete)","parameters":[],"requestBody":{"description":"Filter, search, and pagination parameters for sellers.","typeName":"IShoppingMallAiBackendSeller.IRequest"},"responseBody":{"description":"Paginated seller list with metadata for onboarding and compliance review.","typeName":"IPageIShoppingMallAiBackendSeller.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_sellers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves full details of a single seller merchant account by their unique UUID. Based on shopping_mall_ai_backend_sellers, this endpoint returns legal name, business registration information, verification status, active status, creation/update timestamps, and key profile attributes required for compliance and support flows. Only admin users have access due to data sensitivity and audit requirements.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_verifications shopping_mall_ai_backend_seller_verifications[]\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?\n  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]\n  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve detailed information about a single seller account identified by the seller's UUID. Returns the full legal profile, including merchant's business registration, contact information (email), verification and activation status, timestamps, and profile extensions.\n\nThis API is accessible only to administrative users for the sake of platform safety, compliance, and business support. Attempts to access with insufficient permissions result in explicit business error codes.\n\nProvides all information necessary for compliance checks, onboarding, support investigations, or legal requests. Includes both core and metadata fields. Returns 404 for unknown or deleted sellers.","summary":"Retrieve detailed information for a seller account by ID (admin-only, soft delete aware)","parameters":[{"name":"sellerId","description":"UUID of the seller merchant account to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Seller account details, compliance and onboarding information.","typeName":"IShoppingMallAiBackendSeller"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_sellers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates core attributes and business profile of the specified seller merchant account by UUID, such as name, business_registration_number, email, and status. Targets shopping_mall_ai_backend_sellers. Change-tracking is business-critical for compliance. Operations are restricted to admin and result in audit trail entries. Supports only editable, non-sensitive fields according to business policies.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_verifications shopping_mall_ai_backend_seller_verifications[]\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?\n  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]\n  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Modify the business attributes of a seller merchant account identified by sellerId. Allows updating name, business registration number, email, is_active, and is_verified per regulatory policy. Triggering this operation logs compliance/audit events for evidence preservation.\n\nOnly admin users hold authority to alter core seller onboarding data. Failed validations (duplicate business registration or email) return business error codes. Soft-deleted sellers cannot be updated.\n\nThis operation is critical for regulatory compliance, onboarding, and ongoing seller management. Changes update timestamps for data correctness.","summary":"Update existing seller merchant account info by ID (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller merchant account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for seller merchant fields (name, registration, status, etc.).","typeName":"IShoppingMallAiBackendSeller.IUpdate"},"responseBody":{"description":"Updated seller account record with new values.","typeName":"IShoppingMallAiBackendSeller"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_sellers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently removes a seller merchant account by UUID from the shopping mall backend. This hard delete is performed only by admin users, and is tracked for compliance and regulatory evidence. Operation targets shopping_mall_ai_backend_sellers and removes all associated business activity, marking the record as deleted via deleted_at. Can be used for regulatory or legal removal requirements.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_verifications shopping_mall_ai_backend_seller_verifications[]\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]\n  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]\n  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?\n  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]\n  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Permanently remove a seller merchant account from the platform based on its unique seller ID. This operation sets the deleted_at timestamp for evidence and regulatory trace, ensuring the account is no longer active on the system. Attempts to delete non-existent or already deleted sellers will result in a not found error.\n\nOnly admin users are permitted to perform this removal, ensuring compliance with business policy and legal obligations. Removal cascades through related business and activity records per referential integrity. All such operations are logged in an audit trail for future review and evidence needs.","summary":"Permanently remove (soft delete) a seller merchant by ID (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller merchant account to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_sellers","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Allows administrators to retrieve a paginated and filterable list of all verification records for a specific seller account, including KYC/KYB evidence, type, status, and time stamps. Operates on shopping_mall_ai_backend_seller_verifications, with optional filtering by type/status for regulatory workflows. Supports deep compliance review and onboarding state management. Access is limited to admin users.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}/verifications","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_seller_verifications {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  verification_type String\n  status String\n  document_uri String @db.VarChar(80000)\n  submitted_at DateTime @db.Timestamptz\n  verified_at DateTime? @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@index([seller_id])\n  @@index([status])\n}","description":"Retrieve a paginated, filtered list of all verification records linked to a specified seller by sellerId. Response includes evidence types, status, document URIs, and timestamps, supporting regulatory or onboarding workflows.\n\nThis endpoint is exclusively for administrators who need to review or audit a seller's compliance status. Filtering is supported on type and status fields. Attempts to access with invalid seller reference or insufficient permissions are rejected with descriptive error codes.\n\nIntegration with seller management flows, including onboarding, compliance reviews, and periodic audits. Results can be used for deeper evidence review in case of disputes.","summary":"List and search verification records for a seller (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller to filter verifications by.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, pagination, and search criteria for seller's verification records.","typeName":"IShoppingMallAiBackendSellerVerification.IRequest"},"responseBody":{"description":"Paginated list of seller verification evidence for review or audit.","typeName":"IPageIShoppingMallAiBackendSellerVerification"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_seller_verifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a single seller verification record's complete detail, identified by the seller and specific verification UUIDs. Reveals all compliance evidence, submission and review state, reference document URI, and change history for regulatory workflows. Accessible only to administrative roles for audit purposes.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}/verifications/{verificationId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_seller_verifications {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  verification_type String\n  status String\n  document_uri String @db.VarChar(80000)\n  submitted_at DateTime @db.Timestamptz\n  verified_at DateTime? @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@index([seller_id])\n  @@index([status])\n}","description":"Retrieve all details about a single verification record for a given seller, identified by sellerId and verificationId. Returns verification type, status, document URI, submission, and approval timestamps for onboarding and compliance.\n\nExclusively for use by admins for evidentiary and regulatory workflows. Unauthorized access is blocked with a policy violation error. Existence of both seller and verification records is checked, with 404 for invalid identifiers.\n\nFacilitates onboarding workflow, compliance deep-dive, and audit trails for seller eligibility or investigation.","summary":"Retrieve a specific seller verification record (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller account.","schema":{"type":"string","format":"uuid"}},{"name":"verificationId","description":"UUID of the verification record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the verification record, including evidence, timestamps, and status.","typeName":"IShoppingMallAiBackendSellerVerification"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_seller_verifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Updates a seller verification record's status, type, or reference evidence document URI (document_uri), identified by both sellerId and verificationId. Enables compliance officers to manage onboarding, approval, and status transitions during regulatory review. Only admin can invoke. Fully tracked for compliance and audit log.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}/verifications/{verificationId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_seller_verifications {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  verification_type String\n  status String\n  document_uri String @db.VarChar(80000)\n  submitted_at DateTime @db.Timestamptz\n  verified_at DateTime? @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@index([seller_id])\n  @@index([status])\n}","description":"Update the type, status, or reference document_uri for an existing seller verification record. Enables onboarding workflow, status transition (e.g., submitted, approved, rejected), or correction of compliance documentation. Admin-only.\n\nAll changes are logged for audit purposes. Supports only editable fields—modifying immutable audit fields or history is not permitted. Validation errors occur if attempting to update non-editable or nonexistent records.\n\nLinks directly to seller onboarding, periodic compliance, and evidence workflows. All changes update verification's updated timestamp.","summary":"Update a seller's verification record (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller for whom the verification is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"verificationId","description":"UUID of the verification record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for verification record (type, status, URI, etc.)","typeName":"IShoppingMallAiBackendSellerVerification.IUpdate"},"responseBody":{"description":"Updated verification record reflecting the modification.","typeName":"IShoppingMallAiBackendSellerVerification"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_seller_verifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Deletes a single seller verification record, identified by sellerId and verificationId, performed only by admin for regulatory and compliance audit needs. Operates on shopping_mall_ai_backend_seller_verifications table. All deletion actions are logged for evidence. This is a hard delete, not recoverable, and must be justified by compliance policy.","path":"/shoppingMallAiBackend/admin/sellers/{sellerId}/verifications/{verificationId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_seller_verifications {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  verification_type String\n  status String\n  document_uri String @db.VarChar(80000)\n  submitted_at DateTime @db.Timestamptz\n  verified_at DateTime? @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@index([seller_id])\n  @@index([status])\n}","description":"Permanently remove a specific seller verification record, targeted by sellerId and verificationId. All deletions are executed by admin and logged in audit trail for future evidence needs. Operation is not reversible and must comply with regulatory and business policy.\n\nAttempting to delete non-existent or already removed verification records returns an error. This is critical for compliance, KYC/KYB evidence management, and onboarding workflows.","summary":"Permanently remove a seller verification record (admin-only)","parameters":[{"name":"sellerId","description":"UUID of the seller account.","schema":{"type":"string","format":"uuid"}},{"name":"verificationId","description":"UUID of the verification record to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_seller_verifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the full, detailed seller profile for a specific seller by their unique identifier. This operation fetches all profile fields as specified in the shopping_mall_ai_backend_seller_profiles Prisma model, including optional display name, contact information, address, and business introduction. Typically, this is used for seller dashboards or profile editing screens for authenticated sellers, or for admin review workflows. Authorization is required to access non-public details. Profile records are linked one-to-one to a parent seller. The operation returns the complete, up-to-date profile object for the given sellerId.","prisma_schemas":"model shopping_mall_ai_backend_seller_profiles {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  display_name String?\n  contact_phone String?\n  contact_email String?\n  address String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@unique([seller_id])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\nmodel shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the seller's profile by their unique identifier. Returns all profile-related fields, including display name, contact details, address, business introduction, and audit timestamps. Only authorized sellers or administrators may view or manage this information. Sensitive contact and business data is not public and requires authentication for access. Linked one-to-one with the seller account and immutable except through update operations. Errors are returned if the seller profile does not exist or if access is not allowed.","summary":"Retrieve a detailed seller profile for a given sellerId.","parameters":[{"name":"sellerId","description":"Unique identifier of the seller whose profile is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed seller profile object for the given sellerId.","typeName":"IShoppingMallAiBackendSellerProfile"},"authorizationRoles":["seller"],"name":"at","model_name":"shopping_mall_ai_backend_seller_profiles","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/sellers/{sellerId}/profile","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"Update the profile information of a specific seller by their sellerId. This operation allows an authenticated seller or admin to modify profile fields, such as display name, contact phone/email, address, and description, as defined in the shopping_mall_ai_backend_seller_profiles Prisma model. On update, business rules may require re-verification for sensitive changes. The operation maintains audit trails for all modifications. Only authorized users may update their own profile. Returns the updated seller profile object.","prisma_schemas":"model shopping_mall_ai_backend_seller_profiles {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  display_name String?\n  contact_phone String?\n  contact_email String?\n  address String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@unique([seller_id])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\nmodel shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update a seller's profile using their unique sellerId. The profile includes display name, contact phone/email, address, and business description. On sensitive changes (such as contact details), re-verification steps may be enforced by business policies. The update is permitted only for the owner seller or admins with appropriate privileges. All changes are transparently logged for audit and evidence. Returns the revised seller profile. If update involves contact info, ensure compliance with verification and communication policies.","summary":"Update seller profile information for a given sellerId.","parameters":[{"name":"sellerId","description":"Unique identifier of the seller whose profile is being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Profile fields to update for the seller.","typeName":"IShoppingMallAiBackendSellerProfile.IUpdate"},"responseBody":{"description":"Updated seller profile object after the change.","typeName":"IShoppingMallAiBackendSellerProfile"},"authorizationRoles":["seller"],"name":"update","model_name":"shopping_mall_ai_backend_seller_profiles","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/sellers/{sellerId}/profile","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieve settlement configuration and payout details for a specific seller. Provides admin or seller access to settlement account information, including bank name, account number, account holder, memo, creation, and update timestamps. This operation refers to the shopping_mall_ai_backend_seller_settlements model, which is linked uniquely one-to-one to the seller. Used for financial disbursement review and management. Sensitive data—such as account numbers—requires strong authentication and is never shared publicly.","prisma_schemas":"model shopping_mall_ai_backend_seller_settlements {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  bank_name String\n  bank_account_number String\n  account_holder String\n  remittance_memo String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@unique([seller_id])\n  @@index([bank_account_number], map: \"shopping_mall_ai_backend_seller_settlements_bank_accou_3e3984c4\")\n}\nmodel shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the settlement configuration for a specific seller by their sellerId. Returns current payout destination details (bank name, account number, account holder) and related memo if present. Only accessible to the seller owner and admin roles due to the financial sensitivity of the data. Used in seller dashboards or admin financial modules to view, audit, or update seller banking/payout settings. Strictly enforce role and privacy policies when exposing this data. If no settlement info exists, an error is returned.","summary":"Retrieve settlement and payout details for a given sellerId.","parameters":[{"name":"sellerId","description":"Unique identifier of the seller whose settlement information is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Seller's current settlement/payout configuration details.","typeName":"IShoppingMallAiBackendSellerSettlement"},"authorizationRoles":["seller"],"name":"at","model_name":"shopping_mall_ai_backend_seller_settlements","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/sellers/{sellerId}/settlement","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"Update the settlement configuration and payout instructions for a specific seller. Allows the authenticated seller or admin to change bank name, account number, account holder, and optional remittance memo for disbursements. On update, regulatory checks and compliance logic may be invoked for verification. Maintains an audit trail for all settlement changes and supports secure update notifications. Sensitive changes must be approved by modern business policies for seller fund security. Only accessible to the seller owner or platform administrators. Returns the new settlement object after the update.","prisma_schemas":"model shopping_mall_ai_backend_seller_settlements {\n  id String @id @db.Uuid\n  seller_id String @db.Uuid\n  bank_name String\n  bank_account_number String\n  account_holder String\n  remittance_memo String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  @@unique([seller_id])\n  @@index([bank_account_number], map: \"shopping_mall_ai_backend_seller_settlements_bank_accou_3e3984c4\")\n}\nmodel shopping_mall_ai_backend_sellers {\n  id String @id @db.Uuid\n  email String\n  business_registration_number String\n  name String\n  is_verified Boolean\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?\n  @@unique([email])\n  @@unique([business_registration_number], map: \"shopping_mall_ai_backend_sellers_business_registration_330d2da3\")\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update seller settlement and bank account configuration for a specific seller. May be called by authenticated sellers or platform admins. All payout details—including bank name, bank account number, account holder, and memo—can be edited with appropriate business validation and regulatory controls. Updates are fully audited and often require compliance re-verification for sensitive changes such as account number or account holder. Returns the updated settlement record. Errors are returned on invalid input or policy violations.","summary":"Update settlement/payout information for a given sellerId.","parameters":[{"name":"sellerId","description":"Unique identifier of the seller whose settlement configuration will be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields defining updated settlement configuration, such as banking details and memo.","typeName":"IShoppingMallAiBackendSellerSettlement.IUpdate"},"responseBody":{"description":"Updated seller settlement/payout configuration object.","typeName":"IShoppingMallAiBackendSellerSettlement"},"authorizationRoles":["seller"],"name":"update","model_name":"shopping_mall_ai_backend_seller_settlements","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/sellers/{sellerId}/settlement","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"Search and retrieve a paginated list of admin accounts with advanced filtering, searching, and sorting. Supports queries by name, username, status (is_active), and creation date, using the criteria defined in the shopping_mall_ai_backend_admins Prisma model. Designed for platform super-administrators to audit, review, or manage admin users. Read access is restricted to high-privilege roles. Results are optimized for administrative dashboards and include both summary and key audit properties for each admin.","prisma_schemas":"model shopping_mall_ai_backend_admins {\n  id String @id @db.Uuid\n  username String\n  password_hash String\n  name String\n  email String\n  phone_number String?\n  is_active Boolean\n  last_login_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  shopping_mall_ai_backend_admin_audit_logs shopping_mall_ai_backend_admin_audit_logs[]\n  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]\n  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  shopping_mall_ai_backend_inquiry_faq_suggestions shopping_mall_ai_backend_inquiry_faq_suggestions[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([username])\n  @@unique([email])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Returns a paginated result set of administrators (admins) matching optional search filters such as name, username, account active status, and creation date. This list operation is available only to other super-admin users for audit and user management purposes. Includes key profile details such as real name, admin username, contact information, status (active), last login, and audit creation timestamps. Results may be sorted and paginated according to request parameters. Sensitive data (like password hashes) are never exposed. Intended for admin UI search/list dashboards.","summary":"List admin accounts with advanced search, filtering, and pagination.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for admin list retrieval.","typeName":"IShoppingMallAiBackendAdmin.IRequest"},"responseBody":{"description":"Page of summarized admin account items matching the search criteria.","typeName":"IPageIShoppingMallAiBackendAdmin.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_admins","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/admins","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full detail on an admin account by its unique identifier (adminId). Returns all relevant fields, such as username, real name, email, phone number, account status, last login, audit/update timestamps, and role assignment references. Intended for admin account viewing in privileged management interfaces or for audit trails. This call does not expose password hashes or sensitive authentication secrets. May be restricted by business logic to only high-privilege roles for security reasons. The primary key for search is adminId (UUID).","prisma_schemas":"model shopping_mall_ai_backend_admins {\n  id String @id @db.Uuid\n  username String\n  password_hash String\n  name String\n  email String\n  phone_number String?\n  is_active Boolean\n  last_login_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  shopping_mall_ai_backend_admin_audit_logs shopping_mall_ai_backend_admin_audit_logs[]\n  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]\n  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  shopping_mall_ai_backend_inquiry_faq_suggestions shopping_mall_ai_backend_inquiry_faq_suggestions[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([username])\n  @@unique([email])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get a specific administrator account's details by their unique adminId (UUID). Returns all profile fields except sensitive authentication secrets (such as password hashes), suitable for admin and audit views. Includes deeply linked audit log, creation/update times, contact info, and historical account metadata. Can only be used by super-admins or privileged admin roles in the management UI. Access is strictly checked, and attempts to access other admins' details are logged and restricted.","summary":"Get admin account details for a given adminId.","parameters":[{"name":"adminId","description":"Unique identifier of the admin account to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full admin account details for the given adminId.","typeName":"IShoppingMallAiBackendAdmin"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_admins","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/admins/{adminId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Update the public profile or status fields of a specific admin account. This endpoint is available only to super-admin or privileged admin users, and only for certain role-appropriate modifications (non-authentication fields). Supports updating real name, email, phone, active status, and similar fields. Does not allow updating password or authentication secret (which requires a separate endpoint/workflow). All updates are logged for audit purposes. Business logic may prevent self-update or changes to certain admin accounts based on higher privilege or compliance rules. Returns the updated admin record.","prisma_schemas":"model shopping_mall_ai_backend_admins {\n  id String @id @db.Uuid\n  username String\n  password_hash String\n  name String\n  email String\n  phone_number String?\n  is_active Boolean\n  last_login_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  shopping_mall_ai_backend_admin_audit_logs shopping_mall_ai_backend_admin_audit_logs[]\n  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]\n  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  shopping_mall_ai_backend_inquiry_faq_suggestions shopping_mall_ai_backend_inquiry_faq_suggestions[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([username])\n  @@unique([email])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update profile or status fields for an admin account by their adminId. Only available to privileged admin roles and never exposes or modifies authentication secrets (such as password). Allows updates to public-facing or business fields, such as real name, email, phone, status, etc. Operations are traced in admin audit logs with before/after details. Violates business rules to allow self-privilege escalation or editing higher-permission accounts. Strict compliance checking is handled in the provider logic. Returns updated admin record for UI or management interface purposes.","summary":"Update admin public profile or status for a given adminId.","parameters":[{"name":"adminId","description":"Unique identifier for the admin account being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update fields allowed for admin non-auth fields, such as profile and status.","typeName":"IShoppingMallAiBackendAdmin.IUpdate"},"responseBody":{"description":"Admin account's updated public details after the update.","typeName":"IShoppingMallAiBackendAdmin"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_admins","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/admins/{adminId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Perform a soft delete (logical removal) of an admin account by marking its record with a deleted_at timestamp. Only privileged super-admin or compliance administrators may erase admin accounts. This operation ensures regulatory traceability by retaining the historical admin record for audit and evidence—no data is physically removed. Attempts to erase accounts with higher or equal privilege are rejected by business rules. Consistent with compliance policy, all deletions are audit-logged, and erasures of critical system admin accounts are strictly prohibited outside approved workflows.","prisma_schemas":"model shopping_mall_ai_backend_admins {\n  id String @id @db.Uuid\n  username String\n  password_hash String\n  name String\n  email String\n  phone_number String?\n  is_active Boolean\n  last_login_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  shopping_mall_ai_backend_admin_audit_logs shopping_mall_ai_backend_admin_audit_logs[]\n  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]\n  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  shopping_mall_ai_backend_inquiry_faq_suggestions shopping_mall_ai_backend_inquiry_faq_suggestions[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([username])\n  @@unique([email])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Soft delete (logically remove) an administrator account using their unique adminId. This sets the deleted_at field, making the account inaccessible for authentication or business functions while preserving full data for compliance and audit review. Only a privileged super-admin or compliance admin can perform a soft delete. Regulatory controls prevent irrecoverable loss of admin data. Attempts to remove higher-privilege or system admin accounts are rejected and audited. No data is physically erased, ensuring compliance traceability.","summary":"Soft delete an admin account by adminId, preserving historical records for audit.","parameters":[{"name":"adminId","description":"Unique identifier of the admin account to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_admins","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/admins/{adminId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, searchable, and filterable list of products within the AI-powered shopping mall backend. It operates on the shopping_mall_ai_backend_products table defined in the Prisma schema, which represents individual commerce items with attributes such as title, slug, description, type, status, and order criteria. The endpoint supports advanced filtering, full-text search (across product title and description), sorting by any business-relevant field (including price, status, and created_at), and pagination, enabling consumers or administrative users to discover, manage, and audit products efficiently. Relations to product options, categories, tags, images, and seller are included in the schema to facilitate rich result presentation and denormalized views if required. The operation is designed for high scalability and can be used by customers, sellers, or administrators with role-based filtering according to business policy.","path":"/shoppingMallAiBackend/products","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_products { id String @id @db.Uuid title String slug String description String? product_type String business_status String min_order_quantity Int @db.Integer max_order_quantity Int @db.Integer tax_code String sort_priority Int @db.Integer created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[] shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[] shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[] shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[] shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[] shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[] shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[] shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[] shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[] shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[] @@unique([slug]) @@index([product_type]) @@index([business_status]) @@index([tax_code]) @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin) @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve a paginated and filterable list of products, supporting multi-field search, advanced sorting, and customizable filters on business status, type, and other properties as required by shopping_mall_ai_backend_products. This operation is fundamental for customer-facing catalog exploration, seller product management, and administrator moderation or analytics workflows.\n\nSecurity is managed via role-based access; customers, sellers, or admins may have different default result sets. The search supports partial and full-text matching, as well as filtering on the product's core and extended attributes defined in the schema. This endpoint integrates deeply with inventory, options, and category relations for dynamic product catalog rendering.\n\nValidation enforces pagination and allowed filter formats, and handles error cases such as invalid filter parameters or excessive page size requests. Related endpoints include single-product detail fetch, product creation, and update.","summary":"Search and paginate products in the AI-powered shopping mall backend.","parameters":[],"requestBody":{"description":"Search/filter parameters for paginated product requests (fields, query, sort, pagination).","typeName":"IShoppingMallAiBackendProduct.IRequest"},"responseBody":{"description":"Paginated product results with all requested details and summary data.","typeName":"IPageIShoppingMallAiBackendProduct"},"authorizationRoles":[],"name":"index","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":null,"authorizationType":null},{"specification":"This operation retrieves detailed information about a specific product by its unique productId. It operates on the shopping_mall_ai_backend_products table defined in the Prisma schema, encompassing attributes such as title, slug, description, type, status, quantity constraints, tax codes, business status, and related options, bundles, categories, and more. The GET endpoint is designed for both end-customer product detail pages and seller/administrator product management views. It supports retrieval by UUID and includes all base and relational properties necessary for a complete product presentation, as well as audit purposes. Data returned reflects current state excluding logically deleted (soft-deleted) entries unless accessed by administrative roles where allowed.","path":"/shoppingMallAiBackend/products/{productId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_products { id String @id @db.Uuid title String slug String description String? product_type String business_status String min_order_quantity Int @db.Integer max_order_quantity Int @db.Integer tax_code String sort_priority Int @db.Integer created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[] shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[] shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[] shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[] shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[] shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[] shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[] shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[] shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[] shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[] @@unique([slug]) @@index([product_type]) @@index([business_status]) @@index([tax_code]) @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin) @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin) }","description":"Retrieve detailed information for a single product identified by the given productId. Provides all business and commerce attributes defined in shopping_mall_ai_backend_products, plus related options, bundles, categories, images, and linked analytics as required for rich product detail and management.\n\nThis endpoint supports customer product pages (for purchase or information), seller product dashboards, and administrator audit or moderation. Data is secured by role; customers may see only published/active products, while admins and sellers may see hidden, paused, or draft items depending on their access.\n\nParameter validation ensures the productId is a valid UUID. If the product is logically deleted (soft-deleted), results depend on access rights and business rules.","summary":"Retrieve a single product's detailed information by ID.","parameters":[{"name":"productId","description":"Unique identifier of the target product to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed single product information including all properties and relations.","typeName":"IShoppingMallAiBackendProduct"},"authorizationRoles":[],"name":"at","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":null,"authorizationType":null},{"specification":"Creates a new product in the system, registering all core business and commerce attributes for later management, listing, and analytics. The product is added to the shopping_mall_ai_backend_products table, and initial values for title, slug, type, status, and quantity limits must be provided. Supports admin and seller access for product onboarding.","path":"/shoppingMallAiBackend/seller/products","method":"post","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"This endpoint allows registered sellers or administrators to create a new product in the commerce platform. All required fields, including product title, slug, product type, status, tax code, and order quantity limits, must be provided in the request body. Optional description can supply additional business content.\n\nUpon creation, a new product ID is generated, timestamps are set, and the product becomes available for further update or publishing according to business workflow.\n\nStrict validation is performed to ensure slug uniqueness, value constraints, and legal compliance (if required). This is the core onboarding step for new catalog items and supports multi-channel retail, analytics, and inventory flows.","summary":"Register a new product with all required business and commerce attributes.","parameters":[],"requestBody":{"description":"Business and commerce details for product creation.","typeName":"IShoppingMallAiBackendProduct.ICreate"},"responseBody":{"description":"Full detail record of the newly created product.","typeName":"IShoppingMallAiBackendProduct"},"name":"create","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new product in the system, registering all core business and commerce attributes for later management, listing, and analytics. The product is added to the shopping_mall_ai_backend_products table, and initial values for title, slug, type, status, and quantity limits must be provided. Supports admin and seller access for product onboarding.","path":"/shoppingMallAiBackend/admin/products","method":"post","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"This endpoint allows registered sellers or administrators to create a new product in the commerce platform. All required fields, including product title, slug, product type, status, tax code, and order quantity limits, must be provided in the request body. Optional description can supply additional business content.\n\nUpon creation, a new product ID is generated, timestamps are set, and the product becomes available for further update or publishing according to business workflow.\n\nStrict validation is performed to ensure slug uniqueness, value constraints, and legal compliance (if required). This is the core onboarding step for new catalog items and supports multi-channel retail, analytics, and inventory flows.","summary":"Register a new product with all required business and commerce attributes.","parameters":[],"requestBody":{"description":"Business and commerce details for product creation.","typeName":"IShoppingMallAiBackendProduct.ICreate"},"responseBody":{"description":"Full detail record of the newly created product.","typeName":"IShoppingMallAiBackendProduct"},"name":"create","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates the detailed business record of a specific product by productId in the shopping_mall_ai_backend_products table. Accepts all mutable commercial, status, or business attributes. Triggers update timestamp and historical snapshot for compliance and rollback.","path":"/shoppingMallAiBackend/seller/products/{productId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"Enables authorized admins or sellers to update the core business, status, or commerce-related attributes of a single product. This action triggers an update timestamp, compliance snapshot, and may require validation of value formats (min/max, uniqueness, status, etc.).\n\nOnly mutable fields are updatable. System handles timestamping and snapshotting for audit and rollback, per business requirements. Errors are returned if product does not exist, is locked, or request is malformed/unauthorized.\n\nUse cases include catalog maintenance, correcting product data, status transitions (e.g., draft → active), or responding to audit/legal requests. Field-level authority or mutability may vary based on user role or business policy.","summary":"Update all mutable fields for a specific product, triggering a business/audit snapshot.","parameters":[{"name":"productId","description":"Unique identifier of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated commerce and business details for the product.","typeName":"IShoppingMallAiBackendProduct.IUpdate"},"responseBody":{"description":"Full detail of the updated product after modification and snapshot.","typeName":"IShoppingMallAiBackendProduct"},"name":"update","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Updates the detailed business record of a specific product by productId in the shopping_mall_ai_backend_products table. Accepts all mutable commercial, status, or business attributes. Triggers update timestamp and historical snapshot for compliance and rollback.","path":"/shoppingMallAiBackend/admin/products/{productId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"Enables authorized admins or sellers to update the core business, status, or commerce-related attributes of a single product. This action triggers an update timestamp, compliance snapshot, and may require validation of value formats (min/max, uniqueness, status, etc.).\n\nOnly mutable fields are updatable. System handles timestamping and snapshotting for audit and rollback, per business requirements. Errors are returned if product does not exist, is locked, or request is malformed/unauthorized.\n\nUse cases include catalog maintenance, correcting product data, status transitions (e.g., draft → active), or responding to audit/legal requests. Field-level authority or mutability may vary based on user role or business policy.","summary":"Update all mutable fields for a specific product, triggering a business/audit snapshot.","parameters":[{"name":"productId","description":"Unique identifier of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated commerce and business details for the product.","typeName":"IShoppingMallAiBackendProduct.IUpdate"},"responseBody":{"description":"Full detail of the updated product after modification and snapshot.","typeName":"IShoppingMallAiBackendProduct"},"name":"update","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of admin audit logs associated with a specific administrator. The endpoint operates on the shopping_mall_ai_backend_admin_audit_logs table, providing advanced searching, filtering, and sorting capabilities for audit trails of privileged operations performed by the admin. This includes the operation type, target, description, and timestamps. The response supports business and compliance review cases.","path":"/shoppingMallAiBackend/admin/admins/{adminId}/auditLogs","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_admin_audit_logs {\n  id String @id @db.Uuid\n  admin_id String @db.Uuid\n  operation String\n  target_id String @db.Uuid\n  target_type String\n  description String?\n  created_at DateTime @db.Timestamptz\n  admin shopping_mall_ai_backend_admins @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n  @@index([admin_id])\n  @@index([created_at])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This API allows administrators to retrieve a filtered and paginated view of their own audit trails documenting privileged actions undertaken on the platform. The endpoint supports complex queries, including searching by operation type, date range, and affected entity. Results can be ordered by most recent, oldest, or specific business attributes, with access restricted to admin users for compliance and traceability.\n\nThe operation returns a paginated list of audit entries, each including operation type, description, the affected entity (target_id, target_type), optional rationale, and timestamp. Only privileged admin users may access or query this data, and sensitive entries may be further filtered based on business logic or regulatory policy.\n\nThis endpoint is useful for personal activity review, compliance reporting, anomaly detection, or post-hoc audit/self-assessment, and is a key feature for enforcing platform integrity and regulatory accountability.","summary":"Search and retrieve a paginated list of admin audit logs for a specific administrator.","parameters":[{"name":"adminId","description":"Unique identifier of the administrator whose audit logs are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for admin audit logs.","typeName":"IShoppingMallAiBackendAdminAuditLog.IRequest"},"responseBody":{"description":"Paginated and filtered list of admin audit log entries for the specified administrator.","typeName":"IPageIShoppingMallAiBackendAdminAuditLog.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_admin_audit_logs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the details of a specific audit log entry for a given administrator. It operates on the shopping_mall_ai_backend_admin_audit_logs Prisma model, allowing privileged admin users to retrieve the exact operation, rationale, and context for a single audit event, including all field values and references for compliance, forensic, or evidence purposes.","path":"/shoppingMallAiBackend/admin/admins/{adminId}/auditLogs/{auditLogId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_admin_audit_logs {\n  id String @id @db.Uuid\n  admin_id String @db.Uuid\n  operation String\n  target_id String @db.Uuid\n  target_type String\n  description String?\n  created_at DateTime @db.Timestamptz\n  admin shopping_mall_ai_backend_admins @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n  @@index([admin_id])\n  @@index([created_at])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This API allows privileged administrator users to fetch detailed information for a single admin audit log entry, identified by auditLogId, for precise compliance or forensic trace. This operation is essential for reviewing the context of specific high-privilege operations, tracking who performed sensitive actions, and supporting regulatory or business evidence requirements.\n\nEach returned audit log details the operation performed, the entity affected, timestamps, rationale (description), and contextual metadata if present. Only authorized admin users may access these details, ensuring platform governance, accountability, and evidence preservation for all privileged administrative actions.\n\nThis endpoint is typically used by admins reviewing system incidents, compliance cases, security investigations, or upon legal/business request, and is a core component for trust and transparency in operations.","summary":"Retrieve details of a specific admin audit log entry for a given administrator.","parameters":[{"name":"adminId","description":"Unique identifier of the administrator whose audit log is to be retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"auditLogId","description":"Unique identifier of the audit log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the specified admin audit log entry.","typeName":"IShoppingMallAiBackendAdminAuditLog"},"name":"at","model_name":"shopping_mall_ai_backend_admin_audit_logs","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filtered list of all role escalation events (such as promotions to seller or admin) within the system. Operates on shopping_mall_ai_backend_role_escalations, supporting complex filtering and search by role transition, escalation type, date, user, and admin. Essential for governance, compliance reviews, and lifecycle auditing.","path":"/shoppingMallAiBackend/admin/roleEscalations","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_role_escalations {\n  id String @id @db.Uuid\n  user_id String @db.Uuid\n  admin_id String? @db.Uuid\n  from_role String\n  to_role String\n  escalation_type String\n  reason String?\n  created_at DateTime @db.Timestamptz\n  user shopping_mall_ai_backend_customers @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  admin shopping_mall_ai_backend_admins? @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n  @@index([user_id])\n  @@index([admin_id])\n}","authorizationRoles":["admin"],"description":"This endpoint allows administrators to retrieve a paginated and filterable list of all role escalation snapshots/events in the system. Entries detail transitions such as customer-to-seller, temporary promotions, demotions, and approval/rejection rationales.\n\nAdvanced search and filtering by previous role, resulting role, escalation type, timestamp, performing admin, or affected user is supported. This is vital for compliance, lifecycle traceability, and platform governance, ensuring transparency and accountability for all business-critical role changes.\n\nAccess is restricted to admin users, with strict audit trails for evidence and compliance reviews. The results can be used for reporting management, trend analysis, and incident investigation involving privileged account access or modification.","summary":"Search and retrieve all role escalation snapshots/events in the system.","parameters":[],"requestBody":{"description":"Filter, search and pagination criteria for listing role escalation events.","typeName":"IShoppingMallAiBackendRoleEscalation.IRequest"},"responseBody":{"description":"Paginated and filtered list of role escalation events matching criteria.","typeName":"IPageIShoppingMallAiBackendRoleEscalation.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_role_escalations","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves full details of a specific role escalation event, including context, performing admin, rationale, and timestamps, from the shopping_mall_ai_backend_role_escalations model. Used for evidence, compliance audits, and incident investigation on lifecycle role changes.","path":"/shoppingMallAiBackend/admin/roleEscalations/{roleEscalationId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_role_escalations {\n  id String @id @db.Uuid\n  user_id String @db.Uuid\n  admin_id String? @db.Uuid\n  from_role String\n  to_role String\n  escalation_type String\n  reason String?\n  created_at DateTime @db.Timestamptz\n  user shopping_mall_ai_backend_customers @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  admin shopping_mall_ai_backend_admins? @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n  @@index([user_id])\n  @@index([admin_id])\n}","authorizationRoles":["admin"],"description":"This API operation enables administrators to fetch comprehensive details for a given role escalation event identified by roleEscalationId. Includes context of role change, admin responsible, event type (promotion, demotion, etc.), and explicit rationale.\n\nEssential for regulatory audits, compliance investigations, and management of business-critical privilege changes. It provides historical transparency, evidence for dispute resolution, and traces original intent/policy for lifecycle management.\n\nResults are strictly limited to admin users and may trigger audit log events or evidence snapshot reviews in response.","summary":"Retrieve details of a specific role escalation event.","parameters":[{"name":"roleEscalationId","description":"Unique identifier of the role escalation event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail on the specified role escalation event, including admin, rationale, and timestamps.","typeName":"IShoppingMallAiBackendRoleEscalation"},"name":"at","model_name":"shopping_mall_ai_backend_role_escalations","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of all products registered in the system. Operates on the shopping_mall_ai_backend_products model, supporting advanced searching, filtering, and ordering. Includes business attributes such as title, slug, description, product type, status, and associated categories/tags. Supports list retrieval for product management UI, search indexes, and analytics.","path":"/shoppingMallAiBackend/admin/products","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"This API enables authenticated sellers and administrators to retrieve a comprehensive, paginated, and filterable list of products in the marketplace. Advanced search criteria include product title, slug, product_type, business_status (draft, active, paused, etc.), category membership, and full-text search on title and description.\n\nResults may be sorted by last updated, creation time, popularity, or business priority, and can be used for both administrative management and seller-centric product portfolios. Response format may include only summary product attributes for efficiency. Sensitive/unpublished records may be scoped for admin users only as per business policy.\n\nThis endpoint is essential for catalog management, bulk operations, analytics, and UI/UX experiences where list retrieval is needed.","summary":"Search and retrieve a paginated list of all products with advanced filtering and search.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for products.","typeName":"IShoppingMallAiBackendProduct.IRequest"},"responseBody":{"description":"Paginated and filtered product list meeting search criteria.","typeName":"IPageIShoppingMallAiBackendProduct.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of all products registered in the system. Operates on the shopping_mall_ai_backend_products model, supporting advanced searching, filtering, and ordering. Includes business attributes such as title, slug, description, product type, status, and associated categories/tags. Supports list retrieval for product management UI, search indexes, and analytics.","path":"/shoppingMallAiBackend/seller/products","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"This API enables authenticated sellers and administrators to retrieve a comprehensive, paginated, and filterable list of products in the marketplace. Advanced search criteria include product title, slug, product_type, business_status (draft, active, paused, etc.), category membership, and full-text search on title and description.\n\nResults may be sorted by last updated, creation time, popularity, or business priority, and can be used for both administrative management and seller-centric product portfolios. Response format may include only summary product attributes for efficiency. Sensitive/unpublished records may be scoped for admin users only as per business policy.\n\nThis endpoint is essential for catalog management, bulk operations, analytics, and UI/UX experiences where list retrieval is needed.","summary":"Search and retrieve a paginated list of all products with advanced filtering and search.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for products.","typeName":"IShoppingMallAiBackendProduct.IRequest"},"responseBody":{"description":"Paginated and filtered product list meeting search criteria.","typeName":"IPageIShoppingMallAiBackendProduct.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves detailed information of a single product by productId from the shopping_mall_ai_backend_products table. Response includes all business, commerce, and reference attributes for display, management, or analytics.","path":"/shoppingMallAiBackend/admin/products/{productId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"Provides complete business, inventory, and commerce field values for a specific product identified by productId. All core attributes (title, slug, description, type, status, tax, quantity limits, timestamps) are included for use in management UI, analytics, or cross-entity reference.\n\nAccess is available to administrators and sellers (with filtering if not owner or privilege scoped). This endpoint is critical for product detail management, update logic, and displaying individual product cards in B2B/B2C UI flows.\n\nErrors are returned if the product does not exist, or if access is not permitted by business role/policy. Field-level visibility may vary by consumer role.","summary":"Retrieve detailed business and commerce information for a single product by ID.","parameters":[{"name":"productId","description":"Unique identifier of the product to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete detail record for specified product, suitable for management or display.","typeName":"IShoppingMallAiBackendProduct"},"name":"at","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed information of a single product by productId from the shopping_mall_ai_backend_products table. Response includes all business, commerce, and reference attributes for display, management, or analytics.","path":"/shoppingMallAiBackend/seller/products/{productId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin","seller"],"description":"Provides complete business, inventory, and commerce field values for a specific product identified by productId. All core attributes (title, slug, description, type, status, tax, quantity limits, timestamps) are included for use in management UI, analytics, or cross-entity reference.\n\nAccess is available to administrators and sellers (with filtering if not owner or privilege scoped). This endpoint is critical for product detail management, update logic, and displaying individual product cards in B2B/B2C UI flows.\n\nErrors are returned if the product does not exist, or if access is not permitted by business role/policy. Field-level visibility may vary by consumer role.","summary":"Retrieve detailed business and commerce information for a single product by ID.","parameters":[{"name":"productId","description":"Unique identifier of the product to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete detail record for specified product, suitable for management or display.","typeName":"IShoppingMallAiBackendProduct"},"name":"at","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation deletes a product from the shopping mall backend. The operation targets the shopping_mall_ai_backend_products table in the Prisma schema. The deletion logic is implemented as a soft delete by updating the deleted_at field to the current timestamp, preserving the product history for audit, rollback, and evidence retention, in accordance with compliance and business requirements. All foreign key relationships to product options, bundles, files, and category mappings remain referentially intact but the product will be invisible in searches, listings, and all commerce workflows. Only users with appropriate role authorization are permitted to delete products. Hard deletion is prohibited to comply with evidence preservation and rollback logic throughout the commerce lifecycle. Attempts to delete a non-existent or already-deleted product will result in error responses indicating the product's status.","path":"/shoppingMallAiBackend/seller/products/{productId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[]\n  shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[]\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[]\n  shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[]\n  shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[]\n  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"This operation allows authorized users (typically sellers or admins) to logically delete a product from the shopping mall backend by setting the deleted_at field rather than removing the row from the database, in conformance with evidence requirements described in the business rules. The soft-deleted product will be omitted from all commerce-facing APIs, listings, and searches but remains queryable through audit and admin evidence interfaces.\n\nSecurity and auditing are enforced; only permitted roles may perform this action, and all attempts are recorded with timestamp and actor for traceability. All referential entities (options, bundles, files, categories, etc.) are left intact, but are no longer accessible from normal commerce flows. If the product is already deleted or does not exist, a clear error is returned.\n\nBusiness logic ensures that no accidental data loss occurs, supporting rollback in the event of dispute or compliance review. This operation must be coordinated with snapshot/evidence systems for auditability. Related product management APIs should be used together for a complete product lifecycle.","summary":"Soft delete a product by setting its deleted_at timestamp, preserving for audit, rollback, and compliance.","parameters":[{"name":"productId","description":"The unique identifier of the target product to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller"],"name":"erase","model_name":"shopping_mall_ai_backend_products","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of all options for a given product. It targets the shopping_mall_ai_backend_product_options table in the Prisma schema. The patch method is used because complex search/filtering or sorting may be required. Supports option name filtering, required/optional toggle filtering, and sorting by creation date or display order. The intended use cases are backoffice UI option management, seller product editing, and product detail administration. The operation does not expose deleted/soft-deleted options unless specifically requested by authorized admin. Pagination is enforced for scalable listing.","path":"/shoppingMallAiBackend/seller/products/{productId}/options","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  ...\n  shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[]\n}\nmodel shopping_mall_ai_backend_product_options {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  option_name String\n  required Boolean\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  ...\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_options_shopping_mall_dd9426d4\")\n  ...\n  @@index([shopping_mall_ai_backend_products_id, option_name], map: \"shopping_mall_ai_backend_product_options_shopping_mall_28facb02\")\n  @@index([option_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Retrieve a paginated and searchable list of all option groups for the specified product. Sellers and admins can use this API to view, filter, and sort product options based on business criteria, such as option_name, required/optional status, and ordering preferences. Options that have been soft deleted (deleted_at set) will not be included unless special admin filtering is applied for audit or rollback purposes.\n\nThis API enforces pagination and may support advanced filters for large-scale catalogs and variants. Authorization is required; sellers of the product or admins may access, and all queries are logged for compliance. The operation is designed for use with UI listing, bulk editing, or product detail interfaces.","summary":"Paginated search and filter of option groups for a product.","parameters":[{"name":"productId","description":"The unique identifier of the parent product whose options to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter parameters including pagination and optional filters for option_name, required flag, and sorting options.","typeName":"IShoppingMallAiBackendProductOptions.IRequest"},"responseBody":{"description":"Paginated list of product options for the specified product, supporting filtering and sorting.","typeName":"IPageIShoppingMallAiBackendProductOptions"},"authorizationRoles":["seller"],"name":"index","model_name":"shopping_mall_ai_backend_product_options","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation retrieves the details of a specific option group for a specified product and option. It reads from the shopping_mall_ai_backend_product_options table. The productId/path provides the parent context, and optionId selects the option. It is used for product detail management, viewing, editing, or audit. Only non-deleted options are accessible to sellers, while audit/admin can access all.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_product_options {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  option_name String\n  required Boolean\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Retrieve the detailed information of a specific product option group for the target product. Appropriate for use by sellers wishing to edit or audit their product's options or by admins for compliance review. Only active (not soft-deleted) options are accessible to sellers; all retrievals are logged for compliance and evidence purposes.\n\nIf the option is not found or is already soft-deleted, a not found or access denied error is returned. Typically paired with update and delete operations in the product management UI.","summary":"Get detailed information about a specific product option group.","parameters":[{"name":"productId","description":"Unique identifier of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"Unique identifier of the product option to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested product option group.","typeName":"IShoppingMallAiBackendProductOptions"},"authorizationRoles":["seller"],"name":"at","model_name":"shopping_mall_ai_backend_product_options","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Create a new product option group for a specific product. This operation inserts a new record into the shopping_mall_ai_backend_product_options table and associates it with the parent product. Supports required/optional status, sorting order, and option name. Used by sellers or product administrators during new product creation or catalog enhancement. Operation returns the created option. All fields are recorded for audit and every creation is snapshotted for evidence, dispute, or rollback. Optionally, business logic may enforce uniqueness or restrict duplicate option names within a product context.","path":"/shoppingMallAiBackend/seller/products/{productId}/options","method":"post","prisma_schemas":"model shopping_mall_ai_backend_product_options {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  option_name String\n  required Boolean\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Create a new option group for the specified product. This operation allows authorized sellers to define new configurable options for products, supporting customization and flexibility for buyers. Each creation is recorded for evidence and can participate in audit/rollback through associated snapshot logic.\n\nOn success, returns the created option group with all assigned attributes. Duplicate option names may be subject to business constraints (e.g., only one 'color' per product). Error states include invalid input or insufficient permissions. Combined with list, get, update, and delete for product option lifecycle management.","summary":"Create a new option group for a specific product.","parameters":[{"name":"productId","description":"Unique identifier of the parent product for the new option group.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Specification of the new product option group, including name, required flag, and sort order.","typeName":"IShoppingMallAiBackendProductOptions.ICreate"},"responseBody":{"description":"The created product option group with all properties.","typeName":"IShoppingMallAiBackendProductOptions"},"authorizationRoles":["seller"],"name":"create","model_name":"shopping_mall_ai_backend_product_options","soft_delete_column":null,"authorizationRole":"seller","authorizationType":null},{"specification":"Updates an existing product option group belonging to a specified product and option. Operates on shopping_mall_ai_backend_product_options and supports updates to option_name, required/optional status, sort order, and other mutable business fields. Each update is snapshotted for evidence, compliance, and rollback. Only sellers with permission or admins may update product options. Attempts to edit non-existent or already-deleted options will return an error.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_product_options {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  option_name String\n  required Boolean\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Update the details of an existing option group for the specified product. Used to rename, reorder, or change required/optional status or details for the option group. All updates are snapshotted and logged, with rollback and evidence support for business and legal requirements. Only sellers with access to the product and admins may update product options. All failed update attempts (due to missing record, deletion, or permission error) result in detailed error reporting.","summary":"Update an existing option group for a product.","parameters":[{"name":"productId","description":"Unique identifier of the parent product the option belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"Unique identifier of the option group to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Specification of the updated product option group fields.","typeName":"IShoppingMallAiBackendProductOptions.IUpdate"},"responseBody":{"description":"The updated product option group.","typeName":"IShoppingMallAiBackendProductOptions"},"authorizationRoles":["seller"],"name":"update","model_name":"shopping_mall_ai_backend_product_options","soft_delete_column":null,"authorizationRole":"seller","authorizationType":null},{"specification":"Soft-deletes a product option group, setting its deleted_at field without physical record removal, preserving for audit and rollback. The operation is for sellers or admins managing product configuration. Attempting to delete an already-deleted or non-existent record returns a clear error.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_product_options {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  option_name String\n  required Boolean\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Soft delete a product option group for the specified product. This sets the deleted_at timestamp, hiding the option from all business and customer-facing APIs while retaining auditability. Only the option's owner (seller) or admin can perform this action. All deletions are evidence-logged and support business rollback policies. Attempts to delete a non-existent or already-deleted option return an error. Designed for use with listing, detail, create, and update APIs in product administration interfaces. Favored over hard deletion due to evidence and compliance requirements.","summary":"Soft delete a product option group, preserving audit history.","parameters":[{"name":"productId","description":"Unique identifier of the parent product context for the option group.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"Unique identifier of the option group to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller"],"name":"erase","model_name":"shopping_mall_ai_backend_product_options","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieve a paginated, filterable list of option units (concrete values) for a specific product and option group. Operates on shopping_mall_ai_backend_product_option_units with filtering by unit_value or code, and supports pagination and sort order. Used by sellers/admins to view possible option values or for detailed inventory/variant configuration. Excludes soft-deleted units unless explicitly requested by admin. Designed for use in backoffice and product management UIs.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}/units","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Get a paginated and searchable list of all units/values for a specific product option group. This is useful for detailed product variant configuration and validation of available option choices for buyers. The operation supports advanced filtering by unit value or code, sorting, and pagination, enhancing admin and seller productivity for product setup and management.\n\nNon-owner or unauthorized sellers will receive an error, and records that are soft deleted are not included unless for audit/recovery by admin. All access is evidence-logged.","summary":"Search option units (values) for a product option group, with pagination and filtering.","parameters":[{"name":"productId","description":"Unique identifier of the product this option group belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"Unique identifier of the option group whose units to list.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Optional filter/search criteria and pagination for option units.","typeName":"IShoppingMallAiBackendProductOptionUnits.IRequest"},"responseBody":{"description":"Paginated list of units for the specified product option group.","typeName":"IPageIShoppingMallAiBackendProductOptionUnits"},"authorizationRoles":["seller"],"name":"index","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieve a specific option unit (concrete value/choice) for a given product and option group. Reads from shopping_mall_ai_backend_product_option_units. Used by sellers or admins to view, inspect, or manage an option's variant value at detail level. This enables auditing and variant editing in product management scenarios.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}/units/{unitId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}","description":"Get full detail for a specific option unit (concrete value in product option group) for the indicated product, option group, and unit. Access controls limit retrieval to the owner seller or admins. Details include label, code, sort order, and creation/update datetimes. Option units that are soft-deleted are not retrievable except via admin audit paths. Failed lookups or unauthorized access return errors.\n\nThis typically supports editing, audit, or variant management in product configuration UI.","summary":"Get detail of a specific option unit for a product's option group.","parameters":[{"name":"productId","description":"Unique identifier of the parent product.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"Unique identifier of the parent option group.","schema":{"type":"string","format":"uuid"}},{"name":"unitId","description":"Unique identifier of the option unit to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record for the requested option unit (label, code, order, etc.).","typeName":"IShoppingMallAiBackendProductOptionUnits"},"authorizationRoles":["seller"],"name":"at","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new unit (variant value) within a specific product option (such as color or size) for a given product. This operation inserts a new selectable unit into the shopping_mall_ai_backend_product_option_units table, associating it with the corresponding option within the referenced product. The unit is defined by its display value, code, and order, and may influence inventory tracking and user purchase choices. On creation, a full audit trail is recorded according to the underlying data model. Only authorized sellers or admins may invoke this API to maintain catalog integrity.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Create a new product option unit (such as a color or size variant) within a specific product's option group. This operation allows sellers or administrators to expand the set of selectable variations customers can choose for a product, such as introducing a new color or size to an existing product. \n\nBusiness validation ensures this unit value and code do not conflict with other units in the same option group, preserving data integrity and accurate inventory mapping. When a new unit is created, the system also records the event for compliance and evidence purposes.\n\nAccess is limited to roles authorized to manage product catalogs, specifically sellers managing their own products and platform administrators overseeing catalog structure. Related read/search/update APIs may be required for complete option management workflows.","summary":"Create a new product option unit (variant value) for a specific option group within a product.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}/units","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group to which the new unit will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the new product option unit (such as color, size, code, and sort order).","typeName":"IShoppingMallAiBackendProductOptionUnit.ICreate"},"responseBody":{"description":"Detailed information of the newly created product option unit.","typeName":"IShoppingMallAiBackendProductOptionUnit"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new unit (variant value) within a specific product option (such as color or size) for a given product. This operation inserts a new selectable unit into the shopping_mall_ai_backend_product_option_units table, associating it with the corresponding option within the referenced product. The unit is defined by its display value, code, and order, and may influence inventory tracking and user purchase choices. On creation, a full audit trail is recorded according to the underlying data model. Only authorized sellers or admins may invoke this API to maintain catalog integrity.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Create a new product option unit (such as a color or size variant) within a specific product's option group. This operation allows sellers or administrators to expand the set of selectable variations customers can choose for a product, such as introducing a new color or size to an existing product. \n\nBusiness validation ensures this unit value and code do not conflict with other units in the same option group, preserving data integrity and accurate inventory mapping. When a new unit is created, the system also records the event for compliance and evidence purposes.\n\nAccess is limited to roles authorized to manage product catalogs, specifically sellers managing their own products and platform administrators overseeing catalog structure. Related read/search/update APIs may be required for complete option management workflows.","summary":"Create a new product option unit (variant value) for a specific option group within a product.","path":"/shoppingMallAiBackend/admin/products/{productId}/options/{optionId}/units","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group to which the new unit will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the new product option unit (such as color, size, code, and sort order).","typeName":"IShoppingMallAiBackendProductOptionUnit.ICreate"},"responseBody":{"description":"Detailed information of the newly created product option unit.","typeName":"IShoppingMallAiBackendProductOptionUnit"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates the details of a specific product option unit (such as its value, code, or sort order) within a given product and option group. This operation modifies the record in the shopping_mall_ai_backend_product_option_units table, allowing for corrections or reorganization of available units. The modification is recorded with timestamp updates and supports catalog maintenance processes for sellers and admins.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Update an existing product option unit (such as changing the display value or code) within a specific product's option group. Sellers and admins use this API to correct, rename, or adjust available variant options, such as changing the name of a color or the order in which options appear to customers.\n\nAll updates are validated to avoid duplicate unit codes within the option group, and event modification is recorded for compliance, audit, and rollback traceability. \n\nThis API is accessible to authorized sellers for their own products and to administrators overseeing global or channel catalog structures. Business logic may restrict updates if the unit is in use in active orders or inventory references.","summary":"Update an existing product option unit's details (such as value or display order) for a product option group.","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}/units/{unitId}","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group containing the unit.","schema":{"type":"string","format":"uuid"}},{"name":"unitId","description":"ID of the product option unit to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the product option unit (value, code, sort order, etc).","typeName":"IShoppingMallAiBackendProductOptionUnit.IUpdate"},"responseBody":{"description":"Detailed information of the updated product option unit.","typeName":"IShoppingMallAiBackendProductOptionUnit"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Updates the details of a specific product option unit (such as its value, code, or sort order) within a given product and option group. This operation modifies the record in the shopping_mall_ai_backend_product_option_units table, allowing for corrections or reorganization of available units. The modification is recorded with timestamp updates and supports catalog maintenance processes for sellers and admins.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Update an existing product option unit (such as changing the display value or code) within a specific product's option group. Sellers and admins use this API to correct, rename, or adjust available variant options, such as changing the name of a color or the order in which options appear to customers.\n\nAll updates are validated to avoid duplicate unit codes within the option group, and event modification is recorded for compliance, audit, and rollback traceability. \n\nThis API is accessible to authorized sellers for their own products and to administrators overseeing global or channel catalog structures. Business logic may restrict updates if the unit is in use in active orders or inventory references.","summary":"Update an existing product option unit's details (such as value or display order) for a product option group.","path":"/shoppingMallAiBackend/admin/products/{productId}/options/{optionId}/units/{unitId}","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group containing the unit.","schema":{"type":"string","format":"uuid"}},{"name":"unitId","description":"ID of the product option unit to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the product option unit (value, code, sort order, etc).","typeName":"IShoppingMallAiBackendProductOptionUnit.IUpdate"},"responseBody":{"description":"Detailed information of the updated product option unit.","typeName":"IShoppingMallAiBackendProductOptionUnit"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently removes a product option unit (such as a variant value) from a specific product option group. This operation marks the record as deleted in the shopping_mall_ai_backend_product_option_units table by setting its deleted_at column. The deletion is validated to ensure the option unit is not referenced in active orders or remaining inventory. Only authorized sellers and admins may invoke this operation, and all removals are audit logged for compliance and traceability.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Delete a specific product option unit (variant value) from a product option group. This operation is used to remove obsolete or incorrect options, such as discontinuing a color or size variant. It performs a logical deletion by setting the deleted_at field, so that the record remains for audit, but is not available in user-facing selections.\n\nDeletion checks ensure the unit is not linked to active inventory, orders, or ongoing promotions. Every deletion event is logged for traceability and compliance requirements. Only sellers managing the product or administrators may invoke this endpoint.","summary":"Delete a specific product option unit (variant value) from a product option group (soft delete).","path":"/shoppingMallAiBackend/seller/products/{productId}/options/{optionId}/units/{unitId}","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group containing the unit.","schema":{"type":"string","format":"uuid"}},{"name":"unitId","description":"ID of the product option unit to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Permanently removes a product option unit (such as a variant value) from a specific product option group. This operation marks the record as deleted in the shopping_mall_ai_backend_product_option_units table by setting its deleted_at column. The deletion is validated to ensure the option unit is not referenced in active orders or remaining inventory. Only authorized sellers and admins may invoke this operation, and all removals are audit logged for compliance and traceability.","prisma_schemas":"model shopping_mall_ai_backend_product_option_units {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_product_options_id String @db.Uuid\n  unit_value String\n  unit_code String\n  sort_order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_option_units_shopping_58c57132\")\n  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: \"shopping_mall_ai_backend_product_option_units_shopping_cca67ba1\")\n  @@index([unit_value(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Delete a specific product option unit (variant value) from a product option group. This operation is used to remove obsolete or incorrect options, such as discontinuing a color or size variant. It performs a logical deletion by setting the deleted_at field, so that the record remains for audit, but is not available in user-facing selections.\n\nDeletion checks ensure the unit is not linked to active inventory, orders, or ongoing promotions. Every deletion event is logged for traceability and compliance requirements. Only sellers managing the product or administrators may invoke this endpoint.","summary":"Delete a specific product option unit (variant value) from a product option group (soft delete).","path":"/shoppingMallAiBackend/admin/products/{productId}/options/{optionId}/units/{unitId}","parameters":[{"name":"productId","description":"ID of the parent product for which the option and unit are being managed.","schema":{"type":"string","format":"uuid"}},{"name":"optionId","description":"ID of the product option group containing the unit.","schema":{"type":"string","format":"uuid"}},{"name":"unitId","description":"ID of the product option unit to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_product_option_units","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of product bundles (SKU variants grouping specific option units) for a given product. This operation searches the shopping_mall_ai_backend_product_bundles table for bundles associated with the requested product, supporting search and pagination by bundle attributes such as name, SKU, price, activation status, and sort order. Authorization logic limits result visibility to the product's seller or platform admins.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Retrieve a paginated, searchable list of bundles for a specific product. Each bundle represents a unique variant grouping (such as [Red, Large]) with its own SKU code and pricing. Sellers use this API to review available combinations, check activation status, and manage inventory per bundle.\n\nQuery may support filters such as bundle name, SKU, price, or activation status, and supports paging for large catalogs. The response contains summary information to support further management actions, such as updating or deleting bundles.\n\nAccessible by authorized sellers for their own products or platform administrators overseeing catalog structure.","summary":"List and search all bundles/SKUs for a specific product.","path":"/shoppingMallAiBackend/seller/products/{productId}/bundles","parameters":[{"name":"productId","description":"ID of the parent product for which bundles (variants) should be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for product bundles of a specific product.","typeName":"IShoppingMallAiBackendProductBundle.IRequest"},"responseBody":{"description":"Paginated list of simplified bundle information for product management workflows.","typeName":"IPageIShoppingMallAiBackendProductBundle.ISummary"},"name":"index","method":"patch","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of product bundles (SKU variants grouping specific option units) for a given product. This operation searches the shopping_mall_ai_backend_product_bundles table for bundles associated with the requested product, supporting search and pagination by bundle attributes such as name, SKU, price, activation status, and sort order. Authorization logic limits result visibility to the product's seller or platform admins.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Retrieve a paginated, searchable list of bundles for a specific product. Each bundle represents a unique variant grouping (such as [Red, Large]) with its own SKU code and pricing. Sellers use this API to review available combinations, check activation status, and manage inventory per bundle.\n\nQuery may support filters such as bundle name, SKU, price, or activation status, and supports paging for large catalogs. The response contains summary information to support further management actions, such as updating or deleting bundles.\n\nAccessible by authorized sellers for their own products or platform administrators overseeing catalog structure.","summary":"List and search all bundles/SKUs for a specific product.","path":"/shoppingMallAiBackend/admin/products/{productId}/bundles","parameters":[{"name":"productId","description":"ID of the parent product for which bundles (variants) should be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for product bundles of a specific product.","typeName":"IShoppingMallAiBackendProductBundle.IRequest"},"responseBody":{"description":"Paginated list of simplified bundle information for product management workflows.","typeName":"IPageIShoppingMallAiBackendProductBundle.ISummary"},"name":"index","method":"patch","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed information for a specific product bundle (SKU variant) by its unique identifier for the given product. This operation fetches all business attributes associated with the bundle from the shopping_mall_ai_backend_product_bundles table, including pricing, option groupings, SKU code, status, and inventory policy. The operation enables management and review of variant-specific details for catalog maintenance and sales tracking.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Retrieve detailed information about a specific product bundle (SKU variant) within a product's catalog. Bundles represent a set of option unit selections (such as [Red, Large]) and carry their own business attributes like SKU code, price, activation status, and inventory policies.\n\nSellers and admins use this endpoint to inspect bundle configuration for management purposes such as updating, enabling/disabling, or reviewing inventory. Response delivers all business fields as defined in the Prisma schema for shopping_mall_ai_backend_product_bundles.","summary":"Get detailed information for a specific product bundle (SKU/variant) of a product.","path":"/shoppingMallAiBackend/seller/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is managed.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete business details for the referenced product bundle (SKU/variant).","typeName":"IShoppingMallAiBackendProductBundle"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves detailed information for a specific product bundle (SKU variant) by its unique identifier for the given product. This operation fetches all business attributes associated with the bundle from the shopping_mall_ai_backend_product_bundles table, including pricing, option groupings, SKU code, status, and inventory policy. The operation enables management and review of variant-specific details for catalog maintenance and sales tracking.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Retrieve detailed information about a specific product bundle (SKU variant) within a product's catalog. Bundles represent a set of option unit selections (such as [Red, Large]) and carry their own business attributes like SKU code, price, activation status, and inventory policies.\n\nSellers and admins use this endpoint to inspect bundle configuration for management purposes such as updating, enabling/disabling, or reviewing inventory. Response delivers all business fields as defined in the Prisma schema for shopping_mall_ai_backend_product_bundles.","summary":"Get detailed information for a specific product bundle (SKU/variant) of a product.","path":"/shoppingMallAiBackend/admin/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is managed.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete business details for the referenced product bundle (SKU/variant).","typeName":"IShoppingMallAiBackendProductBundle"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new product bundle (SKU variant) for a specific product, assigning its grouping of option units, SKU code, price, inventory policy, and activation status. The operation registers the new variant in the shopping_mall_ai_backend_product_bundles table and validates against business constraints for unique SKU, correct option unit assignment, and price configuration. The event is audit logged for catalog management compliance.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Create a new bundle (SKU/variant) for a product, associating a unique combination of option unit selections, SKU code, price, and inventory policy. Bundles provide fine-grained control over what combinations are sold, at what price, and with individualized inventory or policy settings.\n\nSellers and admins use this API to add new offerings for a product such as adding [Red, XL] in addition to [Red, L], optionally with distinct pricing or inventory tracking. All validations are performed for unique SKU code, valid product linkage, and business rule conformity. The operation is fully audit logged for compliance and future reference.","summary":"Create a new product bundle (SKU variant) for a specific product.","path":"/shoppingMallAiBackend/seller/products/{productId}/bundles","parameters":[{"name":"productId","description":"ID of the parent product for which the new bundle (variant) is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Input data for bundle creation: option unit selection, SKU code, price, policy, activation flag.","typeName":"IShoppingMallAiBackendProductBundle.ICreate"},"responseBody":{"description":"Detailed business attributes of the newly created bundle/variant SKU.","typeName":"IShoppingMallAiBackendProductBundle"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new product bundle (SKU variant) for a specific product, assigning its grouping of option units, SKU code, price, inventory policy, and activation status. The operation registers the new variant in the shopping_mall_ai_backend_product_bundles table and validates against business constraints for unique SKU, correct option unit assignment, and price configuration. The event is audit logged for catalog management compliance.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Create a new bundle (SKU/variant) for a product, associating a unique combination of option unit selections, SKU code, price, and inventory policy. Bundles provide fine-grained control over what combinations are sold, at what price, and with individualized inventory or policy settings.\n\nSellers and admins use this API to add new offerings for a product such as adding [Red, XL] in addition to [Red, L], optionally with distinct pricing or inventory tracking. All validations are performed for unique SKU code, valid product linkage, and business rule conformity. The operation is fully audit logged for compliance and future reference.","summary":"Create a new product bundle (SKU variant) for a specific product.","path":"/shoppingMallAiBackend/admin/products/{productId}/bundles","parameters":[{"name":"productId","description":"ID of the parent product for which the new bundle (variant) is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Input data for bundle creation: option unit selection, SKU code, price, policy, activation flag.","typeName":"IShoppingMallAiBackendProductBundle.ICreate"},"responseBody":{"description":"Detailed business attributes of the newly created bundle/variant SKU.","typeName":"IShoppingMallAiBackendProductBundle"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing product bundle (SKU variant) for a given product, allowing correction to the bundle name, SKU code, price, inventory policy, or activation status. Modifies the record within the shopping_mall_ai_backend_product_bundles table and validates all updated attributes. All changes are timestamped and audit logged for catalog and business traceability.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Update attributes for an existing bundle (SKU/variant) of a product. Sellers and admins may change the bundle name, SKU code, price, inventory policy, activation status, or other business attributes to reflect catalog updates or corrections. All updates are validated for unique SKU code, compatible inventory linking, and pricing logic, and are timestamped for future audit and compliance.\n\nAccess is limited to product owners (sellers) and platform administrators, maintaining catalog integrity and evidence requirements for business operations. The update is non-destructive and maintains logical association with the parent product.","summary":"Update details of an existing product bundle (SKU/variant) for a product.","path":"/shoppingMallAiBackend/seller/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Bundle attribute modifications (name, SKU, price, inventory policy, activation flag, etc).","typeName":"IShoppingMallAiBackendProductBundle.IUpdate"},"responseBody":{"description":"Updated business attributes for the product bundle (SKU/variant).","typeName":"IShoppingMallAiBackendProductBundle"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Updates an existing product bundle (SKU variant) for a given product, allowing correction to the bundle name, SKU code, price, inventory policy, or activation status. Modifies the record within the shopping_mall_ai_backend_product_bundles table and validates all updated attributes. All changes are timestamped and audit logged for catalog and business traceability.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Update attributes for an existing bundle (SKU/variant) of a product. Sellers and admins may change the bundle name, SKU code, price, inventory policy, activation status, or other business attributes to reflect catalog updates or corrections. All updates are validated for unique SKU code, compatible inventory linking, and pricing logic, and are timestamped for future audit and compliance.\n\nAccess is limited to product owners (sellers) and platform administrators, maintaining catalog integrity and evidence requirements for business operations. The update is non-destructive and maintains logical association with the parent product.","summary":"Update details of an existing product bundle (SKU/variant) for a product.","path":"/shoppingMallAiBackend/admin/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Bundle attribute modifications (name, SKU, price, inventory policy, activation flag, etc).","typeName":"IShoppingMallAiBackendProductBundle.IUpdate"},"responseBody":{"description":"Updated business attributes for the product bundle (SKU/variant).","typeName":"IShoppingMallAiBackendProductBundle"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Deletes a specific product bundle (SKU variant) for a given product by marking the record as deleted via the deleted_at column. This logical deletion preserves business evidence and enables rollback or auditing. Enforcement ensures the bundle is not referenced by active orders or inventory, and the event is fully audit logged. Only authorized sellers or administrators may invoke this endpoint.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Delete a specific bundle (SKU/variant) of a product from the catalog (soft delete). Bundles typically represent unique combinations of option unit selections such as color and size, and removing them prevents the sale of the combination without destroying audit evidence. The deletion is logical (sets deleted_at) and validated to ensure there are no dependent active orders or inventory allocations.\n\nAll deletion events are audit logged, and only sellers managing the product or platform admins may invoke this operation. Business logic ensures that user-facing elements and analytics ignore logically deleted bundles, but legal and audit evidence are preserved.","summary":"Delete a specific product bundle (SKU/variant) for a product (soft delete).","path":"/shoppingMallAiBackend/seller/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is being deleted.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Deletes a specific product bundle (SKU variant) for a given product by marking the record as deleted via the deleted_at column. This logical deletion preserves business evidence and enables rollback or auditing. Enforcement ensures the bundle is not referenced by active orders or inventory, and the event is fully audit logged. Only authorized sellers or administrators may invoke this endpoint.","prisma_schemas":"model shopping_mall_ai_backend_product_bundles {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  bundle_name String\n  sku_code String\n  price Float @db.DoublePrecision\n  inventory_policy String\n  is_active Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624\")\n  @@unique([sku_code])\n  @@index([bundle_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["seller","admin"],"description":"Delete a specific bundle (SKU/variant) of a product from the catalog (soft delete). Bundles typically represent unique combinations of option unit selections such as color and size, and removing them prevents the sale of the combination without destroying audit evidence. The deletion is logical (sets deleted_at) and validated to ensure there are no dependent active orders or inventory allocations.\n\nAll deletion events are audit logged, and only sellers managing the product or platform admins may invoke this operation. Business logic ensures that user-facing elements and analytics ignore logically deleted bundles, but legal and audit evidence are preserved.","summary":"Delete a specific product bundle (SKU/variant) for a product (soft delete).","path":"/shoppingMallAiBackend/admin/products/{productId}/bundles/{bundleId}","parameters":[{"name":"productId","description":"ID of the parent product for which the bundle (variant) is being deleted.","schema":{"type":"string","format":"uuid"}},{"name":"bundleId","description":"ID of the unique bundle (SKU/variant) within the product to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_product_bundles","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of all product categories registered in the system. This operation allows advanced querying, sorting, and filtering of product categories by various criteria such as name, code, or hierarchical relation. It is intended for administrators or seller managers to efficiently browse, review, and manage product categories in bulk. Leverages the 'shopping_mall_ai_backend_product_categories' table, which includes category name, code, display order, activation state, and parent-child hierarchy for building navigational structures in a multichannel environment. Supports analytics segmentation and hierarchical data exploration. Returns a paged result with summary data per product category.","path":"/shoppingMallAiBackend/admin/productCategories","method":"patch","description":"This API operation provides a sophisticated way to search, filter, and retrieve product categories within the shopping mall backend. It utilizes advanced query parameters for sorting, paging, and hierarchical filtering based on the actual fields in the Prisma schema (such as 'category_name', 'category_code', 'parent_id', 'is_active', and 'sort_order').\n\nAdministrators and seller managers can use this endpoint to analyze and manage categories across channels and for various business analytics needs. Role-based access ensures that only authorized personnel can execute such broad queries, and sensitive hierarchical category data is protected from public exposure.\n\nRelated category creation and update operations allow for lifecycle management, while this operation focuses on read access with filtering and search. Error handling includes validation feedback for invalid filters or missing required parameters. Only product category data is included, and response fields adhere strictly to business logic and regulatory audit requirements.","summary":"Search, filter, and retrieve a paginated list of product categories","parameters":[],"requestBody":{"description":"Complex query and filter parameters for searching product categories (e.g., name, code, parent-child, is_active) with paging and sort options.","typeName":"IShoppingMallAiBackendProductCategory.IRequest"},"responseBody":{"description":"A paginated result set containing summaries of matching product categories, including hierarchical and business fields as appropriate.","typeName":"IPageIShoppingMallAiBackendProductCategory.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_product_categories","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_categories {\n  id                 String   @id @db.Uuid\n  category_name      String\n  category_code      String\n  parent_id          String?  @db.Uuid\n  category_depth     Int      @db.Integer\n  is_active          Boolean\n  sort_order         Int      @db.Integer\n  created_at         DateTime @db.Timestamptz\n  updated_at         DateTime @db.Timestamptz\n  deleted_at         DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  @@unique([category_code])\n  @@index([category_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed information about a specific product category identified by its UUID. Intended for use in product management interfaces or category hierarchy editing scenarios, this read-only operation is critical for editing, displaying, or auditing a single category's configuration. Operates on the 'shopping_mall_ai_backend_product_categories' table, including all business fields such as category name, code, parent relation, sorting order, activation state, and description. Useful for client-side category editors or admin tools.","path":"/shoppingMallAiBackend/admin/productCategories/{categoryId}","method":"get","description":"This operation fetches the complete details for a specific product category by ID. All business-relevant fields from the category model, such as 'category_name', 'category_code', 'parent_id', 'is_active', and descriptive metadata, are made available for display or editing purposes.\n\nAuthorized users (such as admin or category managers) can use this endpoint to view or pre-fill category editing dialogs, or to present users with category attributes in business dashboards. The operation secures access to only the requested category, ensuring privacy and correctness. Related operations may use this as a precursor to category update or deletion workflows.\n\nErrors are raised in case the category does not exist or access is unauthorized, with meaningful business error codes and descriptions.","summary":"Get detailed information for a single product category by ID","parameters":[{"name":"categoryId","description":"The unique identifier (UUID) of the product category to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed product category record with all primary business attributes and relationships.","typeName":"IShoppingMallAiBackendProductCategory"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_product_categories","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_categories {\n  id                 String   @id @db.Uuid\n  category_name      String\n  category_code      String\n  parent_id          String?  @db.Uuid\n  category_depth     Int      @db.Integer\n  is_active          Boolean\n  sort_order         Int      @db.Integer\n  created_at         DateTime @db.Timestamptz\n  updated_at         DateTime @db.Timestamptz\n  deleted_at         DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  @@unique([category_code])\n  @@index([category_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new product category for organizing products in the shopping mall backend. This operation targets the 'shopping_mall_ai_backend_product_categories' table and allows authorized users to define the hierarchical structure, code, display name, activation state, and sort priority of the category. Used by administrators or seller managers when expanding or reorganizing product catalogs, this endpoint enforces uniqueness and business validation for category code and name. New category is immediately available for assignment to products after creation.","path":"/shoppingMallAiBackend/admin/productCategories","method":"post","description":"This API registers a new product category, populating all mandatory business fields as defined in the schema. The operation enforces uniqueness for 'category_code' and, optionally, for name within its channel. Supports definition of parent category (for nested/hierarchical taxonomies), sorting order, and activation state (for listing/navigation).\n\nAuthorization is enforced for admin and category managers only, per platform policy. Successful calls return the complete new product category record; errors for duplicate codes, invalid parameters, or missing parents (in hierarchy) are clearly reported. Integrates with category retrieval and management workflows for seamless catalog operation.","summary":"Create a new product category","parameters":[],"requestBody":{"description":"Required and optional attributes for the new product category, including hierarchical placement, sort order, and display properties.","typeName":"IShoppingMallAiBackendProductCategory.ICreate"},"responseBody":{"description":"Full product category record representing the newly created entity, including code, name, and parent relation if applicable.","typeName":"IShoppingMallAiBackendProductCategory"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_product_categories","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_categories {\n  id                 String   @id @db.Uuid\n  category_name      String\n  category_code      String\n  parent_id          String?  @db.Uuid\n  category_depth     Int      @db.Integer\n  is_active          Boolean\n  sort_order         Int      @db.Integer\n  created_at         DateTime @db.Timestamptz\n  updated_at         DateTime @db.Timestamptz\n  deleted_at         DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  @@unique([category_code])\n  @@index([category_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Updates all editable fields for an existing product category specified by UUID. This operation enables administrators to manage the taxonomy, move categories, rename, or reconfigure properties as necessary. All modifications are performed on the 'shopping_mall_ai_backend_product_categories' table. Business validation ensures code and name uniqueness and that any parent-child changes preserve the integrity of the category tree. Used for catalog maintenance and audit compliance. Supports change tracking via application-level snapshot functionality.","path":"/shoppingMallAiBackend/admin/productCategories/{categoryId}","method":"put","description":"Allows updating of an existing product category. Authorized administrators can modify essential attributes such as category name, code, description, parent_id (to reorganize hierarchy), sort order, and activation status. Underlying logic in the model enforces uniqueness and business constraints.\n\nAll changes are logged or snapshotted for audit trail and rollback per compliance rules. Errors are returned if the category is missing, locked, or if updates would violate parent-child or uniqueness constraints. The endpoint is designed for efficient bulk catalog management as well as individual editing use cases.\n\nOnly authorized 'admin' or designated category managers may perform this update.","summary":"Update an existing product category by ID","parameters":[{"name":"categoryId","description":"The unique identifier (UUID) of the product category to modify.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update the product category, permitting partial updates to code, name, parent, activation, or sort order.","typeName":"IShoppingMallAiBackendProductCategory.IUpdate"},"responseBody":{"description":"The complete, updated product category record reflecting all allowable field changes.","typeName":"IShoppingMallAiBackendProductCategory"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_product_categories","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_categories {\n  id                 String   @id @db.Uuid\n  category_name      String\n  category_code      String\n  parent_id          String?  @db.Uuid\n  category_depth     Int      @db.Integer\n  is_active          Boolean\n  sort_order         Int      @db.Integer\n  created_at         DateTime @db.Timestamptz\n  updated_at         DateTime @db.Timestamptz\n  deleted_at         DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  @@unique([category_code])\n  @@index([category_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently deletes a product category identified by UUID from the catalog, employing logical deletion with a soft delete timestamp, as the underlying table supports a nullable 'deleted_at' for compliance and auditability. Only administrators or designated catalog managers may perform this operation. The deletion will make the category unavailable for product assignments or navigation but will retain historical evidence for legal and regulatory requirements.","path":"/shoppingMallAiBackend/admin/productCategories/{categoryId}","method":"delete","description":"This API operation performs a soft deletion of the product category identified by the supplied UUID. It sets the 'deleted_at' field, making the category unavailable for further business use or assignment to new products, but retains it for evidence, audit, and regulatory review. Cascading removal of product-category mappings is not automatic; associated products remain immutable to avoid orphaning data.\n\nOnly authorized personnel (admins) may execute this call. Error responses occur if the category does not exist, is already deleted, or is locked/in use in a way that prohibits removal. Related operations include category listing, retrieval, and restoration for compliance workflows.","summary":"Soft delete a product category by ID, retaining evidence for audit","parameters":[{"name":"categoryId","description":"The unique identifier (UUID) of the product category to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_categories","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_categories {\n  id                 String   @id @db.Uuid\n  category_name      String\n  category_code      String\n  parent_id          String?  @db.Uuid\n  category_depth     Int      @db.Integer\n  is_active          Boolean\n  sort_order         Int      @db.Integer\n  created_at         DateTime @db.Timestamptz\n  updated_at         DateTime @db.Timestamptz\n  deleted_at         DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  @@unique([category_code])\n  @@index([category_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated, searchable list of all product-to-category mapping records in the backend. Enables administrators to audit category assignments, analyze product taxonomy compliance, and manage catalog structure efficiently. The table 'shopping_mall_ai_backend_product_category_mappings' holds references between products and categories with assignment timestamps. This read operation allows filtering and bulk review across the full product dataset, supporting business auditing, catalog organization, and integrity checks for product-category relationships.","path":"/shoppingMallAiBackend/admin/productCategoryMappings","method":"patch","description":"Returns a list of product-to-category mapping records, supporting complex queries such as filtering by category, product, assignment date, or business relations. The endpoint is especially useful for taxonomy audits, catalog restructuring, or validation of business rule compliance regarding product classification.\n\nBulk or advanced queries may be limited to admin and catalog management roles. Appropriate pagination and sorting are supported, allows efficient navigation of large catalog datasets. Errors are returned for malformed queries or access control failures. Related endpoints allow creation, updating, and deletion of mappings.","summary":"List and search product-to-category mappings with advanced filtering","parameters":[],"requestBody":{"description":"Paging, sorting, and filtering parameters for map retrieval, such as product, category, assignment date range, or catalog focus.","typeName":"IShoppingMallAiBackendProductCategoryMapping.IRequest"},"responseBody":{"description":"A paginated page of product-category mapping records, each detailing the mapped product, category, and assignment time.","typeName":"IPageIShoppingMallAiBackendProductCategoryMapping"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_product_category_mappings","soft_delete_column":null,"prisma_schemas":"model shopping_mall_ai_backend_product_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  shopping_mall_ai_backend_product_categories_id String @db.Uuid\n  assigned_at DateTime @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_86d00f7d\")\n  category shopping_mall_ai_backend_product_categories @relation(fields: [shopping_mall_ai_backend_product_categories_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_6e53f464\")\n  @@index([shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_1cde50dc\")\n  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc\")\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Returns detailed information about a single product-category mapping by its UUID. Used for resolving the catalog position of a single product or auditing specific mappings. The 'shopping_mall_ai_backend_product_category_mappings' table includes references to the product, category, and assignment metadata, as required for catalog, search, or analytics logic.","path":"/shoppingMallAiBackend/admin/productCategoryMappings/{mappingId}","method":"get","description":"Fetch a specific product-category mapping with full resolution of both mapped product and category. This endpoint allows admin or catalog managers to review the placement or assignment status of a given product in the hierarchy or product catalog structure. All fields of the mapping record, including both product and category references, are returned.\n\nAuthorization is required to access mapping details. This operation is useful for catalog editing/validation, evidence preservation, or structural catalog diagnostics. Errors are raised for nonexistent or unauthorized access.","summary":"Retrieve details for a specific product-category mapping by UUID","parameters":[{"name":"mappingId","description":"The UUID assigned to this product-category mapping record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full mapping record linking product and category by UUID and the relevant metadata.","typeName":"IShoppingMallAiBackendProductCategoryMapping"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_product_category_mappings","soft_delete_column":null,"prisma_schemas":"model shopping_mall_ai_backend_product_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  shopping_mall_ai_backend_product_categories_id String @db.Uuid\n  assigned_at DateTime @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_86d00f7d\")\n  category shopping_mall_ai_backend_product_categories @relation(fields: [shopping_mall_ai_backend_product_categories_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_6e53f464\")\n  @@index([shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_1cde50dc\")\n  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc\")\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new mapping between a product and a product category in the catalog. Permits catalog managers or administrators to assign products to categories, maintaining integrity and compliance with catalog rules. Operates directly on the 'shopping_mall_ai_backend_product_category_mappings' table, designating mapping metadata such as product and category UUIDs and assignment date. Ensures products and categories exist, and mapping is not duplicated. Assignment triggers category-based navigation and search in the business UI.","path":"/shoppingMallAiBackend/admin/productCategoryMappings","method":"post","description":"Creates a product-category mapping, associating a specific product with a specific category for catalog structure and business search use. On success, the mapping entry is persisted with assignment timestamp and available for subsequent product or catalog navigation.\n\nAdmin and catalog manager authorization are mandatory to execute this request. Duplicates or invalid assignments return business error responses. Related endpoints allow for listing and auditing all mapping relationships.","summary":"Create a new mapping between a product and category","parameters":[],"requestBody":{"description":"IDs and metadata necessary to assign a product to a catalog category, including product and category UUIDs, plus any relevant assignment properties.","typeName":"IShoppingMallAiBackendProductCategoryMapping.ICreate"},"responseBody":{"description":"Full product-category mapping record resulting from the assign operation.","typeName":"IShoppingMallAiBackendProductCategoryMapping"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_product_category_mappings","soft_delete_column":null,"prisma_schemas":"model shopping_mall_ai_backend_product_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  shopping_mall_ai_backend_product_categories_id String @db.Uuid\n  assigned_at DateTime @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_86d00f7d\")\n  category shopping_mall_ai_backend_product_categories @relation(fields: [shopping_mall_ai_backend_product_categories_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_6e53f464\")\n  @@index([shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_1cde50dc\")\n  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc\")\n} ","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing product-category mapping in the shopping mall AI backend, allowing sellers or administrators to modify the association between a product and a specific category. This operation supports alignment with changes to business categorization, enabling accurate navigation, search, and analytics. The operation operates on the shopping_mall_ai_backend_product_category_mappings table and ensures that no duplicate or invalid mappings are created. Business rules require that only authorized sellers or admins may perform this action, and the mapping must reference existing products and categories as defined in the schema. The endpoint is vital for maintaining catalog consistency and supporting correct product discovery across the platform.","path":"/shoppingMallAiBackend/admin/productCategoryMappings/{mappingId}","method":"put","description":"This API operation allows an authorized seller or administrator to update a product-category mapping in the system. Typical use cases include reorganizing product catalog structures, correcting misclassifications, or reflecting new business priorities. The operation strictly enforces validation to ensure that the referenced product and category are valid and that no duplicate mappings exist. Security and auditability are ensured by allowing only those with the correct permissions to make such updates, and every change may be logged for compliance evidence. Related APIs include creation and deletion of mappings, catalog browsing, and category management endpoints. Errors will be reported if the referenced entities are not found or if the update would result in a duplicate mapping.","summary":"Update an existing product-category mapping for a product.","parameters":[{"name":"mappingId","description":"Unique identifier of the product-category mapping to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload specifying the new product and category association details to update the mapping.","typeName":"IShoppingMallAiBackendProductCategoryMapping.IUpdate"},"responseBody":{"description":"Detailed information about the updated product-category mapping.","typeName":"IShoppingMallAiBackendProductCategoryMapping"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_product_category_mappings","soft_delete_column":null,"prisma_schemas":"model shopping_mall_ai_backend_product_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  shopping_mall_ai_backend_product_categories_id String @db.Uuid\n  assigned_at DateTime @db.Timestamptz\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_86d00f7d\")\n  category shopping_mall_ai_backend_product_categories @relation(fields: [shopping_mall_ai_backend_product_categories_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_category_mappings_sho_6e53f464\")\n  @@index([shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_1cde50dc\")\n  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc\")\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\nmodel shopping_mall_ai_backend_product_categories {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently deletes an existing product-category mapping in the shopping mall AI backend, removing the record from the database without logical deletion. This action supports catalog maintenance when products are reclassified, categories are deprecated, or the mapping is no longer valid. The operation is performed on the shopping_mall_ai_backend_product_category_mappings table and results in the complete removal of the mapping entry. Use with caution as this operation cannot be reversed.","path":"/shoppingMallAiBackend/admin/productCategoryMappings/{mappingId}","method":"delete","description":"This operation enables authorized administrators to permanently remove a product-category mapping from the system. It is used for correcting catalog structure, compliance with evolving business needs, or removing outdated associations. The deletion action completely erases the record from the database, and cannot be undone. Errors include attempts to delete non-existent mappings. Related operations include mapping creation and update.","summary":"Permanently delete a product-category mapping entry.","parameters":[{"name":"mappingId","description":"Unique identifier for the product-category mapping to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_category_mappings","soft_delete_column":null,"prisma_schemas":"model shopping_mall_ai_backend_product_category_mappings {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  shopping_mall_ai_backend_product_categories_id String @db.Uuid\n  assigned_at DateTime @db.Timestamptz\n  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: \"shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc\")\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and optionally filtered list of files attached to a product, supporting AI-powered shopping mall scenarios such as multi-image product pages, asset management, and rich content experiences. This operation is crucial for both sellers and channel administrators to visualize, audit, or update the product's media assets. The endpoint is based on the shopping_mall_ai_backend_product_files table and respects visibility rules as well as soft deletion status. It allows abuse-resistant search, filtering by file type or display order, and supports future extensions for AI-driven content recommendations or moderation.","path":"/shoppingMallAiBackend/seller/products/{productId}/files","method":"patch","description":"Get a paginated, filterable list of all files (images, attachments) associated with a single product. Filters may include file type, is_primary status, or display order, and the endpoint supports advanced search to help admins or sellers efficiently manage product assets. All returned files respect product ownership, visibility rules, and exclude logically deleted records (deleted_at is null). Security applies to ensure only sellers or admins with appropriate rights to the product can view or manage its files. Typical errors include invalid product references or attempts to access files on another seller’s product without permission. This operation is often used with product update and media upload APIs to provide a unified asset management experience.","summary":"Search and retrieve files attached to a specific product with filtering and pagination.","parameters":[{"name":"productId","description":"Unique identifier of the associated product.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request payload to specify search filters, pagination, and sorting for product files.","typeName":"IShoppingMallAiBackendProductFile.IRequest"},"responseBody":{"description":"Paginated results of product files matching search and filtering criteria.","typeName":"IPageIShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves a paginated and optionally filtered list of files attached to a product, supporting AI-powered shopping mall scenarios such as multi-image product pages, asset management, and rich content experiences. This operation is crucial for both sellers and channel administrators to visualize, audit, or update the product's media assets. The endpoint is based on the shopping_mall_ai_backend_product_files table and respects visibility rules as well as soft deletion status. It allows abuse-resistant search, filtering by file type or display order, and supports future extensions for AI-driven content recommendations or moderation.","path":"/shoppingMallAiBackend/admin/products/{productId}/files","method":"patch","description":"Get a paginated, filterable list of all files (images, attachments) associated with a single product. Filters may include file type, is_primary status, or display order, and the endpoint supports advanced search to help admins or sellers efficiently manage product assets. All returned files respect product ownership, visibility rules, and exclude logically deleted records (deleted_at is null). Security applies to ensure only sellers or admins with appropriate rights to the product can view or manage its files. Typical errors include invalid product references or attempts to access files on another seller’s product without permission. This operation is often used with product update and media upload APIs to provide a unified asset management experience.","summary":"Search and retrieve files attached to a specific product with filtering and pagination.","parameters":[{"name":"productId","description":"Unique identifier of the associated product.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request payload to specify search filters, pagination, and sorting for product files.","typeName":"IShoppingMallAiBackendProductFile.IRequest"},"responseBody":{"description":"Paginated results of product files matching search and filtering criteria.","typeName":"IPageIShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed metadata for a single file attached to a product. The operation fetches properties such as URI, content type, display order, and primary status, and is used for asset management, product detail displays, compliance verification, or AI-powered analysis. It is based on the shopping_mall_ai_backend_product_files table and enforces correct ownership and access rights for product files. The operation is essential for rendering high-fidelity product details and supporting file management workflows.","path":"/shoppingMallAiBackend/seller/products/{productId}/files/{fileId}","method":"get","description":"Returns complete information and metadata for a specific file attached to a product. This may be used by sellers or admins to view file properties, for rendering on product detail pages, or to support editing/removal operations. The function checks product-file ownership and logical deletion status (deleted_at is null), returning errors for invalid combinations or permission violations. The endpoint is commonly combined with update or delete operations as part of the asset lifecycle.","summary":"Retrieve a specific file’s metadata for a given product.","parameters":[{"name":"productId","description":"UUID of the parent product entity.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier of the file to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Metadata and full details of the product file attachment.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves detailed metadata for a single file attached to a product. The operation fetches properties such as URI, content type, display order, and primary status, and is used for asset management, product detail displays, compliance verification, or AI-powered analysis. It is based on the shopping_mall_ai_backend_product_files table and enforces correct ownership and access rights for product files. The operation is essential for rendering high-fidelity product details and supporting file management workflows.","path":"/shoppingMallAiBackend/admin/products/{productId}/files/{fileId}","method":"get","description":"Returns complete information and metadata for a specific file attached to a product. This may be used by sellers or admins to view file properties, for rendering on product detail pages, or to support editing/removal operations. The function checks product-file ownership and logical deletion status (deleted_at is null), returning errors for invalid combinations or permission violations. The endpoint is commonly combined with update or delete operations as part of the asset lifecycle.","summary":"Retrieve a specific file’s metadata for a given product.","parameters":[{"name":"productId","description":"UUID of the parent product entity.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier of the file to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Metadata and full details of the product file attachment.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Uploads a new file or attachment to a specific product, creating a new product file record associated with the designated product. The uploaded file is added to the shopping_mall_ai_backend_product_files table and includes metadata such as URI, content type, display order, and is_primary status. This operation is used by sellers or admins to enrich product listings, ensure compliance, and manage high-quality product displays. It has audit and security checks for product ownership, file type validation, and asset size restrictions, and may reject files that do not conform to business rules or technical requirements.","path":"/shoppingMallAiBackend/seller/products/{productId}/files","method":"post","description":"Allows a seller or admin to add a new file (such as an image, manual, or related attachment) to the specified product. The new file is registered with its metadata and assigned a display order and is_primary status if needed. Uploads are validated for content type, file size, and business logic (e.g., only one primary image per product). Ownership and access checks are enforced by linking to the product and uploader’s identity. Errors include file size limits, invalid file types, or permission errors for non-product owners. This endpoint is used alongside file listing, update, and delete APIs for a full asset management cycle.","summary":"Attach a new file or image to a product.","parameters":[{"name":"productId","description":"UUID of the product to which the file will be attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the new product file (file URI, metadata, display order, etc.) for creation.","typeName":"IShoppingMallAiBackendProductFile.ICreate"},"responseBody":{"description":"Information about the newly attached product file, including metadata.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"create","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"seller","authorizationType":null},{"specification":"Uploads a new file or attachment to a specific product, creating a new product file record associated with the designated product. The uploaded file is added to the shopping_mall_ai_backend_product_files table and includes metadata such as URI, content type, display order, and is_primary status. This operation is used by sellers or admins to enrich product listings, ensure compliance, and manage high-quality product displays. It has audit and security checks for product ownership, file type validation, and asset size restrictions, and may reject files that do not conform to business rules or technical requirements.","path":"/shoppingMallAiBackend/admin/products/{productId}/files","method":"post","description":"Allows a seller or admin to add a new file (such as an image, manual, or related attachment) to the specified product. The new file is registered with its metadata and assigned a display order and is_primary status if needed. Uploads are validated for content type, file size, and business logic (e.g., only one primary image per product). Ownership and access checks are enforced by linking to the product and uploader’s identity. Errors include file size limits, invalid file types, or permission errors for non-product owners. This endpoint is used alongside file listing, update, and delete APIs for a full asset management cycle.","summary":"Attach a new file or image to a product.","parameters":[{"name":"productId","description":"UUID of the product to which the file will be attached.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the new product file (file URI, metadata, display order, etc.) for creation.","typeName":"IShoppingMallAiBackendProductFile.ICreate"},"responseBody":{"description":"Information about the newly attached product file, including metadata.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"create","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing file or attachment of a product, allowing modifications to metadata such as display order, content type, or is_primary status. This operation is essential for sellers and admins to refine product display, correct file attributes, or reorganize asset presentations. It operates on the shopping_mall_ai_backend_product_files table while enforcing strict checks on product ownership and uniqueness of primary image status. The endpoint is crucial for maintaining optimal product presentation and compliance.","path":"/shoppingMallAiBackend/seller/products/{productId}/files/{fileId}","method":"put","description":"Permits authorized sellers or admins to update the metadata (such as display order, is_primary, or file type) of a file attached to a specific product. All updates are validated for business logic, such as ensuring only one primary image per product, and correct ownership. The operation is commonly used to change file order, correct mistake file types, or feature a particular image. Audit trails capture all changes for compliance. Related endpoints include file listing, detail view, and file deletion.","summary":"Update metadata of a file attached to a product (e.g., display order, is_primary).","parameters":[{"name":"productId","description":"UUID of the product associated with the file.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier of the file to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New metadata and information for the file update (display order, file type, is_primary, etc.)","typeName":"IShoppingMallAiBackendProductFile.IUpdate"},"responseBody":{"description":"The product file after applying updates, including new metadata values.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"update","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"seller","authorizationType":null},{"specification":"Updates an existing file or attachment of a product, allowing modifications to metadata such as display order, content type, or is_primary status. This operation is essential for sellers and admins to refine product display, correct file attributes, or reorganize asset presentations. It operates on the shopping_mall_ai_backend_product_files table while enforcing strict checks on product ownership and uniqueness of primary image status. The endpoint is crucial for maintaining optimal product presentation and compliance.","path":"/shoppingMallAiBackend/admin/products/{productId}/files/{fileId}","method":"put","description":"Permits authorized sellers or admins to update the metadata (such as display order, is_primary, or file type) of a file attached to a specific product. All updates are validated for business logic, such as ensuring only one primary image per product, and correct ownership. The operation is commonly used to change file order, correct mistake file types, or feature a particular image. Audit trails capture all changes for compliance. Related endpoints include file listing, detail view, and file deletion.","summary":"Update metadata of a file attached to a product (e.g., display order, is_primary).","parameters":[{"name":"productId","description":"UUID of the product associated with the file.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier of the file to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New metadata and information for the file update (display order, file type, is_primary, etc.)","typeName":"IShoppingMallAiBackendProductFile.IUpdate"},"responseBody":{"description":"The product file after applying updates, including new metadata values.","typeName":"IShoppingMallAiBackendProductFile"},"authorizationRoles":["seller","admin"],"name":"update","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Logically deletes (soft deletes) an existing file attached to a product, by marking its deleted_at timestamp and retaining full audit evidence. Used for removing invalid or obsolete product images, files, or attachments from listings while preserving delete history for compliance, evidence, and dispute resolution. The operation works on the shopping_mall_ai_backend_product_files table and prevents physical deletion, ensuring asset history can be reviewed or restored by compliance staff and admins. Ownership and permission checks are strongly enforced.","path":"/shoppingMallAiBackend/seller/products/{productId}/files/{fileId}","method":"delete","description":"Performs a logical (soft) deletion of a product file, marking it as deleted by setting the deleted_at timestamp. The file remains available for compliance review but is excluded from normal product displays and listings. Typical use cases include removing outdated images, correcting misfiled assets, or compliance-driven takedowns. Logical deletion ensures full audit trails and supports restoration under administrative workflows. Access is restricted to product owners (sellers) or administrators. Attempts to delete already deleted or non-existent files trigger error responses. Closely related to file creation and update endpoints as part of full asset lifecycle management.","summary":"Logically delete (soft delete) a product file from a product’s attachments.","parameters":[{"name":"productId","description":"UUID for the parent product entity.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier for the file attachment to be logically deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"seller","authorizationType":null},{"specification":"Logically deletes (soft deletes) an existing file attached to a product, by marking its deleted_at timestamp and retaining full audit evidence. Used for removing invalid or obsolete product images, files, or attachments from listings while preserving delete history for compliance, evidence, and dispute resolution. The operation works on the shopping_mall_ai_backend_product_files table and prevents physical deletion, ensuring asset history can be reviewed or restored by compliance staff and admins. Ownership and permission checks are strongly enforced.","path":"/shoppingMallAiBackend/admin/products/{productId}/files/{fileId}","method":"delete","description":"Performs a logical (soft) deletion of a product file, marking it as deleted by setting the deleted_at timestamp. The file remains available for compliance review but is excluded from normal product displays and listings. Typical use cases include removing outdated images, correcting misfiled assets, or compliance-driven takedowns. Logical deletion ensures full audit trails and supports restoration under administrative workflows. Access is restricted to product owners (sellers) or administrators. Attempts to delete already deleted or non-existent files trigger error responses. Closely related to file creation and update endpoints as part of full asset lifecycle management.","summary":"Logically delete (soft delete) a product file from a product’s attachments.","parameters":[{"name":"productId","description":"UUID for the parent product entity.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Unique identifier for the file attachment to be logically deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_files","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_files {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  file_uri String @db.VarChar(80000)\n  file_type String\n  display_order Int @db.Integer\n  is_primary Boolean\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  // ...other fields omitted\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Provides an advanced search, filtering, and pagination endpoint for managing product tags in the shopping mall AI backend. This operation is targeted at sellers or administrators for managing the labeling and discoverability of products, supporting both manual and AI-driven workflows. Serves as an essential tool for building robust product discovery features and supports business policies around tag creation, visibility, and analytics. Operates on the shopping_mall_ai_backend_product_tags table.","path":"/shoppingMallAiBackend/admin/productTags","method":"patch","description":"Retrieves a filtered, sorted, and paginated list of product tags for monitoring, management, and analytics purposes. This endpoint allows sellers and admins to search by tag name, filter by tag code or status, and apply pagination for large datasets. It is critical for managing product discoverability, recommendation systems, and business analytics, providing support for AI augmentation or compliance-driven tag regulations. Errors include invalid search queries or insufficient permission to view all tags. This API is commonly used with tag creation and update workflows.","summary":"Search and list product tags with advanced filtering and pagination.","parameters":[],"requestBody":{"description":"Search filters, sort options, and pagination for querying product tags.","typeName":"IShoppingMallAiBackendProductTag.IRequest"},"responseBody":{"description":"Paginated and filtered list of product tags matching the criteria.","typeName":"IPageIShoppingMallAiBackendProductTag"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_product_tags","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_product_tags {\n  id String @id @db.Uuid\n  tag_name String\n  tag_code String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a single product tag by its unique identifier from the shopping_mall_ai_backend_product_tags table. This operation enables searching for product tags based on business filtering requirements, supporting administrative and catalog management use cases. The endpoint operates on tags which facilitate product categorization, filtering, and analytics, and returns tag details including tag name, code, and audit information. The tagId must correspond to an existing tag. Only the fields defined in the schema are returned, and access may be restricted to authenticated users with appropriate catalog management permissions. Related APIs for creation, updating, and deletion exist and should be referenced for full lifecycle management.","prisma_schemas":"model shopping_mall_ai_backend_product_tags {\n  id String @id @db.Uuid\n  tag_name String\n  tag_code String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([tag_code])\n  @@index([tag_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This API retrieves the details of a specific product tag using its unique ID. Product tags are used to facilitate classification, search, and filtering within the product catalog, and are essential for analytics, navigation, and merchandising features. Only fields present in the product tag schema are returned. \n\nAuthentication is required and typically restricted to users with catalog management permissions (e.g., admin). The endpoint ensures that only undelted (active) tags are returned; logically deleted tags (deleted_at set) are omitted.\n\nThis operation supports integration with catalog management flows and is often used in conjunction with creation, update, and deletion endpoints to facilitate the full lifecycle of product tags. Error cases for non-existent or deleted tags are handled with appropriate client-visible errors.","summary":"Retrieve details of a product tag by its unique identifier.","parameters":[{"name":"tagId","description":"Unique identifier of the product tag to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the product tag.","typeName":"IShoppingMallAiBackendProductTag"},"name":"at","model_name":"shopping_mall_ai_backend_product_tags","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/productTags/{tagId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new product tag in the shopping_mall_ai_backend_product_tags table for categorizing, searching, and filtering products. The operation requires all required tag fields (tag_name and tag_code) and ensures that tag_code is unique. Used extensively in catalog management, merchandising, and product analytics workflows. Upon successful creation, returns the newly created tag object. Audit timestamps are automatically set and managed, and the tag will be used for organizing and enhancing product discoverability across the system.","prisma_schemas":"model shopping_mall_ai_backend_product_tags {\n  id String @id @db.Uuid\n  tag_name String\n  tag_code String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([tag_code])\n  @@index([tag_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This API allows administrators to create new product tags which are used for classifying, filtering, and searching products in the catalog. Mandatory fields include tag_name and tag_code, where tag_code must be globally unique. Tag creation automatically sets the required audit timestamps.\n\nThe operation validates for unique tag_code before insertion. Failure to meet constraints results in meaningful error messages. Only authenticated users with administrative privileges are allowed to invoke this endpoint.\n\nTags are critical for catalog navigation, analytics, and AI-driven recommendations, making this endpoint a key part of catalog management workflows. Related endpoints exist for listing, updating, and deleting tags.","summary":"Create a new product tag for catalog classification and filtering.","parameters":[],"requestBody":{"description":"Product tag creation payload including tag name and code.","typeName":"IShoppingMallAiBackendProductTag.ICreate"},"responseBody":{"description":"The newly created product tag record.","typeName":"IShoppingMallAiBackendProductTag"},"name":"create","model_name":"shopping_mall_ai_backend_product_tags","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/productTags","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing product tag in the shopping_mall_ai_backend_product_tags table by its unique identifier. This operation allows changing the tag name and tag code, subject to uniqueness constraints. The update modifies the tag's fields and the updated_at timestamp. Admin-level permissions are required and only active (undeleted) tags may be updated. The API ensures tag_code uniqueness and handles error scenarios for constraint violations. Used as part of full product tag lifecycle management including creation, retrieval, and deletion.","prisma_schemas":"model shopping_mall_ai_backend_product_tags {\n  id String @id @db.Uuid\n  tag_name String\n  tag_code String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([tag_code])\n  @@index([tag_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This endpoint updates the details of a product tag. Editable fields include tag_name and tag_code. Both fields must satisfy schema constraints, including the uniqueness of tag_code. The endpoint also updates the updated_at timestamp to reflect when the change was made.\n\nOnly administrators are permitted to update product tags. The API performs validation to avoid duplicate tag_codes and ensures that logically deleted tags are not updated. Failure cases return informative error messages for remediation. This operation is typically used together with tag creation, retrieval, and deletion for comprehensive catalog management workflows.","summary":"Update an existing product tag by ID.","parameters":[{"name":"tagId","description":"Unique identifier of the product tag to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating a product tag (name, code).","typeName":"IShoppingMallAiBackendProductTag.IUpdate"},"responseBody":{"description":"The updated product tag record.","typeName":"IShoppingMallAiBackendProductTag"},"name":"update","model_name":"shopping_mall_ai_backend_product_tags","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/productTags/{tagId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Deletes (logically, via soft-delete) a product tag in the shopping_mall_ai_backend_product_tags table using its unique identifier. The operation records the deletion timestamp for evidence and business compliance, without physically removing the record. Only active (undeleted) tags can be soft-deleted. The operation is permission-restricted to admin users responsible for catalog management. Soft-deleted tags are excluded from active catalog use and system analytics. Related APIs enable restoration if needed or listing with deleted status for compliance.","prisma_schemas":"model shopping_mall_ai_backend_product_tags {\n  id String @id @db.Uuid\n  tag_name String\n  tag_code String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  @@unique([tag_code])\n  @@index([tag_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["admin"],"description":"This API performs a soft delete of a product tag based on its unique ID. The deleted_at field is set to mark the record as logically deleted, preserving data for audit, compliance, and potential restoration. Only non-deleted tags can be soft deleted.\n\nThe operation is restricted to admin users with catalog management privileges. Once a tag is soft deleted, it will be excluded from standard catalog listings and analytics, but its evidence remains for future reference or compliance checks. Error states, such as trying to delete a non-existent or already deleted tag, are handled with clear responses.","summary":"Soft delete a product tag by its unique identifier.","parameters":[{"name":"tagId","description":"Unique identifier of the product tag to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_product_tags","soft_delete_column":"deleted_at","path":"/shoppingMallAiBackend/admin/productTags/{tagId}","method":"delete","authorizationRole":"admin","authorizationType":null},{"specification":"Searches and lists all inventory records for a given product, with support for filtering (inventory_status), sorting, and pagination. The endpoint retrieves data from the shopping_mall_ai_backend_product_inventories table and is scoped to a specific product. Returns paginated inventory results for the product, enabling stock visibility and management for sellers/admins. May support advanced queries for fulfillment, business analytics, or warehouse management workflows.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This API returns a paginated, optionally filtered list of inventory records related to a specific product. Inventory may be filtered by inventory_status, date, or other parameters to facilitate stock and warehouse management. Only inventory records associated with the productId are returned. Pagination and sorting enable efficient management for products with high SKU complexity.\n\nBoth administrators and privileged sellers can access this endpoint for inventory reporting, adjustment, and business analysis. This API is typically used with product and order management workflows, and may be integrated with fulfillment, analytics, or warehouse management features.","summary":"List and search product inventories by product ID.","parameters":[{"name":"productId","description":"Unique identifier for the product to list inventories for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory filtering, sort, and pagination parameters.","typeName":"IShoppingMallAiBackendProductInventory.IRequest"},"responseBody":{"description":"Paginated inventory records for the product.","typeName":"IPageIShoppingMallAiBackendProductInventory"},"name":"index","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/admin/products/{productId}/inventories","method":"patch","authorizationRole":"admin","authorizationType":null},{"specification":"Searches and lists all inventory records for a given product, with support for filtering (inventory_status), sorting, and pagination. The endpoint retrieves data from the shopping_mall_ai_backend_product_inventories table and is scoped to a specific product. Returns paginated inventory results for the product, enabling stock visibility and management for sellers/admins. May support advanced queries for fulfillment, business analytics, or warehouse management workflows.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This API returns a paginated, optionally filtered list of inventory records related to a specific product. Inventory may be filtered by inventory_status, date, or other parameters to facilitate stock and warehouse management. Only inventory records associated with the productId are returned. Pagination and sorting enable efficient management for products with high SKU complexity.\n\nBoth administrators and privileged sellers can access this endpoint for inventory reporting, adjustment, and business analysis. This API is typically used with product and order management workflows, and may be integrated with fulfillment, analytics, or warehouse management features.","summary":"List and search product inventories by product ID.","parameters":[{"name":"productId","description":"Unique identifier for the product to list inventories for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory filtering, sort, and pagination parameters.","typeName":"IShoppingMallAiBackendProductInventory.IRequest"},"responseBody":{"description":"Paginated inventory records for the product.","typeName":"IPageIShoppingMallAiBackendProductInventory"},"name":"index","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/products/{productId}/inventories","method":"patch","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves the details of a specific inventory record associated with a product from the shopping_mall_ai_backend_product_inventories table. This operation returns available and reserved quantity, status, and last update time for the SKU or bundle. Used for real-time stock visibility, fulfillment operations, and analytics. The inventoryId and productId are required parameters to uniquely identify the inventory record.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This endpoint provides detailed information about a single inventory record for a given product, such as available and reserved quantity, inventory status, and the last time the inventory record was updated. Both the productId and inventoryId must be provided.\n\nThe operation is used by sellers and admins for real-time stock validation, SKU or bundle fulfillment status reporting, and inventory analytics. Related endpoints should be used for creating, updating, or indexing inventory records. Error cases like missing inventoryId or a record-product relationship violation are handled gracefully.","summary":"Retrieve a specific inventory record of a product by IDs.","parameters":[{"name":"productId","description":"Unique identifier for the product to which the inventory belongs.","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the inventory record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the inventory record.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"at","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/admin/products/{productId}/inventories/{inventoryId}","method":"get","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the details of a specific inventory record associated with a product from the shopping_mall_ai_backend_product_inventories table. This operation returns available and reserved quantity, status, and last update time for the SKU or bundle. Used for real-time stock visibility, fulfillment operations, and analytics. The inventoryId and productId are required parameters to uniquely identify the inventory record.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This endpoint provides detailed information about a single inventory record for a given product, such as available and reserved quantity, inventory status, and the last time the inventory record was updated. Both the productId and inventoryId must be provided.\n\nThe operation is used by sellers and admins for real-time stock validation, SKU or bundle fulfillment status reporting, and inventory analytics. Related endpoints should be used for creating, updating, or indexing inventory records. Error cases like missing inventoryId or a record-product relationship violation are handled gracefully.","summary":"Retrieve a specific inventory record of a product by IDs.","parameters":[{"name":"productId","description":"Unique identifier for the product to which the inventory belongs.","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the inventory record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the inventory record.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"at","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/products/{productId}/inventories/{inventoryId}","method":"get","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new inventory record for a specific product in the shopping_mall_ai_backend_product_inventories table. Inputs include available and reserved quantity, status, and last_updated timestamp. The operation is used for adding initial stock or additional SKUs for a product, and supports advanced stock management, warehouse operations, and multi-bundle inventory logic. Requires seller or admin privileges and ensures data integrity constraints are met. Returns the newly created inventory record for confirmation.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This API adds a new inventory record for a specific product, supporting stock initialization and adding SKUs/bundles to the inventory system. Required fields include available_quantity, reserved_quantity, inventory_status, and last_update_at. The linkage to the product is made with productId.\n\nBoth sellers and admins can perform this operation, typically during catalog setup or expansion of available SKUs. The API checks data integrity constraints and ensures accurate linkage to the parent product. Error conditions such as product non-existence or data violations are communicated clearly in responses.","summary":"Create a new inventory record for a product.","parameters":[{"name":"productId","description":"Unique identifier for the product to add inventory to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory record creation payload.","typeName":"IShoppingMallAiBackendProductInventory.ICreate"},"responseBody":{"description":"Newly created inventory record associated with the product.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"create","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/admin/products/{productId}/inventories","method":"post","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new inventory record for a specific product in the shopping_mall_ai_backend_product_inventories table. Inputs include available and reserved quantity, status, and last_updated timestamp. The operation is used for adding initial stock or additional SKUs for a product, and supports advanced stock management, warehouse operations, and multi-bundle inventory logic. Requires seller or admin privileges and ensures data integrity constraints are met. Returns the newly created inventory record for confirmation.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This API adds a new inventory record for a specific product, supporting stock initialization and adding SKUs/bundles to the inventory system. Required fields include available_quantity, reserved_quantity, inventory_status, and last_update_at. The linkage to the product is made with productId.\n\nBoth sellers and admins can perform this operation, typically during catalog setup or expansion of available SKUs. The API checks data integrity constraints and ensures accurate linkage to the parent product. Error conditions such as product non-existence or data violations are communicated clearly in responses.","summary":"Create a new inventory record for a product.","parameters":[{"name":"productId","description":"Unique identifier for the product to add inventory to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory record creation payload.","typeName":"IShoppingMallAiBackendProductInventory.ICreate"},"responseBody":{"description":"Newly created inventory record associated with the product.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"create","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/products/{productId}/inventories","method":"post","authorizationRole":"seller","authorizationType":null},{"specification":"Updates an existing inventory record of a product in the shopping_mall_ai_backend_product_inventories table. Allows modifying available and reserved quantities, status, and last updated timestamp, subject to business and data integrity constraints. The operation requires both productId and inventoryId and is restricted to sellers/admins. Used for stock adjustments, corrections, or processing returns. Returns the updated record upon success.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This endpoint updates an inventory record for a specific product. Editable fields include quantities, inventory_status, and last_update_at. Both productId and inventoryId are required, and operations are subject to access control (admin/seller only) and data integrity checks.\n\nPrimarily used for inventory corrections, returns, or batch stock adjustments. Successful updates return the updated inventory record. Failure states (such as ID constraint violation or not found) are reported with descriptive error messages for remediation. This is a key operation in advanced stock and warehouse management flows.","summary":"Update a specific inventory record of a product by IDs.","parameters":[{"name":"productId","description":"Unique identifier for the product to which the inventory belongs.","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the inventory record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an inventory record.","typeName":"IShoppingMallAiBackendProductInventory.IUpdate"},"responseBody":{"description":"The updated inventory record.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"update","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/admin/products/{productId}/inventories/{inventoryId}","method":"put","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing inventory record of a product in the shopping_mall_ai_backend_product_inventories table. Allows modifying available and reserved quantities, status, and last updated timestamp, subject to business and data integrity constraints. The operation requires both productId and inventoryId and is restricted to sellers/admins. Used for stock adjustments, corrections, or processing returns. Returns the updated record upon success.","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}","authorizationRoles":["admin","seller"],"description":"This endpoint updates an inventory record for a specific product. Editable fields include quantities, inventory_status, and last_update_at. Both productId and inventoryId are required, and operations are subject to access control (admin/seller only) and data integrity checks.\n\nPrimarily used for inventory corrections, returns, or batch stock adjustments. Successful updates return the updated inventory record. Failure states (such as ID constraint violation or not found) are reported with descriptive error messages for remediation. This is a key operation in advanced stock and warehouse management flows.","summary":"Update a specific inventory record of a product by IDs.","parameters":[{"name":"productId","description":"Unique identifier for the product to which the inventory belongs.","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the inventory record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an inventory record.","typeName":"IShoppingMallAiBackendProductInventory.IUpdate"},"responseBody":{"description":"The updated inventory record.","typeName":"IShoppingMallAiBackendProductInventory"},"name":"update","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"path":"/shoppingMallAiBackend/seller/products/{productId}/inventories/{inventoryId}","method":"put","authorizationRole":"seller","authorizationType":null},{"specification":"This operation deletes a specific inventory record for a product in the ShoppingMallAiBackend system. The operation handles the direct removal of the inventory tracking item for a given product, identified by productId, and inventoryId. Deletion is permanent unless a soft-deleted column exists for the target model. It is primarily for use by authenticated sellers or administrators responsible for inventory management. This endpoint enforces strict validation to ensure only valid, existing inventory records are deleted. Related entities such as orders, stock audits, or inventory movement logs are not affected by this operation.","path":"/shoppingMallAiBackend/seller/products/{productId}/inventories/{inventoryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[]\n  shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[]\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[]\n  shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[]\n  shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[]\n  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Delete a product inventory entry from the ShoppingMallAiBackend system using inventoryId and productId as identifiers.\n\nThis operation is used by authorized sellers or administrators to directly remove a single inventory record tied to a product. The method permanently deletes the record, so that all inventory tracking for that particular entry will be lost unless otherwise preserved by business logic. The corresponding product remains unaffected except for the loss of this inventory slot. Attempts to delete a non-existent or protected inventory will result in an error response. All deletion operations are subject to business role authorization and audit checks as defined by the application. The endpoint enforces strict checking to prevent removal of inventory used in ongoing orders or compliance processes.","summary":"Delete a specific product inventory record by inventoryId and productId","parameters":[{"name":"productId","description":"Unique identifier for the parent product (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the target product inventory to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"authorizationRole":"seller","authorizationType":null},{"specification":"This operation deletes a specific inventory record for a product in the ShoppingMallAiBackend system. The operation handles the direct removal of the inventory tracking item for a given product, identified by productId, and inventoryId. Deletion is permanent unless a soft-deleted column exists for the target model. It is primarily for use by authenticated sellers or administrators responsible for inventory management. This endpoint enforces strict validation to ensure only valid, existing inventory records are deleted. Related entities such as orders, stock audits, or inventory movement logs are not affected by this operation.","path":"/shoppingMallAiBackend/admin/products/{productId}/inventories/{inventoryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_product_inventories {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_products_id String @db.Uuid\n  available_quantity Int @db.Integer\n  reserved_quantity Int @db.Integer\n  last_update_at DateTime @db.Timestamptz\n  inventory_status String\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_product_inventories_shopping__36cf87fd\")\n  @@index([shopping_mall_ai_backend_products_id], map: \"shopping_mall_ai_backend_product_inventories_shopping__3d59e671\")\n  @@index([inventory_status], map: \"shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b\")\n}\nmodel shopping_mall_ai_backend_products {\n  id String @id @db.Uuid\n  title String\n  slug String\n  description String?\n  product_type String\n  business_status String\n  min_order_quantity Int @db.Integer\n  max_order_quantity Int @db.Integer\n  tax_code String\n  sort_priority Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[]\n  shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[]\n  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]\n  shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[]\n  shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[]\n  shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[]\n  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]\n  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]\n  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  @@unique([slug])\n  @@index([product_type])\n  @@index([business_status])\n  @@index([tax_code])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Delete a product inventory entry from the ShoppingMallAiBackend system using inventoryId and productId as identifiers.\n\nThis operation is used by authorized sellers or administrators to directly remove a single inventory record tied to a product. The method permanently deletes the record, so that all inventory tracking for that particular entry will be lost unless otherwise preserved by business logic. The corresponding product remains unaffected except for the loss of this inventory slot. Attempts to delete a non-existent or protected inventory will result in an error response. All deletion operations are subject to business role authorization and audit checks as defined by the application. The endpoint enforces strict checking to prevent removal of inventory used in ongoing orders or compliance processes.","summary":"Delete a specific product inventory record by inventoryId and productId","parameters":[{"name":"productId","description":"Unique identifier for the parent product (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"inventoryId","description":"Unique identifier for the target product inventory to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_product_inventories","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This endpoint enables clients to search, filter, and paginate the list of shopping carts within the ShoppingMallAiBackend system. It processes search parameters, cart status filters, sorting, and pagination controls provided in the request body. Typical use-cases include customer account review, active cart management, or analytics dashboards for operations managers. The request and response types follow the standardized shoppingMallAiBackend naming conventions for complex search operations.","path":"/shoppingMallAiBackend/customer/carts","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search for shopping cart records across the system, with support for filtering on status, date range, customer association, and customizable pagination.\n\nThis API operation is designed for customer service, account management, and operational analytics use-cases where a filtered view of shopping carts is required. It consumes a ShoppingMallAiBackendCart.IRequest object, which allows clients to submit flexible queries with filters on key cart properties and control the number of results and sort ordering. The response returns a paginated set of summary shopping cart objects optimized for list displays. Users must have permission to view cart information, with more sensitive views available to admins. All personal information is returned according to the role of the requesting user.","summary":"Search, filter, and paginate shopping carts with flexible query options","parameters":[],"requestBody":{"description":"Query and filter options for carts search/pagination","typeName":"IShoppingMallAiBackendCart.IRequest"},"responseBody":{"description":"Paginated list of carts matching filter/search criteria","typeName":"IPageIShoppingMallAiBackendCart.ISummary"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This endpoint enables clients to search, filter, and paginate the list of shopping carts within the ShoppingMallAiBackend system. It processes search parameters, cart status filters, sorting, and pagination controls provided in the request body. Typical use-cases include customer account review, active cart management, or analytics dashboards for operations managers. The request and response types follow the standardized shoppingMallAiBackend naming conventions for complex search operations.","path":"/shoppingMallAiBackend/seller/carts","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search for shopping cart records across the system, with support for filtering on status, date range, customer association, and customizable pagination.\n\nThis API operation is designed for customer service, account management, and operational analytics use-cases where a filtered view of shopping carts is required. It consumes a ShoppingMallAiBackendCart.IRequest object, which allows clients to submit flexible queries with filters on key cart properties and control the number of results and sort ordering. The response returns a paginated set of summary shopping cart objects optimized for list displays. Users must have permission to view cart information, with more sensitive views available to admins. All personal information is returned according to the role of the requesting user.","summary":"Search, filter, and paginate shopping carts with flexible query options","parameters":[],"requestBody":{"description":"Query and filter options for carts search/pagination","typeName":"IShoppingMallAiBackendCart.IRequest"},"responseBody":{"description":"Paginated list of carts matching filter/search criteria","typeName":"IPageIShoppingMallAiBackendCart.ISummary"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This endpoint enables clients to search, filter, and paginate the list of shopping carts within the ShoppingMallAiBackend system. It processes search parameters, cart status filters, sorting, and pagination controls provided in the request body. Typical use-cases include customer account review, active cart management, or analytics dashboards for operations managers. The request and response types follow the standardized shoppingMallAiBackend naming conventions for complex search operations.","path":"/shoppingMallAiBackend/admin/carts","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search for shopping cart records across the system, with support for filtering on status, date range, customer association, and customizable pagination.\n\nThis API operation is designed for customer service, account management, and operational analytics use-cases where a filtered view of shopping carts is required. It consumes a ShoppingMallAiBackendCart.IRequest object, which allows clients to submit flexible queries with filters on key cart properties and control the number of results and sort ordering. The response returns a paginated set of summary shopping cart objects optimized for list displays. Users must have permission to view cart information, with more sensitive views available to admins. All personal information is returned according to the role of the requesting user.","summary":"Search, filter, and paginate shopping carts with flexible query options","parameters":[],"requestBody":{"description":"Query and filter options for carts search/pagination","typeName":"IShoppingMallAiBackendCart.IRequest"},"responseBody":{"description":"Paginated list of carts matching filter/search criteria","typeName":"IPageIShoppingMallAiBackendCart.ISummary"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the details of a specific shopping cart from the ShoppingMallAiBackend system by its unique cartId. This endpoint is typically used by authenticated users to view the contents, status, and metadata of an individual cart. Business logic ensures appropriate authorization, so that only the cart owner or authorized roles (such as admin in support scenarios) may access the requested cart.","path":"/shoppingMallAiBackend/customer/carts/{cartId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the complete details of a shopping cart by unique cartId.\n\nThis operation allows a customer, support agent, or admin to view all properties and contents of a particular shopping cart. The result includes metadata, customer/session ownership, cart status, and any advanced business fields associated with the cart. Sensitive fields such as customer_id are shown only to owners and authorized admin roles. All access is logged for evidence and security compliance. Attempting to view a cart not owned or authorized will yield an appropriate permissions error.","summary":"Retrieve details of a single shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the requested cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete shopping cart object with all attributes, relations, and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve the details of a specific shopping cart from the ShoppingMallAiBackend system by its unique cartId. This endpoint is typically used by authenticated users to view the contents, status, and metadata of an individual cart. Business logic ensures appropriate authorization, so that only the cart owner or authorized roles (such as admin in support scenarios) may access the requested cart.","path":"/shoppingMallAiBackend/seller/carts/{cartId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the complete details of a shopping cart by unique cartId.\n\nThis operation allows a customer, support agent, or admin to view all properties and contents of a particular shopping cart. The result includes metadata, customer/session ownership, cart status, and any advanced business fields associated with the cart. Sensitive fields such as customer_id are shown only to owners and authorized admin roles. All access is logged for evidence and security compliance. Attempting to view a cart not owned or authorized will yield an appropriate permissions error.","summary":"Retrieve details of a single shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the requested cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete shopping cart object with all attributes, relations, and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieve the details of a specific shopping cart from the ShoppingMallAiBackend system by its unique cartId. This endpoint is typically used by authenticated users to view the contents, status, and metadata of an individual cart. Business logic ensures appropriate authorization, so that only the cart owner or authorized roles (such as admin in support scenarios) may access the requested cart.","path":"/shoppingMallAiBackend/admin/carts/{cartId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the complete details of a shopping cart by unique cartId.\n\nThis operation allows a customer, support agent, or admin to view all properties and contents of a particular shopping cart. The result includes metadata, customer/session ownership, cart status, and any advanced business fields associated with the cart. Sensitive fields such as customer_id are shown only to owners and authorized admin roles. All access is logged for evidence and security compliance. Attempting to view a cart not owned or authorized will yield an appropriate permissions error.","summary":"Retrieve details of a single shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the requested cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete shopping cart object with all attributes, relations, and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new shopping cart in the ShoppingMallAiBackend system. This operation accepts input data describing the new cart, such as initial customer association, session, and any cart-level metadata needed at time of creation. Business logic ensures uniqueness of cart_token and compliance with all validation rules. The resulting response contains the newly created cart entity, including all generated keys and status fields.","path":"/shoppingMallAiBackend/customer/carts","method":"post","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Add a new shopping cart to the ShoppingMallAiBackend system for a customer or guest session.\n\nThis endpoint is used when a new cart is to be created—for example, on guest checkout, first login, or when a new customer begins a session. The API accepts cart metadata (including customer or session IDs, cart_token, and initial status) as described by the ShoppingMallAiBackendCart.ICreate schema. All business rules for cart uniqueness, customer binding, and session management are enforced. The returned response gives full details of the created cart, including generated IDs and initial values set by the system. All creation events are logged for audit and compliance.","summary":"Create a new shopping cart for a customer or guest session","parameters":[],"requestBody":{"description":"Fields required to create a new shopping cart (customer/session, tokens, etc.)","typeName":"IShoppingMallAiBackendCart.ICreate"},"responseBody":{"description":"Newly created cart object with assigned IDs and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"create","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new shopping cart in the ShoppingMallAiBackend system. This operation accepts input data describing the new cart, such as initial customer association, session, and any cart-level metadata needed at time of creation. Business logic ensures uniqueness of cart_token and compliance with all validation rules. The resulting response contains the newly created cart entity, including all generated keys and status fields.","path":"/shoppingMallAiBackend/seller/carts","method":"post","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Add a new shopping cart to the ShoppingMallAiBackend system for a customer or guest session.\n\nThis endpoint is used when a new cart is to be created—for example, on guest checkout, first login, or when a new customer begins a session. The API accepts cart metadata (including customer or session IDs, cart_token, and initial status) as described by the ShoppingMallAiBackendCart.ICreate schema. All business rules for cart uniqueness, customer binding, and session management are enforced. The returned response gives full details of the created cart, including generated IDs and initial values set by the system. All creation events are logged for audit and compliance.","summary":"Create a new shopping cart for a customer or guest session","parameters":[],"requestBody":{"description":"Fields required to create a new shopping cart (customer/session, tokens, etc.)","typeName":"IShoppingMallAiBackendCart.ICreate"},"responseBody":{"description":"Newly created cart object with assigned IDs and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"create","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Create a new shopping cart in the ShoppingMallAiBackend system. This operation accepts input data describing the new cart, such as initial customer association, session, and any cart-level metadata needed at time of creation. Business logic ensures uniqueness of cart_token and compliance with all validation rules. The resulting response contains the newly created cart entity, including all generated keys and status fields.","path":"/shoppingMallAiBackend/admin/carts","method":"post","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Add a new shopping cart to the ShoppingMallAiBackend system for a customer or guest session.\n\nThis endpoint is used when a new cart is to be created—for example, on guest checkout, first login, or when a new customer begins a session. The API accepts cart metadata (including customer or session IDs, cart_token, and initial status) as described by the ShoppingMallAiBackendCart.ICreate schema. All business rules for cart uniqueness, customer binding, and session management are enforced. The returned response gives full details of the created cart, including generated IDs and initial values set by the system. All creation events are logged for audit and compliance.","summary":"Create a new shopping cart for a customer or guest session","parameters":[],"requestBody":{"description":"Fields required to create a new shopping cart (customer/session, tokens, etc.)","typeName":"IShoppingMallAiBackendCart.ICreate"},"responseBody":{"description":"Newly created cart object with assigned IDs and metadata","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"create","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update an existing shopping cart's metadata, status, or associated fields. This endpoint allows clients to change active session binding, customer association, cart notes, or status (for example, after a merge or when a guest becomes a member). All updates are subject to system validation for business integrity, such as ensuring only the rightful owner or admin can make changes.","path":"/shoppingMallAiBackend/customer/carts/{cartId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update an existing cart's metadata or status by specifying the cartId and supplying the update fields in the request body.\n\nCommon use-cases include merging guest and member carts, associating a customer account, or changing cart status. Authorization ensures only the right user or admin may apply changes. Requests are validated for data consistency and business rules. Results in a returned updated cart object reflecting all changes.","summary":"Update shopping cart metadata or status for a given cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the shopping cart (status, associations, metadata)","typeName":"IShoppingMallAiBackendCart.IUpdate"},"responseBody":{"description":"Updated cart object with all modified fields","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"update","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Update an existing shopping cart's metadata, status, or associated fields. This endpoint allows clients to change active session binding, customer association, cart notes, or status (for example, after a merge or when a guest becomes a member). All updates are subject to system validation for business integrity, such as ensuring only the rightful owner or admin can make changes.","path":"/shoppingMallAiBackend/seller/carts/{cartId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update an existing cart's metadata or status by specifying the cartId and supplying the update fields in the request body.\n\nCommon use-cases include merging guest and member carts, associating a customer account, or changing cart status. Authorization ensures only the right user or admin may apply changes. Requests are validated for data consistency and business rules. Results in a returned updated cart object reflecting all changes.","summary":"Update shopping cart metadata or status for a given cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the shopping cart (status, associations, metadata)","typeName":"IShoppingMallAiBackendCart.IUpdate"},"responseBody":{"description":"Updated cart object with all modified fields","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"update","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Update an existing shopping cart's metadata, status, or associated fields. This endpoint allows clients to change active session binding, customer association, cart notes, or status (for example, after a merge or when a guest becomes a member). All updates are subject to system validation for business integrity, such as ensuring only the rightful owner or admin can make changes.","path":"/shoppingMallAiBackend/admin/carts/{cartId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Update an existing cart's metadata or status by specifying the cartId and supplying the update fields in the request body.\n\nCommon use-cases include merging guest and member carts, associating a customer account, or changing cart status. Authorization ensures only the right user or admin may apply changes. Requests are validated for data consistency and business rules. Results in a returned updated cart object reflecting all changes.","summary":"Update shopping cart metadata or status for a given cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the shopping cart (status, associations, metadata)","typeName":"IShoppingMallAiBackendCart.IUpdate"},"responseBody":{"description":"Updated cart object with all modified fields","typeName":"IShoppingMallAiBackendCart"},"authorizationRoles":["customer","seller","admin"],"name":"update","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Delete (logically) a specific shopping cart by its cartId. The operation marks the cart as deleted in the ShoppingMallAiBackend system for evidence and compliance, according to business logic. Any associated items or coupon usages remain available for audit but cannot be used in new commerce events. This delete operation is available to the owner or admin roles.","path":"/shoppingMallAiBackend/customer/carts/{cartId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Soft delete (logical deletion) a shopping cart specified by cartId by setting its deleted_at timestamp. This operation marks the cart as logically deleted, preserving its data for audit and regulatory evidence while making it unavailable for future commerce events. Associated items or coupon usages are retained for compliance purposes. Only the cart owner or privileged admin roles may perform this action. Any attempt to soft delete a cart not owned by the user, or a cart in a prohibited status, will result in a permission or business logic error. All soft deletions are logged for regulatory compliance and evidence preservation.","summary":"Soft delete (logical deletion) a shopping cart by marking deleted_at for compliance retention","parameters":[{"name":"cartId","description":"Unique identifier of the cart to logically delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Delete (logically) a specific shopping cart by its cartId. The operation marks the cart as deleted in the ShoppingMallAiBackend system for evidence and compliance, according to business logic. Any associated items or coupon usages remain available for audit but cannot be used in new commerce events. This delete operation is available to the owner or admin roles.","path":"/shoppingMallAiBackend/seller/carts/{cartId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Soft delete (logical deletion) a shopping cart specified by cartId by setting its deleted_at timestamp. This operation marks the cart as logically deleted, preserving its data for audit and regulatory evidence while making it unavailable for future commerce events. Associated items or coupon usages are retained for compliance purposes. Only the cart owner or privileged admin roles may perform this action. Any attempt to soft delete a cart not owned by the user, or a cart in a prohibited status, will result in a permission or business logic error. All soft deletions are logged for regulatory compliance and evidence preservation.","summary":"Soft delete (logical deletion) a shopping cart by marking deleted_at for compliance retention","parameters":[{"name":"cartId","description":"Unique identifier of the cart to logically delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Delete (logically) a specific shopping cart by its cartId. The operation marks the cart as deleted in the ShoppingMallAiBackend system for evidence and compliance, according to business logic. Any associated items or coupon usages remain available for audit but cannot be used in new commerce events. This delete operation is available to the owner or admin roles.","path":"/shoppingMallAiBackend/admin/carts/{cartId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_carts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_session_id String? @db.Uuid\n  cart_token String\n  status String\n  expires_at DateTime? @db.Timestamptz\n  last_merged_at DateTime? @db.Timestamptz\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13deb3f2\")\n  customerSession shopping_mall_ai_backend_customer_sessions? @relation(fields: [shopping_mall_ai_backend_customer_session_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_04c36568\")\n  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]\n  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  @@index([shopping_mall_ai_backend_customer_session_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_13e5dd25\")\n  @@unique([cart_token])\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_carts_shopping_mall_ai_backen_42da4324\")\n  @@index([status])\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Soft delete (logical deletion) a shopping cart specified by cartId by setting its deleted_at timestamp. This operation marks the cart as logically deleted, preserving its data for audit and regulatory evidence while making it unavailable for future commerce events. Associated items or coupon usages are retained for compliance purposes. Only the cart owner or privileged admin roles may perform this action. Any attempt to soft delete a cart not owned by the user, or a cart in a prohibited status, will result in a permission or business logic error. All soft deletions are logged for regulatory compliance and evidence preservation.","summary":"Soft delete (logical deletion) a shopping cart by marking deleted_at for compliance retention","parameters":[{"name":"cartId","description":"Unique identifier of the cart to logically delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_carts","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation provides a paginated view of items within a specific shopping cart, identified by cartId. The endpoint supports searching, filtering on item attributes, and pagination. It is used by customers to review the detailed contents of their cart or by admins performing support or analytics tasks. The results present item attributes together with relevant metadata and references to product snapshots for audit purposes.","path":"/shoppingMallAiBackend/customer/carts/{cartId}/items","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search and paginate items within a specific shopping cart.\n\nThis API call enables a detailed review of all items currently present in a single cart, allows for filtering by item attributes (quantity, bundle_code, note, etc.), and supports paginated result navigation. Its primary use is during checkout, customer review, or for administrative support. All access is permission checked to ensure only cart owners or authorized personnel may view the item list. Attempts to view unauthorized or deleted carts will yield an error.","summary":"Paginate and filter items inside a shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart whose items are being listed (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination configuration for cart items listing","typeName":"IShoppingMallAiBackendCartItem.IRequest"},"responseBody":{"description":"Paginated data of cart items belonging to specified cart","typeName":"IPageIShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation provides a paginated view of items within a specific shopping cart, identified by cartId. The endpoint supports searching, filtering on item attributes, and pagination. It is used by customers to review the detailed contents of their cart or by admins performing support or analytics tasks. The results present item attributes together with relevant metadata and references to product snapshots for audit purposes.","path":"/shoppingMallAiBackend/seller/carts/{cartId}/items","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search and paginate items within a specific shopping cart.\n\nThis API call enables a detailed review of all items currently present in a single cart, allows for filtering by item attributes (quantity, bundle_code, note, etc.), and supports paginated result navigation. Its primary use is during checkout, customer review, or for administrative support. All access is permission checked to ensure only cart owners or authorized personnel may view the item list. Attempts to view unauthorized or deleted carts will yield an error.","summary":"Paginate and filter items inside a shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart whose items are being listed (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination configuration for cart items listing","typeName":"IShoppingMallAiBackendCartItem.IRequest"},"responseBody":{"description":"Paginated data of cart items belonging to specified cart","typeName":"IPageIShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation provides a paginated view of items within a specific shopping cart, identified by cartId. The endpoint supports searching, filtering on item attributes, and pagination. It is used by customers to review the detailed contents of their cart or by admins performing support or analytics tasks. The results present item attributes together with relevant metadata and references to product snapshots for audit purposes.","path":"/shoppingMallAiBackend/admin/carts/{cartId}/items","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Search and paginate items within a specific shopping cart.\n\nThis API call enables a detailed review of all items currently present in a single cart, allows for filtering by item attributes (quantity, bundle_code, note, etc.), and supports paginated result navigation. Its primary use is during checkout, customer review, or for administrative support. All access is permission checked to ensure only cart owners or authorized personnel may view the item list. Attempts to view unauthorized or deleted carts will yield an error.","summary":"Paginate and filter items inside a shopping cart by cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart whose items are being listed (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination configuration for cart items listing","typeName":"IShoppingMallAiBackendCartItem.IRequest"},"responseBody":{"description":"Paginated data of cart items belonging to specified cart","typeName":"IPageIShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"index","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the full details of a single item inside a specific shopping cart. This operation is typically used by customers examining their cart prior to checkout or by support/admin personnel for order troubleshooting. Access controls ensure only cart owners or authorized roles can access the item details.","path":"/shoppingMallAiBackend/customer/carts/{cartId}/items/{itemId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the full details of a specific item in a shopping cart, including quantity, bundle selection, option codes, and note. The operation is critical for customers to verify, edit, or delete cart items before checkout. All item details, including references to the snapshot of the product at the add-to-cart time, are provided. Unauthorized access to items in another user's cart returns an error.","summary":"View a single cart item and its full attributes by itemId and cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart holding the item (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the item to view inside the cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full cart item with all details and references","typeName":"IShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve the full details of a single item inside a specific shopping cart. This operation is typically used by customers examining their cart prior to checkout or by support/admin personnel for order troubleshooting. Access controls ensure only cart owners or authorized roles can access the item details.","path":"/shoppingMallAiBackend/seller/carts/{cartId}/items/{itemId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the full details of a specific item in a shopping cart, including quantity, bundle selection, option codes, and note. The operation is critical for customers to verify, edit, or delete cart items before checkout. All item details, including references to the snapshot of the product at the add-to-cart time, are provided. Unauthorized access to items in another user's cart returns an error.","summary":"View a single cart item and its full attributes by itemId and cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart holding the item (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the item to view inside the cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full cart item with all details and references","typeName":"IShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieve the full details of a single item inside a specific shopping cart. This operation is typically used by customers examining their cart prior to checkout or by support/admin personnel for order troubleshooting. Access controls ensure only cart owners or authorized roles can access the item details.","path":"/shoppingMallAiBackend/admin/carts/{cartId}/items/{itemId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_cart_items {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_cart_id String @db.Uuid\n  shopping_mall_ai_backend_product_snapshot_id String @db.Uuid\n  quantity Int @db.Integer\n  option_code String\n  bundle_code String?\n  note String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  cart shopping_mall_ai_backend_carts @relation(fields: [shopping_mall_ai_backend_cart_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_36f731b9\")\n  productSnapshot shopping_mall_ai_backend_product_snapshots @relation(fields: [shopping_mall_ai_backend_product_snapshot_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_c496e45b\")\n  shopping_mall_ai_backend_cart_item_snapshots shopping_mall_ai_backend_cart_item_snapshots[]\n  @@index([shopping_mall_ai_backend_product_snapshot_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_ad9d0343\")\n  @@unique([shopping_mall_ai_backend_cart_id, shopping_mall_ai_backend_product_snapshot_id, option_code, bundle_code], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_14b4832c\")\n  @@index([shopping_mall_ai_backend_cart_id], map: \"shopping_mall_ai_backend_cart_items_shopping_mall_ai_b_94f02df8\")\n  @@index([created_at])\n  @@index([note(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Get the full details of a specific item in a shopping cart, including quantity, bundle selection, option codes, and note. The operation is critical for customers to verify, edit, or delete cart items before checkout. All item details, including references to the snapshot of the product at the add-to-cart time, are provided. Unauthorized access to items in another user's cart returns an error.","summary":"View a single cart item and its full attributes by itemId and cartId","parameters":[{"name":"cartId","description":"Unique identifier of the cart holding the item (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the item to view inside the cart (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full cart item with all details and references","typeName":"IShoppingMallAiBackendCartItem"},"authorizationRoles":["customer","seller","admin"],"name":"at","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation adds a new item to a customer's shopping cart, identified by cartId. It allows the user to specify a product snapshot, quantity, option selections, and optional bundle for precise item tracking. The operation is tightly integrated with the shopping_mall_ai_backend_carts and shopping_mall_ai_backend_cart_items tables, referencing the cart context and cart item specifics. Upon invocation, a new cart item is created for the target cart, with all relevant audit/evidence preserved according to business requirements. This endpoint is used in member or guest user flows when building or modifying a cart prior to checkout. All input fields are validated for business rules (inventory, unique product+option per cart, etc.), and the operation is subject to real-time business constraints, such as promotion or stacking logic affecting the cart state.","path":"/shoppingMallAiBackend/customer/carts/{cartId}/items","method":"post","prisma_schemas":"model shopping_mall_ai_backend_carts { ... }\nmodel shopping_mall_ai_backend_cart_items { ... }","description":"Add a new item to an existing shopping cart identified by cartId. The operation allows specifying a product snapshot and quantity, along with applicable product options and variant/bundle selection if available. The function validates product eligibility, inventory, and enforces cart-level constraints (e.g., only one entry per product option combination, maximum cart size, business policies). All relevant evidence and audit details are attached as required for traceability and rollback in pre-checkout workflow. Security checks ensure that only the cart owner (or session-bound guest) may perform this action, and failures (inventory constraint or invalid request) result in descriptive error codes.","summary":"Adds an item to a user's cart by cartId, specifying product snapshot and quantity. (shopping_mall_ai_backend_cart_items)","parameters":[{"name":"cartId","description":"Target cart's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details for the new cart item to be created, including product snapshot, quantity, options, and bundle selection if applicable.","typeName":"IShoppingMallAiBackendCartItem.ICreate"},"responseBody":{"description":"Information about the newly created cart item within the cart.","typeName":"IShoppingMallAiBackendCartItem"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates an existing item in a customer's shopping cart, identified by both cartId and itemId. It allows modification of quantity, option selection, bundle, and note fields on the target cart item. The logic is centrally tied to the shopping_mall_ai_backend_carts and shopping_mall_ai_backend_cart_items tables, validating business constraints such as inventory, option validity, and uniqueness within the cart. Evidence tracking for each update is enforced through business snapshots. Only the cart's owner or valid guest session may perform item updates.","path":"/shoppingMallAiBackend/customer/carts/{cartId}/items/{itemId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_carts { ... }\nmodel shopping_mall_ai_backend_cart_items { ... }","description":"Update an existing item in a shopping cart. The endpoint allows the client to change details like quantity, selected options, bundle, and associated notes for the item identified by itemId within cartId. Item update logic enforces all business rules for cart consistency, product eligibility, and inventory. On success, a new evidence snapshot is created. The user must have permission to modify the cart (either owner/member or a linked guest session). Errors are clearly described if constraints are violated (e.g., quantity exceeds stock, unauthorized action).","summary":"Updates fields of a cart item by itemId within cartId. (shopping_mall_ai_backend_cart_items)","parameters":[{"name":"cartId","description":"Target cart's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Target cart item's identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the cart item, such as quantity, option selection, bundle, or note.","typeName":"IShoppingMallAiBackendCartItem.IUpdate"},"responseBody":{"description":"Updated information of the cart item after the modification.","typeName":"IShoppingMallAiBackendCartItem"},"authorizationRoles":["customer"],"name":"update","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation deletes a specific item from a user's cart, identified by cartId and itemId, from the shopping_mall_ai_backend_cart_items table. It performs a logical (soft) deletion by setting the deleted_at timestamp, preserving evidence for future rollback, compliance, and traceability. The client must have ownership or be an authorized guest for the target cart. The operation is essential for maintaining cart integrity before checkout. Business rules (e.g., if the item is locked due to a pending order) are applied. Evidence of deletion is retained as required by policy.","path":"/shoppingMallAiBackend/customer/carts/{cartId}/items/{itemId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_carts { ... }\nmodel shopping_mall_ai_backend_cart_items { ... }","description":"Delete a cart item from the user's cart. This endpoint performs a soft deletion of the item (setting deleted_at timestamp) to maintain evidence and enable compliance with business and legal data retention policies. Only the cart owner or session-linked guest has permission to delete items. The endpoint will fail with a clear error if attempting to delete an item that is locked or referenced by an in-progress order. Evidence and audit detail are also preserved for rollback and review.","summary":"Soft deletes a specific item from a user's cart using cartId and itemId. (shopping_mall_ai_backend_cart_items)","parameters":[{"name":"cartId","description":"Target cart's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Target cart item's identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_cart_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves a paginated list of orders with advanced search, filtering, and sorting capabilities. It integrates with the shopping_mall_ai_backend_orders table and supports filtering by customer, channel, status, period, amount, and more. It is optimized for client (customer, seller, or admin) workflows needing access to order histories, including their business context and fulfillment information. The endpoint supports business logic for access control and masking sensitive fields for non-owners.","path":"/shoppingMallAiBackend/customer/orders","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }","description":"Search for and retrieve a filtered, paginated list of orders across customer or seller context. This operation enables complex queries by status, channel, currency, customer/seller, date range, and amount. Pagination and sorting is provided, and the response includes summary details for each order. Access control is enforced based on the user's role and ownership context. Sensitive details are masked for non-owner queries unless policy grants full access (e.g., seller or admin cases).","summary":"Retrieves a paginated, filtered list of orders with advanced search. (shopping_mall_ai_backend_orders)","parameters":[],"requestBody":{"description":"Search and filter parameters for order search and pagination.","typeName":"IShoppingMallAiBackendOrder.IRequest"},"responseBody":{"description":"Paginated result containing order summaries matching query criteria.","typeName":"IPageIShoppingMallAiBackendOrder.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_orders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This endpoint retrieves detailed information for a single order based on its orderId from shopping_mall_ai_backend_orders. It is intended for workflows where a customer, seller, or admin needs detailed order information for review, tracking, support, or compliance. The response includes all business fields, fulfillment steps, payment, delivery, and closure data, as permitted by role and business policy.","path":"/shoppingMallAiBackend/customer/orders/{orderId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }","description":"Retrieve complete detailed information about an order, including line items, status, timeline, fulfillment, payment, and evidence snapshots where permitted. The endpoint enforces access control; only the order's owner (customer/seller) or admins with business need can access full details. Partial masking is applied for sensitive data depending on user permissions. Used by customer (order tracking), seller (fulfillment), and admin (audit/helpdesk) flows.","summary":"Retrieves detailed information for an order by orderId. (shopping_mall_ai_backend_orders)","parameters":[{"name":"orderId","description":"Unique identifier for the order (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested order, respecting viewer role and policy.","typeName":"IShoppingMallAiBackendOrder"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_orders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation creates a new customer or checkout order based on a well-formed request body. It inserts a new record into the shopping_mall_ai_backend_orders table and launches necessary downstream processes (e.g., assigning code, committing inventory, initial payment intent). The endpoint validates all preconditions, such as customer eligibility, product availability, and channel/seller context. This is a primary entry for the checkout/ordering workflow. Business and evidence rules for creation are enforced, and all related fields are managed by system logic as required.","path":"/shoppingMallAiBackend/customer/orders","method":"post","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }","description":"Creates a new commercial order for a customer, seller, or channel context. The request must include line items and contextual business data (cart reference, channel, seller, currency, amount, etc.). Business logic validates each input element for eligibility, inventory, and compliance. Policy may restrict simultaneously open or overlapping orders for a customer to avoid conflicts. Sensitive business evidence fields (codes, amounts) are auto-managed, and downstream workflow (e.g., payment, fulfillment) is triggered as per order policy. Failures are returned with clear error explanations.","summary":"Creates a new order with customer, seller, channel, and line item data. (shopping_mall_ai_backend_orders)","parameters":[],"requestBody":{"description":"Order creation data, including customer, channel, items, and payment context.","typeName":"IShoppingMallAiBackendOrder.ICreate"},"responseBody":{"description":"Details of the freshly created order and its primary attributes.","typeName":"IShoppingMallAiBackendOrder"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_orders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates an existing order in the shopping_mall_ai_backend_orders table. It allows the permitted user to change allowed updatable fields (such as status, delivery information, contact, or notes) according to business policy and current workflow state. Only non-finalized, eligible orders can be updated; attempts to update closed/cancelled orders fail. Access is controlled for the order's owner, seller, or authorized admin. Evidence for every state change is preserved for compliance.","path":"/shoppingMallAiBackend/customer/orders/{orderId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }","description":"Update order details for a specific order, identified by orderId. The fields permitted for update are defined by business rules and may include status changes, contact details, fulfillment instructions, or buyer/seller notes. Data validation applies according to the order’s current state and role context. Only the order's owner, assigned seller, or admin may perform updates. Immutable audit histories are recorded for each update. Operations failing validation return descriptive business error codes/messages.","summary":"Updates permitted fields on an existing order identified by orderId. (shopping_mall_ai_backend_orders)","parameters":[{"name":"orderId","description":"Unique identifier of the order to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Permitted order fields for update (status, delivery, contact, notes, etc.).","typeName":"IShoppingMallAiBackendOrder.IUpdate"},"responseBody":{"description":"The updated order details following the modification.","typeName":"IShoppingMallAiBackendOrder"},"authorizationRoles":["customer"],"name":"update","model_name":"shopping_mall_ai_backend_orders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Deletes (soft delete) an order identified by orderId, performing logical deletion via setting deleted_at in shopping_mall_ai_backend_orders. Data is preserved for evidence, audit, rollback, and legal compliance. Only the order owner, assigned seller, or admin can perform the deletion. The operation will fail if the order cannot be deleted by policy (e.g., already fulfilled, under compliance hold).","path":"/shoppingMallAiBackend/customer/orders/{orderId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }","description":"Soft deletes an order with the specified orderId by setting the deleted_at timestamp. The record is preserved for audit and legal compliance per business policy. Order deletion is only allowed when business rules permit (not finalized or legally required to retain). Permission is required (order owner, assigned seller, or admin). Errors provide clear, actionable feedback when operation is not permitted by policy.","summary":"Performs a soft delete of an order identified by orderId. (shopping_mall_ai_backend_orders)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID) to be soft deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_orders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of all order items associated with a specific order ID. It allows querying by product, option, or bundle, leveraging the shopping_mall_ai_backend_order_items table from the Prisma schema. This operation supports detailed inspection of items within the context of a given order for review, fulfillment, refund, or analytics purposes. Pagination and search parameters facilitate processing large orders efficiently. Includes support for sorting and filtering by product, status, or creation time. Business context: enables customers, sellers, or admins to review the composition of order line items and manage after-sales scenarios (returns, exchanges, etc.).","path":"/shoppingMallAiBackend/customer/orders/{orderId}/items","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_items {...}","description":"This endpoint retrieves the set of items for a specific order, offering advanced search, pagination, and filtering by attributes such as product, bundle, or options. Order items include detailed product references, quantity, pricing, discounts, and provide the basis for returns, exchanges, or fulfilment events. Only users with appropriate authorization (the purchasing customer, assigned seller, or admin) may access this resource, and RBAC is enforced in the service logic. Pagination is required for large orders to ensure efficiency. Error handling includes access denial for unauthorized users or invalid order references.\n\nOrder items are modeled in the Prisma DB as shopping_mall_ai_backend_order_items, each referencing its parent order, associated products/bundles, and snapshotting product details for compliance. Results may include summary info or full detail depending on roles and query parameters.","summary":"Retrieve a paginated, filterable list of items within a specific order for review or fulfillment. Referenced table: shopping_mall_ai_backend_order_items.","parameters":[{"name":"orderId","description":"Unique identifier of the target order (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Parameters for searching, filtering, and paginating order items for this order.","typeName":"IShoppingMallAiBackendOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order item summaries matching search or filter criteria for the given order.","typeName":"IPageIShoppingMallAiBackendOrderItem.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_order_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single order item based on its order and item IDs, referencing the shopping_mall_ai_backend_order_items table in Prisma. It is used to display complete line-item details for after-sales service, fulfillment, customer support, or compliance investigations. Returns all available fields, including product title, quantity, pricing, options, bundles, and status. Only the purchaser, related seller, or admin can access details for privacy and business security.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/items/{itemId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_items {...}","description":"Fetches comprehensive details about a single order item for a given order and item ID. Includes all business attributes such as quantity, unit/final price, selected bundle or options, discounts, and product snapshot at order time. Security logic ensures only authorized party (order owner, seller, admin) can view details; the endpoint is used for order tracking, review processing, returns/exchange initiation, or support inquiries. If the item does not exist within the referenced order or the requester lacks authorization, an error is returned.\n\nThe endpoint strictly follows the structure of shopping_mall_ai_backend_order_items from the schema, supporting cross-entity validation (order↔item). Useful for audit trail purposes and business workflow automation.","summary":"Retrieve detailed data for a specific order item by order and item ID. Prisma table: shopping_mall_ai_backend_order_items.","parameters":[{"name":"orderId","description":"Unique identifier of the order (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Identifier for the specific item within the order (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full business and relational data for the requested order item.","typeName":"IShoppingMallAiBackendOrderItem"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_order_items","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation enables updating the business attributes of a specific order item. The attributes that can be updated depend on business policy (e.g., correcting item details for compliance, administering after-sales adjustments by admins). References the shopping_mall_ai_backend_order_items table and validates input against current item state. Supports updates such as corrections for fulfillment, compliance, or customer service resolution. Requires authorization and records the action for audit.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/items/{itemId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_items {...}","description":"Enables authorized users (admins or system operators in most cases) to update selected business attributes of a single order item, such as quantity, discounts, or status, as allowed by business rules. The operation triggers business validation to ensure the updates are permitted for the current order state. All changes are recorded in the audit trail for compliance. Common scenarios include correcting errors detected post-order, fulfilling compliance requirements, or resolving after-sale customer support cases.","summary":"Update business-allowed fields of a single order item for a specific order. Table: shopping_mall_ai_backend_order_items.","parameters":[{"name":"orderId","description":"Order identifier (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"The target item's unique identifier (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and updated values allowed for business-level update of an order item.","typeName":"IShoppingMallAiBackendOrderItem.IUpdate"},"responseBody":{"description":"Updated order item entity reflecting changes and current business state.","typeName":"IShoppingMallAiBackendOrderItem"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_items","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation deletes (soft deletes) a specific item from an order, by marking its deleted_at timestamp in accordance with audit and compliance requirements. Applies only to order items, not the entire order. Business logic ensures deletion is permitted (e.g., item not yet fulfilled or cancelled state). Only admins (or, if allowed, sellers before fulfillment) can perform this action. Operation is recorded for audit.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/items/{itemId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_items {...}","description":"Deletes (soft deletes) a single order item by order and item ID, marking the deleted_at field rather than removing the row. This acts as a logical removal and preserves the record for audit/tracing, required for regulatory compliance. The permitted deleter is usually an admin and is only possible for items not yet fulfilled or already cancelled. Attempts to delete items in an immutable state will return a business error. All deletions are logged for traceability.","summary":"Soft delete a specific order item by marking its deleted_at timestamp. Table: shopping_mall_ai_backend_order_items.","parameters":[{"name":"orderId","description":"Target order's unique identifier (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier for the item to be deleted (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_items","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of order item snapshots (versioned histories) for the given order. Used for auditing, dispute resolution, or compliance inspection, this endpoint presents the immutable state of items at specific points in time. Snapshots are stored in the shopping_mall_ai_backend_order_item_snapshots table. Only system administrators and designated auditors can access this resource, due to its sensitive nature. Supports pagination and filtering by item ID, snapshot reason, or timestamp.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/itemSnapshots","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_item_snapshots {...}","description":"Retrieves a paginated list of all order item snapshots for the specified order, enabling viewing of historical item states for compliance or audit purposes. Filtering supports reviewing by outcome, event type, or specific business actions. Snapshots provide point-in-time evidence for business workflow verification, dispute investigation, or regulatory reporting. Only authorized admin or compliance roles may use this to avoid privacy or business leakage.\n\nAll snapshot data matches the schema structure for shopping_mall_ai_backend_order_item_snapshots. Paging, sorting, and security are enforced as per business policy.","summary":"List paginated order item snapshots (version histories) for an order. Referenced table: shopping_mall_ai_backend_order_item_snapshots.","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for snapshots on the specified order.","typeName":"IShoppingMallAiBackendOrderItemSnapshot.IRequest"},"responseBody":{"description":"Paginated set of order item snapshots matching the filter for the order.","typeName":"IPageIShoppingMallAiBackendOrderItemSnapshot"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_item_snapshots","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a specific order item snapshot (historical version of an item) using both the target order and item snapshot IDs. It references the shopping_mall_ai_backend_order_item_snapshots table and returns all event data, quantities, pricing, reasons, and evidence context for this snapshot. Used by compliance, regulatory audit, or incident review. Only accessible by admins or compliance staff as per business logic and policy.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/itemSnapshots/{itemSnapshotId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_item_snapshots {...}","description":"Fetches the full details of a single order item snapshot for a given order, including all versioned attributes and audit trail information. Requires both order ID and snapshot ID. Intended for use cases such as compliance review, legal investigation, or detailed dispute trace. Security controls ensure only eligible admin/compliance users can access detailed snapshot data. Attempts to access an invalid or unrelated snapshot ID will result in an error. The schema is enforced strictly to comply with legal and regulatory evidence standards.","summary":"Retrieve a single order item snapshot for a given order and snapshot ID. Table: shopping_mall_ai_backend_order_item_snapshots.","parameters":[{"name":"orderId","description":"Order identifier to scope the snapshot (UUID format).","schema":{"type":"string","format":"uuid"}},{"name":"itemSnapshotId","description":"Unique identifier for the item snapshot (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the historical order item snapshot as requested.","typeName":"IShoppingMallAiBackendOrderItemSnapshot"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_item_snapshots","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of payment attempts and transactions related to a given order, using the shopping_mall_ai_backend_order_payments table from the schema. Useful for viewing all payment history, method mix, statuses, and reprocessing scenarios for an order. Only the order's customer, related seller, or admin can access payment data for that order. The operation supports filtering by payment method, status, or date for business analytics, fraud review, or customer support.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_payments {...}","description":"Enables search and retrieval of all payments (including multiple methods/splits) for a specific order, supporting advanced filtering, business review, and audit scenarios. Pagination and filtering help manage large order payment histories. Authorization logic ensures that only eligible users (order owner, seller, admin) can view payment data. Helpful for resolving payment issues, refund tracking, or operational analytics. Errors include access denial for unauthorized users or missing records.","summary":"Search and retrieve paginated payment records for the given order from shopping_mall_ai_backend_order_payments.","parameters":[{"name":"orderId","description":"Order identifier for payment search (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter/search parameters for order payments query.","typeName":"IShoppingMallAiBackendOrderPayment.IRequest"},"responseBody":{"description":"Paginated record of payment attempts and statuses for the specified order.","typeName":"IPageIShoppingMallAiBackendOrderPayment"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_order_payments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific payment record (method, amount, status, references, timestamps) for a given order, using order and payment IDs. Draws from shopping_mall_ai_backend_order_payments table in the Prisma schema. Used for progress review, after-sales support, fraud review, or audit. Only order owner, related seller, or admin may view details as enforced by business rules. Returns all available information including statuses and references.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments/{paymentId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders {...}\nmodel shopping_mall_ai_backend_order_payments {...}","description":"Provides in-depth status and audit information for a single payment record in the specified order. Returns all business and operational fields, including payment method, status, external references, and timestamps. Security checks ensure only authorized users with order or management responsibility may view payment details. Used primarily for support scenarios (failed payments, chargebacks, refund problems), regulatory audit, or general payment history review.","summary":"Fetch full business/payment details for a specific payment within an order. Referenced table: shopping_mall_ai_backend_order_payments.","parameters":[{"name":"orderId","description":"Order identifier (UUID format) for scoping payment data.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Specific payment record ID within order (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full business and operational detail for requested payment.","typeName":"IShoppingMallAiBackendOrderPayment"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_order_payments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation creates a new payment record associated with a specific order. It operates on the shopping_mall_ai_backend_order_payments table and enables customers, sellers, or admins to initiate payments for their orders using various supported payment methods such as card, bank transfer, deposit, mileage, coupon, and others. When a payment is created, the system validates the order's eligibility for payment, assigns the correct payment method, sets the initial status, records the amount, and associates any external provider references as needed. All credit, debit, and mixed payment workflows are supported. The request body must supply payment method, amount, and relevant metadata as required by business rules. The overall payment lifecycle—including status changes and related audit trails—is managed in the database schema. The operation enforces business validation such as duplicate payment prevention, proper status transitions, and eligibility checks before allowing payment creation. Errors may include ineligible status, insufficient details, or amount mismatches.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments","method":"post","prisma_schemas":"/// Core entity representing the customer's commercial transaction. Records\n/// all business events and status changes in an order lifecycle, including\n/// references to the customer, channel, and seller. Enforces regulatory and\n/// audit constraints. Supports evidence preservation and compliance\n/// investigation. Designed for independent creation, search, and legal\n/// traceability.\nmodel shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\n/// Tracks all payment attempts and records associated with an order.\n/// Supports multiple payment methods and split/partial charge scenarios.\n/// Used for audit, fraud detection, reconciliation, and compliance. Managed\n/// in context of the order; no direct creation by user.\nmodel shopping_mall_ai_backend_order_payments {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  payment_method String\n  amount Float @db.DoublePrecision\n  currency String\n  status String\n  external_reference String?\n  requested_at DateTime @db.Timestamptz\n  completed_at DateTime?\n  failed_at DateTime?\n  cancelled_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  ...\n}","description":"Creates a new payment entry for an order by specifying the payment method, amount, currency, and optional external reference. This operation validates the order’s eligibility for new payment (e.g., not already fully paid/cancelled), and enforces business rules around status, duplicate prevention, and required information. The payment is initialized with a status such as 'pending' and tracks details such as creation time and currency. The system supports multiple payment methods, split payments, and currency validation. Auditing and regulatory compliance for payment creation are maintained through the shopping_mall_ai_backend_order_payments table. The action accepts a structured request body and returns the complete payment record upon success. Error scenarios include invalid order status, insufficient data, and validation failures.","summary":"Create a payment for a specific order. (shopping_mall_ai_backend_order_payments)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payment creation payload including method, amount, currency, and provider references.","typeName":"IShoppingMallAiBackendOrderPayment.ICreate"},"responseBody":{"description":"Details of the newly created payment for the order.","typeName":"IShoppingMallAiBackendOrderPayment"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_order_payments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates an existing payment record for a specific order, typically allowing changes to payment method, status, amount, or external provider data prior to completion or settlement. The endpoint enforces precise business logic regarding permitted status transitions and modification rules. Only payments in allowable statuses (e.g., pending, failed) may be updated. The shopping_mall_ai_backend_order_payments model defines all field constraints and supports auditing of payment changes. Security and business validation ensure that only the payment owner or admins with proper authority can perform updates, and all changes are logged for compliance. Error handling includes forbidden transitions, locked statuses, and data validation errors. Audit logs are maintained for all updates to payment records. The operation is not permitted once a payment is completed, cancelled, or deleted.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments/{paymentId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payments {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  payment_method String\n  amount Float @db.DoublePrecision\n  currency String\n  status String\n  ...\n}","description":"Updates a payment record for an order, such as changing the payment method, amount, currency, or updating status (pending, failed, etc.) provided that the payment is not settled or locked. Enforces rigorous validation for integrity of payment flows, handling all rules as per business and regulatory requirements. Supports audit-logging of the change and allows only authorized actors. Modifiable only when in allowed status. The operation returns the updated payment record. Errors are returned for invalid payment status, missing required fields, or business rule violation.","summary":"Update a payment for a specific order. (shopping_mall_ai_backend_order_payments)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Payment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the payment record (method, amount, status, etc).","typeName":"IShoppingMallAiBackendOrderPayment.IUpdate"},"responseBody":{"description":"Updated payment details for the order.","typeName":"IShoppingMallAiBackendOrderPayment"},"authorizationRoles":["customer"],"name":"update","model_name":"shopping_mall_ai_backend_order_payments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation permanently deletes (hard delete) a payment record associated with a specific order from the shopping_mall_ai_backend_order_payments table. Deletion is only allowed if the payment is in a non-settled state (e.g., pending, failed, not completed) and strict business logic is enforced to prevent removal of completed or locked payments. This hard delete action cannot be reversed and removes the payment record from the system for both audit and compliance purposes. Use with caution and ensure all business rules are satisfied before invoking. Only authorized users may erase payment records. If the payment record has already been completed, cancelled or otherwise locked, the operation will return an error and take no action.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments/{paymentId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payments {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  payment_method String\n  amount Float @db.DoublePrecision\n  currency String\n  status String\n  ...\n}","description":"Soft delete a payment record for a specific order by marking the payment as deleted. This operation sets the deleted_at timestamp, preserving the record for audit and compliance purposes, and excludes it from normal queries. Deletion is only allowed if the payment is in a non-settled state (e.g., pending, failed, not completed). The action cannot be reversed and removes the payment record from active use, but preserves it in the database for legal and business review. If the payment record has already been completed, cancelled or otherwise locked, the operation will return an error and take no action.","summary":"Soft delete a payment for a specific order. (shopping_mall_ai_backend_order_payments)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Payment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_order_payments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves a paginated and searchable list of payment attempts for a specific payment attached to a given order. It operates on the shopping_mall_ai_backend_order_payment_attempts table, supporting audit and investigation of all attempt history (successes, failures, retries) for regulatory and business monitoring. Filtering, sorting, and pagination parameters can be used for efficient navigation. Each attempt record contains result status, error information, provider codes, request/response times, and all metadata as stored in the schema. The operation allows authorized users to search and review the complete attempt history for compliance, fraud, or support scenarios. Only attempts for the referenced order's payment are returned. Possible errors include not found or access denied for unauthorized users.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments/{paymentId}/attempts","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payments {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payment_attempts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_payment_id String @db.Uuid\n  attempt_state String\n  error_message String?\n  provider_code String?\n  requested_at DateTime @db.Timestamptz\n  completed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  ...\n}","description":"Retrieve a paginated, filtered, and searchable list of all payment attempts for a specific payment attached to an order. The endpoint allows filtering by attempt state, provider, result, dates, etc., and supports pagination for efficiency. Each record includes attempt state, errors, provider code, and timestamps. The operation facilitates audit, support, and fraud monitoring. Only authorized actors can access this endpoint. Errors are reported for not found or insufficient permissions.","summary":"Search and list payment attempts for an order payment. (shopping_mall_ai_backend_order_payment_attempts)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Payment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for payment attempt listing.","typeName":"IShoppingMallAiBackendOrderPaymentAttempt.IRequest"},"responseBody":{"description":"Paginated and filtered list of payment attempt history for the order's payment.","typeName":"IPageIShoppingMallAiBackendOrderPaymentAttempt"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_order_payment_attempts","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves the details of a specific payment attempt for a payment attached to a given order. It operates on the shopping_mall_ai_backend_order_payment_attempts model, enabling authorized users to view full attempt information including result state, error message (if any), provider code, and all associated timestamps. The endpoint enforces access control, ensuring only actors linked to the order or payment may view this sensitive data. Audit and support review use this information for troubleshooting and compliance. Error status is returned when referenced attempt is missing or access is denied.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/payments/{paymentId}/attempts/{attemptId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payments {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_payment_attempts {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_payment_id String @db.Uuid\n  attempt_state String\n  error_message String?\n  provider_code String?\n  requested_at DateTime @db.Timestamptz\n  completed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  ...\n}","description":"Retrieve details of a specific payment attempt for a payment attached to an order. This operation provides the full record including all fields stored for the attempt—result state, errors, provider code, request/completion timestamps. Used for compliance, audit, and support troubleshooting by authorized actors. Only attempts owned by the referenced payment on the order are accessible. Returns an error status if not found or unauthorized.","summary":"Get details of a specific payment attempt for an order payment. (shopping_mall_ai_backend_order_payment_attempts)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Payment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"attemptId","description":"Payment attempt's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record of the payment attempt for the payment.","typeName":"IShoppingMallAiBackendOrderPaymentAttempt"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_order_payment_attempts","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of deliveries (shipments) for a specific order. It operates on the shopping_mall_ai_backend_order_deliveries table, providing shipping events, delivery status, tracking, and fulfillment partner codes. Filtering and pagination can be applied to efficiently browse large multi-shipment orders. Each delivery record includes delivery status, shipping provider, tracking info, shipping/delivery dates, and notes. The response detail level may be controlled by user roles (e.g. customer, seller, admin). Only deliveries associated with the provided order are returned. The operation is used for tracing shipment progress, support, and compliance auditing. Errors include order not found or delivery lookup failure.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/deliveries","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_deliveries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  delivery_status String\n  logistics_provider String?\n  tracking_number String?\n  shipped_at DateTime?\n  delivered_at DateTime?\n  delivery_notes String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  ...\n}","description":"Retrieves a filtered and paginated list of delivery/shipment records for a specific order, supporting business logic for multi-shipment, split shipments, international logistics, and real-time tracking. Only deliveries linked to the target order are returned. Each result includes shipment status, tracking, provider, shipping/delivery timestamps, and can be filtered by delivery status or time windows. Security controls ensure only order-linked actors may access detailed status and tracking. Used for fulfillment tracking, support, and compliance checks.","summary":"Search and list deliveries for a specific order. (shopping_mall_ai_backend_order_deliveries)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination parameters for delivery search.","typeName":"IShoppingMallAiBackendOrderDelivery.IRequest"},"responseBody":{"description":"Paginated and filtered list of delivery/shipment records for the order.","typeName":"IPageIShoppingMallAiBackendOrderDelivery"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_order_deliveries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves the details of a specific delivery/shipment record for a given order. The API allows customers, sellers, and authorized admins to view fulfillment state, shipping provider, tracking information, related timestamps, and logistical notes. The operation works on the shopping_mall_ai_backend_order_deliveries schema, referencing delivery status, provider codes, and evidence timestamps for audit purposes. Only actors linked to the target order and delivery may access this endpoint, and responses are controlled by business logic such as role-based detail. Used for shipment tracking, support, or compliance review.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/deliveries/{deliveryId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_deliveries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  delivery_status String\n  logistics_provider String?\n  tracking_number String?\n  shipped_at DateTime?\n  delivered_at DateTime?\n  delivery_notes String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  ...\n}","description":"Retrieve detailed shipment/delivery information for a given delivery associated with a specific order. The endpoint details shipping status, tracking, provider, timestamps, and business context. Used by authorized actors—customers, sellers, or admins—to audit delivery status, view fulfillment progress, or support issue resolution. Ensures proper access control and business rule compliance for shipment record access. Errors include record not found, insufficient permissions, or business rule violations.","summary":"Get details of a specific delivery for an order. (shopping_mall_ai_backend_order_deliveries)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed shipment/delivery record for the order.","typeName":"IShoppingMallAiBackendOrderDelivery"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_order_deliveries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates the information for a specific delivery/shipment record associated with a given order. It is typically used for updating delivery status, tracking information, shipping partner data, or logistics notes. The endpoint operates on the shopping_mall_ai_backend_order_deliveries table, enforcing business logic for valid state transitions and ensuring audit compliance for modification actions. Only authorized actors—seller or admin responsible for fulfillment—may update delivery records. Operations are permitted only when a delivery is in modifiable status and not finalized or locked. Auditing and compliance require accurate recording of update reasons and supporting information. Returns the updated delivery record, or errors if validation fails or unauthorized.","path":"/shoppingMallAiBackend/seller/orders/{orderId}/deliveries/{deliveryId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders {\n  id String @id @db.Uuid\n  ...\n}\nmodel shopping_mall_ai_backend_order_deliveries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_order_id String @db.Uuid\n  delivery_status String\n  logistics_provider String?\n  tracking_number String?\n  shipped_at DateTime?\n  delivered_at DateTime?\n  delivery_notes String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  ...\n}","description":"Update information for a specific delivery record of a given order. Fields that can be updated include delivery status, tracking number, logistics provider, shipped/delivered timestamps, and delivery notes. Strict validation logic applies for allowable status transitions, authenticating only actors with fulfillment responsibility. All updates are logged for compliance and audit. Returns the updated delivery record. Forbidden if delivery status is locked/final or requesting user is unauthorized.","summary":"Update a specific delivery for an order. (shopping_mall_ai_backend_order_deliveries)","parameters":[{"name":"orderId","description":"Order's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the delivery record (status, tracking, provider, notes).","typeName":"IShoppingMallAiBackendOrderDelivery.IUpdate"},"responseBody":{"description":"Updated details of the delivery record.","typeName":"IShoppingMallAiBackendOrderDelivery"},"authorizationRoles":["seller"],"name":"update","model_name":"shopping_mall_ai_backend_order_deliveries","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"This operation performs a hard delete of a specific delivery record for an order, identified by the combination of orderId and deliveryId. It targets the shopping_mall_ai_backend_order_deliveries table, which represents individual delivery events related to customer orders. This action is utilized to remove delivery information that was logged in error or must be purged due to administrative reasons. The operation is only available to authorized users with appropriate privileges, such as administrators or order managers. The deletion is a hard deletion since 'deleted_at' is present in the schema, and a logical removal is performed for compliance and regulatory evidence. All removal operations are recorded for audit purposes, and associated delivery events or tracking information are subject to business rules regarding cascading deletions or evidence preservation.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/deliveries/{deliveryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_order_deliveries { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid delivery_status String logistics_provider String? tracking_number String? shipped_at DateTime? @db.Timestamptz delivered_at DateTime? @db.Timestamptz delivery_notes String? created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_deliveries_shopping_mal_021fe116\") shopping_mall_ai_backend_order_delivery_events shopping_mall_ai_backend_order_delivery_events[] @@unique([shopping_mall_ai_backend_order_id, tracking_number], map: \"shopping_mall_ai_backend_order_deliveries_shopping_mal_51caec59\") @@index([shopping_mall_ai_backend_order_id], map: \"shopping_mall_ai_backend_order_deliveries_shopping_mal_12dc5b5e\") @@index([delivery_status]) }","description":"Delete a specific delivery record for a given order. This operation performs a logical deletion (soft delete) of the shopping_mall_ai_backend_order_deliveries record, setting the deleted_at timestamp. Only authorized administrative users are permitted to perform this action, and all operations are logged for audit and compliance. Related delivery events remain in the database according to business rules for evidence retention. This operation is critical for correcting erroneous delivery records or removing incorrect tracking events post-creation.\n\nSecurity is enforced according to administrative privilege; attempts by unauthorized users will return a forbidden error. The operation does not cascade delete associated delivery event logs, as evidence and business compliance require those to remain unless independently removed by policy.\n\nError handling includes not-found responses for invalid orderId or deliveryId, and compliance event recording for all hard or logical deletions. Usage is limited to administrative interfaces, not available for customers or sellers.","summary":"Soft delete a specific delivery record of an order by marking it as deleted.","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the delivery.","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Unique identifier of the delivery to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_deliveries","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of all delivery events (status changes, checkpoints, exceptions) for a specific delivery associated with an order. The events are tied to the corresponding deliveryId and orderId and are stored in the shopping_mall_ai_backend_order_delivery_events table. Users can filter, paginate, and sort the results based on event type, timestamp, or other criteria to facilitate delivery tracking and audit analysis. The operation supports business workflows such as shipment monitoring, exception handling, and compliance evidence audits. The response structure supports both business and technical users (e.g., customer service, logistics, admin analysts).","path":"/shoppingMallAiBackend/admin/orders/{orderId}/deliveries/{deliveryId}/events","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_order_delivery_events { id String @id @db.Uuid shopping_mall_ai_backend_order_delivery_id String @db.Uuid event_type String event_context String? logged_at DateTime @db.Timestamptz created_at DateTime @db.Timestamptz orderDelivery shopping_mall_ai_backend_order_deliveries @relation(fields: [shopping_mall_ai_backend_order_delivery_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_54e76270\") @@unique([shopping_mall_ai_backend_order_delivery_id, logged_at], map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_2dace243\") @@index([shopping_mall_ai_backend_order_delivery_id], map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_d3911a42\") }","description":"Retrieve a paginated list of status update events, checkpoints, and exception logs for a given delivery event within a specific order. This operation allows logistics managers, administrators, or authorized customer service agents to monitor and audit the full timeline of delivery for compliance, performance analysis, or dispute resolution purposes.\n\nFiltering and sorting can be applied based on event type, logged_at, or keyword within event_context. The operation supports business and regulatory requirements, ensuring immutable delivery evidence records. Security is enforced to ensure only authorized users can access complete event logs. Each response includes full event metadata, including creation and logged_at timestamps, event_type codes, and detailed event_context (if any).\n\nExpected errors include not found (if order or delivery is missing), forbidden (if user lacks privileges), and validation errors for invalid IDs. Operation may be linked from shipment tracking UIs or administrative dashboards.","summary":"Retrieve delivery event logs for a specific shipment of an order (paginated).","parameters":[{"name":"orderId","description":"Order ID containing the delivery.","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Delivery ID for which events are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Optional filters and pagination options to constrain the result set for delivery events.","typeName":"IShoppingMallAiBackendOrderDeliveryEvent.IRequest"},"responseBody":{"description":"Paginated list of delivery event logs matching the query criteria.","typeName":"IPageIShoppingMallAiBackendOrderDeliveryEvent"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_delivery_events","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a specific delivery event's detail information for a given delivery in an order. It allows users to access the full audit trail and status of an individual logistics event, including type, context, timestamp, and evidence metadata. Used by logistics administrators, customer support, or audit investigators for tracking and compliance verification. It provides a single, detailed event entity as recorded in the shopping_mall_ai_backend_order_delivery_events table.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/deliveries/{deliveryId}/events/{eventId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_order_delivery_events { id String @id @db.Uuid shopping_mall_ai_backend_order_delivery_id String @db.Uuid event_type String event_context String? logged_at DateTime @db.Timestamptz created_at DateTime @db.Timestamptz orderDelivery shopping_mall_ai_backend_order_deliveries @relation(fields: [shopping_mall_ai_backend_order_delivery_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_54e76270\") @@unique([shopping_mall_ai_backend_order_delivery_id, logged_at], map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_2dace243\") @@index([shopping_mall_ai_backend_order_delivery_id], map: \"shopping_mall_ai_backend_order_delivery_events_shoppin_d3911a42\") }","description":"Retrieve detailed information of a particular delivery event from the delivery timeline of a given order. This operation is used for compliance, tracking, or customer support investigations and returns the full event record with metadata including event_type (status update, exception, etc), event_context (description), logged_at, and creation timestamp.\n\nSecurity requires proper authorization (admin, logistic manager, or designated operator). Errors include not found (invalid orderId, deliveryId, or eventId), or forbidden in case of insufficient privileges. Use case scenarios include logistics dispute resolution, performance audits, and chain-of-custody evidencing.","summary":"View the details of a specific delivery event in an order's shipment timeline.","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the delivery.","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Unique identifier of the delivery being audited.","schema":{"type":"string","format":"uuid"}},{"name":"eventId","description":"Unique identifier of the delivery event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed delivery event record including event type, context, and timestamps.","typeName":"IShoppingMallAiBackendOrderDeliveryEvent"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_delivery_events","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of return records associated with a specific order. Each return represents a customer-initiated or operational return request for an order item. The shopping_mall_ai_backend_order_returns table holds the return details, including linked order_item_id, reason, status, and process timestamps. This endpoint is used by customer support, sellers, and administrators for after-sales management, compliance evidence, and batch review. Supports filtering by return status, requested_at range, and return reason.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/returns","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_order_returns { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid shopping_mall_ai_backend_order_item_id String @db.Uuid return_reason String status String requested_at DateTime @db.Timestamptz processed_at DateTime? @db.Timestamptz completed_at DateTime? @db.Timestamptz created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_8153f17c\") orderItem shopping_mall_ai_backend_order_items @relation(fields: [shopping_mall_ai_backend_order_item_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_228545ce\") @@index([shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_92cb4937\") @@unique([shopping_mall_ai_backend_order_id, shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_32ecc40b\") @@index([status, requested_at]) }","description":"Retrieve a paginated list of all return requests associated with a particular order. This endpoint allows authorized customer service agents, sellers, or admins to review and audit the after-sales return history for any order, supporting batch workflows, compliance audits, and quality analysis.\n\nFiltering can be performed by status (requested, approved, rejected, completed), request time, or business reason. Returned records provide full details: order_item, status, return reason, processing/completion timestamps, and evidence attributes. Security policy restricts access to authorized users according to organizational role, ensuring privacy of after-sales actions and sensitive customer requests. Output can be integrated into administrative portals and after-sales dashboards.","summary":"List returns (after-sales requests) for an order with filter and pagination.","parameters":[{"name":"orderId","description":"Unique order ID for which returns are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Optional filters and pagination parameters for order returns.","typeName":"IShoppingMallAiBackendOrderReturn.IRequest"},"responseBody":{"description":"Paginated list of return requests for the order.","typeName":"IPageIShoppingMallAiBackendOrderReturn"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_returns","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the details of a specific return request for an order item. The operation returns all business attributes of the return, including linked order item, return reason, status, audit timestamps, and processing outcomes. Used by after-sales support, compliance managers, and sellers for review, dispute handling, or compliance traceability. Only authorized roles may access full return details; customers may require filtered or anonymized results depending on business policy.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/returns/{returnId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_order_returns { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid shopping_mall_ai_backend_order_item_id String @db.Uuid return_reason String status String requested_at DateTime @db.Timestamptz processed_at DateTime? @db.Timestamptz completed_at DateTime? @db.Timestamptz created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_8153f17c\") orderItem shopping_mall_ai_backend_order_items @relation(fields: [shopping_mall_ai_backend_order_item_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_228545ce\") @@index([shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_92cb4937\") @@unique([shopping_mall_ai_backend_order_id, shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_32ecc40b\") @@index([status, requested_at]) }","description":"Retrieve the full details, status timeline, and audits of an individual return request for an item within an order. Authorized administrative or after-sales personnel can see all attributes, including order linkage, return reason, request, process, and completion dates, and audit trace for compliance reporting.\n\nError responses include not-found for invalid orderId/returnId, or forbidden for insufficient privileges. Security logic ensures only privileged users may access confidential or personally-identifiable return records. Output is usable in customer service consoles and compliance audit workflows.","summary":"Get details of a single return action for a specific order item.","parameters":[{"name":"orderId","description":"ID of the order for which the return was requested.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"ID of the return request within this order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All business and audit details of the return request.","typeName":"IShoppingMallAiBackendOrderReturn"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_returns","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing return request for an order item. Fields such as return_reason, status, or timestamps can be modified to accommodate changes in business status (e.g., approval, rejection, completion), error correction, or after-sales dispute resolution. The underlying table shopping_mall_ai_backend_order_returns supports full audit logs and evidence trace. Used by authorized returns managers, after-sales teams, or administrators. Changes are always recorded for compliance and historical analysis.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/returns/{returnId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_order_returns { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid shopping_mall_ai_backend_order_item_id String @db.Uuid return_reason String status String requested_at DateTime @db.Timestamptz processed_at DateTime? @db.Timestamptz completed_at DateTime? @db.Timestamptz created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_8153f17c\") orderItem shopping_mall_ai_backend_order_items @relation(fields: [shopping_mall_ai_backend_order_item_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_228545ce\") @@index([shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_92cb4937\") @@unique([shopping_mall_ai_backend_order_id, shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_32ecc40b\") @@index([status, requested_at]) }","description":"Update a return request for a specific order item. Permitted fields for update include return_reason, status, and critical process timestamps. All updates generate historical snapshots for audit evidence. This endpoint is restricted to after-sales support, returns managers, and authorized admin users; attempts by unauthorized users are denied.\n\nCommon business use includes status transition (e.g., requested→approved, approved→completed), reason correction, or adjustment of process dates. The endpoint supports compliance workflow, escalation, and evidence capture. Error handling includes validation failure (if data violates business logic or state transitions), forbidden (insufficient privilege), and not-found (invalid IDs).","summary":"Update return request details or status for an order item after creation.","parameters":[{"name":"orderId","description":"Order ID linked to the return request.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"Unique return request ID to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the return, including status or reason changes.","typeName":"IShoppingMallAiBackendOrderReturn.IUpdate"},"responseBody":{"description":"Full updated return entity reflecting all requested changes.","typeName":"IShoppingMallAiBackendOrderReturn"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_returns","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation performs a logical (soft) delete of a return request record for a given order item. It marks the record deleted by setting the 'deleted_at' timestamp according to the schema. Used for administrative or compliance purposes, typically to remove inappropriate or mistaken return requests. Only privileged after-sales, compliance, or admin users can execute this action. The operation ensures appropriate business audit and logs. Cascading or associated record deletion is handled per business requirements for audit trails, typically maintaining evidence records in related tables.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/returns/{returnId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_order_returns { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid shopping_mall_ai_backend_order_item_id String @db.Uuid return_reason String status String requested_at DateTime @db.Timestamptz processed_at DateTime? @db.Timestamptz completed_at DateTime? @db.Timestamptz created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_8153f17c\") orderItem shopping_mall_ai_backend_order_items @relation(fields: [shopping_mall_ai_backend_order_item_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_228545ce\") @@index([shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_92cb4937\") @@unique([shopping_mall_ai_backend_order_id, shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_returns_shopping_mall_a_32ecc40b\") @@index([status, requested_at]) }","description":"Perform a soft delete of a return request record for a specific order item. This sets the deleted_at timestamp on the record instead of removing it from the database, preserving full business and compliance evidence. Used for error correction, compliance, or operational cleanup by privileged users only; all deletions are logged for regulatory oversight and audit analysis.\n\nUnauthorized delete attempts or attempts outside compliance scope are forbidden. The operation does not remove related evidence records (order history, item data, etc.), which must be preserved for audit by business rule. Errors include not found (invalid IDs) and forbidden (insufficient privilege).","summary":"Soft delete a return request for an order item (admin/compliance only).","parameters":[{"name":"orderId","description":"Order ID associated with the return request to delete.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"Return request ID to delete (soft delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_returns","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated list of all exchange requests associated with a specific order. Each exchange record documents post-purchase exchange actions (such as size, color swap) for an order item. The shopping_mall_ai_backend_order_exchanges table holds exchange details, including the linked order item, rationale, status, approval, and completion timeline. Used by after-sales support, compliance managers, or sellers for reviewing exchange requests, performance analytics, and regulatory audits. Supports business logic filtering by status and rationale, and paginated/batch retrieval for dashboards and audits.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/exchanges","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_order_exchanges { id String @id @db.Uuid shopping_mall_ai_backend_order_id String @db.Uuid shopping_mall_ai_backend_order_item_id String @db.Uuid exchange_reason String status String requested_at DateTime @db.Timestamptz processed_at DateTime? @db.Timestamptz completed_at DateTime? @db.Timestamptz created_at DateTime @db.Timestamptz updated_at DateTime @db.Timestamptz deleted_at DateTime? @db.Timestamptz order shopping_mall_ai_backend_orders @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_exchanges_shopping_mall_d96d8c4c\") orderItem shopping_mall_ai_backend_order_items @relation(fields: [shopping_mall_ai_backend_order_item_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_order_exchanges_shopping_mall_191056aa\") @@index([shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_exchanges_shopping_mall_a43c4dce\") @@unique([shopping_mall_ai_backend_order_id, shopping_mall_ai_backend_order_item_id], map: \"shopping_mall_ai_backend_order_exchanges_shopping_mall_81a0e3ec\") @@index([status, requested_at], map: \"shopping_mall_ai_backend_order_exchanges_status_reques_419a2a09\") }","description":"Retrieve a paginated list of all exchange requests for a specific order. This operation allows admins, after-sales support, and sellers to review, search, and filter all exchanges, which represent requests for item replacement or attribute swap within the order. Filtering by status or rationale is supported; results are paginated for dashboard and operational efficiency.\n\nAuthorization is required for access; only privileged users (admin, seller, after-sales support) may retrieve full exchange audit history. The response includes exchange metadata, linked order/item/return associations, full status/rationale trail, and compliance timestamps. Used for business analytics, dispute resolution, and regulatory audit. Integrates with customer service and after-sales management workflows.","summary":"List all exchanges for a given order with filters and pagination.","parameters":[{"name":"orderId","description":"Order ID for which exchange requests are queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Optional filters and pagination parameters for order exchanges.","typeName":"IShoppingMallAiBackendOrderExchange.IRequest"},"responseBody":{"description":"Paginated list of exchange requests for the order.","typeName":"IPageIShoppingMallAiBackendOrderExchange"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a specific exchange record related to an order, allowing customers or admins to see detailed information about an after-sales exchange case. The operation is based on the Orders and related OrderExchanges table. It enables access to details such as the exchange status, requested and processed times, associated item, and business context. This is essential for customers to track the progress or result of their exchange requests and for admins to review the audit trail and compliance evidence. Details are returned for both open and completed exchanges, including links to incident workflows if any exist.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/exchanges/{exchangeId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"This operation fetches a single after-sales exchange record associated with a specific order and order item. It provides detailed information necessary for a customer or admin to understand the current state or resolution history of the exchange, including status transitions, request and completion times, reason, and evidence. Security considerations ensure only the owner (customer) or authorized admin can access the record, as sensitive customer service details are returned. The operation references both the Orders and OrderExchanges tables with all relevant exchange fields and their business context.","summary":"Get a specific order item exchange record by order and exchange ID.","parameters":[{"name":"orderId","description":"Unique identifier for the target order (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Unique identifier for the target exchange (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specific order item exchange, including status, timestamps, reasons, and history.","typeName":"IShoppingMallAiBackendOrderExchange"},"authorizationRoles":["customer","admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves a specific exchange record related to an order, allowing customers or admins to see detailed information about an after-sales exchange case. The operation is based on the Orders and related OrderExchanges table. It enables access to details such as the exchange status, requested and processed times, associated item, and business context. This is essential for customers to track the progress or result of their exchange requests and for admins to review the audit trail and compliance evidence. Details are returned for both open and completed exchanges, including links to incident workflows if any exist.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/exchanges/{exchangeId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"This operation fetches a single after-sales exchange record associated with a specific order and order item. It provides detailed information necessary for a customer or admin to understand the current state or resolution history of the exchange, including status transitions, request and completion times, reason, and evidence. Security considerations ensure only the owner (customer) or authorized admin can access the record, as sensitive customer service details are returned. The operation references both the Orders and OrderExchanges tables with all relevant exchange fields and their business context.","summary":"Get a specific order item exchange record by order and exchange ID.","parameters":[{"name":"orderId","description":"Unique identifier for the target order (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Unique identifier for the target exchange (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specific order item exchange, including status, timestamps, reasons, and history.","typeName":"IShoppingMallAiBackendOrderExchange"},"authorizationRoles":["customer","admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates a specific order item exchange with new business or process data. This is used by customers to request updates, provide additional evidence, or correct information, and by admins or sellers to process approval, rejection, or completion. All changes are subject to evidence logging for compliance. Works on the Orders and OrderExchanges tables and handles validation of business rules for eligibility, state transitions, and audit trails.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/exchanges/{exchangeId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"Enables updating the details or status of an exchange request for an order item. Permits actions such as providing extra information, escalating an exchange, or updating the business decision and processing notes. All state changes are validated against business workflow and eligibility rules, and changes are logged for compliance and dispute auditing. Only the involved customer, assigned seller, or an admin may update the record, with access checks enforced.","summary":"Update an order item exchange, such as status, reasons, or admin decision.","parameters":[{"name":"orderId","description":"Unique identifier for the order to which the exchange belongs.","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Unique identifier for the specific exchange being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated exchange information or process decision for the exchange case.","typeName":"IShoppingMallAiBackendOrderExchange.IUpdate"},"responseBody":{"description":"Updated details of the exchange record after business logic and compliance checks.","typeName":"IShoppingMallAiBackendOrderExchange"},"authorizationRoles":["customer","admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Updates a specific order item exchange with new business or process data. This is used by customers to request updates, provide additional evidence, or correct information, and by admins or sellers to process approval, rejection, or completion. All changes are subject to evidence logging for compliance. Works on the Orders and OrderExchanges tables and handles validation of business rules for eligibility, state transitions, and audit trails.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/exchanges/{exchangeId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"Enables updating the details or status of an exchange request for an order item. Permits actions such as providing extra information, escalating an exchange, or updating the business decision and processing notes. All state changes are validated against business workflow and eligibility rules, and changes are logged for compliance and dispute auditing. Only the involved customer, assigned seller, or an admin may update the record, with access checks enforced.","summary":"Update an order item exchange, such as status, reasons, or admin decision.","parameters":[{"name":"orderId","description":"Unique identifier for the order to which the exchange belongs.","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Unique identifier for the specific exchange being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated exchange information or process decision for the exchange case.","typeName":"IShoppingMallAiBackendOrderExchange.IUpdate"},"responseBody":{"description":"Updated details of the exchange record after business logic and compliance checks.","typeName":"IShoppingMallAiBackendOrderExchange"},"authorizationRoles":["customer","admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Performs logical deletion (soft-delete) of a specific order exchange record, marking it as deleted in the system for compliance and evidence preservation. Actual exchange data remains available for audit purposes and is not physically removed. This operation is restricted to the owner customer and authorized admins; it uses the Orders and OrderExchanges tables and requires confirmation that the user has rights to remove the record.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/exchanges/{exchangeId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"Marks an exchange as deleted in the system using a soft delete (sets the deleted_at timestamp), preserving the full history and evidence for future compliance and audit requests. Returns no body on success. Only the involved customer or an administrator may execute this operation, and all actions are recorded in the audit trail. The exchange remains in the database but is excluded from normal queries and user access except for authorized purposes.","summary":"Soft-delete an order item exchange for evidence retention and compliance.","parameters":[{"name":"orderId","description":"Order ID the exchange belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Target exchange ID to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Performs logical deletion (soft-delete) of a specific order exchange record, marking it as deleted in the system for compliance and evidence preservation. Actual exchange data remains available for audit purposes and is not physically removed. This operation is restricted to the owner customer and authorized admins; it uses the Orders and OrderExchanges tables and requires confirmation that the user has rights to remove the record.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/exchanges/{exchangeId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_exchanges { ... }","description":"Marks an exchange as deleted in the system using a soft delete (sets the deleted_at timestamp), preserving the full history and evidence for future compliance and audit requests. Returns no body on success. Only the involved customer or an administrator may execute this operation, and all actions are recorded in the audit trail. The exchange remains in the database but is excluded from normal queries and user access except for authorized purposes.","summary":"Soft-delete an order item exchange for evidence retention and compliance.","parameters":[{"name":"orderId","description":"Order ID the exchange belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"exchangeId","description":"Target exchange ID to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_exchanges","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated list of refund records for a specific order. Allows users, admins, or compliance staff to view all refunds associated with a particular order for audit, compliance, and customer service. The Refunds entity is related to the Orders table and contains detailed information about refund reason, amount, type, status, and audit trail. Supports pagination, filtering, and sorting for efficient access to both recent and historical refunds.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/refunds","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Retrieves all refund requests and completed refunds for a given order, with support for filtering, pagination, and sorting. Returns detailed status, reason, amount, currency, and progress evidence for each refund. Users may view only their own orders, while admins may view any order. Records are filtered for compliance (exclude soft-deleted unless specified in query).","summary":"List and search all refunds for a specific order, with support for pagination.","parameters":[{"name":"orderId","description":"Unique identifier of the order whose refunds are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for order refunds.","typeName":"IShoppingMallAiBackendOrderRefund.IRequest"},"responseBody":{"description":"Paginated list of refund records for the order.","typeName":"IPageIShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves a paginated list of refund records for a specific order. Allows users, admins, or compliance staff to view all refunds associated with a particular order for audit, compliance, and customer service. The Refunds entity is related to the Orders table and contains detailed information about refund reason, amount, type, status, and audit trail. Supports pagination, filtering, and sorting for efficient access to both recent and historical refunds.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/refunds","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Retrieves all refund requests and completed refunds for a given order, with support for filtering, pagination, and sorting. Returns detailed status, reason, amount, currency, and progress evidence for each refund. Users may view only their own orders, while admins may view any order. Records are filtered for compliance (exclude soft-deleted unless specified in query).","summary":"List and search all refunds for a specific order, with support for pagination.","parameters":[{"name":"orderId","description":"Unique identifier of the order whose refunds are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for order refunds.","typeName":"IShoppingMallAiBackendOrderRefund.IRequest"},"responseBody":{"description":"Paginated list of refund records for the order.","typeName":"IPageIShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves the details of a specific refund record associated with an order for a user or admin review. Shows reason, amount, status, type, timeline, and audit fields. Critical for compliance with refund policy, customer service, and facilitation of dispute processes. Only the owner or authorized users may query the data. Relies on the Orders and OrderRefunds Prisma models.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/refunds/{refundId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Fetches an individual refund record for a specific order using orderId and refundId as composite keys. Includes complete information such as refund reason, status, amounts, currency, completion dates, and any business process notes or evidence. This is vital for tracking refund resolution and compliance, as well as providing status transparency to customers. Security ensures only owners, admins, or authorized staff access the record.","summary":"Get a specific order refund record by order and refund ID.","parameters":[{"name":"orderId","description":"ID for the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"ID for the specific refund record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed refund record including all business, status, and compliance fields.","typeName":"IShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves the details of a specific refund record associated with an order for a user or admin review. Shows reason, amount, status, type, timeline, and audit fields. Critical for compliance with refund policy, customer service, and facilitation of dispute processes. Only the owner or authorized users may query the data. Relies on the Orders and OrderRefunds Prisma models.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/refunds/{refundId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Fetches an individual refund record for a specific order using orderId and refundId as composite keys. Includes complete information such as refund reason, status, amounts, currency, completion dates, and any business process notes or evidence. This is vital for tracking refund resolution and compliance, as well as providing status transparency to customers. Security ensures only owners, admins, or authorized staff access the record.","summary":"Get a specific order refund record by order and refund ID.","parameters":[{"name":"orderId","description":"ID for the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"ID for the specific refund record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed refund record including all business, status, and compliance fields.","typeName":"IShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"at","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates the reason, amount, status, or related fields for an existing refund request linked to a specific order. This business operation allows customers to update their refund request, provide more information, or allows admins to mark processing changes, approvals, or rejections. All status transitions are logged, and compliance rules are enforced, ensuring only authorized users make changes. Changes to refund state, amount, or status are tracked for audit and dispute management.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/refunds/{refundId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Updates an existing refund record related to an order, updating fields such as refund type, status, reason, or business notes. Enables both the customer and an administrator to process additional information, provide status updates, or correct earlier requests. Security and validation logic ensure only authorized users may update the record and that all changes are auditable. State transitions must follow business rules and compliance policies.","summary":"Update a specific order refund (reason, amount, status, business decision).","parameters":[{"name":"orderId","description":"Order ID linked to the refund record.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Target refund ID to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Refund information or status update for the order refund record.","typeName":"IShoppingMallAiBackendOrderRefund.IUpdate"},"responseBody":{"description":"Updated order refund record after validation and compliance checks.","typeName":"IShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Updates the reason, amount, status, or related fields for an existing refund request linked to a specific order. This business operation allows customers to update their refund request, provide more information, or allows admins to mark processing changes, approvals, or rejections. All status transitions are logged, and compliance rules are enforced, ensuring only authorized users make changes. Changes to refund state, amount, or status are tracked for audit and dispute management.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/refunds/{refundId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Updates an existing refund record related to an order, updating fields such as refund type, status, reason, or business notes. Enables both the customer and an administrator to process additional information, provide status updates, or correct earlier requests. Security and validation logic ensure only authorized users may update the record and that all changes are auditable. State transitions must follow business rules and compliance policies.","summary":"Update a specific order refund (reason, amount, status, business decision).","parameters":[{"name":"orderId","description":"Order ID linked to the refund record.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Target refund ID to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Refund information or status update for the order refund record.","typeName":"IShoppingMallAiBackendOrderRefund.IUpdate"},"responseBody":{"description":"Updated order refund record after validation and compliance checks.","typeName":"IShoppingMallAiBackendOrderRefund"},"authorizationRoles":["customer","admin"],"name":"update","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Performs logical deletion (soft delete by setting deleted_at) of a specific refund record linked to an order, for cases such as withdrawal of the refund request, mistaken submission, or compliance requirement. The refund record is preserved for evidence and audit purposes. Operation requires owner (customer) or administrator authorization.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/refunds/{refundId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Logically deletes (soft deletes) a refund record associated with an order. This allows for evidence retention and regulatory compliance by preserving the record without exposing it to regular queries. Only the involved customer or an admin may execute this operation. Acts by setting the deleted_at timestamp and is fully tracked in audit logs.","summary":"Soft-delete a refund record for an order, retaining audit evidence.","parameters":[{"name":"orderId","description":"Order ID linked to the refund record.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Target refund ID to be soft deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Performs logical deletion (soft delete by setting deleted_at) of a specific refund record linked to an order, for cases such as withdrawal of the refund request, mistaken submission, or compliance requirement. The refund record is preserved for evidence and audit purposes. Operation requires owner (customer) or administrator authorization.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/refunds/{refundId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_refunds { ... }","description":"Logically deletes (soft deletes) a refund record associated with an order. This allows for evidence retention and regulatory compliance by preserving the record without exposing it to regular queries. Only the involved customer or an admin may execute this operation. Acts by setting the deleted_at timestamp and is fully tracked in audit logs.","summary":"Soft-delete a refund record for an order, retaining audit evidence.","parameters":[{"name":"orderId","description":"Order ID linked to the refund record.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Target refund ID to be soft deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","admin"],"name":"erase","model_name":"shopping_mall_ai_backend_order_refunds","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Lists all incident or compliance-related records attached to a given order. Enables audit, fraud, and compliance staff (as well as the owning customer/admin) to monitor all open and historical incidents such as fraud investigations, disputes, chargebacks, and compliance events. Tied to the Orders and OrderIncidents Prisma models, this operation supports pagination, filtering, and audit review, returning a paginated list of incident entries grouped by status or relevance.","path":"/shoppingMallAiBackend/customer/orders/{orderId}/incidents","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_incidents { ... }","description":"Retrieves all incidents and compliance records related to an order, for review by compliance staff, admins, or the record owner. Includes fraud incidents, disputes, customer escalations, and other exceptional events linked to the order. All records are returned with business context, severity, event time, resolution details, and supporting metadata. Proper authorization is enforced to ensure data privacy and role-based access.","summary":"List incidents (fraud, dispute, compliance) for an order, including current and historical events.","parameters":[{"name":"orderId","description":"Order ID whose incidents are being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Incident search/filter parameters, supports pagination and sorting.","typeName":"IShoppingMallAiBackendOrderIncident.IRequest"},"responseBody":{"description":"Paginated incident and compliance log list for the order.","typeName":"IPageIShoppingMallAiBackendOrderIncident"},"authorizationRoles":["customer","admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_incidents","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Lists all incident or compliance-related records attached to a given order. Enables audit, fraud, and compliance staff (as well as the owning customer/admin) to monitor all open and historical incidents such as fraud investigations, disputes, chargebacks, and compliance events. Tied to the Orders and OrderIncidents Prisma models, this operation supports pagination, filtering, and audit review, returning a paginated list of incident entries grouped by status or relevance.","path":"/shoppingMallAiBackend/admin/orders/{orderId}/incidents","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_orders { ... }\nmodel shopping_mall_ai_backend_order_incidents { ... }","description":"Retrieves all incidents and compliance records related to an order, for review by compliance staff, admins, or the record owner. Includes fraud incidents, disputes, customer escalations, and other exceptional events linked to the order. All records are returned with business context, severity, event time, resolution details, and supporting metadata. Proper authorization is enforced to ensure data privacy and role-based access.","summary":"List incidents (fraud, dispute, compliance) for an order, including current and historical events.","parameters":[{"name":"orderId","description":"Order ID whose incidents are being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Incident search/filter parameters, supports pagination and sorting.","typeName":"IShoppingMallAiBackendOrderIncident.IRequest"},"responseBody":{"description":"Paginated incident and compliance log list for the order.","typeName":"IPageIShoppingMallAiBackendOrderIncident"},"authorizationRoles":["customer","admin"],"name":"index","model_name":"shopping_mall_ai_backend_order_incidents","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve all coupons with advanced search and filtering. This operation allows administrators and authorized users to search the entire catalog of coupons in the system, including filters for code, title, type, status, assigned channel, seller, usage limits, and expiration dates. It supports pagination, sorting, and keyword search leveraging the shopping_mall_ai_backend_coupons Prisma table. The business logic enforces role-based access, searching only visible (not soft-deleted) coupons, and can include both seller-issued and global coupons. Results may include coupon summary fields such as issued/used counts, stacking/eligibility, and related campaign metadata. Administrators can view all coupons, while sellers may only view their own issued coupons. Sensitive fields (such as internal notes) are only returned for admin roles. The endpoint is fundamental for monitoring promotions, compliance, and campaign management, and is often used as a backend for coupon/marketing administration panels.","prisma_schemas":"model shopping_mall_ai_backend_coupons {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  code String\n  type String\n  title String\n  description String?\n  value Float @db.DoublePrecision\n  min_order_amount Float? @db.DoublePrecision\n  max_discount_amount Float? @db.DoublePrecision\n  currency String?\n  expires_at DateTime? @db.Timestamptz\n  stackable Boolean\n  personal Boolean\n  issued_quantity Int? @db.Integer\n  issued_per_user Int? @db.Integer\n  used_per_user Int? @db.Integer\n  usage_limit_total Int? @db.Integer\n  issued_count Int @db.Integer\n  used_count Int @db.Integer\n  published_at DateTime? @db.Timestamptz\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  ... (relations omitted for brevity)\n}","authorizationRoles":["admin"],"description":"This API searches the full set of coupons available in the shopping mall platform for administration and reporting purposes. It enables searching, filtering, and sorting of coupons by status (active, expired, scheduled), type (fixed, percentage, shipping, welcome, etc.), channel, seller, code value, and time window. Filters support pagination, date ranges, stacking rules, and eligibility constraints as properties of the shopping_mall_ai_backend_coupons schema.\n\nAccess is reserved for admin users who require full coupon lifecycle visibility for audit, campaign analysis, and regulatory compliance. Business rules enforce that soft-deleted coupons are excluded from normal search results unless explicitly requested by higher privilege roles. Coupon attributes such as issued/used counts allow easy tracking of campaign performance.\n\nAdmin users can use this endpoint to support overall promotional strategy, compliance checks, and evidence collection for coupon usage disputes. Error scenarios include invalid filter criteria and requests for pages beyond available results.","summary":"Admin search all coupons with advanced filtering and pagination (shopping_mall_ai_backend_coupons).","parameters":[],"requestBody":{"description":"Coupon search and filtering criteria, including pagination and sort configuration.","typeName":"IShoppingMallAiBackendCoupon.IRequest"},"responseBody":{"description":"Paginated result set of summary information for coupons matching query.","typeName":"IPageIShoppingMallAiBackendCoupon.ISummary"},"name":"index","path":"/shoppingMallAiBackend/admin/coupons","method":"patch","model_name":"shopping_mall_ai_backend_coupons","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full details of a specific coupon entity by its unique ID. This operation allows authorized users or admins to inspect every property of a coupon, including its promotion code, value, eligibility, stacking/issuance limits, associated campaign, and audit metadata (created/updated times, deletion status). The operation is based on the shopping_mall_ai_backend_coupons schema, and fetches all directly owned attributes as well as selected summary of usage and issuance relations if needed. This is commonly used for coupon administration panels, troubleshooting, or as a backend for detailed coupon management and approval flows.","prisma_schemas":"model shopping_mall_ai_backend_coupons {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  code String\n  type String\n  title String\n  description String?\n  value Float @db.DoublePrecision\n  min_order_amount Float? @db.DoublePrecision\n  max_discount_amount Float? @db.DoublePrecision\n  currency String?\n  expires_at DateTime? @db.Timestamptz\n  stackable Boolean\n  personal Boolean\n  issued_quantity Int? @db.Integer\n  issued_per_user Int? @db.Integer\n  used_per_user Int? @db.Integer\n  usage_limit_total Int? @db.Integer\n  issued_count Int @db.Integer\n  used_count Int @db.Integer\n  published_at DateTime? @db.Timestamptz\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  ... (relations omitted)\n}","authorizationRoles":["admin"],"description":"This API retrieves the complete details for a given coupon in the platform by its unique identifier. All business-relevant fields are returned, including code, type, value, stacking, issuance limits, campaign association, and the current status of the coupon (active, expired, scheduled, hidden). The operation is intended for administrators or privileged panel users managing or auditing coupon campaigns.\n\nSecurity is enforced at the endpoint to restrict access to only users with admin privileges. Information about the coupon's creation, updates, and logical deletion (if applicable) is included for compliance and evidence tracking.\n\nThe endpoint is used to support coupon validation, dispute resolution, business compliance investigations, and as a foundation for coupon editing or cloning operations.","summary":"Get coupon details for a given couponId (shopping_mall_ai_backend_coupons).","parameters":[{"name":"couponId","description":"Unique UUID for the coupon to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed coupon entity record for couponId.","typeName":"IShoppingMallAiBackendCoupon"},"name":"at","path":"/shoppingMallAiBackend/admin/coupons/{couponId}","method":"get","model_name":"shopping_mall_ai_backend_coupons","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new coupon promotion campaign. This API enables platform administrators to register a new coupon policy, including discount value, coupon type (fixed, percentage, shipping, etc.), code, stacking rules, eligibility, issuance limits, applicable channels or sellers, and relevant metadata. It writes to the shopping_mall_ai_backend_coupons table, validates all mandatory fields, and checks for duplicate codes. Business rules enforced include unique code per channel, valid duration, and compliance with overall promotional policies. The system captures full creation audit metadata, and immediately makes the coupon available (if activated).","prisma_schemas":"model shopping_mall_ai_backend_coupons {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  code String\n  type String\n  title String\n  description String?\n  value Float @db.DoublePrecision\n  min_order_amount Float? @db.DoublePrecision\n  max_discount_amount Float? @db.DoublePrecision\n  currency String?\n  expires_at DateTime? @db.Timestamptz\n  stackable Boolean\n  personal Boolean\n  issued_quantity Int? @db.Integer\n  issued_per_user Int? @db.Integer\n  used_per_user Int? @db.Integer\n  usage_limit_total Int? @db.Integer\n  issued_count Int @db.Integer\n  used_count Int @db.Integer\n  published_at DateTime? @db.Timestamptz\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  ... (relations omitted)\n}","authorizationRoles":["admin"],"description":"The API creates a new coupon and registers all necessary business parameters for a promotion campaign, such as discount amount/percentage, target channels or sellers, issuance and stacking limits, personal or event settings, validity periods, and exclusion policies. System and business-logic validation includes ensuring code uniqueness, value and date range checks, compatibility with overall platform promotional restrictions, and data integrity for all referenced relations.\n\nOnly users with administrative privileges may create new coupons using this endpoint. The operation is subject to compliance checks and audit controls, with full creation traceability recorded.\n\nThe new coupon is immediately available if its status is set to 'active' and its published_at date is current; otherwise, it may remain scheduled or hidden until manual activation or future publishing time.","summary":"Create a new coupon and promotion policy (shopping_mall_ai_backend_coupons).","parameters":[],"requestBody":{"description":"All business and configuration parameters required to create a coupon (discount value, code, type, duration, eligible channels, etc.)","typeName":"IShoppingMallAiBackendCoupon.ICreate"},"responseBody":{"description":"Full coupon record for the newly created policy.","typeName":"IShoppingMallAiBackendCoupon"},"name":"create","path":"/shoppingMallAiBackend/admin/coupons","method":"post","model_name":"shopping_mall_ai_backend_coupons","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update a coupon's configuration or business policy (e.g., type, value, time window, eligibility). Allows authorized admins to change coupon details post-creation, such as its discount value, expiration, usage limits, or stacking rules. The endpoint writes to the shopping_mall_ai_backend_coupons model, and all new business constraints are validated. The operation is compliant with platform promotional limits, and changes are recorded as versioned snapshots for audit. Coupon code, channel, or seller bindings cannot violate uniqueness constraints. Update is tracked with updated_at timestamp.","prisma_schemas":"model shopping_mall_ai_backend_coupons {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_channel_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  code String\n  type String\n  title String\n  description String?\n  value Float @db.DoublePrecision\n  min_order_amount Float? @db.DoublePrecision\n  max_discount_amount Float? @db.DoublePrecision\n  currency String?\n  expires_at DateTime? @db.Timestamptz\n  stackable Boolean\n  personal Boolean\n  issued_quantity Int? @db.Integer\n  issued_per_user Int? @db.Integer\n  used_per_user Int? @db.Integer\n  usage_limit_total Int? @db.Integer\n  issued_count Int @db.Integer\n  used_count Int @db.Integer\n  published_at DateTime? @db.Timestamptz\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  ... (relations omitted)\n}","authorizationRoles":["admin"],"description":"Update the details of a coupon policy post-creation. This endpoint enables authorized admin users to modify any mutable business attribute of a coupon (such as discount value, type, time constraints, usage/issuance limits, stacking or eligibility settings, target channel/seller, and metadata). It validates updated parameters, ensures all references are valid, enforces code and channel uniqueness, and prevents violations of platform promotional rules.\n\nAll update actions are recorded as versioned snapshots for audit and compliance, including the before/after changes. Security controls limit access to administrators only. Any changes to published or already-issued coupons may have restricted mutability according to business or legal policy. Errors may be returned for conflicts, constraint violations, or failed business validations.","summary":"Update coupon configuration and business policy (shopping_mall_ai_backend_coupons).","parameters":[{"name":"couponId","description":"Unique UUID for the coupon to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and configuration to update (all mutable coupon properties, e.g., value, type, eligibility).","typeName":"IShoppingMallAiBackendCoupon.IUpdate"},"responseBody":{"description":"Updated full coupon entity after modification.","typeName":"IShoppingMallAiBackendCoupon"},"name":"update","path":"/shoppingMallAiBackend/admin/coupons/{couponId}","method":"put","model_name":"shopping_mall_ai_backend_coupons","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Logically (soft) delete a coupon from the system. The coupon is marked as deleted by updating the deleted_at timestamp in shopping_mall_ai_backend_coupons for compliance and evidence retention but is not physically removed. The operation is only available to administrators. This ensures that past coupon usages, issuance, and evidence trails are preserved for audits and disputes. The coupon will no longer be visible in the list/search APIs for end users, but can be restored by admins if needed via a future recovery endpoint. Only active and non-deleted coupons can be targeted for soft deletion. If the coupon has been already deleted or does not exist, an error is returned.","prisma_schemas":"model shopping_mall_ai_backend_coupons {\n  id String @id @db.Uuid\n  deleted_at DateTime? @db.Timestamptz\n  ... (other fields omitted)\n}","authorizationRoles":["admin"],"description":"Soft delete a coupon record by setting its deleted_at timestamp for evidence and compliance retention. This operation removes the coupon from active/searchable state but preserves all information for audit, dispute, and future restoration workflows. Business logic prevents accidental deletion of already-deleted records or records involved in open audit/compliance cases. The operation enforces role authorization at the endpoint, and only admins are permitted.\n\nRelated APIs include coupon recovery and permanent purge (for data retention expiration), not covered here. If attempted on a non-existent or already deleted coupon, an error is returned. Details of the soft deleted entity (such as id and deleted_at) are retained for admin review.","summary":"Soft delete a coupon (logical deletion with evidence retention, shopping_mall_ai_backend_coupons).","parameters":[{"name":"couponId","description":"Unique UUID for the coupon to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","path":"/shoppingMallAiBackend/admin/coupons/{couponId}","method":"delete","model_name":"shopping_mall_ai_backend_coupons","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Search issued coupon instances belonging to a coupon campaign. This endpoint retrieves all individual coupon issuances for a specific couponId, supporting advanced filtering by customer, issuance status, expiration date, or usage. Implements pagination and sorting for large campaigns. Mainly used by admins for campaign tracking, security audits, and compliance, and by sellers for issued coupon management.","prisma_schemas":"model shopping_mall_ai_backend_coupon_issuances {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  status String\n  issued_at DateTime @db.Timestamptz\n  used_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n}","authorizationRoles":["admin"],"description":"List all issued coupon instances for a specified couponId, supporting query by customer, status, and various business filters. The result is paginated and returns key issuance summary fields as well as associated customer references. This endpoint aids in campaign performance tracking, user eligibility validation, and compliance/audit review. Only administrators are granted access due to containing sensitive issuance, redemption, and usage data for users.\n\nPagination and filtering parameters allow tight result control. Related endpoints provide issuance details or perform issuance-specific actions not covered here. Errors are returned for invalid couponId or access violations.","summary":"Admin search all coupon issuances for a couponId (shopping_mall_ai_backend_coupon_issuances).","parameters":[{"name":"couponId","description":"Unique UUID for the parent coupon.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering criteria and pagination options for coupon issuances (status, customer, date, etc.).","typeName":"IShoppingMallAiBackendCouponIssuance.IRequest"},"responseBody":{"description":"Paginated issuance summary list for the coupon.","typeName":"IPageIShoppingMallAiBackendCouponIssuance.ISummary"},"name":"index","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/issuances","method":"patch","model_name":"shopping_mall_ai_backend_coupon_issuances","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full details about a specific coupon issuance (individual issuance assigned to customer, event, or channel). Used for compliance, security, campaign management, or support investigation. Returns all issuance details and main references to coupon and customer. Based on shopping_mall_ai_backend_coupon_issuances and directly linked relations. Used in administrative panels for user-level coupon tracking, eligibility resolution, and evidence audit flows.","prisma_schemas":"model shopping_mall_ai_backend_coupon_issuances {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  status String\n  issued_at DateTime @db.Timestamptz\n  used_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n}","authorizationRoles":["admin"],"description":"Get the complete record for a given coupon issuance assigned to a specific user/campaign. All business-related and technical attributes are returned, including status, assigned customer, issued_at, used_at, revoked_at, and creation timestamps. Also returns primary references for the parent coupon and (if present) the customer who received the coupon.\n\nEndpoint access is restricted to administrators due to PII and compliance sensitivity. This endpoint is commonly used in support, dispute, fraud investigation, and campaign management flows for per-user coupon details. Error cases include invalid IDs or insufficient privileges.","summary":"Admin get full details for a coupon issuance (shopping_mall_ai_backend_coupon_issuances).","parameters":[{"name":"couponId","description":"UUID of the parent coupon for cross-validation.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceId","description":"UUID of the target coupon issuance.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coupon issuance entity for the given issuanceId.","typeName":"IShoppingMallAiBackendCouponIssuance"},"name":"at","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/issuances/{issuanceId}","method":"get","model_name":"shopping_mall_ai_backend_coupon_issuances","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation issues a new coupon to a customer for a given coupon policy. It creates an issuance record for regulatory, audit, and tracking, supporting individualized coupon delivery and compliance. The endpoint operates on the shopping_mall_ai_backend_coupon_issuances model, referencing its relationships to coupons and customers. This enables programmatic distribution of single-use, personalized, or campaign coupons per business rules, enforcing eligibility and quantity limits defined in the related coupon. This operation ensures unique issuance by coupon policy, customer identity, and optional external code, and maintains complete issuance/audit history. It only allows POST creation and not further modification by users, supporting both admin/seller and system API-driven delivery.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/issuances","method":"post","prisma_schemas":"model shopping_mall_ai_backend_coupon_issuances {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  external_code String?\n  expires_at DateTime? @db.Timestamptz\n  status String\n  issued_at DateTime @db.Timestamptz\n  used_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_819276b8\")\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_76a25b8c\")\n  shopping_mall_ai_backend_coupon_usages shopping_mall_ai_backend_coupon_usages[]\n  shopping_mall_ai_backend_coupon_codes shopping_mall_ai_backend_coupon_codes[]\n  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]\n  @@unique([shopping_mall_ai_backend_coupon_id, shopping_mall_ai_backend_customer_id, external_code], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_69ca52c6\")\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_2edd9ff4\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_a8be0cd6\")\n  @@index([status])\n}\n","description":"Create a new issuance of a coupon for a specific coupon ID, either for a specific customer or as part of a campaign event. This operation enforces coupon policy business rules for issuance, such as eligibility, maximum number per user, campaign window, and compliance traceability.\n\nUpon execution, it creates an immutable record of the coupon issuance, capturing the intended customer or campaign recipient (if applicable), external code (e.g. event code or distributed voucher), optional expiration, and initial status. The operation is designed for automated coupon distribution by admins or system workflows, and is used for both personal and bulk campaign scenarios.\n\nSecurity and compliance are addressed by requiring roles with authority to issue coupons (e.g., admin, seller), preventing unauthorized mass issuance or policy infringement. If issuance attempts exceed limits, target ineligibility, or violate coupon configuration (such as issuing more coupons than allowed or past policy expiry), the operation responds with detailed business error messages defined by the application.","summary":"Issue a coupon to a user or event for a specific coupon, creating an audit-traceable issuance record.","parameters":[{"name":"couponId","description":"Target coupon's unique identifier for which to issue the coupon.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Issuance details including customer ID, optional external code, and optional expiration for this coupon issuance.","typeName":"IShoppingMallAiBackendCouponIssuance.ICreate"},"responseBody":{"description":"Details of the resulting coupon issuance including recipient, status, audit details, and issuance metadata.","typeName":"IShoppingMallAiBackendCouponIssuance"},"authorizationRoles":["admin"],"name":"createIssuance","model_name":"shopping_mall_ai_backend_coupon_issuances","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing coupon issuance for a given coupon. It is intended for administrative correction, campaign management, or revocation (such as changing status). The action enforces policy constraints on what can be altered in a coupon issuance, retains full audit trail, and prevents modification of immutable historical fields. It is performed on the shopping_mall_ai_backend_coupon_issuances model, using the relevant foreign key relationships to coupons and customers. The endpoint requires administrative roles, and tracks audit metadata for regulatory compliance and evidence purposes.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/issuances/{issuanceId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_coupon_issuances {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  external_code String?\n  expires_at DateTime? @db.Timestamptz\n  status String\n  issued_at DateTime @db.Timestamptz\n  used_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_819276b8\")\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_76a25b8c\")\n  shopping_mall_ai_backend_coupon_usages shopping_mall_ai_backend_coupon_usages[]\n  shopping_mall_ai_backend_coupon_codes shopping_mall_ai_backend_coupon_codes[]\n  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]\n  @@unique([shopping_mall_ai_backend_coupon_id, shopping_mall_ai_backend_customer_id, external_code], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_69ca52c6\")\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_2edd9ff4\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_a8be0cd6\")\n  @@index([status])\n}\n","description":"Update, revoke, or modify the status or expiration of an existing coupon issuance for a specific coupon and issuance ID. This operation supports business correction, revocation in case of fraud or campaign policy change, and allows status or expiration management under tight administrative authority.\n\nThe operation ensures all updates are captured in a full audit log, preserves immutable fields for evidence, and supports granular error feedback when a policy breach occurs (e.g. attempting to update a redeemed or revoked coupon), while maintaining regulatory and compliance requirements. Typical use cases include revoking a coupon that is misused, extending expiration for a user, or correcting metadata.\n\nOnly admins or campaign operators with coupon issuance permissions can use this endpoint. Sensitive actions such as changing expiration or status are strictly validated against current business rules and coupon policy, with comprehensive controls on allowed modifications.","summary":"Admin-update a coupon issuance record's status or properties, with audit traceability.","parameters":[{"name":"couponId","description":"Coupon ID this issuance belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceId","description":"Unique issuance record identifier to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for a coupon issuance, such as status, expiration, or external code. Complies with policy.","typeName":"IShoppingMallAiBackendCouponIssuance.IUpdate"},"responseBody":{"description":"Updated coupon issuance record reflecting changes, compliance, and audit trail info.","typeName":"IShoppingMallAiBackendCouponIssuance"},"authorizationRoles":["admin"],"name":"updateIssuance","model_name":"shopping_mall_ai_backend_coupon_issuances","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation deletes (logically, for compliance) an existing coupon issuance for a given coupon and issuance ID. Logically deleted issuances are preserved for audit and regulatory inspection, never physically removed. This prevents further usage of the issued coupon, supports withdrawal, or campaign correction. The endpoint only allows admin/system-level access. The shopping_mall_ai_backend_coupon_issuances model supports this operation with a soft delete via the deleted_at column. The operation returns no response body, only a success/failure indication. Attempts to delete a redeemed or non-existent issuance are rejected and return a business error.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/issuances/{issuanceId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_coupon_issuances {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  external_code String?\n  expires_at DateTime? @db.Timestamptz\n  status String\n  issued_at DateTime @db.Timestamptz\n  used_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_819276b8\")\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_76a25b8c\")\n  shopping_mall_ai_backend_coupon_usages shopping_mall_ai_backend_coupon_usages[]\n  shopping_mall_ai_backend_coupon_codes shopping_mall_ai_backend_coupon_codes[]\n  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]\n  @@unique([shopping_mall_ai_backend_coupon_id, shopping_mall_ai_backend_customer_id, external_code], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_69ca52c6\")\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_2edd9ff4\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coupon_issuances_shopping_mal_a8be0cd6\")\n  @@index([status])\n}\n","description":"Logically delete an existing coupon issuance for a given coupon and issuance. This sets the deleted_at timestamp for compliance and business evidence, ensuring the record is retained for future reference but no longer active.\n\nThe operation safeguards against deletion of redeemed or already revoked issuances, ensuring regulatory compliance and anti-fraud controls. Attempts to delete ineligible issuances result in business errors indicating policy violation or non-existence. This endpoint is strictly for admin/system role use and should not be accessible to regular users, with audit and evidence trails mandatory for all such deletions.\n\nStandard REST semantics apply: successful deletion returns HTTP 204 with no body, errors yield relevant business status codes and descriptions. Deleted issuances cannot be restored by end users.","summary":"Soft delete an issuance record (logical removal for auditing, not physical delete).","parameters":[{"name":"couponId","description":"Coupon ID the issuance belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceId","description":"Coupon issuance record identifier to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"eraseIssuance","model_name":"shopping_mall_ai_backend_coupon_issuances","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable search of coupon usage (redemption) records for a given coupon. It supports audit, campaign analytics, and compliance reporting, enabling admins and authorized business users to review how coupons have been used, by whom, in which orders, and with what effect. The underlying model is shopping_mall_ai_backend_coupon_usages, capturing redemption attempts, success/failure status, and relationships to coupon issuances, customers, and associated orders. The operation supports searching by status, date range, customer identifier, order reference, with pagination to manage large data sets. Responses provide detailed per-usage history, business auditing, and campaign effectiveness metrics.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/usages","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coupon_usages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_order_id String? @db.Uuid\n  used_at DateTime @db.Timestamptz\n  amount_discounted Float @db.DoublePrecision\n  status String\n  rolledback_at DateTime? @db.Timestamptz\n  couponIssuance shopping_mall_ai_backend_coupon_issuances @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_273d8e4a\")\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_d11f2413\")\n  order shopping_mall_ai_backend_orders? @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_ca4ddd87\")\n  @@index([shopping_mall_ai_backend_order_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_3a458b8b\")\n  @@unique([shopping_mall_ai_backend_coupon_issuance_id, shopping_mall_ai_backend_order_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_e493eb26\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_2e70d91a\")\n  @@index([used_at])\n}\n","description":"Search, audit, or analyze coupon usage (redemption) records for a specific coupon. This enables authorized business users and admins to filter by status (success, failed, revoked, etc.), usage date range, customer, or related order identifiers, with paginated results.\n\nThe response includes detailed redemption records with all business and audit-relevant information, supporting compliance, campaign effectiveness, fraud analysis, and refund reconciliation. The operation is strictly controlled by business role and supports only authorized access with full evidence preservation.","summary":"Paginated search/audit of all redemptions/usages for a given coupon.","parameters":[{"name":"couponId","description":"Coupon ID for which redemption/usage records are searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination query for coupon usage; supports date/status/customer filters.","typeName":"IShoppingMallAiBackendCouponUsage.IRequest"},"responseBody":{"description":"Paginated results of coupon redemption usage with complete audit and business details.","typeName":"IPageIShoppingMallAiBackendCouponUsage"},"authorizationRoles":["admin"],"name":"indexCouponUsage","model_name":"shopping_mall_ai_backend_coupon_usages","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific coupon usage (redemption) instance by coupon and usage ID. It is intended for admin, audit, or campaign review, providing a complete evidence record of who redeemed a coupon, for what order, and with what outcome. The endpoint supports linking to coupon policy, issuance, customer, and order for comprehensive traceability. Only authorized admin/business users may use this endpoint, which returns the full shopping_mall_ai_backend_coupon_usages record enriched with all related data for audit and compliance.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/usages/{usageId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coupon_usages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_order_id String? @db.Uuid\n  used_at DateTime @db.Timestamptz\n  amount_discounted Float @db.DoublePrecision\n  status String\n  rolledback_at DateTime? @db.Timestamptz\n  couponIssuance shopping_mall_ai_backend_coupon_issuances @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_273d8e4a\")\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_d11f2413\")\n  order shopping_mall_ai_backend_orders? @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_ca4ddd87\")\n  @@index([shopping_mall_ai_backend_order_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_3a458b8b\")\n  @@unique([shopping_mall_ai_backend_coupon_issuance_id, shopping_mall_ai_backend_order_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_e493eb26\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coupon_usages_shopping_mall_a_2e70d91a\")\n  @@index([used_at])\n}\n","description":"Retrieve full details of a specific coupon redemption (usage) record for a given coupon and usage ID. Returns granular business context and audit details for regulatory, campaign, and refund review. Useful for compliance staff or campaign operators verifying individual redemptions, troubleshooting issues, or investigating audit trails.\n\nSecurity restrictions limit this endpoint to admin/business roles and prevent access to confidential customer/redemption data by unauthorized actors. All data returned is evidence-grade, ensuring traceability for disputes, refund validation, or compliance workflow. Errors on non-existent or unauthorized access are managed per standard business error protocols. This does not expose any modification API for redemptions.","summary":"Get full business/audit details of a specific coupon redemption record.","parameters":[{"name":"couponId","description":"Coupon ID for coupon usage lookup.","schema":{"type":"string","format":"uuid"}},{"name":"usageId","description":"Target coupon usage record identifier for detailed audit data.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete coupon redemption record and relevant trace/metadata for the given coupon and usageId.","typeName":"IShoppingMallAiBackendCouponUsage"},"authorizationRoles":["admin"],"name":"atCouponUsage","model_name":"shopping_mall_ai_backend_coupon_usages","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation searches, paginates, and retrieves coupon codes associated with a specific coupon, including campaign/event/bulk codes, status, claim/usage details, and audit data. Useful for campaign operators, compliance staff, or business analysts to trace creation, distribution, and redemptions of codes. Based on shopping_mall_ai_backend_coupon_codes, the endpoint filters and sorts by code string, status, issue/redemption time, or associated customer. Only authorized admin/business roles can access. The response includes complete audit history for each code for compliance and business review, and is paginated for scalability.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/codes","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coupon_codes {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid\n  bulk_code String\n  issued_to_email String?\n  status String\n  created_at DateTime @db.Timestamptz\n  redeemed_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_55486455\")\n  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_839873a0\")\n  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]\n  @@index([shopping_mall_ai_backend_coupon_issuance_id], map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_e5559bfc\")\n  @@unique([bulk_code])\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_318babb0\")\n  @@index([status])\n}\n","description":"Search and retrieve coupon codes for a specific coupon, including details, status, audit, and campaign assignment. Enables business visibility for event distribution, bulk code management, or identification of fraud. Filters by code, status (issued, redeemed, available, revoked), and supports evidence-grade traceability. Only available to roles with campaign/compliance authority.","summary":"Paginated search on coupon codes for campaign or compliance analysis.","parameters":[{"name":"couponId","description":"Coupon ID for which codes are being searched/audited.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter criteria, and pagination for coupon codes (code, status, date, etc.).","typeName":"IShoppingMallAiBackendCouponCode.IRequest"},"responseBody":{"description":"Paginated list of coupon code details with status, assignment, audit info.","typeName":"IPageIShoppingMallAiBackendCouponCode"},"authorizationRoles":["admin"],"name":"indexCouponCodes","model_name":"shopping_mall_ai_backend_coupon_codes","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve full details about a specific bulk/event coupon code for a given coupon and code ID. Used for audit, fraud investigation, or campaign management. Returns all code attributes, history, and status, linking code to issuance and campaign where possible. Only available to authorized compliance/business roles. Uses shopping_mall_ai_backend_coupon_codes as the primary model, and ensures no direct code modification is allowed via this endpoint. All returned data is evidence-grade for audit and legal compliance.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/codes/{codeId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coupon_codes {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid\n  bulk_code String\n  issued_to_email String?\n  status String\n  created_at DateTime @db.Timestamptz\n  redeemed_at DateTime? @db.Timestamptz\n  revoked_at DateTime? @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_55486455\")\n  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_839873a0\")\n  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]\n  @@index([shopping_mall_ai_backend_coupon_issuance_id], map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_e5559bfc\")\n  @@unique([bulk_code])\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_318babb0\")\n  @@index([status])\n}\n","description":"Get all business details, status, issuance, and audit history for a specific coupon code for a campaign, event, or fraud analysis. Enables compliance, tracking, and campaign quality controls, and links each code to relevant policy and recipient as possible. Only available to business/compliance users, never directly modifiable by end user.","summary":"Get audit-grade details for a campaign/bulk coupon code by ID.","parameters":[{"name":"couponId","description":"Coupon ID for lookup context.","schema":{"type":"string","format":"uuid"}},{"name":"codeId","description":"Target coupon code identifier to retrieve in full detail.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the coupon code—assignment, status, recipient, audit history.","typeName":"IShoppingMallAiBackendCouponCode"},"authorizationRoles":["admin"],"name":"atCouponCode","model_name":"shopping_mall_ai_backend_coupon_codes","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation provides a paginated, searchable list of coupon stacking rules associated with a specific coupon. Stacking rules define which coupons or types can be combined, supporting complex business policy management and fraud prevention. It is performed on the shopping_mall_ai_backend_coupon_stacking_rules model, joining both coupon/program context and exclusions by coupon/type. Only accessed by business administrators or campaign policy operators. The response provides complete audit trail of rule assignment, policy rationale, and campaign-relevant context. No write operations are exposed here, ensuring stack policy remains governed by separate admin processes.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/stackingRules","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coupon_stacking_rules {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String? @db.Uuid\n  excluded_coupon_id String? @db.Uuid\n  type String\n  applies_to_type String?\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons? @relation(\"shopping_mall_ai_backend_coupon_stacking_rules_of_shop_35b558e3\", fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_stacking_rules_shoppin_5809ee09\")\n  excludedCoupon shopping_mall_ai_backend_coupons? @relation(\"shopping_mall_ai_backend_coupon_stacking_rules_of_excl_d38ba2b8\", fields: [excluded_coupon_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coupon_stacking_rules_exclude_d50b5269\")\n  @@index([shopping_mall_ai_backend_coupon_id], map: \"shopping_mall_ai_backend_coupon_stacking_rules_shoppin_19e44e33\")\n  @@index([excluded_coupon_id], map: \"shopping_mall_ai_backend_coupon_stacking_rules_exclude_5daa2e1b\")\n}\n","description":"Search, filter, and audit all stacking rules for a given coupon, providing business operator or admin with the full policy details for which codes can or cannot be stacked together. Each result includes exclusion policy, rationale, and linkage to policy/campaign assignment. The results are paginated for scalability and support large-scale campaign policy review/audit workflows.","summary":"Paginated searchable list of coupon stacking rules for business/campaign ops.","parameters":[{"name":"couponId","description":"Coupon ID for which stacking rule policies are to be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request supports search/filter criteria and paging for stacking rules.","typeName":"IShoppingMallAiBackendCouponStackingRule.IRequest"},"responseBody":{"description":"Paginated, complete listing of stacking rules, targets, exclusions, and audit context.","typeName":"IPageIShoppingMallAiBackendCouponStackingRule"},"authorizationRoles":["admin"],"name":"indexCouponStackingRules","model_name":"shopping_mall_ai_backend_coupon_stacking_rules","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed information about a stacking rule applied to a specific coupon. This operation reads from both the Coupon and CouponStackingRule models in the Prisma schema. It is used by administrators or authorized business roles to review the details of a stacking restriction for a given coupon, including its stacking type, target coupon or type, and configuration, for validation and troubleshooting of discount combinability.\n\nThis endpoint is essential for business audit, compliance review, and operational management of discount stacking rules. Stacking rules define whether a coupon can be combined with others, and their misuse or misconfiguration can lead to revenue leakage or customer dissatisfaction. Administrators can use this endpoint to analyze stacking conflicts or to confirm the final interaction logic for a promotion.\n\nBusiness rules are enforced such that only a known stacking rule under a specific coupon is retrieved, ensuring accidental cross-coupon lookup is prevented.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/stackingRules/{stackingRuleId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_stacking_rules { ... }","description":"Retrieve full details of a coupon stacking rule, including its stacking type, target, and business applicability. This API allows administrators and authorized business managers to verify how a coupon interacts with other discount policies.\n\nThe operation checks the requested stacking rule entry under the provided couponId to ensure correct scoping and security. This call is vital for compliance, debugging promotion issues, and supporting transparent configuration audits. Any configuration retrieved can be compared against audit logs for change tracking.\n\nResults are restricted to authorized roles, as stacking rules have direct business and financial implications.","summary":"Get the configuration and details of a stacking rule for a given coupon.","parameters":[{"name":"couponId","description":"Unique identifier for the coupon whose stacking rule is being retrieved","schema":{"type":"string","format":"uuid"}},{"name":"stackingRuleId","description":"Unique identifier for the stacking rule to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the coupon stacking rule including combinability and target information.","typeName":"IShoppingMallAiBackendCouponStackingRule"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_coupon_stacking_rules","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new stacking rule for a specified coupon. This operation writes to the CouponStackingRule table, linking the rule to the target coupon defined by couponId. It enables authorized business operators to define how this coupon interacts with others, specifying stacking permission, exclusion logic, or overrides as required for complex promotion strategy.\n\nStacking rule creation enforces business and compliance validation: only admins can create rules, a stacking rule must not duplicate an existing configuration for the same coupon, and all business constraints (allow/deny/override, applies_to_type) are enforced by validation logic. This endpoint directly controls a material part of discount application logic and should be used with care.\n\nAudit logs and compliance reporting should always be updated following stacking rule changes for traceability and prevention of exploits or mistakes.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/stackingRules","method":"post","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_stacking_rules { ... }","description":"Create a new stacking rule for a particular coupon. This API allows business owners, marketing, or admin users to specify whether a given coupon can be stacked with another coupon or coupon type, and the application logic for combinability.\n\nBusiness safeguards enforce that the stacking rule is not duplicated and applies within the scope of the selected coupon. Creation triggers an audit log entry and any business process for required approval/notification.\n\nThis action is strictly limited to administrative or marketing roles with the necessary privileges, to prevent promotion manipulation or accidental business configuration errors.","summary":"Create a stacking rule for the given coupon.","parameters":[{"name":"couponId","description":"Unique identifier for the coupon under which to create the stacking rule","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Stacking rule configuration to add to the coupon","typeName":"IShoppingMallAiBackendCouponStackingRule.ICreate"},"responseBody":{"description":"The created coupon stacking rule entry with its full configuration.","typeName":"IShoppingMallAiBackendCouponStackingRule"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_coupon_stacking_rules","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing stacking rule for a specific coupon. The operation modifies the parameters of a stacking rule that governs how the coupon is combined with other discounts, including changes to the type of stacking, exclusions, or overrides.\n\nThe update must pass business and compliance validation, including non-duplication and allowed modification of stacking logic within the organization's promotion strategy. All modifications are subject to audit, and changes are recorded for regulatory compliance and rollback capability. This is a critical endpoint for business operations and should only be accessible to administrators or highly privileged managers.\n\nUpdating a stacking rule helps ensure discounts and promotional campaigns operate according to the business's latest pricing and marketing requirements.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/stackingRules/{stackingRuleId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_stacking_rules { ... }","description":"Update a stacking rule for the specified coupon. Only authorized business operators (admins) can make this change. Parameter validation ensures business safety and logs updates for audit and compliance purposes.\n\nAll changes to stacking rules are substantive for promotion policy and require critical change control, as they can impact customer-facing discount eligibility and stacking logic. The update is atomic and either fully succeeds or fails with rollback.\n\nAfter update, the new rule is instantly reflected in business logic and any active promotion validation flows.","summary":"Update a stacking rule for a coupon identified by stackingRuleId.","parameters":[{"name":"couponId","description":"Unique identifier for the coupon whose stacking rule will be updated","schema":{"type":"string","format":"uuid"}},{"name":"stackingRuleId","description":"Unique identifier of the stacking rule to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated stacking rule configuration","typeName":"IShoppingMallAiBackendCouponStackingRule.IUpdate"},"responseBody":{"description":"The updated stacking rule with complete business configuration.","typeName":"IShoppingMallAiBackendCouponStackingRule"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_coupon_stacking_rules","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Deletes an existing stacking rule from a coupon, effectively removing the business logic that restricts or permits discount combinability for that rule. This operation is a permanent deletion, which completely removes the stacking rule record from the database. This ensures that the stacking rule and all associated restrictions are entirely eliminated.\n\nOnly authorized admin users can perform this operation due to its impact on business logic and customer-facing promotion eligibility. This action is irreversible and must be done with great caution, as deleted stacking rules cannot be restored and will no longer be available for operational or compliance review. Business systems should ensure that this deletion aligns with audit and regulatory requirements before invocation.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/stackingRules/{stackingRuleId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_coupon_stacking_rules { ... }","description":"Permanently delete a stacking rule belonging to a coupon. This operation completely removes the stacking rule from the database and thereby eliminates its business logic from the active system.\n\nThis action is only performed by admins with appropriate permissions after careful consideration. Once performed, the stacking rule cannot be recovered. It is recommended to ensure proper business authorization and audit logging is in place before invoking this operation.\n\nThere is no evidence preserved or logical (soft) delete; the stacking rule will be entirely removed.","summary":"Permanently delete a stacking rule from the coupon.","parameters":[{"name":"couponId","description":"Unique identifier for the coupon whose stacking rule is being deleted","schema":{"type":"string","format":"uuid"}},{"name":"stackingRuleId","description":"Unique identifier of the stacking rule to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_coupon_stacking_rules","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paged, filtered list of stacking restrictions associated with a specific coupon. This operation enables administrators to search, filter, and review restrictions such as excluded products, limited users, section/category limitations, effective periods, and other conditional logic attached to a coupon.\n\nFiltering, sorting, and pagination parameters are supported via request body. Results help marketing teams and admins audit which products, customers, or business periods are excluded from coupon application, and ensure campaign compliance. The data is fundamental for troubleshooting coupon non-applicability or auditing promotional campaigns, and forms the basis for compliance with reward/program eligibility rules.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/restrictions","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_restrictions { ... }","description":"Query and list coupon restriction records on a coupon, with support for pagination, search, and filter options. Each restriction defines a limitation on coupon usage, enforced during customer shopping, checkout, or campaign redemption.\n\nAdministrators can filter restrictions by business context (e.g., product, section, category, user, date/time), and sorting is supported by created_at or business field. The endpoint is essential for promotion audit, business rule management, and timely troubleshooting of discount eligibility issues.\n\nResponse includes a summary view for each restriction, showing type, target, and active periods, for fast reference and evidence compliance.","summary":"List restrictions for a given coupon with filtering and pagination.","parameters":[{"name":"couponId","description":"Unique identifier for the coupon whose restrictions to list","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for coupon restrictions.","typeName":"IShoppingMallAiBackendCouponRestriction.IRequest"},"responseBody":{"description":"Paginated list of coupon restriction summaries.","typeName":"IPageIShoppingMallAiBackendCouponRestriction.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_coupon_restrictions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves full details of a specific coupon restriction associated with a coupon, including type, applicability, enforcement logic, and business context of restriction. This operation is integral for reviewing and auditing restrictions that limit or block a coupon's use for certain users, products, categories, timeframes, or business purposes.\n\nBusiness rules ensure the restriction is requested in the scope of the correct coupon, and the combination is valid. The data is especially valuable when supporting compliance checks, troubleshooting customer complaints about coupon ineligibility, and conducting policy reviews. All access should be restricted to authorized business managers or admins.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/restrictions/{restrictionId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_restrictions { ... }","description":"Retrieve detailed information on an individual coupon restriction, including its type, conditions, target entity, active period, and enforcement status.\n\nThe restriction data allows administrators and compliance reviewers to understand why a coupon is not applicable or is blocked in specific business scenarios. Use is restricted to business analysts and operational leads for compliance and audit.\n\nHistorical access logs are typically maintained to track who reviewed which restrictions, in line with regulatory and business policy standards.","summary":"Get the details of a coupon restriction by restrictionId.","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to which the restriction belongs","schema":{"type":"string","format":"uuid"}},{"name":"restrictionId","description":"Unique identifier of the restriction to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Coupon restriction entry with full detail.","typeName":"IShoppingMallAiBackendCouponRestriction"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_coupon_restrictions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new restriction entry under a given coupon, specifying business limitations such as blocked product, excluded user, category restriction, date/time restriction, or business scenario limits. This critically supports complex campaign restrictions, fraud prevention, compliance auditing, and marketing business rules.\n\nThe endpoint validates that the restriction does not duplicate an existing active rule for the target coupon, and that all key parameters (type, scope, period, reason) are provided and valid. The action is limited to administrators or managers with the requisite permissions. Change tracking and audit are automatically enforced because coupon restrictions directly impact eligibility and customer experience.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/restrictions","method":"post","prisma_schemas":"model shopping_mall_ai_backend_coupons { ... }\nmodel shopping_mall_ai_backend_coupon_restrictions { ... }","description":"Create a new coupon restriction. Each restriction limits the scope or applicability of the coupon and can cover one or more business entities (product, user, section, category, etc.) or define period-based or policy-scenario limits.\n\nThis operation guarantees that the provided criteria are both unique and business-legal for the coupon, preventing dangerous or illogical configuration that could yield lost revenue or customer friction. All creations are logged for compliance and evidence.\n\nStrictly restricted to admin-level operators to protect promotional policy and business outcomes.","summary":"Create a restriction on a coupon (limit scope, time, target, etc).","parameters":[{"name":"couponId","description":"Unique identifier for the coupon to add the restriction under","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Restriction specification and business logic for the new restriction.","typeName":"IShoppingMallAiBackendCouponRestriction.ICreate"},"responseBody":{"description":"Created restriction record with complete business context.","typeName":"IShoppingMallAiBackendCouponRestriction"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_coupon_restrictions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing coupon restriction for a coupon, altering its applicability, limited users/products, or other business logic. This operation allows for adjustment of restriction logic in response to changing business needs, policy updates, or compliance requirements. It modifies the restriction entry and reflects changes instantly for customer-facing eligibility checks.\n\nValidation ensures no duplication or overlap of restriction logic, and changes are logged for future audit and compliance review. This endpoint should be used only by authorized admins with business-level training, as promotions and compliance can be deeply affected if restrictions are incorrectly configured.","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/restrictions/{restrictionId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_coupon_restrictions { ... }","description":"Update a coupon restriction. This enables dynamic adjustment of eligibility, timeframes, targets, and policy. Only business administrators with specialist knowledge should invoke this operation, as flawed configuration could cause system-wide promotion or compliance failures.\n\nAll changes are audited, with rollback and evidence recovery processes in place. Business validation and system integrity checks are performed prior to update, and the operation is atomic: success or full rollback.\n\nAfterward, the new restriction parameters govern coupon use in all active transactions and eligibility checks.","summary":"Update a coupon restriction by restrictionId (target, time, user, etc).","parameters":[{"name":"couponId","description":"Unique identifier for coupon assigned to the restriction","schema":{"type":"string","format":"uuid"}},{"name":"restrictionId","description":"Unique identifier for the restriction to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated restriction details (target, logic, reason, etc).","typeName":"IShoppingMallAiBackendCouponRestriction.IUpdate"},"responseBody":{"description":"Updated coupon restriction entry in full detail.","typeName":"IShoppingMallAiBackendCouponRestriction"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_coupon_restrictions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes a coupon restriction entry from the shopping mall backend system. It works with the shopping_mall_ai_backend_coupon_restrictions table, which defines not-allowed conditions for coupon usage, such as which products, channels, categories, or customers are not eligible for the coupon. This operation is intended for authorized admin users or coupon managers to remove a restriction, thus affecting the business logic for coupon application and validation. The operation requires both a valid coupon ID and the specific restriction ID to target the correct restriction entry for deletion. This enables dynamic alteration of coupon policies as business strategies change. Security, audit, and compliance rules apply, with all deletion actions logged for traceability. No response body is needed beyond a successful status code indicating deletion completed. If the target restriction is already deleted or does not exist, appropriate error handling is expected.\n\nRelated API operations for coupon management include reviewing restrictions (search/index), creating new restrictions (POST), or updating existing policies (PUT). Deletion here is a hard delete as per the schema, since logical deletion is not specified on this table.\n","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/restrictions/{restrictionId}","method":"delete","prisma_schemas":"/// Per-coupon restriction definitions. Defines not-allowed conditions, periods, channels, users, sections, categories, products. Supports fine-grained business enforcement (e.g., 'not valid with product X', 'not for user group Y', 'blocked on weekends', etc.).\nmodel shopping_mall_ai_backend_coupon_restrictions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String @db.Uuid\n  shopping_mall_ai_backend_product_id String? @db.Uuid\n  shopping_mall_ai_backend_channel_section_id String? @db.Uuid\n  shopping_mall_ai_backend_channel_category_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  start_time DateTime? @db.Timestamptz\n  end_time DateTime? @db.Timestamptz\n  weekday_bitmask Int? @db.Integer\n  is_holiday_restricted Boolean?\n  reason_code String?\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade)\n  product shopping_mall_ai_backend_products? @relation(fields: [shopping_mall_ai_backend_product_id], references: [id], onDelete: Cascade)\n  channelSection shopping_mall_ai_backend_channel_sections? @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade)\n  channelCategory shopping_mall_ai_backend_channel_categories? @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n}\n","description":"Permanently delete a specific coupon restriction from the system. This operation is used by administrators or coupon managers to remove a business rule that limits the applicability of a coupon. The operation affects the eligibility logic for coupon redemption, enabling dynamic policy updates for active marketing campaigns or compliance changes.\n\nSecurity controls ensure that only authorized users may delete restrictions. All delete actions are logged for compliance with regulatory and business policy standards. The deletion is irreversible, and will remove the corresponding record entirely from the shopping_mall_ai_backend_coupon_restrictions table. If the restriction does not exist, a not found or already deleted error is returned. Use this operation carefully, as changes may allow broader coupon usage than originally intended, impacting both customers and sellers.\n\nRelated endpoints include the search (index), add (post), and update (put) operations on coupon restrictions. This endpoint is typically used in advanced coupon management scenarios by business operations teams.\n","summary":"Permanently delete a coupon restriction from the system.","parameters":[{"name":"couponId","description":"Unique identifier of the target coupon to which the restriction belongs.","schema":{"type":"string","format":"uuid"}},{"name":"restrictionId","description":"Unique identifier for the coupon restriction to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_coupon_restrictions","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation searches and retrieves a paginated list of coupon notification events for the specified coupon in the shopping mall AI backend system. The operation works with the shopping_mall_ai_backend_coupon_notifications table, which tracks all business-driven notifications relating to coupons, such as issuance alerts, usage reminders, expiry warnings, or event campaign triggers. The endpoint supports advanced filtering, search parameters, and pagination controls for effective retrieval, aligned with operational needs for compliance and audit. It also supports filtering by notification type, delivery status, target recipients, and time windows. Typical users include administrators, marketing personnel, and compliance auditors who need insight into notification campaigns or evidence for regulatory reporting. Business rules for handling unsuccessful send attempts, notification batching, and error diagnostics are considered in the implementation.\n\nThe response includes notification event summaries, including type, status, attempt count, last attempt time, and result message. Searching helps with campaign effectiveness analysis, troubleshooting, and compliance audits. Corresponds to other notification-related endpoints for detail retrieval (GET) or log download/export. All business data is subject to user authorization and audit logging.\n","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/notifications","method":"patch","prisma_schemas":"/// Per-coupon, code, or issuance notification log/tracking for required or\n/// business-driven user notifications. Used for compliance, auditing, and\n/// evidence. Includes type, status, send time, result, error messages. Can\n/// log push, email, or SMS notifications.\nmodel shopping_mall_ai_backend_coupon_notifications {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String? @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid\n  shopping_mall_ai_backend_coupon_code_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  notification_type String\n  status String\n  send_attempts Int\n  last_attempted_at DateTime? @db.Timestamptz\n  result_message String?\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons? @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade)\n  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade)\n  couponCode shopping_mall_ai_backend_coupon_codes? @relation(fields: [shopping_mall_ai_backend_coupon_code_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n}\n","description":"Search and retrieve a paginated list of coupon notification events for a particular coupon. This endpoint enables operational users to monitor, audit, and analyze all notifications linked to a coupon, such as issuance messages, expiry warnings, redemption confirmations, or error alerts. The search can be filtered by notification type, status, recipient, or timeframe, and returns results in a paginated format with summary fields for each notification event.\n\nNotifications are used in compliance reporting, customer notification history, and marketing campaign analytics, with robust search and access controls for authorized users. Each entry in the response includes details like notification type, delivery status, send attempts, and any error or result messages. Data retrieval is subject to access rights with audit logging for each query.\n\nRelated operations: notification detail retrieval, notification download/export, campaign management endpoints.","summary":"Search and retrieve paginated coupon notifications for a specific coupon.","parameters":[{"name":"couponId","description":"Unique identifier of the coupon for which to retrieve notifications.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination parameters for filtering coupon notifications. May include filters for notification type, status, recipient, or time window.","typeName":"IShoppingMallAiBackendCouponNotification.IRequest"},"responseBody":{"description":"Paginated list of coupon notification summary objects matching the search criteria.","typeName":"IPageIShoppingMallAiBackendCouponNotification.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_coupon_notifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the detailed business and delivery information for a specific coupon notification, using the notification's unique ID within the context of a particular coupon. It queries the shopping_mall_ai_backend_coupon_notifications table, returning all relevant fields—such as notification type, delivery status, number of attempts, recipient, last attempted time, and any error messages. This endpoint is designed for administrator and compliance audit use cases where full transparency and traceability of individual notification events are required. Security controls, audit logging, and strict access requirements apply due to the sensitivity of notification delivery evidence.\n\nThis operation is typically used in conjunction with notification list endpoints, as well as for troubleshooting campaign delivery issues or fulfilling legal compliance evidence requests. Errors are returned if the notification does not exist or if the caller lacks proper authorization. Related endpoints allow searching all notifications or downloading detailed logs for extended analysis.\n","path":"/shoppingMallAiBackend/admin/coupons/{couponId}/notifications/{notificationId}","method":"get","prisma_schemas":"/// Per-coupon, code, or issuance notification log/tracking for required or\n/// business-driven user notifications. Used for compliance, auditing, and\n/// evidence. Includes type, status, send time, result, error messages. Can\n/// log push, email, or SMS notifications.\nmodel shopping_mall_ai_backend_coupon_notifications {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coupon_id String? @db.Uuid\n  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid\n  shopping_mall_ai_backend_coupon_code_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  notification_type String\n  status String\n  send_attempts Int\n  last_attempted_at DateTime? @db.Timestamptz\n  result_message String?\n  created_at DateTime @db.Timestamptz\n  coupon shopping_mall_ai_backend_coupons? @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade)\n  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade)\n  couponCode shopping_mall_ai_backend_coupon_codes? @relation(fields: [shopping_mall_ai_backend_coupon_code_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n}\n","description":"Retrieve full details of a specific coupon notification by notification ID for a given coupon. This operation provides all business, delivery, and audit metadata linked to a single notification event—such as notification type, delivery status, send attempts, recipient, attempt timestamps, and any associated error or result information. It enables advanced business auditing, compliance verification, or notification delivery troubleshooting.\n\nAccess is limited to authorized administrators due to the sensitive nature of notification and delivery evidence. If the notification does not exist, an error is returned. This endpoint is commonly used following a search or list operation for notification audits and is essential during compliance reviews or delivery investigations.\n","summary":"Get full notification details for a specific coupon notification event.","parameters":[{"name":"couponId","description":"Unique identifier of the coupon associated with the notification.","schema":{"type":"string","format":"uuid"}},{"name":"notificationId","description":"Unique identifier for the specific coupon notification event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the coupon notification event, including all business, delivery, and audit metadata.","typeName":"IShoppingMallAiBackendCouponNotification"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_coupon_notifications","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"This operation enables administrators and business operators to perform advanced search, filtering, and retrieval of deposit (cash balance) ledgers for customers or sellers. It queries the shopping_mall_ai_backend_deposits table, which records balances, accruals, expirations, and holds. Advanced filtering is supported via search parameters (e.g., min/max balances, holder type, customer or seller ID, creation/update date ranges), and results are paginated for order and scalability.\n\nThe operation returns summary information for each deposit ledger, assisting with financial audits, compliance reviews, incident investigations, or balance checks across the platform. Detailed entries (transaction logs) may be retrieved via additional endpoints. All access is logged for security and auditing, with strict role-based restrictions enforced.\n\nRelated business logic includes evidence preservation via immutable ledgers, incident monitoring, and integration with refunds or account withdrawals. Permissions correspond to financial operations and must reflect compliance and business requirements.","path":"/shoppingMallAiBackend/admin/deposits","method":"patch","prisma_schemas":"/// Represents the ledger of cash-like deposits for both customers and sellers. Tracks available balances, total accrued, and current state (e.g., usable, on hold, expired) for each account holder. Connects to detailed transaction and adjustment logs. Provides a core basis for refundable value holding and operational compliance.\nmodel shopping_mall_ai_backend_deposits {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_balance Float @db.DoublePrecision\n  expired_balance Float @db.DoublePrecision\n  on_hold_balance Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Search, filter, and paginate through all deposit ledgers in the system, returning a paginated list of deposit summaries matching specified criteria. This is used by finance, admin, or compliance teams to monitor cash balances across all account holders, conduct audits, or support business analysis. Search and pagination parameters allow for complex queries based on holder type, balances, date ranges, or other business logic fields. Only authorized users may perform this operation, which is fully audited for evidence and compliance.\n\nRelated endpoints: single deposit detail retrieval, deposit ledger download/export, and incident review (for anomalies or freeze actions).","summary":"Search, filter, and paginate deposit ledger balances.","parameters":[],"requestBody":{"description":"Search and pagination parameters for filtering deposit ledgers. Supports advanced queries across holder type, balances, and date range.","typeName":"IShoppingMallAiBackendDeposit.IRequest"},"responseBody":{"description":"Paginated list of deposit summary objects matching the search criteria for auditing and analysis.","typeName":"IPageIShoppingMallAiBackendDeposit.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_deposits","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves the full detail of a specific cash deposit ledger for a customer or seller by deposit ID. It queries the shopping_mall_ai_backend_deposits table, returning all business, balance, status, and audit metadata fields. Designed for administrator, finance, or compliance views and support tools, it assists with resolving account balance questions, disputes, or compliance checks. Security and access control are strictly enforced due to financial sensitivity.\n\nThe response delivers a complete snapshot of the deposit ledger, facilitating compliance reviews, incident response, reconciliation, and business intelligence. All queries are logged for evidence purposes, and related endpoints include transaction journal views or ledger export/download.\n","path":"/shoppingMallAiBackend/admin/deposits/{depositId}","method":"get","prisma_schemas":"/// Represents the ledger of cash-like deposits for both customers and sellers. Tracks available balances, total accrued, and current state (e.g., usable, on hold, expired) for each account holder. Connects to detailed transaction and adjustment logs. Provides a core basis for refundable value holding and operational compliance.\nmodel shopping_mall_ai_backend_deposits {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_balance Float @db.DoublePrecision\n  expired_balance Float @db.DoublePrecision\n  on_hold_balance Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Retrieve full details and audit snapshot of a specific deposit ledger by deposit ID. This operation is used for business and compliance audits, incident responses, or account investigations. The response includes all financial, balance, status, and timestamp fields for the single target ledger. Only authorized finance or admin users may perform this operation, and each query is logged for audit and evidence compliance.\n\nRelated operations include searching deposit ledgers (PATCH), exporting deposit books, or accessing associated transaction journals or anomaly incident logs.","summary":"Get full detail of a specific deposit ledger by its unique ID.","parameters":[{"name":"depositId","description":"Unique identifier of the deposit ledger to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full deposit ledger information, including all balance, status, and timestamp fields for compliance or audit usage.","typeName":"IShoppingMallAiBackendDeposit"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_deposits","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation creates a new deposit ledger for a customer or seller in the shopping mall backend system. The shopping_mall_ai_backend_deposits table represents account-level cash deposits, tracking balances, accruals, and regulatory states. The creation operation allows only authorized finance, admin, or privileged service users to register a new ledger. Request data must include basic deposit attributes such as initial balances and the associated customer or seller entity. This operation validates business rules for uniqueness—preventing duplicate ledgers for the same account holder, and applying defaults for fields such as zero balances where initial values are omitted. Audit and compliance logging is mandatory for all creation events, with the created ledger returned as the response.\n\nThis endpoint is infrequently used in production, as ledgers are typically system-generated during onboarding or new account approval workflows. Related endpoints handle search (PATCH), update (PUT), and detail retrieval (GET) of deposit ledgers.","path":"/shoppingMallAiBackend/admin/deposits","method":"post","prisma_schemas":"/// Represents the ledger of cash-like deposits for both customers and sellers. Tracks available balances, total accrued, and current state (e.g., usable, on hold, expired) for each account holder. Connects to detailed transaction and adjustment logs. Provides a core basis for refundable value holding and operational compliance.\nmodel shopping_mall_ai_backend_deposits {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_balance Float @db.DoublePrecision\n  expired_balance Float @db.DoublePrecision\n  on_hold_balance Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Create a new deposit ledger for a specified customer or seller. Used primarily in onboarding flows, high-level finance operations, or account recovery processes—for cases where a separate deposit ledger must be explicitly created. The request body must provide either a customer or seller reference and may specify initial balances. Business logic validates for required fields and ensures duplicate ledgers cannot be created for the same account holder. On success, returns the created ledger object including all system-populated audit fields.\n\nThis is an admin-only, high-privilege operation with comprehensive audit requirements. Subsequent actions (accrual, withdrawal, freeze) are managed via related endpoints.","summary":"Create a new deposit ledger for a customer or seller account.","parameters":[],"requestBody":{"description":"Deposit creation information, including owner (customer or seller) and any initial balances or account metadata.","typeName":"IShoppingMallAiBackendDeposit.ICreate"},"responseBody":{"description":"Created deposit ledger with all system-populated and user-provided fields.","typeName":"IShoppingMallAiBackendDeposit"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_deposits","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates the business, status, or financial information of an existing deposit ledger as identified by its deposit ID. It works with the shopping_mall_ai_backend_deposits table, allowing authorized users to correct balances, resolve incidents, or update account linkage (e.g., if a customer is re-assigned or a ledger becomes frozen due to compliance). Only authorized finance or admin users may perform updates.\n\nThe operation validates business and uniqueness rules (preventing duplicate ledgers for the same account holder), and logs all changes for compliance. Responses return the newly updated deposit ledger as the result. Related endpoints enable searching all deposit ledgers, detail retrieval, or reviewing change/correction logs for the specified ledger.\n","path":"/shoppingMallAiBackend/admin/deposits/{depositId}","method":"put","prisma_schemas":"/// Represents the ledger of cash-like deposits for both customers and sellers. Tracks available balances, total accrued, and current state (e.g., usable, on hold, expired) for each account holder. Connects to detailed transaction and adjustment logs. Provides a core basis for refundable value holding and operational compliance.\nmodel shopping_mall_ai_backend_deposits {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_balance Float @db.DoublePrecision\n  expired_balance Float @db.DoublePrecision\n  on_hold_balance Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Update an existing deposit ledger for a customer or seller identified by deposit ID. This is used by authorized finance or admin staff to correct balances, freeze/release accounts, or change ownership/account linkage in complex business cases. All update events are recorded for compliance. Business logic ensures consistent financial state and controls for duplicate ledgers or compliance incidents. The updated ledger object is returned after successful changes are applied. Only privileged roles may access this function, which is subject to audit logging.\n\nRelated endpoints: ledger search/query, individual ledger detail, transaction journal access for the ledger, audit history retrieval for compliance processes.","summary":"Update business or status information for a specific deposit ledger.","parameters":[{"name":"depositId","description":"Unique identifier of the deposit ledger to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the deposit ledger, such as adjusted balances or ownership/account details.","typeName":"IShoppingMallAiBackendDeposit.IUpdate"},"responseBody":{"description":"Updated deposit ledger object including all changed and system-populated fields.","typeName":"IShoppingMallAiBackendDeposit"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_deposits","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation soft deletes a deposit ledger by its deposit ID in the shopping mall AI backend system. It works with the shopping_mall_ai_backend_deposits table, which records cash deposit ledgers for customers and sellers. This operation sets the deleted_at timestamp to mark the ledger as logically deleted, preserving the record for audit and compliance purposes while excluding it from normal queries. Soft deletion is the standard approach, ensuring that data remains available for historical audits, financial investigations, and regulatory reviews. The record is not physically removed from the database.\n\nAccess to this operation is strictly limited to highly privileged finance or admin roles, and all actions are logged for audit evidence. If the ledger is already soft-deleted or does not exist, an appropriate error is returned. Use this operation as part of regulatory compliance, business-mandated remediation, or as a safeguard for financial records. No response body is required beyond acknowledgement of success.\n\nRelated operations: searching deposit ledgers, exporting evidence for deleted ledgers, compliance investigation endpoints, or review of deletion logs. Implementation sets the deleted_at column, and application logic excludes soft-deleted records from ordinary queries.\n","path":"/shoppingMallAiBackend/admin/deposits/{depositId}","method":"delete","prisma_schemas":"/// Represents the ledger of cash-like deposits for both customers and sellers. Tracks available balances, total accrued, and current state (e.g., usable, on hold, expired) for each account holder. Connects to detailed transaction and adjustment logs. Provides a core basis for refundable value holding and operational compliance.\nmodel shopping_mall_ai_backend_deposits {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_balance Float @db.DoublePrecision\n  expired_balance Float @db.DoublePrecision\n  on_hold_balance Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Soft delete (logical deletion) of a deposit ledger by deposit ID. This privileged operation sets the deleted_at timestamp on the record, excluding it from active business operations but keeping it available for internal audit, compliance evidence, and regulatory review. Soft-deleted deposit ledgers are not permanently removed and can be recovered for investigation or reporting as necessary. Application logic and business processes respect the deleted_at field to ignore soft-deleted records except when accessing audit logs or legal evidence.\n\nThis operation is typically performed by admin or finance teams for data governance, fraud investigation, business need, or regulatory requirements, with every action strictly logged. Use this endpoint instead of permanent delete except where explicit irrecoverable data removal is necessary under compliance direction.\n\nAny attempt to delete a already soft-deleted or non-existent ledger returns a business error. Related endpoints include search (PATCH), update (PUT), and detail retrieval (GET) operations for deposit ledgers.","summary":"Soft delete a deposit ledger by setting deleted_at, preserving audit evidence.","parameters":[{"name":"depositId","description":"Unique identifier of the deposit ledger to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_deposits","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated and filterable list of all transactions for a specific deposit ledger. Operates on the shopping_mall_ai_backend_deposit_transactions table, allowing customers, sellers, or administrators to view detailed audit and usage records (accruals, consumption, withdrawals, adjustments) for a deposit via depositId reference. Supports search, sorting, and pagination by transaction type, date, and other business-relevant fields. Essential for financial audit, customer inquiries, and compliance reporting. Only legitimate deposit owners (customer/seller) or platform admins may retrieve transaction logs due to sensitive financial nature. Related endpoints: GET for specific transaction details and DELETE for historical or administrative purposes.","path":"/shoppingMallAiBackend/customer/deposits/{depositId}/transactions","method":"patch","description":"Retrieve an audit trail and full transaction history for a given deposit ledger. This operation provides administrators, deposit holders (customers or sellers) with searchable and paginated access to all events affecting a deposit's balance, including accruals, usage, withdrawals, incidents, and manual adjustments.\n\nResulting data allows users to monitor account activity, confirm business events, or investigate anomalies. The returned list is filtered to include only transactions for which the requester has legitimate access rights per platform policy.\n\nDetailed business context—such as change types, amounts, references, and balance before/after—are included. This enables customers, sellers, and staff to ensure ledger consistency, perform monthly reconciliation, and address audit/compliance needs. Authorization checks must validate the user's right to view this deposit's transaction log. Expected errors include not found, forbidden, or unauthorized access for invalid depositId or mismatched roles.","summary":"List all transactions for a deposit ledger (with filters and pagination).","parameters":[{"name":"depositId","description":"UUID of the deposit ledger to query","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body containing filtering, sorting, and pagination parameters for the deposit transaction log.","typeName":"IShoppingMallAiBackendDepositTransaction.IRequest"},"responseBody":{"description":"Paginated list of deposit transaction summary/details matching the filter criteria.","typeName":"IPageIShoppingMallAiBackendDepositTransaction.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_deposit_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_deposit_transactions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_deposit_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  change_type String\n  amount Float @db.DoublePrecision\n  transaction_reference String?\n  balance_before Float @db.DoublePrecision\n  balance_after Float @db.DoublePrecision\n  reason_code String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  deposit shopping_mall_ai_backend_deposits @relation(fields: [shopping_mall_ai_backend_deposit_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([shopping_mall_ai_backend_seller_id])\n  @@index([shopping_mall_ai_backend_deposit_id, created_at])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves detailed information for a single deposit transaction specified by depositId and transactionId. This operation provides the full context and audit record for an individual transaction event—such as accrual, usage, or incident adjustment—on a deposit ledger. Operates on the shopping_mall_ai_backend_deposit_transactions table. Designed to support customer, seller, or admin-level audit, dispute investigation, or ledger reconciliation workflows. Only deposit owner or authorized administrators may access detailed transaction records. Related endpoints include PATCH (search/list) and administrative audit tools.","path":"/shoppingMallAiBackend/customer/deposits/{depositId}/transactions/{transactionId}","method":"get","description":"Fetch detailed data for a specific deposit transaction event referenced by its unique transactionId. Provides fields such as change type, amount, balance before and after, audit references, manual/admin reason codes, and timestamps.\n\nThis endpoint supports both account holders (customer/seller) and authorized administrators in investigating deposit ledger history, responding to disputes, or confirming compliance events. Sensitive data access is governed by strict authorization logic; non-owners or unauthorized requests are forbidden. Expected errors: not found, unauthorized, or forbidden if transaction does not belong to depositId or viewing rights are missing.","summary":"Get a specific deposit transaction's detailed audit information.","parameters":[{"name":"depositId","description":"UUID of the deposit ledger to which this transaction belongs","schema":{"type":"string","format":"uuid"}},{"name":"transactionId","description":"UUID of the specific transaction record to fetch","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete transaction detail for the specified deposit transaction event.","typeName":"IShoppingMallAiBackendDepositTransaction"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_deposit_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_deposit_transactions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_deposit_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  change_type String\n  amount Float @db.DoublePrecision\n  transaction_reference String?\n  balance_before Float @db.DoublePrecision\n  balance_after Float @db.DoublePrecision\n  reason_code String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  deposit shopping_mall_ai_backend_deposits @relation(fields: [shopping_mall_ai_backend_deposit_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([shopping_mall_ai_backend_seller_id])\n  @@index([shopping_mall_ai_backend_deposit_id, created_at])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"Returns a paginated, filterable index of all mileage ledgers for the requester (customer or seller) or for administrative queries. Uses the shopping_mall_ai_backend_mileages table, which tracks reward/accrual points, usable balance, historical accrual totals, and current/expired point values. Allows complex searching and filtering by status, accumulated value, creation date, associated customers/sellers, etc. Core to user profile dashboards, admin financial toolsets, and loyalty program analytics. Related endpoints: detail GET, create POST, update PUT, delete (soft) DELETE, and transaction log PATCH by mileageId.","path":"/shoppingMallAiBackend/customer/mileages","method":"patch","description":"Search and list available mileage (rewards points) ledgers accessible to the customer, seller, or, with appropriate permissions, as a system administrator/staff. Enables users to view their rewards balances and past accrual, while supporting staff in cross-account audits or loyalty analytics.\n\nSupports advanced filtering and search capabilities for auditing, analytics, loyalty program reporting, and compliance. Response includes summary data: balances, expiration info, and user/seller linkage as dictated by the mileage entity.\n\nErrors may occur on unauthorized access, forbidden fields, or if search criteria violate business or technical constraints. Filtering and ordering are designed to meet business reporting, audit, and UX requirements for large datasets.","summary":"Search and retrieve all mileage ledgers (with search and paging).","parameters":[],"requestBody":{"description":"Request parameters for searching, filtering, and paginating mileage ledger index.","typeName":"IShoppingMallAiBackendMileage.IRequest"},"responseBody":{"description":"Paginated list and summary info for mileage ledgers accessible to the user or as per requested filters.","typeName":"IPageIShoppingMallAiBackendMileage.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_mileages","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_mileage Float @db.DoublePrecision\n  expired_mileage Float @db.DoublePrecision\n  on_hold_mileage Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_d41b9810\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_c12d7291\")\n  @@index([usable_mileage])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve detailed information for a single mileage ledger, addressed by mileageId. Uses the shopping_mall_ai_backend_mileages table. Returns all fields, including primary/secondary owner type (customer/seller), accrued/usable/expired/on-hold balances, audit timestamps, and evidence for transaction or incident-related inquiries. Supports UX for user dashboard (rewards, points details), admin audit screens, and finance tools. Only the ledger owner or authorized staff may view details. Related endpoints: PATCH (search/index), PUT (update), DELETE (remove), PATCH (transaction log).","path":"/shoppingMallAiBackend/customer/mileages/{mileageId}","method":"get","description":"Get complete details for a specific mileage/point ledger by identifier. This endpoint provides all business context and evidence—owner, status, audit timestamps, accruals, on-hold and expired values, and cross-linkage to customer/seller accounts—per business compliance rules.\n\nDesigned for consuming in user dashboards, support operations, and financial or loyalty program audits. Authentication and authorization must ensure only legitimate owners or staff access sensitive mileage records. Returns errors for missing, unauthorized, or forbidden mileageId.","summary":"Get mileage ledger details by ID (full audit context).","parameters":[{"name":"mileageId","description":"UUID of the mileage ledger to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed business information for the mileage ledger, including balances and owner references.","typeName":"IShoppingMallAiBackendMileage"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_mileages","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_mileage Float @db.DoublePrecision\n  expired_mileage Float @db.DoublePrecision\n  on_hold_mileage Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_d41b9810\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_c12d7291\")\n  @@index([usable_mileage])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new mileage ledger for a customer or, in some cases, a seller. Operates on the shopping_mall_ai_backend_mileages table. Required fields include owner references, initial accrued amount, business context for creation (e.g., signup bonus, migration, admin grant). Returns the full mileage ledger object upon success. Strict business validation is required to prevent duplicate ledgers for a given owner. Supports onboarding, loyalty/rewards enrollment, administrative adjustments. Only authorized customers, sellers, or admins may create mileage ledgers. Related endpoints: PATCH (index/search), GET (detail), PUT (update), DELETE (remove).","path":"/shoppingMallAiBackend/customer/mileages","method":"post","description":"Creates a new mileage (rewards points) ledger for a specified customer or seller. Typical use cases include welcoming new users to loyalty programs, handling bulk migrations, or granting admin-initiated bonus point accounts.\n\nValidates that the referenced customer/seller does not already possess an active mileage ledger (uniqueness enforced per owner). The operation records the initial accrual, status, timestamps, and administrative or system context as appropriate. Response returns the fully-detailed mileage ledger upon creation. Error handling includes duplicate ledger detection, bad input, and insufficient permissions.","summary":"Create a new mileage/points ledger for a customer or seller.","parameters":[],"requestBody":{"description":"Full data required for new mileage ledger creation (owner references, initial balance, business rationale).","typeName":"IShoppingMallAiBackendMileage.ICreate"},"responseBody":{"description":"Created mileage ledger object with all details and audit data.","typeName":"IShoppingMallAiBackendMileage"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_mileages","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_mileage Float @db.DoublePrecision\n  expired_mileage Float @db.DoublePrecision\n  on_hold_mileage Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_d41b9810\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_c12d7291\")\n  @@index([usable_mileage])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"Update the attributes or status of an existing mileage ledger for a given mileageId. Operates on the shopping_mall_ai_backend_mileages table. Accepts updates for fields such as balances (admin/system use only), or business context like status, on-hold/expired/usable balances, expiration policies, or audit trails. Returns the full ledger object after the modification. Strict permissions and validation required. Only the record owner's admin or platform administrators may modify a ledger; customers cannot arbitrarily update balances. Related endpoints: PATCH (search), GET (detail), DELETE (soft remove).","path":"/shoppingMallAiBackend/admin/mileages/{mileageId}","method":"put","description":"Modifies a specific mileage ledger identified by mileageId. Allows system or administrator-driven updates to balances, status, rationale, or ownership. For use in correcting errors, handling operational incidents, or applying business policy (e.g., manual balance adjustment after dispute resolution).\n\nValidation ensures only authorized role or automated system logic invokes this. Audits all changes for compliance. Typical errors: not found, forbidden, bad request due to invalid updates, or business rules violations. Returns updated mileage ledger in response.","summary":"Update (admin/system) attributes of mileage ledger.","parameters":[{"name":"mileageId","description":"UUID of the mileage ledger to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values for updating the targeted mileage ledger (status, balances, etc).","typeName":"IShoppingMallAiBackendMileage.IUpdate"},"responseBody":{"description":"Updated and fully-detailed mileage ledger object.","typeName":"IShoppingMallAiBackendMileage"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_mileages","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_mileage Float @db.DoublePrecision\n  expired_mileage Float @db.DoublePrecision\n  on_hold_mileage Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_d41b9810\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_c12d7291\")\n  @@index([usable_mileage])\n}","authorizationRole":"admin","authorizationType":null},{"specification":"Removes (soft deletes) a mileage ledger by mileageId. This sets the deleted_at timestamp rather than physically removing the row, preserving evidence for compliance. This endpoint, operating on the shopping_mall_ai_backend_mileages table, is typically limited to administrative or automated system use. Ensures business history, disallows restoration without explicit admin action, and logs event for audit. Related endpoints: PATCH (index), GET (detail), PUT (update).","path":"/shoppingMallAiBackend/admin/mileages/{mileageId}","method":"delete","description":"Marks a mileage/point ledger as deleted (logical deletion) for business/institutional compliance. Only authorized platform admins or automated back-office processes can perform this action. Sets deleted_at; does not physically erase record, supporting audit and compliance evidence.\n\nEnsures no further accrual/use events are permitted; all history remains queryable for authorized review, but invisible in normal user queries. Errors may occur if mileageId does not exist or is already deleted. Susceptible to audit logging and security review.","summary":"Soft-delete a mileage ledger for compliance/evidence purposes.","parameters":[{"name":"mileageId","description":"UUID of the mileage ledger to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_mileages","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_mileage Float @db.DoublePrecision\n  expired_mileage Float @db.DoublePrecision\n  on_hold_mileage Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_cart_mileage_usages shopping_mall_ai_backend_cart_mileage_usages[]\n  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_d41b9810\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_mileages_shopping_mall_ai_bac_c12d7291\")\n  @@index([usable_mileage])\n}","authorizationRole":"admin","authorizationType":null},{"specification":"Returns a paginated and filterable ledger of all transaction (accrual, usage, manual/admin/incident) records for a specific mileage ledger, referenced by mileageId. Displayed transaction history supports customer, seller, admin, and support workflows for rewards program management and auditing. Underlying schema: shopping_mall_ai_backend_mileage_transactions. Only ledgers owned by—or visible to—the authenticated customer, seller, or admin may be queried. Designed for dashboards, dispute handling, and program analytics.","path":"/shoppingMallAiBackend/customer/mileages/{mileageId}/transactions","method":"patch","description":"Retrieve all transaction events (accrual, use, expiration, manual/admin adjustment) for a specific mileage ledger by mileageId. This endpoint returns a paginated, filtered listing of changes to the given ledger, with each event including type, value, description, before/after state, and audit timestamps.\n\nAccess is restricted to ledger owners and duly authorized administrators (customer, admin, seller as business/role permits). Errors expected on authorization failure, not found, or invalid filter criteria. The information supports self-service user review, staff support, and compliance investigations into reward accrual and spending history.","summary":"Paginate and search the full transaction history for a single mileage ledger.","parameters":[{"name":"mileageId","description":"UUID of the mileage ledger for which to fetch transactions.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Transaction log search, filter, and pagination parameters for the specified mileage ledger.","typeName":"IShoppingMallAiBackendMileageTransaction.IRequest"},"responseBody":{"description":"Paginated set of transaction summary/detail objects for the specified mileage ledger.","typeName":"IPageIShoppingMallAiBackendMileageTransaction.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_mileage_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileage_transactions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_mileage_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  change_type String\n  amount Float @db.DoublePrecision\n  transaction_reference String?\n  mileage_before Float @db.DoublePrecision\n  mileage_after Float @db.DoublePrecision\n  reason_code String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  mileage shopping_mall_ai_backend_mileages @relation(fields: [shopping_mall_ai_backend_mileage_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([shopping_mall_ai_backend_seller_id])\n  @@index([shopping_mall_ai_backend_mileage_id, created_at])\n}","authorizationRole":"customer","authorizationType":null},{"specification":"This operation creates a new digital coin wallet for a user or seller in the shopping mall AI backend. The entity 'shopping_mall_ai_backend_coins' captures the coin ledger type (customer or seller), total accrued coins, available balance, and historical metadata. Coins enable wallet-based transactions, promotional campaigns, and wallet event traces for analytics or compliance. When invoked, this endpoint creates a coin ledger for either a customer or seller, setting the initial balance and relevant attributes. Business validation ensures ledgers are unique per user or seller and linked to correct profiles. Each coin ledger is vital for implementing rewards, promotional currency, or business-specific wallet logic.","path":"/shoppingMallAiBackend/admin/coins","method":"post","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_coin Float @db.DoublePrecision\n  expired_coin Float @db.DoublePrecision\n  on_hold_coin Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_c0d987f0\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_9661d84f\")\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_5444cf42\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_d486d131\")\n  @@index([usable_coin])\n}\n","description":"Create a new coin wallet ledger for a specific user (customer) or seller. The operation validates uniqueness and correctly associates the wallet to the owner. Full tracking is provided with initial balances for total, usable, expired, and on-hold coins. Coins may represent promotional, marketing, or campaign value, and the entity supports future adjustments. Permission checks ensure only admins or eligible actors can create ledgers. Related operations include searching for coins and managing transactions within a ledger.","summary":"Create a new digital coin wallet for a user or seller.","parameters":[],"requestBody":{"description":"Required properties to create a new coin ledger, including identifying its owner (customerId or sellerId) and initial balances if applicable.","typeName":"IShoppingMallAiBackendCoin.ICreate"},"responseBody":{"description":"The created coin wallet entity, including all balances and owner linkage.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated list of coin (digital wallet) ledgers with advanced filtering and sorting capabilities. Coin entities track reward, promotional, or internal credits both for users and sellers. This search endpoint allows administrators to search for ledgers based on owner (customer or seller), available balance, creation/update dates, or business metadata. The operation supports sophisticated search queries for business workflows, settlement, and auditing. It returns a paginated result set, suitable for dashboards.","path":"/shoppingMallAiBackend/admin/coins","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_coin Float @db.DoublePrecision\n  expired_coin Float @db.DoublePrecision\n  on_hold_coin Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_c0d987f0\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_9661d84f\")\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_5444cf42\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_d486d131\")\n  @@index([usable_coin])\n}\n","description":"Search and retrieve a filtered, paginated list of coin ledgers in the system, supporting business search by user or seller, balances, or dates. Pagination and sorting options are supported via request parameters. The entity is relevant for reward management, promotional credits, or seller settlement use-cases. Permission to search is limited to authorized administrators due to financial data visibility. Related operations include viewing ledger details or transactions.","summary":"Search coin wallets with pagination and advanced filters.","parameters":[],"requestBody":{"description":"Search filters, pagination, and sorting parameters for coin ledgers.","typeName":"IShoppingMallAiBackendCoin.IRequest"},"responseBody":{"description":"Paginated results listing found coin ledger entities.","typeName":"IPageIShoppingMallAiBackendCoin"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Returns full details for an individual digital coin wallet ledger identified by its unique ID. Coin wallets track the total, usable, expired, and on-hold coins for a user or seller in the shopping mall AI backend. Wallets are used for business processes such as coupon events, promotional rewards, or campaign credits. Access is limited to admins and the wallet owner. Used to review a user's wallet, settlement status, or for ledger corrections.","path":"/shoppingMallAiBackend/admin/coins/{coinId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_coin Float @db.DoublePrecision\n  expired_coin Float @db.DoublePrecision\n  on_hold_coin Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_c0d987f0\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_9661d84f\")\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_5444cf42\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_d486d131\")\n  @@index([usable_coin])\n}\n","description":"Obtain complete ledger details for a coin wallet by wallet ID. Includes historical balances, accrued/promotional coin information, and linkages to the owning user or seller. Permission is required, restricting access to administrators or the specific wallet owner for privacy and compliance, given audit sensitivity of digital wallet information. This endpoint helps with wallet reconciliation or transaction review. Errors are triggered if the ID is not found or authorized user is missing permissions.","summary":"Retrieve details of a specific coin wallet by ID.","parameters":[{"name":"coinId","description":"Unique identifier for the target digital coin wallet ledger.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All data for the coin wallet, including balances and metadata.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update the metadata, status, or balances for a given digital coin wallet, referenced by ID. This endpoint enables coin wallet changes for business correction, admin action, or event response. Modifiable fields include association to a customer or seller, and coin balances for business adjustment (such as correction of promotional campaigns, refunds, or user-initiated changes). Only admins with appropriate authority can invoke this, and every update is audit-logged for compliance.","path":"/shoppingMallAiBackend/admin/coins/{coinId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_coin Float @db.DoublePrecision\n  expired_coin Float @db.DoublePrecision\n  on_hold_coin Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_c0d987f0\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_9661d84f\")\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_5444cf42\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_d486d131\")\n  @@index([usable_coin])\n}\n","description":"Update wallet metadata for an identified digital coin wallet, including owner linkage, current balance totals, or wallet status. The operation requires the coinId path parameter and a body specifying the update fields. Permission controls restrict access to credentialed admins, with all modifications audit-logged for financial compliance. Common update use cases include fixing discrepancies, campaign adjustments, or system reconciliations. Related endpoints support searching ledgers and viewing their histories.","summary":"Update coin wallet ledger information by ID.","parameters":[{"name":"coinId","description":"Unique identifier (UUID) for the digital coin wallet to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the identified coin wallet, may include balances or owner profile linkage.","typeName":"IShoppingMallAiBackendCoin.IUpdate"},"responseBody":{"description":"The updated coin wallet entity after modification.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Permanently deletes a digital coin wallet ledger by its ID. Wallet deletion is a hard delete because there is no business process for soft-deletion of financial ledgers in the coin wallet entity. All reward, campaign, and promotional balances are lost upon removal. This operation is restricted and only permitted by root administrators. Business rules may restrict this endpoint to test or system-corrective purposes only. Removal is permanently recorded in audit logs, and ledgers cannot be recovered once deleted.","path":"/shoppingMallAiBackend/admin/coins/{coinId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  total_accrued Float @db.DoublePrecision\n  usable_coin Float @db.DoublePrecision\n  expired_coin Float @db.DoublePrecision\n  on_hold_coin Float @db.DoublePrecision\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_c0d987f0\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_9661d84f\")\n  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]\n  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]\n  @@unique([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_5444cf42\")\n  @@unique([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coins_shopping_mall_ai_backen_d486d131\")\n  @@index([usable_coin])\n}\n","description":"Hard delete a coin wallet for the specified ID. This action cannot be undone and is only allowed for admin users with the highest permissions in operational, compliance, or test environments. All traces and balances for the coin wallet are permanently removed from the active database, but audit logs retain the removal event. Common reasons include system correction, test record cleanup, or compliance-driven ledger elimination. Errors are returned for unauthorized calls or ledgers with dependent business history.","summary":"Delete a coin wallet ledger permanently by ID (hard delete).","parameters":[{"name":"coinId","description":"Unique identifier (UUID) for the coin wallet to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null},{"specification":"Returns a paginated list of all transaction (event) records for a specific coin wallet, identified by its coinId. Transactions in 'shopping_mall_ai_backend_coin_transactions' record changes to the wallet's promotional wallet, such as accruals, usage, manual adjustments, campaign events, and compliance incidents. This endpoint enables financial/audit tracking across the wallet's history, supporting business review, compliance casework, and campaign analysis. Response is pageable and filterable by event type or date.","path":"/shoppingMallAiBackend/admin/coins/{coinId}/transactions","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_coin_transactions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coin_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  change_type String\n  amount Float @db.DoublePrecision\n  transaction_reference String?\n  coin_before Float @db.DoublePrecision\n  coin_after Float @db.DoublePrecision\n  reason_code String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  coin shopping_mall_ai_backend_coins @relation(fields: [shopping_mall_ai_backend_coin_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_7756024d\")\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_52294556\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_7c84b93d\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_cee21197\")\n  @@index([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_74017afe\")\n  @@index([shopping_mall_ai_backend_coin_id, created_at], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_3a9d760d\")\n}\n","description":"Search and retrieve transaction (event) logs for a specified digital coin wallet, supporting advanced filtering by event type, amount, date range, or actor type. The operation is commonly used for audit, campaign analysis, or compliance reporting. Business permissions ensure that only authorized admins or wallet owners can query transaction histories. Results are returned in pageable groups with event metadata for each entry. Related endpoints allow access to transaction detail or trigger business incident reviews.","summary":"Search transaction history for a specific coin wallet ledger.","parameters":[{"name":"coinId","description":"Coin wallet ledger ID for which to retrieve transactions.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query, filter, and pagination options for finding wallet transactions.","typeName":"IShoppingMallAiBackendCoinTransaction.IRequest"},"responseBody":{"description":"Paginated results listing wallet transaction events and details.","typeName":"IPageIShoppingMallAiBackendCoinTransaction"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_coin_transactions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve the details of a single coin wallet transaction event record by its unique ID, scoped within the parent coin wallet. Every transaction event is an immutable, append-only business record capturing coin accrual, deduction, manual adjustment, or incident. This endpoint is used for evidence collection, audit trail review, and campaign/correction investigation. Access is limited to administrators or the wallet's owner; compliance requirements apply for reviewing actor context, before/after balances, and reasons for transaction.","path":"/shoppingMallAiBackend/admin/coins/{coinId}/transactions/{transactionId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_coin_transactions {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_coin_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  change_type String\n  amount Float @db.DoublePrecision\n  transaction_reference String?\n  coin_before Float @db.DoublePrecision\n  coin_after Float @db.DoublePrecision\n  reason_code String?\n  description String?\n  created_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  coin shopping_mall_ai_backend_coins @relation(fields: [shopping_mall_ai_backend_coin_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_7756024d\")\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_52294556\")\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_7c84b93d\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_cee21197\")\n  @@index([shopping_mall_ai_backend_seller_id], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_74017afe\")\n  @@index([shopping_mall_ai_backend_coin_id, created_at], map: \"shopping_mall_ai_backend_coin_transactions_shopping_ma_3a9d760d\")\n}\n","description":"Retrieve the full details of a single transaction event within a digital coin wallet, including the before/after balances, actor type, transaction type, origin, and timestamps. The operation requires both coinId (parent wallet) and transactionId (event). Detailed audit metadata is included for compliance review, evidence record production, or incident resolution. Access is enforced by business permissions for financial event traceability. Errors are returned if unauthorized or if the record does not exist.","summary":"Get details of an individual coin wallet transaction event.","parameters":[{"name":"coinId","description":"Parent coin wallet ID to which the transaction belongs.","schema":{"type":"string","format":"uuid"}},{"name":"transactionId","description":"Unique transaction event ID within the coin wallet.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All immutable business data for the coin wallet transaction event.","typeName":"IShoppingMallAiBackendCoinTransaction"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_coin_transactions","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This API operation retrieves a specific transaction record for a given mileage ledger. The operation accesses the shopping_mall_ai_backend_mileage_transactions table, which holds individual transaction histories associated with a mileage account. Querying a transaction by both mileageId and transactionId enables precise retrieval for compliance evidence, user review, and business audit. The request is limited to users with valid access to their own or authorized mileage records. The detailed transaction includes accrual, redemption, expiration, or adjustment data, and references the parent mileage ledger for traceability.","path":"/shoppingMallAiBackend/customer/mileages/{mileageId}/transactions/{transactionId}","method":"get","description":"This endpoint allows authorized users to retrieve a specific transaction entry within a given mileage ledger. The shopping_mall_ai_backend_mileage_transactions table provides an immutable, audit-grade record of all changes (accrual, use, expire, manual adjustment, donation) for customer and seller mileage ledgers.\n\nRequesting a transaction by mileageId and transactionId enables compliance auditors, customers, or support staff to view ledger history for dispute resolution, reward validation, or fraud investigation. The operation enforces strict authorization policies—only the mileage owner (customer or seller) or designated business administrators can access the transaction detail.\n\nReturned data includes the change_type, amount, reference, before/after balance, business reason, and narrative context for this transaction, as defined in the schema. This endpoint integrates with evidence requirements for refunds, promo campaigns, and reward point policies. If the record does not exist or is forbidden, an appropriate error is returned.","summary":"Retrieve a specific mileage ledger transaction by mileageId and transactionId.","parameters":[{"name":"mileageId","description":"Unique identifier of the mileage ledger to which the transaction belongs.","schema":{"type":"string","format":"uuid"}},{"name":"transactionId","description":"Unique identifier for the specific transaction within the mileage ledger.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed transaction entry for the given mileage ledger and transaction ID.","typeName":"IShoppingMallAiBackendMileageTransaction"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_mileage_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_mileages {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n\nmodel shopping_mall_ai_backend_mileage_transactions {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"This operation searches for digital coin ledgers for both customers and sellers. It accesses the shopping_mall_ai_backend_coins table, supporting advanced filtering by owner, balance, and coin status. Typical use cases include displaying wallet overviews in the user's or seller's account, or admin dashboard access for financial monitoring. Pagination, sorting, and search criteria are supported through the request body, and only authorized users may access their own ledgers.","path":"/shoppingMallAiBackend/customer/coins","method":"patch","description":"This endpoint allows authenticated users (customers or sellers) to search for and retrieve a paginated collection of their own or authorized digital coin ledgers, as stored in the shopping_mall_ai_backend_coins table.\n\nIt supports advanced search, filtering, and sorting—for example, by coin balance, account status, or creation/update range. Pagination parameters help optimize data usage and interface performance. Only the ledger owner or administrators may access this data; all access and search events are logged for audit compliance.\n\nThe response provides summary or detail views per required output, and supports both customer and seller coin accounts.","summary":"Search and list digital coin ledgers for users or sellers with filtering and pagination.","parameters":[],"requestBody":{"description":"Filter, search, and sort options for coin ledger search (owner, balance range, pagination, etc.).","typeName":"IShoppingMallAiBackendCoin.IRequest"},"responseBody":{"description":"Paginated collection of coin ledgers matching the search criteria.","typeName":"IPageIShoppingMallAiBackendCoin"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Fetch a single coin ledger's details using its unique identifier. The operation accesses the shopping_mall_ai_backend_coins table, which tracks digital coin balances for users and sellers. This endpoint allows individuals or authorized parties to view current and historical coin balances, status, and audit fields. Used for wallet overview, financial dispute resolution, or admin investigation.","path":"/shoppingMallAiBackend/customer/coins/{coinId}","method":"get","description":"This operation retrieves the details of a digital coin ledger given its unique coinId. The shopping_mall_ai_backend_coins table contains information such as total accrued coins, available coin balance, expired/lost status, and audit timestamps.\n\nOnly the owner (customer or seller) and system administrators may access coin ledger information. This endpoint is typically used in personal wallet detail pages, business analytics, and customer support requests.\n\nResults include all business and audit fields required for transaction verification, wallet management, or troubleshooting balance anomalies. If the record is missing or restricted, an error is returned.","summary":"Retrieve a specific digital coin ledger by coinId.","parameters":[{"name":"coinId","description":"Unique identifier of the coin ledger to access.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coin ledger details for the identified coinId.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new digital coin ledger for a customer or seller. The operation writes to the shopping_mall_ai_backend_coins table, initializing balances and account associations based on the request. Used during user or seller onboarding, or for resolving orphaned wallets. All creations are logged for audit and compliance.","path":"/shoppingMallAiBackend/customer/coins","method":"post","description":"This endpoint creates a new coin ledger (wallet) for a user or seller in the shopping_mall_ai_backend_coins table. The creation workflow may be triggered automatically during onboarding, account upgrades, or manual admin actions for lost/damaged wallets.\n\nRequesting users must be authorized to create ledgers (usually their own or by admin privilege). The request body includes owner (customer or seller), and initial coin amounts (optional, typically zero). All records are initialized with audit timestamps and compliance trace. Duplicate ledgers for the same owner are prevented per schema constraints.\n\nIf creation is successful, details of the new coin ledger are returned. All actions are logged as business events for legal and system auditability. Errors are raised for duplicate or unauthorized attempts.","summary":"Create a new digital coin ledger for a customer or seller.","parameters":[],"requestBody":{"description":"Information about the owner of the new coin ledger, plus optional initial balances.","typeName":"IShoppingMallAiBackendCoin.ICreate"},"responseBody":{"description":"The newly created coin ledger, including audit fields and balances.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Update an existing coin ledger with changes such as owner reassignment, adjustments, or status updates. The operation updates the shopping_mall_ai_backend_coins table, maintaining all audit fields and enforcing business and schema constraints. Authorization checks restrict editing to legitimate account owners and administrators.","path":"/shoppingMallAiBackend/customer/coins/{coinId}","method":"put","description":"This endpoint allows an authenticated user or admin to update a specific coin ledger, identified by coinId, within the shopping_mall_ai_backend_coins table.\n\nFields eligible for update may include owner (customer or seller), balance adjustments (admin only), reactivation or deactivation, and other business metadata. The operation enforces full audit tracking for compliance and reversibility. Updates must meet validation constraints and cannot circumvent existing schema rules (no ownership conflicts, double spend, etc.).\n\nIf successful, the API returns the updated coin ledger, including new audit/metadata. Errors return if record or permissions are invalid, or schema validation fails.","summary":"Update digital coin ledger information by coinId.","parameters":[{"name":"coinId","description":"Unique identifier for the coin ledger to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for update (owner, status, coin adjustments, etc.), subject to schema validation.","typeName":"IShoppingMallAiBackendCoin.IUpdate"},"responseBody":{"description":"Updated coin ledger details, reflecting all changes and new audit markers.","typeName":"IShoppingMallAiBackendCoin"},"authorizationRoles":["customer"],"name":"update","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Permanently delete a digital coin ledger, marking it as deleted_at for audit. This operation issues a soft deletion on the shopping_mall_ai_backend_coins table by setting the deleted_at timestamp. Only account owners or administrators may request deletion. This supports regulatory compliance, user withdrawal, or fraud investigation scenarios.","path":"/shoppingMallAiBackend/customer/coins/{coinId}","method":"delete","description":"This endpoint marks a specified coin ledger (wallet) as deleted by setting the deleted_at timestamp in the shopping_mall_ai_backend_coins table. Soft-deletion ensures records are retained for evidence, regulatory audit, and future recovery in line with business and legal requirements.\n\nOnly the ledger's owner (customer or seller) or privileged administrators may initiate deletion. Once soft-deleted, the ledger is hidden from general access, and further transactions are blocked.\n\nAttempts to delete non-existent or unauthorized coin ledgers result in proper error signaling. Full deletion is intentionally not allowed (preserving audit/evidence).","summary":"Soft-delete (mark as deleted_at) a coin ledger by coinId for regulatory compliance.","parameters":[{"name":"coinId","description":"ID of the coin ledger to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_coins","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"This endpoint retrieves a paginated list of all transactions associated with a specific coin ledger, as stored in the shopping_mall_ai_backend_coin_transactions table. It supports filtering by date, type, or amount, as well as pagination and sorting. Access is limited to ledger owners or admins. This is used to display wallet activity, audit trails, or for compliance review.","path":"/shoppingMallAiBackend/customer/coins/{coinId}/transactions","method":"patch","description":"The endpoint provides authenticated users (or admins) access to the full ledger of coin transactions for a specific coin wallet, referenced by coinId. The shopping_mall_ai_backend_coin_transactions table stores immutable records for accrual, usage, adjustment, or administrative actions affecting the coin balance.\n\nThe endpoint supports advanced filters such as activity range, transaction type, amount thresholds, and full pagination for use in UI dashboards or transaction histories. Users may only access their own transactions unless provided administrative oversight per business and compliance rules.\n\nThe paged response returns relevant business and evidence fields to support review, dispute handling, or transaction investigation. All access is tracked for audit compliance.","summary":"Search and retrieve paginated coin ledger transactions for a wallet by coinId.","parameters":[{"name":"coinId","description":"Unique identifier of the coin ledger whose transactions are retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Optional filter parameters (type, range, amount, pagination, etc.) for transaction search.","typeName":"IShoppingMallAiBackendCoinTransaction.IRequest"},"responseBody":{"description":"Paged list of coin transaction records matching the filter and wallet context.","typeName":"IPageIShoppingMallAiBackendCoinTransaction"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_coin_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n\nmodel shopping_mall_ai_backend_coin_transactions {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve a single coin transaction record by coin ledger and transaction identifier. Accesses the shopping_mall_ai_backend_coin_transactions table for detailed, immutable audit records. Requested by users or admins during wallet management, dispute resolution, or fraud investigation. The result includes transaction amount, type, before/after state, reference, and compliance narrative. Access is strictly restricted to ledger owners or administrative roles.","path":"/shoppingMallAiBackend/customer/coins/{coinId}/transactions/{transactionId}","method":"get","description":"This endpoint retrieves a specific coin transaction associated with a given coinId and transactionId. Each transaction in the shopping_mall_ai_backend_coin_transactions table reflects a change (usage, accrual, expiry, adjustment, admin action) on the coin ledger for a customer or seller.\n\nUsers are only able to access their own transactions; admins may retrieve records for compliance and business reasons. Data includes all audit metadata, balances, type, reason, and contextual description, supporting evidence needs or transaction troubleshooting.\n\nResponses are comprehensive and meet all audit/compliance requirements. Errors are returned for missing, restricted, or non-existent records.","summary":"Retrieve a specific coin transaction within a coin ledger by coinId and transactionId.","parameters":[{"name":"coinId","description":"Identifier of the coin ledger associated with the transaction record.","schema":{"type":"string","format":"uuid"}},{"name":"transactionId","description":"Unique transaction record identifier within the coin ledger.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the individual coin transaction.","typeName":"IShoppingMallAiBackendCoinTransaction"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_coin_transactions","soft_delete_column":"deleted_at","prisma_schemas":"model shopping_mall_ai_backend_coins {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n\nmodel shopping_mall_ai_backend_coin_transactions {\n  id String @id @db.Uuid\n  // ... other fields ...\n}\n","authorizationRole":"customer","authorizationType":null},{"specification":"Search and filter user inquiries (QnA, support, engagement tickets) enabled for both customers and sellers on the commerce platform. This operation targets the shopping_mall_ai_backend_inquiries table, which includes fields supporting complex multi-channel, privacy, and workflow filtering. Allows users to search their own inquiries by status, target product or order, privacy flag, keyword, or date range; admins may filter across all. Results are paginated and can be sorted.","prisma_schemas":"model shopping_mall_ai_backend_inquiries {\n  id String @id @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  product_id String? @db.Uuid\n  order_id String? @db.Uuid\n  title String\n  body String\n  private Boolean\n  status String\n  closed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"This endpoint retrieves a paginated and filtered list of user inquiries (questions, support threads, or tickets) from across the shopping mall platform. The inquiries can have relationships with customer, seller, product, order, and can be filtered by query parameters such as title, status, privacy flag, and date ranges for created/closed timestamps.\n\nSearch can be conducted by end-users (for their own inquiries) or by authorized admins (across all). Only non-deleted inquiries are included unless an admin filters for deleted entries as part of compliance or evidence reviews. Results include essential fields like inquiry type, target product/order, status, and whether the inquiry is private.\n\nCommon use: review of customer's support history, seller's Q&A lists, or admin oversight for moderation and compliance. Pagination and sorting are standard for result efficiency.","summary":"Search and paginate user inquiries/QnA tickets with advanced filtering.","parameters":[],"requestBody":{"description":"Filter, sort, and pagination settings applied to inquiries search.","typeName":"IShoppingMallAiBackendInquiry.IRequest"},"responseBody":{"description":"Paginated inquiry list matching the provided search/filter criteria.","typeName":"IPageIShoppingMallAiBackendInquiry.ISummary"},"authorizationRoles":["customer"],"name":"index","path":"/shoppingMallAiBackend/customer/inquiries","method":"patch","model_name":"shopping_mall_ai_backend_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve the complete details for a specific inquiry (customer/seller question or support ticket) using its unique inquiry ID. Targets the shopping_mall_ai_backend_inquiries table and exposes all major attributes—ownership, target entities, title, body, privacy, status, and timestamps—required for viewing or taking moderation or business action.","prisma_schemas":"model shopping_mall_ai_backend_inquiries {\n  id String @id @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  product_id String? @db.Uuid\n  order_id String? @db.Uuid\n  title String\n  body String\n  private Boolean\n  status String\n  closed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"Allows a user, seller, or admin to load a detailed view of an inquiry by its unique identifier. The inquiry data includes origin (customer or seller), related product, order, title, message content, privacy flag, status, closed time, and full audit trail timestamps.\n\nUsed when viewing details, responding, handling moderation, or referencing for after-sales operations. Access is generally scoped to the owner (customer/seller) or admin; data is filtered accordingly for privacy and security.\n\nCommon errors include not found (invalid/nonexistent ID) or access denied (insufficient permission).","summary":"Get the complete details of a specific inquiry by its ID.","parameters":[{"name":"inquiryId","description":"UUID of the inquiry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All fields for the inquiry, including owner, product, private flag, and content.","typeName":"IShoppingMallAiBackendInquiry"},"authorizationRoles":["customer"],"name":"at","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}","method":"get","model_name":"shopping_mall_ai_backend_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new inquiry (QnA, support, or engagement ticket) for a customer or seller user on the shopping mall platform. Accepts required and optional fields specified by business logic, including related product/order, title, body, privacy flag, and any business context. Saves new record in the shopping_mall_ai_backend_inquiries table. Returned object is the created inquiry with all fields populated.","prisma_schemas":"model shopping_mall_ai_backend_inquiries {\n  id String @id @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  product_id String? @db.Uuid\n  order_id String? @db.Uuid\n  title String\n  body String\n  private Boolean\n  status String\n  closed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"This endpoint registers a new inquiry on behalf of a customer or seller. The request body contains all necessary info: the user making the inquiry (as customer_id or seller_id), the related product or order (optional), the inquiry title, content, privacy status (public/private), and any initial workflow status.\n\nSubmission creates a new inquiry row, triggers relevant events or notifications, and returns the persisted inquiry object. Security and business rules require authentication (typically as customer or seller), blocking creation for anonymous/unverified users.\n\nInput validation ensures required fields (e.g., title, body, private flag) are provided and comply with business constraints (e.g., length, product reference if required by category).","summary":"Create a new inquiry (QnA/support ticket) for a customer or seller.","parameters":[],"requestBody":{"description":"Inquiry creation payload: owner, title, content, privacy, target entities.","typeName":"IShoppingMallAiBackendInquiry.ICreate"},"responseBody":{"description":"The created inquiry object with all persisted fields and timestamps.","typeName":"IShoppingMallAiBackendInquiry"},"authorizationRoles":["customer"],"name":"create","path":"/shoppingMallAiBackend/customer/inquiries","method":"post","model_name":"shopping_mall_ai_backend_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Update an existing inquiry by ID, allowing modifications to message, status, privacy, or related data. Only the inquiry owner (customer/seller) or admin can update. The operation applies business constraints—such as edit windows, workflow validity, and content length—and tracks history for audit evidence. Updates the shopping_mall_ai_backend_inquiries record and returns new inquiry details.","prisma_schemas":"model shopping_mall_ai_backend_inquiries {\n  id String @id @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  product_id String? @db.Uuid\n  order_id String? @db.Uuid\n  title String\n  body String\n  private Boolean\n  status String\n  closed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"Enables authorized users to update the content, metadata, or workflow status of an inquiry. The endpoint only permits modifications by the owner (customer/seller) or an administrator. The request body should encapsulate updatable fields (title, body, privacy, status, workflow data), which are validated per business rules for edit limits and audit requirements. A successful update persists changes to storage and returns the new details for the inquiry.\n\nSecurity: Authorization must validate the updater's ownership or role; audit trails are generated for compliance and evidence. Edits to deleted or finalized inquiries are disallowed. Related endpoints: detail inquiry GET, delete/erase, and moderation logs.","summary":"Update a specific inquiry by ID (content, status, privacy, etc).","parameters":[{"name":"inquiryId","description":"UUID of the inquiry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields allowed for update: title/body/privacy/status, etc.","typeName":"IShoppingMallAiBackendInquiry.IUpdate"},"responseBody":{"description":"The updated inquiry with all current data and timestamps.","typeName":"IShoppingMallAiBackendInquiry"},"authorizationRoles":["customer"],"name":"update","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}","method":"put","model_name":"shopping_mall_ai_backend_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Delete (logically erase) an inquiry by its ID. Only the owner (customer/seller) or an administrator may invoke this operation. The inquiry is not physically deleted, but marked as deleted by populating its deleted_at field, preserving for audit and compliance. Subsequent access or modification to this inquiry is disabled for normal users. The endpoint operates on shopping_mall_ai_backend_inquiries.","prisma_schemas":"model shopping_mall_ai_backend_inquiries {\n  id String @id @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  product_id String? @db.Uuid\n  order_id String? @db.Uuid\n  title String\n  body String\n  private Boolean\n  status String\n  closed_at DateTime?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"Mark the specified inquiry as logically deleted by setting the deleted_at field to the current timestamp. This operation may only be performed by inquiry owner (customer/seller) or administrators. No data is physically removed, supporting evidence preservation and compliance audits.\n\nOnce deleted, the inquiry is excluded from normal user access and search results but may remain available to authorized auditors. Attempted deletion of non-existent or already deleted inquiries raises a meaningful business exception for traceability. Success is indicated by void or confirmation response; related endpoints include inquiry update, detail view, and moderation/audit logs.","summary":"Logically delete (soft delete) an inquiry by ID, preserving evidence.","parameters":[{"name":"inquiryId","description":"UUID of the inquiry to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}","method":"delete","model_name":"shopping_mall_ai_backend_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Search and paginate replies to a specific inquiry, supporting advanced filtering, sorting, and access control for customer, seller, or admin viewing. Results are pulled from shopping_mall_ai_backend_inquiry_replies, scoped by inquiryId and optionally by author, thread depth, creation date, or privacy flag.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n}\n","description":"Retrieve a paginated response list (threaded replies, answers, clarifications) for a given inquiry. Filters allow users to limit by author, date, privacy setting, or response nesting (thread depth). Access is determined by inquiry privacy and requester role (customer, seller, or admin); users only receive replies to inquiries they own or are participants in, while admins may access all for compliance and moderation.\n\nResults exclude deleted replies except for authorized compliance/admin roles. The standard response also supports batch loading for moderation or evidence views. Related endpoints include inquiry detail GET, create-reply, moderation logs, and abuse reports.","summary":"Search and paginate the list of replies for a specific inquiry.","parameters":[{"name":"inquiryId","description":"UUID of the inquiry for which to list replies.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination criteria for replies to the inquiry.","typeName":"IShoppingMallAiBackendInquiryReply.IRequest"},"responseBody":{"description":"Paginated list of inquiry replies, threaded and filtered as requested.","typeName":"IPageIShoppingMallAiBackendInquiryReply.ISummary"},"authorizationRoles":["customer"],"name":"index","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}/replies","method":"patch","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation enables searching and filtering of financial incident records for the shopping mall backend system. It targets the shopping_mall_ai_backend_financial_incidents table, which tracks incident, anomaly, and audit/investigatory events related to deposit, mileage, or coin ledgers. Business users and admins use this API to search by filters such as incident type, status, customer/seller ID, affected ledger, date range, or description. It supports pagination, advanced search, and sorting so that admins can investigate suspicious transactions, monitor compliance, or review the entire audit history. Results may include open or resolved incidents depending on the request body criteria.","prisma_schemas":"model shopping_mall_ai_backend_financial_incidents {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_deposit_id String? @db.Uuid\n  shopping_mall_ai_backend_mileage_id String? @db.Uuid\n  shopping_mall_ai_backend_coin_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  incident_type String\n  status String\n  details String\n  external_reference String?\n  created_at DateTime @db.Timestamptz\n  resolved_at DateTime?\n  deleted_at DateTime?\n  deposit shopping_mall_ai_backend_deposits? @relation(fields: [shopping_mall_ai_backend_deposit_id], references: [id], onDelete: Cascade)\n  mileage shopping_mall_ai_backend_mileages? @relation(fields: [shopping_mall_ai_backend_mileage_id], references: [id], onDelete: Cascade)\n  coin shopping_mall_ai_backend_coins? @relation(fields: [shopping_mall_ai_backend_coin_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_deposit_id])\n  @@index([shopping_mall_ai_backend_mileage_id])\n  @@index([shopping_mall_ai_backend_coin_id])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([shopping_mall_ai_backend_seller_id])\n  @@index([incident_type])\n  @@index([status])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Retrieve a paginated, filtered list of financial incident and anomaly records for deposits, mileage, or coin ledgers. This API empowers administrators to efficiently audit, investigate, and review incident logs, supporting compliance, fraud detection, and root cause analysis for financial operations within the mall.\n\nAccess is restricted to administrators due to the sensitive compliance and personal data involved. The operation implements advanced filtering by incident type (e.g., fraud, compliance_audit, withdrawal_dispute), status (open, closed, investigating, resolved), business entities (deposit, mileage, coin, customer, seller), and date ranges. Business search scenarios include identifying unresolved compliance incidents, reviewing root causes, or monitoring fraud clusters.\n\nPagination and sorting are configurable for business monitoring dashboards. Errors are handled with compliance-focused messages and detailed audit logs for investigative traceability. Related APIs include detailed incident GET, as well as list/search APIs for deposit, mileage, and coin transactions.","summary":"Search and paginate financial incident records for compliance and audit purposes.","parameters":[],"requestBody":{"description":"Search filters and pagination/sort criteria for financial incidents.","typeName":"IShoppingMallAiBackendFinancialIncident.IRequest"},"responseBody":{"description":"Paginated result of financial incident summaries matching filter criteria.","typeName":"IPageIShoppingMallAiBackendFinancialIncident.ISummary"},"authorizationRoles":["admin"],"name":"index","path":"/shoppingMallAiBackend/admin/financialIncidents","method":"patch","model_name":"shopping_mall_ai_backend_financial_incidents","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieve a specific financial incident record by its unique ID, for forensic, audit, or compliance review. Provides all details regarding a single incident such as type, status, participants, ledger association, event context, timeline, and evidence data. This enables in-depth investigation by compliance or business administrators into the cause and resolution of an event. The primary Prisma table is shopping_mall_ai_backend_financial_incidents.","prisma_schemas":"model shopping_mall_ai_backend_financial_incidents {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_deposit_id String? @db.Uuid\n  shopping_mall_ai_backend_mileage_id String? @db.Uuid\n  shopping_mall_ai_backend_coin_id String? @db.Uuid\n  shopping_mall_ai_backend_customer_id String? @db.Uuid\n  shopping_mall_ai_backend_seller_id String? @db.Uuid\n  incident_type String\n  status String\n  details String\n  external_reference String?\n  created_at DateTime @db.Timestamptz\n  resolved_at DateTime?\n  deleted_at DateTime?\n  deposit shopping_mall_ai_backend_deposits? @relation(fields: [shopping_mall_ai_backend_deposit_id], references: [id], onDelete: Cascade)\n  mileage shopping_mall_ai_backend_mileages? @relation(fields: [shopping_mall_ai_backend_mileage_id], references: [id], onDelete: Cascade)\n  coin shopping_mall_ai_backend_coins? @relation(fields: [shopping_mall_ai_backend_coin_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade)\n  @@index([shopping_mall_ai_backend_deposit_id])\n  @@index([shopping_mall_ai_backend_mileage_id])\n  @@index([shopping_mall_ai_backend_coin_id])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([shopping_mall_ai_backend_seller_id])\n  @@index([incident_type])\n  @@index([status])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","description":"Allows a system administrator or compliance auditor to retrieve a complete financial incident record by its ID. The operation exposes all stored incident details, including affected entities (deposit, mileage, coin, customer, seller), incident type, current status, descriptive details, associated external references, timestamps, and resolution data.\n\nThis endpoint is essential for supporting legal investigations, in-depth root cause analysis, and regulatory or audit evidence traceability. Data exposure is restricted to admins due to the sensitivity of compliance and personal information. If the incident is not found or is no longer accessible due to deletion or retention expiry, a clear API error is returned with audit log.\n\nRelated endpoints include the financial incidents search/index API.","summary":"Get detailed information for a specific financial incident by ID.","parameters":[{"name":"incidentId","description":"Unique identifier (UUID) of the financial incident to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed business and audit record for a financial incident event.","typeName":"IShoppingMallAiBackendFinancialIncident"},"authorizationRoles":["admin"],"name":"at","path":"/shoppingMallAiBackend/admin/financialIncidents/{incidentId}","method":"get","model_name":"shopping_mall_ai_backend_financial_incidents","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a specific reply for a given inquiry by its unique identifier. This operation operates on the shopping_mall_ai_backend_inquiry_replies table and requires both the inquiryId and replyId, both of which are UUIDs. It confirms the requester can view this inquiry reply according to their access level—either as the inquiry owner, seller, or an admin—and returns all reply fields including author (customer or seller), content, privacy flag, and timestamps. The reply data may also reference its parent reply for nested threads. The Prisma schema for shopping_mall_ai_backend_inquiry_replies is referenced here for all field definitions.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieve a specific reply to a given inquiry. This endpoint returns all details about the reply, including its content, privacy setting (whether the reply is public or private), author association (either a customer or seller), parent reply if nested, and timestamps such as creation and update times.\n\nThis operation ensures the caller has permission to view the reply: for private replies, only the participant customer, seller, or platform admins can view; for public replies, anyone with access to the parent inquiry may view. The underlying table, shopping_mall_ai_backend_inquiry_replies, provides full evidence and audit through its model structure for business compliance and traceability.\n\nThis endpoint is typically used for displaying threaded Q&A or after-sales communication in the user's purchase history, product detail, or support interface. If the reply is not found or access is denied, the system will return a 404 or appropriate authorization error consistent with business audit policies.","summary":"Retrieve a specific inquiry reply by ID, ensuring permission checks.","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed reply information for the specified inquiry and reply ID.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves a specific reply for a given inquiry by its unique identifier. This operation operates on the shopping_mall_ai_backend_inquiry_replies table and requires both the inquiryId and replyId, both of which are UUIDs. It confirms the requester can view this inquiry reply according to their access level—either as the inquiry owner, seller, or an admin—and returns all reply fields including author (customer or seller), content, privacy flag, and timestamps. The reply data may also reference its parent reply for nested threads. The Prisma schema for shopping_mall_ai_backend_inquiry_replies is referenced here for all field definitions.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieve a specific reply to a given inquiry. This endpoint returns all details about the reply, including its content, privacy setting (whether the reply is public or private), author association (either a customer or seller), parent reply if nested, and timestamps such as creation and update times.\n\nThis operation ensures the caller has permission to view the reply: for private replies, only the participant customer, seller, or platform admins can view; for public replies, anyone with access to the parent inquiry may view. The underlying table, shopping_mall_ai_backend_inquiry_replies, provides full evidence and audit through its model structure for business compliance and traceability.\n\nThis endpoint is typically used for displaying threaded Q&A or after-sales communication in the user's purchase history, product detail, or support interface. If the reply is not found or access is denied, the system will return a 404 or appropriate authorization error consistent with business audit policies.","summary":"Retrieve a specific inquiry reply by ID, ensuring permission checks.","path":"/shoppingMallAiBackend/seller/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed reply information for the specified inquiry and reply ID.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves a specific reply for a given inquiry by its unique identifier. This operation operates on the shopping_mall_ai_backend_inquiry_replies table and requires both the inquiryId and replyId, both of which are UUIDs. It confirms the requester can view this inquiry reply according to their access level—either as the inquiry owner, seller, or an admin—and returns all reply fields including author (customer or seller), content, privacy flag, and timestamps. The reply data may also reference its parent reply for nested threads. The Prisma schema for shopping_mall_ai_backend_inquiry_replies is referenced here for all field definitions.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieve a specific reply to a given inquiry. This endpoint returns all details about the reply, including its content, privacy setting (whether the reply is public or private), author association (either a customer or seller), parent reply if nested, and timestamps such as creation and update times.\n\nThis operation ensures the caller has permission to view the reply: for private replies, only the participant customer, seller, or platform admins can view; for public replies, anyone with access to the parent inquiry may view. The underlying table, shopping_mall_ai_backend_inquiry_replies, provides full evidence and audit through its model structure for business compliance and traceability.\n\nThis endpoint is typically used for displaying threaded Q&A or after-sales communication in the user's purchase history, product detail, or support interface. If the reply is not found or access is denied, the system will return a 404 or appropriate authorization error consistent with business audit policies.","summary":"Retrieve a specific inquiry reply by ID, ensuring permission checks.","path":"/shoppingMallAiBackend/admin/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed reply information for the specified inquiry and reply ID.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new reply for an existing inquiry. This operation leverages the shopping_mall_ai_backend_inquiry_replies table and requires an authenticated user (customer or seller) to provide all necessary details for the reply. Mandatory fields include body (content), privacy flag, and optionally a parent reply for nested/threaded replies. The reply is linked to both the inquiry and author and may be marked as private or public. Full audit and compliance evidence are captured via timestamps and related fields, as prescribed in Prisma schema shopping_mall_ai_backend_inquiry_replies.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new reply for the specified inquiry. This operation allows both customer and seller roles to participate in inquiry threads, as long as their session matches the inquiry context. The request body includes the reply message, privacy setting, and optionally a parent reply ID for threaded discussion support.\n\nFull reply details are stored, and an associated audit trail is logged for compliance and dispute evidence. The Prisma schema ensures all required fields, such as body and privacy, are validated, and links to the parent inquiry and optionally a parent reply.\n\nIf the reply creation fails (e.g., due to invalid inquiryId or insufficient permission), an error will be returned in accordance with business workflow rules. Successful responses will return the complete reply entity with timestamps, author reference, and relationship context.","summary":"Create a new reply for a specific inquiry.","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}/replies","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry for which the reply is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Reply creation data: body text, privacy flag, and optional parent reply ID for threading.","typeName":"IShoppingMallAiBackendInquiryReply.ICreate"},"responseBody":{"description":"The newly created reply with all relevant fields and relationships.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Creates a new reply for an existing inquiry. This operation leverages the shopping_mall_ai_backend_inquiry_replies table and requires an authenticated user (customer or seller) to provide all necessary details for the reply. Mandatory fields include body (content), privacy flag, and optionally a parent reply for nested/threaded replies. The reply is linked to both the inquiry and author and may be marked as private or public. Full audit and compliance evidence are captured via timestamps and related fields, as prescribed in Prisma schema shopping_mall_ai_backend_inquiry_replies.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new reply for the specified inquiry. This operation allows both customer and seller roles to participate in inquiry threads, as long as their session matches the inquiry context. The request body includes the reply message, privacy setting, and optionally a parent reply ID for threaded discussion support.\n\nFull reply details are stored, and an associated audit trail is logged for compliance and dispute evidence. The Prisma schema ensures all required fields, such as body and privacy, are validated, and links to the parent inquiry and optionally a parent reply.\n\nIf the reply creation fails (e.g., due to invalid inquiryId or insufficient permission), an error will be returned in accordance with business workflow rules. Successful responses will return the complete reply entity with timestamps, author reference, and relationship context.","summary":"Create a new reply for a specific inquiry.","path":"/shoppingMallAiBackend/seller/inquiries/{inquiryId}/replies","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry for which the reply is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Reply creation data: body text, privacy flag, and optional parent reply ID for threading.","typeName":"IShoppingMallAiBackendInquiryReply.ICreate"},"responseBody":{"description":"The newly created reply with all relevant fields and relationships.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new reply for an existing inquiry. This operation leverages the shopping_mall_ai_backend_inquiry_replies table and requires an authenticated user (customer or seller) to provide all necessary details for the reply. Mandatory fields include body (content), privacy flag, and optionally a parent reply for nested/threaded replies. The reply is linked to both the inquiry and author and may be marked as private or public. Full audit and compliance evidence are captured via timestamps and related fields, as prescribed in Prisma schema shopping_mall_ai_backend_inquiry_replies.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new reply for the specified inquiry. This operation allows both customer and seller roles to participate in inquiry threads, as long as their session matches the inquiry context. The request body includes the reply message, privacy setting, and optionally a parent reply ID for threaded discussion support.\n\nFull reply details are stored, and an associated audit trail is logged for compliance and dispute evidence. The Prisma schema ensures all required fields, such as body and privacy, are validated, and links to the parent inquiry and optionally a parent reply.\n\nIf the reply creation fails (e.g., due to invalid inquiryId or insufficient permission), an error will be returned in accordance with business workflow rules. Successful responses will return the complete reply entity with timestamps, author reference, and relationship context.","summary":"Create a new reply for a specific inquiry.","path":"/shoppingMallAiBackend/admin/inquiries/{inquiryId}/replies","parameters":[{"name":"inquiryId","description":"Unique identifier of the parent inquiry for which the reply is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Reply creation data: body text, privacy flag, and optional parent reply ID for threading.","typeName":"IShoppingMallAiBackendInquiryReply.ICreate"},"responseBody":{"description":"The newly created reply with all relevant fields and relationships.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates an existing reply in the shopping_mall_ai_backend_inquiry_replies table. This operation allows the reply author (customer or seller) or admins to modify the body and privacy flag of their reply. The reply to update is specified by inquiryId and replyId, and any modifications are fully tracked for compliance. The schema mandates that only permitted fields are editable and that full change history is preserved for audit via snapshots.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update an existing reply for a given inquiry. Only the author of the reply (customer or seller) or authorized admins are allowed to perform the update. This operation supports modification of reply content (body) and privacy setting only.\n\nAny change is logged for business traceability and dispute compliance. The request body must provide updated fields following the shopping_mall_ai_backend_inquiry_replies model rules. If the reply or inquiry is not found or if permissions are insufficient, an error response is returned.\n\nThis operation is mainly used for after-sales communication correction, Q&A follow-ups, and compliance-driven corrections. All updates are captured in historical snapshots for business recovery and audit.","summary":"Update a specific reply to an inquiry by reply ID.","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for the reply: body text and privacy flag.","typeName":"IShoppingMallAiBackendInquiryReply.IUpdate"},"responseBody":{"description":"The updated reply entity reflecting recent changes.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Updates an existing reply in the shopping_mall_ai_backend_inquiry_replies table. This operation allows the reply author (customer or seller) or admins to modify the body and privacy flag of their reply. The reply to update is specified by inquiryId and replyId, and any modifications are fully tracked for compliance. The schema mandates that only permitted fields are editable and that full change history is preserved for audit via snapshots.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update an existing reply for a given inquiry. Only the author of the reply (customer or seller) or authorized admins are allowed to perform the update. This operation supports modification of reply content (body) and privacy setting only.\n\nAny change is logged for business traceability and dispute compliance. The request body must provide updated fields following the shopping_mall_ai_backend_inquiry_replies model rules. If the reply or inquiry is not found or if permissions are insufficient, an error response is returned.\n\nThis operation is mainly used for after-sales communication correction, Q&A follow-ups, and compliance-driven corrections. All updates are captured in historical snapshots for business recovery and audit.","summary":"Update a specific reply to an inquiry by reply ID.","path":"/shoppingMallAiBackend/seller/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for the reply: body text and privacy flag.","typeName":"IShoppingMallAiBackendInquiryReply.IUpdate"},"responseBody":{"description":"The updated reply entity reflecting recent changes.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Updates an existing reply in the shopping_mall_ai_backend_inquiry_replies table. This operation allows the reply author (customer or seller) or admins to modify the body and privacy flag of their reply. The reply to update is specified by inquiryId and replyId, and any modifications are fully tracked for compliance. The schema mandates that only permitted fields are editable and that full change history is preserved for audit via snapshots.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update an existing reply for a given inquiry. Only the author of the reply (customer or seller) or authorized admins are allowed to perform the update. This operation supports modification of reply content (body) and privacy setting only.\n\nAny change is logged for business traceability and dispute compliance. The request body must provide updated fields following the shopping_mall_ai_backend_inquiry_replies model rules. If the reply or inquiry is not found or if permissions are insufficient, an error response is returned.\n\nThis operation is mainly used for after-sales communication correction, Q&A follow-ups, and compliance-driven corrections. All updates are captured in historical snapshots for business recovery and audit.","summary":"Update a specific reply to an inquiry by reply ID.","path":"/shoppingMallAiBackend/admin/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for the reply: body text and privacy flag.","typeName":"IShoppingMallAiBackendInquiryReply.IUpdate"},"responseBody":{"description":"The updated reply entity reflecting recent changes.","typeName":"IShoppingMallAiBackendInquiryReply"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Deletes (soft-deletes) a specific reply in shopping_mall_ai_backend_inquiry_replies by setting its deleted_at timestamp. This operation is permitted for authors (customers or sellers) or admins, in line with business rules for evidence preservation. The operation ensures that the reply is not physically removed but flagged as deleted for audit and business logic. Access checks must confirm authorship or proper permission. Prisma schema soft-delete column is used accordingly.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Soft-deletes the specified reply belonging to a given inquiry. The deleted_at field is set to the current timestamp to preserve the evidence trail for business, compliance, or legal review. This operation is allowed for reply authors (customer or seller) or admins with proper authorization. The soft-deletion ensures that the reply is hidden from standard retrieval but remains in the database for possible future audit or recovery needs.\n\nAttempting to delete a reply not authored by the current user or without sufficient permission will result in an error response. This supports regulatory and compliance scenarios in buyer-seller-admin engagement workflows.","summary":"Soft-delete a reply to a given inquiry (preserving for audit).","path":"/shoppingMallAiBackend/customer/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to erase (soft-delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Deletes (soft-deletes) a specific reply in shopping_mall_ai_backend_inquiry_replies by setting its deleted_at timestamp. This operation is permitted for authors (customers or sellers) or admins, in line with business rules for evidence preservation. The operation ensures that the reply is not physically removed but flagged as deleted for audit and business logic. Access checks must confirm authorship or proper permission. Prisma schema soft-delete column is used accordingly.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Soft-deletes the specified reply belonging to a given inquiry. The deleted_at field is set to the current timestamp to preserve the evidence trail for business, compliance, or legal review. This operation is allowed for reply authors (customer or seller) or admins with proper authorization. The soft-deletion ensures that the reply is hidden from standard retrieval but remains in the database for possible future audit or recovery needs.\n\nAttempting to delete a reply not authored by the current user or without sufficient permission will result in an error response. This supports regulatory and compliance scenarios in buyer-seller-admin engagement workflows.","summary":"Soft-delete a reply to a given inquiry (preserving for audit).","path":"/shoppingMallAiBackend/seller/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to erase (soft-delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Deletes (soft-deletes) a specific reply in shopping_mall_ai_backend_inquiry_replies by setting its deleted_at timestamp. This operation is permitted for authors (customers or sellers) or admins, in line with business rules for evidence preservation. The operation ensures that the reply is not physically removed but flagged as deleted for audit and business logic. Access checks must confirm authorship or proper permission. Prisma schema soft-delete column is used accordingly.","prisma_schemas":"model shopping_mall_ai_backend_inquiry_replies {\n  id String @id @db.Uuid\n  inquiry_id String @db.Uuid\n  parent_id String? @db.Uuid\n  customer_id String? @db.Uuid\n  seller_id String? @db.Uuid\n  body String\n  private Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_inquiry_replies? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade)\n  seller shopping_mall_ai_backend_sellers? @relation(fields: [seller_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_inquiry_replies[] @relation(\"recursive\")\n  shopping_mall_ai_backend_inquiry_snapshots shopping_mall_ai_backend_inquiry_snapshots[]\n  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]\n  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]\n  @@index([parent_id])\n  @@index([customer_id])\n  @@index([seller_id])\n  @@unique([inquiry_id, parent_id, body, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_pa_415833eb\")\n  @@index([inquiry_id, created_at], map: \"shopping_mall_ai_backend_inquiry_replies_inquiry_id_cr_771a86dc\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Soft-deletes the specified reply belonging to a given inquiry. The deleted_at field is set to the current timestamp to preserve the evidence trail for business, compliance, or legal review. This operation is allowed for reply authors (customer or seller) or admins with proper authorization. The soft-deletion ensures that the reply is hidden from standard retrieval but remains in the database for possible future audit or recovery needs.\n\nAttempting to delete a reply not authored by the current user or without sufficient permission will result in an error response. This supports regulatory and compliance scenarios in buyer-seller-admin engagement workflows.","summary":"Soft-delete a reply to a given inquiry (preserving for audit).","path":"/shoppingMallAiBackend/admin/inquiries/{inquiryId}/replies/{replyId}","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to which the reply belongs.","schema":{"type":"string","format":"uuid"}},{"name":"replyId","description":"Unique identifier for the reply to erase (soft-delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","method":"delete","model_name":"shopping_mall_ai_backend_inquiry_replies","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves a paginated list of a user's favorites, supporting filtering by target type (product, address, inquiry, etc.) and optional folder or keyword search. Operates on the shopping_mall_ai_backend_favorites table and supports both advanced filtering (type, folder, search text, date range) and standard pagination. Designed for user access to manage and review their favorited items in all grouped domains. Excludes soft-deleted favorites and employs full audit via created_at, updated_at, and deleted_at columns per Prisma schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieves the authenticated user's favorites in a paginated result, supporting search/filtering by target type, folder, or keywords. Only non-deleted (active) favorites are shown. Advanced search allows users to filter favorites by type (product, address, inquiry), folder, text, or date range. Pagination and sorting options permit scalable browser navigation.\n\nSecurity checks ensure users can only view their own favorites and not those of other users. Provides a summary view of each favorite, with audit timestamps as per evidence policies.","summary":"Search and list paginated favorites for the authenticated user.","path":"/shoppingMallAiBackend/customer/favorites","parameters":[],"requestBody":{"description":"Filtering and pagination options for favorite retrieval: type, folder, search text, date range, pagination controls.","typeName":"IShoppingMallAiBackendFavorite.IRequest"},"responseBody":{"description":"Paginated list of favorite summary entities matching the filter/search.","typeName":"IPageIShoppingMallAiBackendFavorite.ISummary"},"name":"index","method":"patch","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves a paginated list of a user's favorites, supporting filtering by target type (product, address, inquiry, etc.) and optional folder or keyword search. Operates on the shopping_mall_ai_backend_favorites table and supports both advanced filtering (type, folder, search text, date range) and standard pagination. Designed for user access to manage and review their favorited items in all grouped domains. Excludes soft-deleted favorites and employs full audit via created_at, updated_at, and deleted_at columns per Prisma schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieves the authenticated user's favorites in a paginated result, supporting search/filtering by target type, folder, or keywords. Only non-deleted (active) favorites are shown. Advanced search allows users to filter favorites by type (product, address, inquiry), folder, text, or date range. Pagination and sorting options permit scalable browser navigation.\n\nSecurity checks ensure users can only view their own favorites and not those of other users. Provides a summary view of each favorite, with audit timestamps as per evidence policies.","summary":"Search and list paginated favorites for the authenticated user.","path":"/shoppingMallAiBackend/seller/favorites","parameters":[],"requestBody":{"description":"Filtering and pagination options for favorite retrieval: type, folder, search text, date range, pagination controls.","typeName":"IShoppingMallAiBackendFavorite.IRequest"},"responseBody":{"description":"Paginated list of favorite summary entities matching the filter/search.","typeName":"IPageIShoppingMallAiBackendFavorite.ISummary"},"name":"index","method":"patch","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves a paginated list of a user's favorites, supporting filtering by target type (product, address, inquiry, etc.) and optional folder or keyword search. Operates on the shopping_mall_ai_backend_favorites table and supports both advanced filtering (type, folder, search text, date range) and standard pagination. Designed for user access to manage and review their favorited items in all grouped domains. Excludes soft-deleted favorites and employs full audit via created_at, updated_at, and deleted_at columns per Prisma schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Retrieves the authenticated user's favorites in a paginated result, supporting search/filtering by target type, folder, or keywords. Only non-deleted (active) favorites are shown. Advanced search allows users to filter favorites by type (product, address, inquiry), folder, text, or date range. Pagination and sorting options permit scalable browser navigation.\n\nSecurity checks ensure users can only view their own favorites and not those of other users. Provides a summary view of each favorite, with audit timestamps as per evidence policies.","summary":"Search and list paginated favorites for the authenticated user.","path":"/shoppingMallAiBackend/admin/favorites","parameters":[],"requestBody":{"description":"Filtering and pagination options for favorite retrieval: type, folder, search text, date range, pagination controls.","typeName":"IShoppingMallAiBackendFavorite.IRequest"},"responseBody":{"description":"Paginated list of favorite summary entities matching the filter/search.","typeName":"IPageIShoppingMallAiBackendFavorite.ISummary"},"name":"index","method":"patch","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Retrieves detailed information about a single favorite by its unique ID, ensuring that only the rightful owner can access it. Pulls all primary fields including the favorite's type, snapshot metadata, and folder association. Honors soft delete so that only active (non-deleted) favorites are returned. Full evidence and audit trail is ensured as per detailed field preservation in the Prisma model shopping_mall_ai_backend_favorites.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Gets full detail about a single favorite belonging to the user, enforcing access to only non-deleted items owned by the requesting party. The favorite includes fields like target type (product, address, inquiry), snapshot metadata for audit, optional folder association, and full evidence timestamps.\n\nThe operation supports use cases like displaying item details in a user's favorites page or preparing notification logic for favorite changes. If the item doesn't exist or is deleted (or the user doesn't own it), appropriate error or forbidden responses are returned.","summary":"Retrieve details about a single favorite by ID for the owner.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the favorite entity, including type and snapshot evidence.","typeName":"IShoppingMallAiBackendFavorite"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves detailed information about a single favorite by its unique ID, ensuring that only the rightful owner can access it. Pulls all primary fields including the favorite's type, snapshot metadata, and folder association. Honors soft delete so that only active (non-deleted) favorites are returned. Full evidence and audit trail is ensured as per detailed field preservation in the Prisma model shopping_mall_ai_backend_favorites.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Gets full detail about a single favorite belonging to the user, enforcing access to only non-deleted items owned by the requesting party. The favorite includes fields like target type (product, address, inquiry), snapshot metadata for audit, optional folder association, and full evidence timestamps.\n\nThe operation supports use cases like displaying item details in a user's favorites page or preparing notification logic for favorite changes. If the item doesn't exist or is deleted (or the user doesn't own it), appropriate error or forbidden responses are returned.","summary":"Retrieve details about a single favorite by ID for the owner.","path":"/shoppingMallAiBackend/seller/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the favorite entity, including type and snapshot evidence.","typeName":"IShoppingMallAiBackendFavorite"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Retrieves detailed information about a single favorite by its unique ID, ensuring that only the rightful owner can access it. Pulls all primary fields including the favorite's type, snapshot metadata, and folder association. Honors soft delete so that only active (non-deleted) favorites are returned. Full evidence and audit trail is ensured as per detailed field preservation in the Prisma model shopping_mall_ai_backend_favorites.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Gets full detail about a single favorite belonging to the user, enforcing access to only non-deleted items owned by the requesting party. The favorite includes fields like target type (product, address, inquiry), snapshot metadata for audit, optional folder association, and full evidence timestamps.\n\nThe operation supports use cases like displaying item details in a user's favorites page or preparing notification logic for favorite changes. If the item doesn't exist or is deleted (or the user doesn't own it), appropriate error or forbidden responses are returned.","summary":"Retrieve details about a single favorite by ID for the owner.","path":"/shoppingMallAiBackend/admin/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the favorite entity, including type and snapshot evidence.","typeName":"IShoppingMallAiBackendFavorite"},"name":"at","method":"get","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Creates a new favorite for the authenticated user. This operation allows users to favorite a product, address, or inquiry by specifying the target type and ID. Optional association with a folder is supported for organization. Enforces unique constraints to prevent duplicate favorites per (user, target_type, target_id). All relevant audit timestamps and snapshot metadata are captured by the shopping_mall_ai_backend_favorites model.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new favorite for the user, specifying the target type (product, address, inquiry, etc.) and the unique ID of the target. Optionally, the favorite can be placed into a user-created folder for grouped management. Unique constraints are enforced to prevent users from favoriting the same item multiple times.\n\nOn successful creation, the endpoint returns all favorite details, including audit evidence information, type, snapshot identifiers, and timestamps. Any attempt to favorite an already-favorited target returns a duplication error consistent with business policies.","summary":"Create a new favorite for a specific target (product, address, inquiry).","path":"/shoppingMallAiBackend/customer/favorites","parameters":[],"requestBody":{"description":"Favorite creation data: target type (product, address, inquiry), target ID, and optional folder.","typeName":"IShoppingMallAiBackendFavorite.ICreate"},"responseBody":{"description":"The newly created favorite entity, with all snapshot and management fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Creates a new favorite for the authenticated user. This operation allows users to favorite a product, address, or inquiry by specifying the target type and ID. Optional association with a folder is supported for organization. Enforces unique constraints to prevent duplicate favorites per (user, target_type, target_id). All relevant audit timestamps and snapshot metadata are captured by the shopping_mall_ai_backend_favorites model.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new favorite for the user, specifying the target type (product, address, inquiry, etc.) and the unique ID of the target. Optionally, the favorite can be placed into a user-created folder for grouped management. Unique constraints are enforced to prevent users from favoriting the same item multiple times.\n\nOn successful creation, the endpoint returns all favorite details, including audit evidence information, type, snapshot identifiers, and timestamps. Any attempt to favorite an already-favorited target returns a duplication error consistent with business policies.","summary":"Create a new favorite for a specific target (product, address, inquiry).","path":"/shoppingMallAiBackend/seller/favorites","parameters":[],"requestBody":{"description":"Favorite creation data: target type (product, address, inquiry), target ID, and optional folder.","typeName":"IShoppingMallAiBackendFavorite.ICreate"},"responseBody":{"description":"The newly created favorite entity, with all snapshot and management fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Creates a new favorite for the authenticated user. This operation allows users to favorite a product, address, or inquiry by specifying the target type and ID. Optional association with a folder is supported for organization. Enforces unique constraints to prevent duplicate favorites per (user, target_type, target_id). All relevant audit timestamps and snapshot metadata are captured by the shopping_mall_ai_backend_favorites model.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Creates a new favorite for the user, specifying the target type (product, address, inquiry, etc.) and the unique ID of the target. Optionally, the favorite can be placed into a user-created folder for grouped management. Unique constraints are enforced to prevent users from favoriting the same item multiple times.\n\nOn successful creation, the endpoint returns all favorite details, including audit evidence information, type, snapshot identifiers, and timestamps. Any attempt to favorite an already-favorited target returns a duplication error consistent with business policies.","summary":"Create a new favorite for a specific target (product, address, inquiry).","path":"/shoppingMallAiBackend/admin/favorites","parameters":[],"requestBody":{"description":"Favorite creation data: target type (product, address, inquiry), target ID, and optional folder.","typeName":"IShoppingMallAiBackendFavorite.ICreate"},"responseBody":{"description":"The newly created favorite entity, with all snapshot and management fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"create","method":"post","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Updates specific fields of an existing favorite belonging to the authenticated user. Usually used for moving a favorite to a different folder, renaming the snapshot title, or updating auxiliary metadata. The operation enforces ownership and active status—only non-deleted, user-owned favorites may be updated. All change audits and evidence fields are maintained per the shopping_mall_ai_backend_favorites schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update a favorite belonging to the requesting user. Supports changes to organization folder, snapshot title, or other updatable metadata as allowed in business requirements. Strict ownership and active status checks mean only user-owned, non-deleted favorites can be modified. Change traces are preserved for evidence and audit as required by platform policy.\n\nIf the favorite does not exist or has been soft-deleted, a not found error is returned. If updates violate uniqueness or business logic, an appropriate error code is issued. The success response returns the updated favorite entity with new timestamps and field values.","summary":"Update an existing favorite's metadata or folder assignment.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update (e.g., folder ID, snapshot title).","typeName":"IShoppingMallAiBackendFavorite.IUpdate"},"responseBody":{"description":"The updated favorite entity with evidence fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Updates specific fields of an existing favorite belonging to the authenticated user. Usually used for moving a favorite to a different folder, renaming the snapshot title, or updating auxiliary metadata. The operation enforces ownership and active status—only non-deleted, user-owned favorites may be updated. All change audits and evidence fields are maintained per the shopping_mall_ai_backend_favorites schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update a favorite belonging to the requesting user. Supports changes to organization folder, snapshot title, or other updatable metadata as allowed in business requirements. Strict ownership and active status checks mean only user-owned, non-deleted favorites can be modified. Change traces are preserved for evidence and audit as required by platform policy.\n\nIf the favorite does not exist or has been soft-deleted, a not found error is returned. If updates violate uniqueness or business logic, an appropriate error code is issued. The success response returns the updated favorite entity with new timestamps and field values.","summary":"Update an existing favorite's metadata or folder assignment.","path":"/shoppingMallAiBackend/seller/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update (e.g., folder ID, snapshot title).","typeName":"IShoppingMallAiBackendFavorite.IUpdate"},"responseBody":{"description":"The updated favorite entity with evidence fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"seller","authorizationType":null},{"specification":"Updates specific fields of an existing favorite belonging to the authenticated user. Usually used for moving a favorite to a different folder, renaming the snapshot title, or updating auxiliary metadata. The operation enforces ownership and active status—only non-deleted, user-owned favorites may be updated. All change audits and evidence fields are maintained per the shopping_mall_ai_backend_favorites schema.","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","authorizationRoles":["customer","seller","admin"],"description":"Update a favorite belonging to the requesting user. Supports changes to organization folder, snapshot title, or other updatable metadata as allowed in business requirements. Strict ownership and active status checks mean only user-owned, non-deleted favorites can be modified. Change traces are preserved for evidence and audit as required by platform policy.\n\nIf the favorite does not exist or has been soft-deleted, a not found error is returned. If updates violate uniqueness or business logic, an appropriate error code is issued. The success response returns the updated favorite entity with new timestamps and field values.","summary":"Update an existing favorite's metadata or folder assignment.","path":"/shoppingMallAiBackend/admin/favorites/{favoriteId}","parameters":[{"name":"favoriteId","description":"Unique identifier of the favorite to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update (e.g., folder ID, snapshot title).","typeName":"IShoppingMallAiBackendFavorite.IUpdate"},"responseBody":{"description":"The updated favorite entity with evidence fields.","typeName":"IShoppingMallAiBackendFavorite"},"name":"update","method":"put","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This API endpoint allows an authenticated customer to permanently remove a favorite record by its identifier. It targets the shopping_mall_ai_backend_favorites model, which stores bookmarks for favorite items such as products, addresses, or inquiries. Favorites are customer-specific and may be organized in folders. When a favorite is removed, it is marked as deleted in the database using the deleted_at timestamp for evidentiary audit and compliance purposes. The operation is idempotent, ensuring that repeated requests for an already-deleted record do not cause errors. Authorization is required to ensure only the owner of the favorite (customer) or an administrator may perform the erase action.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_favorites {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  shopping_mall_ai_backend_favorite_folder_id String? @db.Uuid\n  title_snapshot String?\n  target_type String\n  target_id_snapshot String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_b7884ee0\")\n  favoriteFolder shopping_mall_ai_backend_favorite_folders? @relation(fields: [shopping_mall_ai_backend_favorite_folder_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_cdbbef15\")\n  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]\n  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]\n  shopping_mall_ai_backend_favorite_inquiries shopping_mall_ai_backend_favorite_inquiries[]\n  @@index([shopping_mall_ai_backend_favorite_folder_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_a59527af\")\n  @@unique([shopping_mall_ai_backend_customer_id, target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_132d96f2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorites_shopping_mall_ai_ba_ea54e513\")\n  @@index([target_type, target_id_snapshot], map: \"shopping_mall_ai_backend_favorites_target_type_target__b2b1be2a\")\n  @@index([created_at])\n  @@index([title_snapshot(ops: raw(\\\"gin_trgm_ops\\\"))], type: Gin)\n}","description":"Deletes a favorite record by its unique identifier. This operation marks the favorite as deleted by setting its deleted_at field, rather than permanently removing the row, in accordance with compliance and logical deletion requirements for personal data. It ensures auditability and allows admins to investigate deleted favorites as needed. Customers may only erase favorites they own, while admins have system-level permissions. If the favorite is already deleted, this call is idempotent and returns success. Related child mappings (e.g., favorite_products, favorite_addresses, favorite_inquiries) are handled by cascade logic in the database.","summary":"Logically deletes a favorite item with soft-delete using the deleted_at field.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the favorite to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_favorites","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves the list of products associated with a particular favorite entry. It supports advanced search, filtering, and pagination for a customer's favorited products. The response includes a paginated summary of favorited products, based on references in the shopping_mall_ai_backend_favorite_products join table that links shopping_mall_ai_backend_favorites and shopping_mall_ai_backend_products. Use this to present personalized favorites list for the authenticated customer, applying business logic such as exclusion of logically deleted favorites.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/products","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_favorites {...} (see above)\nmodel shopping_mall_ai_backend_favorite_products {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_product_id String @db.Uuid\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_products_shopping_ma_28b91166\")\n  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_product_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_products_shopping_ma_c3279f16\")\n  @@unique([shopping_mall_ai_backend_favorite_id, shopping_mall_ai_backend_product_id], map: \"shopping_mall_ai_backend_favorite_products_shopping_ma_2d1c59a9\")\n  @@index([shopping_mall_ai_backend_product_id], map: \"shopping_mall_ai_backend_favorite_products_shopping_ma_f20497e6\")\n}","description":"Retrieves a paginated, filterable list of products that have been favorited by the customer under a specific favorite folder or group. The list is customized to the session and selection context identified by favoriteId. Pagination and sorting parameters are accepted in the request body, supporting UI scalability. The operation checks the favorite's existence and ownership before listing entries.","summary":"Get paginated, filtered list of products favorited by the customer under a given favoriteId.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the parent favorite group or folder","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination parameters for searching favorites.","typeName":"IShoppingMallAiBackendFavoriteProduct.IRequest"},"responseBody":{"description":"Paginated list of favorited product summaries.","typeName":"IPageIShoppingMallAiBackendFavoriteProduct.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_favorite_products","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"This operation retrieves details for a single product associated with a customer's favorite entry given by favoriteId and productId. Useful for displaying details for a clicked favorite product in the customer's list. It returns information on the favorited product as well as relationship metadata, such as when the product was favorited.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/products/{productId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_favorite_products {...} (see above)\nmodel shopping_mall_ai_backend_products { ... }","description":"Retrieves details for a specific favorited product under the given favorite folder or group. Validates that the requesting customer owns the favorite and that the productId is actually linked. Returns detailed summary including favorited timestamp and product info. If the favorite or product link does not exist or permission is denied, returns an appropriate error.","summary":"Get detailed info for a favorited product under a favorite folder by productId.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the parent favorite group/folder.","schema":{"type":"string","format":"uuid"}},{"name":"productId","description":"Globally unique identifier of the favorited product.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed info about the favorited product and relationship metadata.","typeName":"IShoppingMallAiBackendFavoriteProduct"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_favorite_products","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"This operation adds a product to the customer's favorites folder identified by favoriteId. It creates an association record linking the favorite and product. If the relationship already exists, the operation is idempotent and does not error. The request body expects information for creating the link, at minimum the productId and optionally customer context. Only the owning customer can add favorited products.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/products","method":"post","prisma_schemas":"model shopping_mall_ai_backend_favorite_products {...} (see above)\nmodel shopping_mall_ai_backend_favorites {...} (see above)","description":"Adds a product to the set of favorited products under a given favorite folder/group for the customer. The API enforces uniqueness so that the same product is favorited only once per favorite group. If already present, this is a no-op. Returns the newly created (or existing) favorite product link record. Authorization is enforced to ensure only the owner can create favorite links in their favorited group.","summary":"Add a product to a customer's favorited products under a given favoriteId.","parameters":[{"name":"favoriteId","description":"Globally unique identifier for the favorite group/folder to which the product will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Favorite product creation info, must include productId.","typeName":"IShoppingMallAiBackendFavoriteProduct.ICreate"},"responseBody":{"description":"Resulting favorite product link entry after creation.","typeName":"IShoppingMallAiBackendFavoriteProduct"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_favorite_products","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Removes the association, i.e., unfavorite, between a favorite group/folder and a product indicated by favoriteId and productId. This operation logically removes the favorite product mapping using a soft delete if such field exists, otherwise performs a hard delete. Ensures that only the owner of the favorite can remove favorites. No error if the mapping is absent; the operation is idempotent.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/products/{productId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_favorite_products {...} (see above)","description":"Removes the favorite-mark from a product in the customer's specified favorite group/folder. This deletes the link record, i.e., the product is no longer shown in the customer's favorites for the folder. If the mapping does not exist or is already deleted, returns success (idempotency guaranteed). Only the owner can perform this operation, enforcing correct authorization.","summary":"Unfavorite a product in a customer's favorite group by deleting the mapping.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the parent favorite group/folder.","schema":{"type":"string","format":"uuid"}},{"name":"productId","description":"Globally unique identifier of product to unfavorite.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_favorite_products","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves a paginated, filterable list of addresses favorited by the customer in a specific favorite folder/group. Uses the shopping_mall_ai_backend_favorite_addresses mapping table to join favorites and addresses. Only addresses favorited by the authenticated customer are included. Supports pagination, search, and filtering options as described in the request body.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/addresses","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_favorite_addresses {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  address_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_addresses_shopping_m_a46d1933\")\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_addresses_shopping_m_1842f562\")\n  @@unique([shopping_mall_ai_backend_favorite_id], map: \"shopping_mall_ai_backend_favorite_addresses_shopping_m_fa7c6ab2\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorite_addresses_shopping_m_963ff97d\")\n  @@index([address_snapshot(ops: raw(\\\"gin_trgm_ops\\\"))], type: Gin, map: \"shopping_mall_ai_backend_favorite_addresses_address_sn_a986eca0\")\n}","description":"Lists customer-favorited addresses under a given favorite group/folder by favoriteId. Returns a paginated list of address snapshot records as stored at the time of favoriting, supporting legacy business requirement for snapshot integrity regardless of later address changes. Only covers addresses favorited by the customer, not other customers. Ownership and access to the favorite group are enforced for security.","summary":"List paginated favorited addresses for the authenticated customer in the specified favorite group.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the favorite folder/group being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Parameter object for searching and paginating favorite address entries.","typeName":"IShoppingMallAiBackendFavoriteAddress.IRequest"},"responseBody":{"description":"Paginated result set of favorited address snapshot info.","typeName":"IPageIShoppingMallAiBackendFavoriteAddress.ISummary"},"authorizationRoles":["customer"],"name":"index","model_name":"shopping_mall_ai_backend_favorite_addresses","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Retrieves detailed information about a single favorited address record associated with the customer's favorites folder/group. Returns address snapshot details at the time of favoriting. Used for drill-down or details-by-click in the customer's favorites list.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/addresses/{addressId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_favorite_addresses {...} (see above)","description":"Returns details of a favorited address from within a given favorite group/folder for the authenticated customer. The endpoint validates both favorite and address association. Returns all snapshot data about the address as it was at the time the customer favorited it. If either mapping is missing or the customer is not the owner, returns access denied or not found.","summary":"Get detailed snapshot info for a specific favorited address.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the parent favorite group or folder.","schema":{"type":"string","format":"uuid"}},{"name":"addressId","description":"Globally unique identifier of the favorited address entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Favorited address snapshot data at time of favoriting.","typeName":"IShoppingMallAiBackendFavoriteAddress"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_favorite_addresses","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Adds a new address mapping to the customer's favorite folder/group. The body must specify the required address identifier and, if supported, any related context fields. Upon success, returns the favorited address record including audit trail fields. Bound to the authenticated customer and requires correct ownership of the favorite group.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/addresses","method":"post","prisma_schemas":"model shopping_mall_ai_backend_favorite_addresses {...} (see above)","description":"Allows the customer to favorite a new address in the given group/folder, establishing a link and storing an address snapshot. If the mapping already exists, returns the existing record. All audit fields such as creation time are included. Only authorized customers may insert into their own favorite sets.","summary":"Add an address as a favorite for the customer in the specified group/folder.","parameters":[{"name":"favoriteId","description":"Globally unique identifier of the favorite group/folder where the address will be favored.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Creation info for favorite address link (must include address reference).","typeName":"IShoppingMallAiBackendFavoriteAddress.ICreate"},"responseBody":{"description":"Favorited address snapshot record created or looked up by this call.","typeName":"IShoppingMallAiBackendFavoriteAddress"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_favorite_addresses","soft_delete_column":null,"authorizationRole":"customer","authorizationType":null},{"specification":"Delete a user's favorited address from their saved favorites collection. Targets the favorite address resource by composite keys favoriteId and addressId. This operation enables customers to remove a previously favorited delivery address, supporting the business workflow for personalized checkout and user account management. The underlying model is 'shopping_mall_ai_backend_favorite_addresses', which logs favorited address metadata for audit, notification, and fast future selection.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/addresses/{addressId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_favorite_addresses {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  address_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade)\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  @@unique([shopping_mall_ai_backend_favorite_id])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([address_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Removes a specific address from the user's favorites, targeting the favorite address entity by both favoriteId (favorite bookmark) and addressId (delivery address) identifiers. \n\nThis operation permanently deletes the favorite address record, ensuring user autonomy over address management and keeping the favorites list up to date. Only authenticated customers may delete their own favorited addresses. The operation references the 'shopping_mall_ai_backend_favorite_addresses' table, which stores evidence of when an address was favorited for personalized checkout flows and notification triggers.\n\nAdditional security checks ensure that attempting to delete addresses not belonging to the authenticated customer results in a permission error. The business logic includes audit trail preservation for evidence requirements, as mandated by compliance guidelines.\n\nNo response body is returned for successful deletion to keep the API lightweight; success may be indicated by an HTTP 204 status code. Attempting to delete a non-existent favorite or address yields a suitable error message.","summary":"Delete a customer's favorited address from their favorites list.","parameters":[{"name":"favoriteId","description":"The unique identifier (UUID) of the favorite entity associated with the address to delete.","schema":{"type":"string","format":"uuid"}},{"name":"addressId","description":"The unique identifier (UUID) of the address to be removed from favorites.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"eraseFavoriteAddress","model_name":"shopping_mall_ai_backend_favorite_addresses","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Search within a customer's favorite questions/inquiries. This operation enables the customer to retrieve a paginated, filtered list of all favorited inquiries, supporting advanced search, sorting, and folder grouping functionalities. The model is 'shopping_mall_ai_backend_favorite_inquiries', which maps customer favorites to the 'inquiries' entity for notification, evidence, and personalization. Used for managing Q&A, support tickets, and after-sale questions, integrated into the customer's personal content dashboard.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/inquiries","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_favorite_inquiries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_inquiry_id String @db.Uuid\n  inquiry_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade)\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [shopping_mall_ai_backend_inquiry_id], references: [id], onDelete: Cascade)\n  @@unique([shopping_mall_ai_backend_favorite_id, shopping_mall_ai_backend_inquiry_id])\n  @@index([shopping_mall_ai_backend_inquiry_id])\n  @@index([inquiry_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"shopping_mall_ai_backend_favorite_inquiries_inquiry_sn_64e8033c\")\n}","description":"Enables customers to search through their favorited inquiries (Q&A threads) using filtering, sorting, and pagination parameters. Supports complex business queries, such as filtering by status, date, content keyword, or folder/tags association.\n\nReference is to the 'shopping_mall_ai_backend_favorite_inquiries' model, which links favorites to inquiries and caches inquiry status for notification and evidence. Only authenticated customers can access their own favorited inquiries, with business logic enforcing row-level ownership checks.\n\nThe response provides paginated summary information about each favorited inquiry, including key metadata, favorited snapshot details, and optional updates or notifications triggered by inquiry changes. Supports use cases such as after-sales support follow-up, helpdesk ticket review, and personal Q&A curation. Integrates with customer dashboard UI for improved service personalization and retention.","summary":"Search and filter among a customer's favorite inquiries (Q&A/bookmarked threads).","parameters":[{"name":"favoriteId","description":"The UUID of the parent favorite entity (bookmark/folder) to search within.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, search, sort, and pagination options for searching favorite inquiries.","typeName":"IShoppingMallAiBackendFavoriteInquiry.IRequest"},"responseBody":{"description":"Paginated summary list of the customer's favorited inquiry questions based on applied search criteria.","typeName":"IPageIShoppingMallAiBackendFavoriteInquiry.ISummary"},"authorizationRoles":["customer"],"name":"indexFavoriteInquiries","model_name":"shopping_mall_ai_backend_favorite_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve a customer's favorited inquiry by inquiryId within a given favorite group or folder. Serves to display the current snapshot (metadata, inquiry content, and status) for a single favorited Q&A thread, with support for evidence preservation and personalized notification. The target entity is 'shopping_mall_ai_backend_favorite_inquiries', which caches inquiry content at the time of favoriting and tracks updates for notification purposes.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/inquiries/{inquiryId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_favorite_inquiries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_inquiry_id String @db.Uuid\n  inquiry_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade)\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [shopping_mall_ai_backend_inquiry_id], references: [id], onDelete: Cascade)\n  @@unique([shopping_mall_ai_backend_favorite_id, shopping_mall_ai_backend_inquiry_id])\n  @@index([shopping_mall_ai_backend_inquiry_id])\n  @@index([inquiry_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"shopping_mall_ai_backend_favorite_inquiries_inquiry_sn_64e8033c\")\n}","description":"Fetches the latest snapshot and status of a customer's favorited inquiry, identified by favoriteId (the bookmark context) and inquiryId (the inquiry itself). Returns business evidence such as inquiry title, cached content, favorited timestamp, and update status relative to the original inquiry.\n\nThe operation leverages the 'shopping_mall_ai_backend_favorite_inquiries' mapping entity, ensuring that only authenticated customers may access their own favorited Q&A/support content. The business logic ensures compliance and proper evidence for dispute or service audit scenarios.\n\nAn error is returned if the specified favorite-inquiry relation does not exist, isn't owned by the customer, or has been logically deleted. Success returns a current snapshot of the favorited inquiry, suitable for detail pages, notification preview, or evidence retrieval.","summary":"Retrieve a single favorited inquiry in customer's favorites by inquiryId.","parameters":[{"name":"favoriteId","description":"The ID of the favorite entity (bookmark or folder).","schema":{"type":"string","format":"uuid"}},{"name":"inquiryId","description":"The ID of the inquiry associated with the favorite record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Current snapshot of the customer's favorited inquiry with metadata and cached content.","typeName":"IShoppingMallAiBackendFavoriteInquiry"},"authorizationRoles":["customer"],"name":"atFavoriteInquiry","model_name":"shopping_mall_ai_backend_favorite_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Register a new favorite-inquiry association for a customer. This enables customers to save important or interesting Q&A threads to their favorites for quick access, notification, and evidence. Underlying model is 'shopping_mall_ai_backend_favorite_inquiries', which captures the inquiryId and favoriteId, as well as a snapshot of the inquiry state for compliance and personalized content feeds.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/inquiries","method":"post","prisma_schemas":"model shopping_mall_ai_backend_favorite_inquiries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_inquiry_id String @db.Uuid\n  inquiry_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade)\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [shopping_mall_ai_backend_inquiry_id], references: [id], onDelete: Cascade)\n  @@unique([shopping_mall_ai_backend_favorite_id, shopping_mall_ai_backend_inquiry_id])\n  @@index([shopping_mall_ai_backend_inquiry_id])\n  @@index([inquiry_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"shopping_mall_ai_backend_favorite_inquiries_inquiry_sn_64e8033c\")\n}","description":"Creates a new mapping between a customer's favorite group/folder and an inquiry (Q&A or support thread), allowing the customer to bookmark or track specific support interactions, product Q&As, or helpdesk tickets for later reference.\n\nThe 'shopping_mall_ai_backend_favorite_inquiries' entity records the association, captures a business snapshot of the inquiry at time of favoriting, and is critical for audit, personalized dashboard experience, and compliance notification. The business logic enforces authentication, input validation, and ownership restrictions, ensuring that only the customer can create favorites for their own account.\n\nPostconditions include successful favoriting reflected in notification queues, dashboard updates, and evidence audit logs. Attempts to favorite an already-favorited inquiry within the same favorite group yield an error, while successful creation returns the created favorite-inquiry mapping with current snapshot.","summary":"Add an inquiry to the customer's favorites list for Q&A/bookmarking purposes.","parameters":[{"name":"favoriteId","description":"The ID of the favorite entity/folder for associating the inquiry as a favorite.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inquiry association information for favoriting a Q&A; includes the inquiryId and optional tagging or folder metadata.","typeName":"IShoppingMallAiBackendFavoriteInquiry.ICreate"},"responseBody":{"description":"Created favorite-inquiry mapping with business snapshot and metadata.","typeName":"IShoppingMallAiBackendFavoriteInquiry"},"authorizationRoles":["customer"],"name":"createFavoriteInquiry","model_name":"shopping_mall_ai_backend_favorite_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Remove a specific inquiry from the customer's favorites group or folder. This operation deletes a single favorite-inquiry mapping, removing the bookmark/reference while preserving audit evidence. Targets the composite key of favoriteId and inquiryId, referencing the model 'shopping_mall_ai_backend_favorite_inquiries'. Business logic ensures only the favoriting customer may perform the action.","path":"/shoppingMallAiBackend/customer/favorites/{favoriteId}/inquiries/{inquiryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_favorite_inquiries {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_favorite_id String @db.Uuid\n  shopping_mall_ai_backend_inquiry_id String @db.Uuid\n  inquiry_snapshot String?\n  created_at DateTime @db.Timestamptz\n  favorite shopping_mall_ai_backend_favorites @relation(fields: [shopping_mall_ai_backend_favorite_id], references: [id], onDelete: Cascade)\n  inquiry shopping_mall_ai_backend_inquiries @relation(fields: [shopping_mall_ai_backend_inquiry_id], references: [id], onDelete: Cascade)\n  @@unique([shopping_mall_ai_backend_favorite_id, shopping_mall_ai_backend_inquiry_id])\n  @@index([shopping_mall_ai_backend_inquiry_id])\n  @@index([inquiry_snapshot(ops: raw(\"gin_trgm_ops\"))], type: Gin, map: \"shopping_mall_ai_backend_favorite_inquiries_inquiry_sn_64e8033c\")\n}","description":"Deletes a single inquiry association from a customer's favorites group or folder, removing only the bookmark/reference and leaving the original inquiry intact. This operation leverages the composite (favoriteId, inquiryId) key to uniquely identify the favorite-inquiry record.\n\nBusiness workflow ensures only the authenticated owner may delete their favorites, and triggers audit trail update and evidence preservation. Upon successful deletion, no response body is returned. If the mapping does not exist, or is not owned by the current customer, an error is raised. Used for managing support Q&A bookmarks, personal dashboard hygiene, and notification curation.\n\nDeletion is logical (soft) and remains in evidence logs for compliance as required.","summary":"Remove an inquiry from the customer's bookmarked favorites folder/group.","parameters":[{"name":"favoriteId","description":"Unique identifier for the customer's favorite entity or group where the inquiry is bookmarked.","schema":{"type":"string","format":"uuid"}},{"name":"inquiryId","description":"Unique identifier for the inquiry being removed from favorites.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"eraseFavoriteInquiry","model_name":"shopping_mall_ai_backend_favorite_inquiries","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Search for customer's favorite folders. Returns a paginated, filtered list of all folders used by the customer to organize their favorites (products, addresses, inquiries, etc). The core entity is 'shopping_mall_ai_backend_favorite_folders', which groups favorites for easier management, notification configuration, and content curation by the customer. Supports folder listing, filtering, and pagination for improved UI and notification settings.","path":"/shoppingMallAiBackend/customer/favoriteFolders","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_favorite_folders {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  name String\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]\n  @@unique([shopping_mall_ai_backend_customer_id, name])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Enables customers to retrieve a paginated, filtered list of all favorite folders currently associated with their account. This supports folder/grouping UI, improved notification management, and better organization of bookmarks (products, addresses, inquiries, etc).\n\nThe underlying model is 'shopping_mall_ai_backend_favorite_folders', which stores folder names, descriptions, and grouping metadata. Security ensures only the owner may view their own folders, with business logic for evidence, audit, and UI integration. Pagination and filter options allow for custom folder searches, such as by partial name, creation date, or custom tags.\n\nThe response provides a list of folder summaries with essential properties, supporting folder selection UIs and notification setup workflows for personalized content.","summary":"Retrieve paginated/searchable list of a customer's favorite folders.","parameters":[],"requestBody":{"description":"Folder search, filtering, and pagination parameters for folder listing queries.","typeName":"IShoppingMallAiBackendFavoriteFolder.IRequest"},"responseBody":{"description":"Paginated summary of the customer's favorite folders based on provided search criteria.","typeName":"IPageIShoppingMallAiBackendFavoriteFolder.ISummary"},"authorizationRoles":["customer"],"name":"indexFavoriteFolders","model_name":"shopping_mall_ai_backend_favorite_folders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve details for a specific favorite folder, identified by favoriteFolderId. Returns folder metadata and summary, supporting business use cases for content curation, notification channel configuration, and organizational UI. The model is 'shopping_mall_ai_backend_favorite_folders', enabling precise folder management and audit evidence.","path":"/shoppingMallAiBackend/customer/favoriteFolders/{favoriteFolderId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_favorite_folders {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  name String\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]\n  @@unique([shopping_mall_ai_backend_customer_id, name])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Fetches metadata and configuration details for a specific favorite folder using its unique folder ID. Returns summary information such as name, description, associated customer, creation/update times, and deletion status (for evidence/audit). Only the folder's owner may retrieve its details; security and evidence logic are enforced for compliance.\n\nUsed by UIs for folder editing, notification channel management, and organizing grouped favorites such as products, addresses, or inquiries. Folders are central to personalized content and notification management flows, supporting higher engagement and content discoverability.","summary":"Get properties/metadata for a specific favorite folder owned by the customer.","parameters":[{"name":"favoriteFolderId","description":"The unique identifier of the favorite folder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Current favorite folder metadata and configuration details.","typeName":"IShoppingMallAiBackendFavoriteFolder"},"authorizationRoles":["customer"],"name":"atFavoriteFolder","model_name":"shopping_mall_ai_backend_favorite_folders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new favorite folder for organizing a customer's bookmarks (products, addresses, inquiries, etc). Customers can group favorites to improve content management, notification configuration, and dashboard experience. The model 'shopping_mall_ai_backend_favorite_folders' provides evidence logging, grouping metadata, and personalized notification settings per folder/group.","path":"/shoppingMallAiBackend/customer/favoriteFolders","method":"post","prisma_schemas":"model shopping_mall_ai_backend_favorite_folders {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  name String\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime?\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]\n  @@unique([shopping_mall_ai_backend_customer_id, name])\n  @@index([shopping_mall_ai_backend_customer_id])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Creates a new customer-defined favorite folder for organizing favorite products, addresses, inquiries, or other types of bookmarks. The business logic supports folder naming, optional description, and initializes ownership evidence/audit trail with customer reference and timestamps.\n\nThe operation is restricted to authenticated customers, ensuring that every folder is uniquely named per customer (no duplicates). Used in content management dashboards, notification configuration, and UX customization. On success, returns the created favorite folder's metadata and configuration for immediate use by client UIs or notification services.","summary":"Create a customer-defined favorite folder/group for improved content organization.","parameters":[],"requestBody":{"description":"Properties for the new favorite folder (e.g., name, optional description).","typeName":"IShoppingMallAiBackendFavoriteFolder.ICreate"},"responseBody":{"description":"Newly-created favorite folder details and metadata for the customer's account.","typeName":"IShoppingMallAiBackendFavoriteFolder"},"authorizationRoles":["customer"],"name":"createFavoriteFolder","model_name":"shopping_mall_ai_backend_favorite_folders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates an existing favorite folder for a customer. The API is associated with the shopping_mall_ai_backend_favorite_folders table, which stores folders used by customers to organize their favorites (products, addresses, inquiries, etc.). Only folders owned by the authenticated customer can be updated. The update operation allows customers to modify the folder name or description, aiding their organization and grouping preferences for easier management and notifications. All changes are logged with timestamps and provide auditability for personalized folder management.","path":"/shoppingMallAiBackend/customer/favoriteFolders/{favoriteFolderId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_favorite_folders {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  name String\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_c238c27e\")\n  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]\n  @@unique([shopping_mall_ai_backend_customer_id, name], map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_8157ae76\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_4ef94dcb\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["customer"],"description":"This API endpoint allows an authenticated customer to update the name or description of a specific favorite folder they own. The operation verifies folder existence, customer ownership, and ensures that folder names remain unique per customer. If unauthorized or attempting to update a deleted folder, a descriptive error is returned.\n\nUpdating a favorite folder improves user experience by allowing better organization and group-based notification for favorites. The system tracks update timestamps, and changes are included in the business evidence trail. This endpoint is not available to other customers or administrators unless acting on behalf of the owner in exceptional cases.\n\nFolder updates are used primarily by customers who wish to rename, clarify, or reorganize their collection folders for favorites. The API will validate that the new folder name, if changed, does not conflict with another folder under the same customer. Attempts to update non-owned folder IDs are denied.","summary":"Update a customer's favorite folder for personalized organization needs.","parameters":[{"name":"favoriteFolderId","description":"The unique identifier of the favorite folder to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data to update for the favorite folder, including the new name or description","typeName":"IShoppingMallAiBackendFavoriteFolder.IUpdate"},"responseBody":{"description":"The updated favorite folder entity with new fields","typeName":"IShoppingMallAiBackendFavoriteFolder"},"name":"update","model_name":"shopping_mall_ai_backend_favorite_folders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation permanently deletes a favorite folder for a customer using the shopping_mall_ai_backend_favorite_folders table. It performs a soft delete by setting the deleted_at column. Only the folder's owner may perform this action, and the folder cannot be deleted if already deleted or not owned by the customer. Folder deletion logically removes the grouping for notification and organization but does not delete the referenced favorites themselves, ensuring the integrity of favorites data for compliance and evidence purposes.","path":"/shoppingMallAiBackend/customer/favoriteFolders/{favoriteFolderId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_favorite_folders {\n  id String @id @db.Uuid\n  shopping_mall_ai_backend_customer_id String @db.Uuid\n  name String\n  description String?\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_c238c27e\")\n  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]\n  @@unique([shopping_mall_ai_backend_customer_id, name], map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_8157ae76\")\n  @@index([shopping_mall_ai_backend_customer_id], map: \"shopping_mall_ai_backend_favorite_folders_shopping_mal_4ef94dcb\")\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["customer"],"description":"This API enables an authenticated customer to logically delete their own favorite folder, facilitating personalized organization without actual data removal. It sets the deleted_at timestamp as evidence for audit and compliance. The endpoint ensures that only folders owned by the customer and not already deleted can be targeted. Linked favorites will remain accessible, preserving evidence and notification history. This operation supports recoverability for compliance but prevents further use for organization or grouping.\n\nSoft deletion is critical for user-centric data retention and audit trails. The system will block operations if the folder does not belong to the requester or is already deleted, preventing unauthorized access. All such actions are logged for future review.","summary":"Soft delete (logical removal) of a customer's favorite folder by marking deleted_at.","parameters":[{"name":"favoriteFolderId","description":"The unique identifier of the favorite folder to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_favorite_folders","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation enables complex searching and listing of articles in the shopping mall backend, using the shopping_mall_ai_backend_articles Prisma table. It accepts advanced filtering, searching, and sorting parameters via the request body, allowing both users and admins to retrieve paginated articles with support for filtering by channel, status, author, date range, and partial title or body match. The response is a paginated list of summarized articles, suitable for feed or management UI display.","path":"/shoppingMallAiBackend/articles","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_articles {\n  id String @id @db.Uuid\n  channel_id String @db.Uuid\n  title String\n  body String\n  author_id String @db.Uuid\n  pinned Boolean\n  status String\n  view_count Int @db.Integer\n  is_notice Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]\n  shopping_mall_ai_backend_article_tags shopping_mall_ai_backend_article_tags[]\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([channel_id, title])\n  @@index([created_at])\n  @@index([status])\n  @@index([author_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":[],"description":"Retrieves a paginated, filterable list of articles with support for full-text search, filtering by channel, author, status (draft, published, archived, hidden), date range, title, and content. Suitable for use in browsing feeds, management dashboards, or advanced search UI.\n\nThis endpoint is public, allowing both authenticated and unauthenticated users to search articles, but certain fields such as drafts or archived posts may be restricted based on user role (filtered in business logic). The operation employs efficient pagination and returns summarized article data, enabling scalable UI rendering and rapid navigation through large article sets.\n\nRequest body parameters include pagination settings, filters, and sort criteria. Responses provide the total count and detailed page of article summaries with essential metadata for UI rendering.","summary":"Search and retrieve a paginated list of articles, supporting filtering and sorting.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort parameters for retrieving a list of articles.","typeName":"IShoppingMallAiBackendArticle.IRequest"},"responseBody":{"description":"Paginated list of article summaries that match the search/filter criteria.","typeName":"IPageIShoppingMallAiBackendArticle.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_articles","soft_delete_column":"deleted_at","authorizationRole":null,"authorizationType":null},{"specification":"This operation retrieves the details of a specific article based on its unique identifier. It operates on the shopping_mall_ai_backend_articles Prisma model, returning the complete article record. Article details include title, content, author info, channel, status, visibility, view count, and related evidence for compliance. Only active or visible articles may be returned; hidden, archived, or deleted posts should be restricted based on business logic and user authorization.","path":"/shoppingMallAiBackend/articles/{articleId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_articles {\n  id String @id @db.Uuid\n  channel_id String @db.Uuid\n  title String\n  body String\n  author_id String @db.Uuid\n  pinned Boolean\n  status String\n  view_count Int @db.Integer\n  is_notice Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]\n  shopping_mall_ai_backend_article_tags shopping_mall_ai_backend_article_tags[]\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([channel_id, title])\n  @@index([created_at])\n  @@index([status])\n  @@index([author_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":[],"description":"Fetches the full detail for a single article specified by its UUID. Returns all business-relevant data including title, content body, meta fields, and evidence fields. The operation ensures hidden, archived, or deleted articles are not displayed to unauthorized users, following business logic. Articles tied to compliance or audit evidence are preserved per data retention policy.\n\nClients use this endpoint for reading the full article, supporting content pages, content previews, or compliance display. Authorization is handled so drafts/hidden/archived articles are only available to users with the correct role or during content creation flows. Attempts to fetch deleted or restricted articles return appropriate errors or a not found status.","summary":"Retrieve detailed information for a specific article by ID.","parameters":[{"name":"articleId","description":"Unique identifier of the article to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The complete article record with all business and display fields.","typeName":"IShoppingMallAiBackendArticle"},"name":"at","model_name":"shopping_mall_ai_backend_articles","soft_delete_column":"deleted_at","authorizationRole":null,"authorizationType":null},{"specification":"This operation creates a new article on the platform, corresponding to the shopping_mall_ai_backend_articles model. Only authorized users (admin, seller, or customer with posting permissions) can create articles, and business validation ensures required fields such as channel, title, and content are present. The creation process records all business data and initializes audit trails for compliance. Multiple business rules (e.g., channel ownership, title uniqueness, and publication status) are validated as part of this transaction.","path":"/shoppingMallAiBackend/customer/articles","method":"post","prisma_schemas":"model shopping_mall_ai_backend_articles {\n  id String @id @db.Uuid\n  channel_id String @db.Uuid\n  title String\n  body String\n  author_id String @db.Uuid\n  pinned Boolean\n  status String\n  view_count Int @db.Integer\n  is_notice Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]\n  shopping_mall_ai_backend_article_tags shopping_mall_ai_backend_article_tags[]\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([channel_id, title])\n  @@index([created_at])\n  @@index([status])\n  @@index([author_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["customer"],"description":"Allows an authenticated and authorized customer (admin, seller, or customer with permission) to create a new article and publish it to a selected channel. Validates fields such as title, content body, and channel ID. Ensures that the title is unique within the channel, status is valid (draft, published, etc.), and a proper audit trail is established.\n\nThe newly created article includes timestamps, author identification, and is available for public or restricted display according to the status. Administrators may use this endpoint for publishing notices or formal communications. All creation actions are logged for compliance, evidence, and business analytics.","summary":"Create a new article by an authorized customer (admin, seller, or customer with permission).","parameters":[],"requestBody":{"description":"The required data to create a new article, including title, body, channel, and author information.","typeName":"IShoppingMallAiBackendArticle.ICreate"},"responseBody":{"description":"The created article's complete record, including all IDs and display fields.","typeName":"IShoppingMallAiBackendArticle"},"name":"create","model_name":"shopping_mall_ai_backend_articles","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation updates an existing article by ID using the shopping_mall_ai_backend_articles table. Authorized customers (admin, seller, customer as permitted) can modify article fields such as title, content, status, or pin status. Update actions log a full snapshot for compliance, preserve evidence, and enforce author or admin permission checks. Validation includes unique title enforcement and allowed status transitions per business logic.","path":"/shoppingMallAiBackend/customer/articles/{articleId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_articles {\n  id String @id @db.Uuid\n  channel_id String @db.Uuid\n  title String\n  body String\n  author_id String @db.Uuid\n  pinned Boolean\n  status String\n  view_count Int @db.Integer\n  is_notice Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]\n  shopping_mall_ai_backend_article_tags shopping_mall_ai_backend_article_tags[]\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([channel_id, title])\n  @@index([created_at])\n  @@index([status])\n  @@index([author_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["customer"],"description":"Enables an authenticated and authorized customer to update an existing article specified by its UUID. Permitted fields for update include title, body, status, pin flag, and is_notice. The endpoint ensures the caller is either the article's author or has the required administrative privileges. On each update, the system generates a versioned snapshot for compliance and evidence retention, and validates that the new title does not collide with existing articles in the channel.\n\nArticle status transitions and content edits are governed by business rules. Unauthorized edits, attempts to update deleted articles, or violations of business logic are denied with error messages. All changes are timestamped and contribute to the evidence chain for the article.","summary":"Update an existing article's content, title, status, or business fields by ID.","parameters":[{"name":"articleId","description":"Unique identifier of the article to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated article data (title, content, status, etc.) for the article.","typeName":"IShoppingMallAiBackendArticle.IUpdate"},"responseBody":{"description":"The full updated article record reflecting all changes and versioning.","typeName":"IShoppingMallAiBackendArticle"},"name":"update","model_name":"shopping_mall_ai_backend_articles","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation soft-deletes (marks as deleted) an article by ID, leveraging the deleted_at column in the shopping_mall_ai_backend_articles table. This prevents display and further editing while maintaining evidence and audit trails. Only authors or customers with sufficient privilege (admin) can request deletion. The system creates a compliance snapshot, checks author/admin status, and returns appropriate error if business rules are violated. Soft deletion enables recovery for evidence, compliance, or rollback within legal/business policy timelines.","path":"/shoppingMallAiBackend/customer/articles/{articleId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_articles {\n  id String @id @db.Uuid\n  channel_id String @db.Uuid\n  title String\n  body String\n  author_id String @db.Uuid\n  pinned Boolean\n  status String\n  view_count Int @db.Integer\n  is_notice Boolean\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  channel shopping_mall_ai_backend_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade)\n  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]\n  shopping_mall_ai_backend_article_tags shopping_mall_ai_backend_article_tags[]\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@unique([channel_id, title])\n  @@index([created_at])\n  @@index([status])\n  @@index([author_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":["customer"],"description":"Allows an authenticated customer (author or admin) to mark an article as deleted, setting deleted_at for compliance and evidence. The operation blocks further edits or display for articles that are soft-deleted. The endpoint strictly validates that only authors or privileged customers may mark an article as deleted, and logs every deletion event in the compliance chain. If the article is already deleted or not owned by the customer/role, the operation will fail with descriptive errors.\n\nSoft deletion is required for audit traceability, legal defense, and potential recovery. The action does not remove comments, files, or evidence history; all associated data is retained per business retention policy.","summary":"Soft delete an article (mark deleted_at for audit and compliance, not removal).","parameters":[{"name":"articleId","description":"Unique identifier of the article to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","model_name":"shopping_mall_ai_backend_articles","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"This operation allows paginated retrieval and search of comments for a given article. It is associated with the shopping_mall_ai_backend_article_comments table. The API accepts search, filter, and sort parameters in the request body and returns a paginated list for UI rendering. Filtering includes comment author, status, whether the comment is secret, and sort order. Data is returned as a summary structure, suitable for list display scenarios, with support for full-text search on comment body and author nickname.","path":"/shoppingMallAiBackend/articles/{articleId}/comments","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_article_comments {\n  id String @id @db.Uuid\n  article_id String @db.Uuid\n  parent_id String? @db.Uuid\n  author_id String @db.Uuid\n  body String\n  is_secret Boolean\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  article shopping_mall_ai_backend_articles @relation(fields: [article_id], references: [id], onDelete: Cascade)\n  parent shopping_mall_ai_backend_article_comments? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  author shopping_mall_ai_backend_customers @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_article_comments[] @relation(\"recursive\")\n  shopping_mall_ai_backend_article_attachments shopping_mall_ai_backend_article_attachments[]\n  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]\n  @@index([parent_id])\n  @@index([article_id, created_at], map: \"shopping_mall_ai_backend_article_comments_article_id_c_4ae76cd9\")\n  @@index([author_id, created_at], map: \"shopping_mall_ai_backend_article_comments_author_id_cr_0b64b83a\")\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","authorizationRoles":[],"description":"Retrieves a paginated, filterable list of comments belonging to a specific article. Supports filtering by author, status, secret flag, date, or full-text comment body search. Results are summarized for efficient display in lists, feeds, or moderation dashboards. This endpoint is public for viewing comments, but business logic may restrict access to private comments or certain statuses depending on user role.\n\nPagination and sort parameters optimize comment navigation for large articles. Only comments not marked as deleted are returned, and visibility follows business logic for author, reader, and moderator roles.","summary":"Search and retrieve comments for a specific article, with pagination and filtering.","parameters":[{"name":"articleId","description":"Unique identifier of the parent article for the comments.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter/pagination/sort parameters for comments on the article.","typeName":"IShoppingMallAiBackendArticleComment.IRequest"},"responseBody":{"description":"A paginated list of comments matching criteria for display or moderation.","typeName":"IPageIShoppingMallAiBackendArticleComment.ISummary"},"name":"index","model_name":"shopping_mall_ai_backend_article_comments","soft_delete_column":"deleted_at","authorizationRole":null,"authorizationType":null},{"specification":"Retrieve a specific comment for a given article by its unique identifiers. This operation fetches a single comment associated with an article, ensuring access to the most up-to-date comment data including its body, author, creation timestamp, and status. The specification applies to the shopping_mall_ai_backend_article_comments model, which stores article-specific comment content and administrative metadata. Access control may differentiate between general users (for public comments) and comment authors (for private or secret comments), following policy defined in the Prisma schema.","path":"/shoppingMallAiBackend/customer/articles/{articleId}/comments/{commentId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_article_comments {\n  id String @id @db.Uuid\n  article_id String @db.Uuid\n  parent_id String? @db.Uuid\n  author_id String @db.Uuid\n  body String\n  is_secret Boolean\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint retrieves a particular comment for a given article based on both the article's ID and the comment's ID. It ensures that only the specific comment matching both identifiers is returned, along with all its metadata (author, content, timestamps, status, and privacy setting).\n\nComments are stored in the shopping_mall_ai_backend_article_comments table, which holds each comment's relation to its parent article (and potentially its parent comment for threads), author reference, content, and moderation state. When requesting a comment, permissions are enforced such that only allowed users can see secret or administratively restricted comments, according to is_secret and status fields. If the comment does not exist or the user lacks sufficient privileges, an appropriate error response is returned.\n\nTypical uses include displaying an individual comment thread in a UI, moderation lookup by an admin or seller, or user self-service comment review. Related operations include retrieving all comments for an article or updating/deleting a particular comment by its author or privileged user.","summary":"Retrieve a specific comment for an article by comment ID and article ID.","parameters":[{"name":"articleId","description":"Unique identifier for the article to which the comment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier of the comment within the article.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed comment information for the specified article/comment ID pair.","typeName":"IShoppingMallAiBackendArticleComment"},"authorizationRoles":["customer"],"name":"at","model_name":"shopping_mall_ai_backend_article_comments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Create a new comment on a specific article. This operation allows an authenticated user to add a comment to an article by providing the article's unique identifier and the comment content. The creation logic references the shopping_mall_ai_backend_article_comments table, which requires linking to the article, author, content, privacy flag (is_secret), and moderation status. This API enforces permissions, ensuring only authenticated users can post comments, with server-side validation for minimum content requirements and comment threading (optional parent_id for replies).","path":"/shoppingMallAiBackend/customer/articles/{articleId}/comments","method":"post","prisma_schemas":"model shopping_mall_ai_backend_article_comments {\n  id String @id @db.Uuid\n  article_id String @db.Uuid\n  parent_id String? @db.Uuid\n  author_id String @db.Uuid\n  body String\n  is_secret Boolean\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint enables the creation of a new comment for a designated article, specified by its article ID. To create a comment, the user provides the comment contents and sets whether it is a secret (private) comment via the is_secret field. Optionally, a comment may reference a parent_id to support threaded discussions or replies.\n\nThe operation references the shopping_mall_ai_backend_article_comments entity, enforcing content validation (e.g., minimum length, content guidelines) and permission control (e.g., only authenticated users may create comments). The author_id is typically inferred from the session or authentication token of the user.\n\nBusiness logic includes associating the new comment with the correct article, assigning status according to moderation policy (e.g., 'pending', 'visible'), and ensuring that only permissible comment types are created in the context of the article's status. Error handling applies if the article ID is invalid, the user is not authenticated, or the comment body does not meet server-defined constraints.","summary":"Create a new comment on an article by article ID.","parameters":[{"name":"articleId","description":"Identifier of the target article to which the comment will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Comment body, privacy flag, and optional parent comment ID for threading.","typeName":"IShoppingMallAiBackendArticleComment.ICreate"},"responseBody":{"description":"Information for the newly created comment attached to the article.","typeName":"IShoppingMallAiBackendArticleComment"},"authorizationRoles":["customer"],"name":"create","model_name":"shopping_mall_ai_backend_article_comments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Update an existing comment for an article by article and comment ID. This operation lets the comment author or privileged user edit the comment's body and certain metadata, provided the comment exists and the user has permission. It directly references the shopping_mall_ai_backend_article_comments table, updating the body, is_secret flag, and possibly the moderation status. The endpoint respects edit authorization (e.g., comment creator or moderator only), audit trails for changes, and preserves versioning via snapshots as per schema policy.","path":"/shoppingMallAiBackend/customer/articles/{articleId}/comments/{commentId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_article_comments {\n  id String @id @db.Uuid\n  article_id String @db.Uuid\n  parent_id String? @db.Uuid\n  author_id String @db.Uuid\n  body String\n  is_secret Boolean\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint allows editing an existing comment for a specific article, identified by the articleId and commentId. Only the comment's author or users with moderator-level privileges may perform this action.\n\nThe shopping_mall_ai_backend_article_comments entity is referenced to ensure that only valid fields (body, is_secret, and applicable status) are updated. The operation enforces moderation and edit workflow, creates an audit trail or snapshot of the previous state, and ensures both input validation (e.g., no empty content) and correct comment linkage.\n\nBusiness logic enforces update constraints: only editable comments, valid states, and permissible user actions. Errors result if the comment or article does not exist, the user lacks authorization, or validation fails on the updated content.","summary":"Update a comment on an article by comment ID and article ID.","parameters":[{"name":"articleId","description":"Unique article identifier to which the comment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique comment identifier within the article.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated comment details and fields allowed for change.","typeName":"IShoppingMallAiBackendArticleComment.IUpdate"},"responseBody":{"description":"Updated comment information including new state and metadata.","typeName":"IShoppingMallAiBackendArticleComment"},"authorizationRoles":["customer"],"name":"update","model_name":"shopping_mall_ai_backend_article_comments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Delete (soft delete) a comment for a given article by article and comment ID. This operation marks the comment as deleted by setting the deleted_at timestamp in the shopping_mall_ai_backend_article_comments table, retaining it for evidence and audit per policy. Only the comment author, moderators, or admins are allowed to delete the comment, and hard deletion is not performed due to evidence preservation requirements. The operation logs the deletion event and updates moderation state as necessary.","path":"/shoppingMallAiBackend/customer/articles/{articleId}/comments/{commentId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_article_comments {\n  id String @id @db.Uuid\n  article_id String @db.Uuid\n  parent_id String? @db.Uuid\n  author_id String @db.Uuid\n  body String\n  is_secret Boolean\n  status String\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint marks a specific comment on an article as deleted for compliance and evidence requirements. Instead of hard deletion, the operation sets the deleted_at field, preserving the record for audit and recovery workflows. The action may only be performed by the comment's author, an admin, or other privileged roles according to business policy.\n\nUpon deletion, moderation status may be changed and an audit or snapshot event logged. Soft deletion ensures that historic comment information remains available for dispute resolution, compliance checks, and business evidence. If the article or comment does not exist, or the user is not authorized, an error is returned.\n\nIt is important to note that the deleted comment will no longer be visible in standard article comment queries but remains accessible for audit and administrative review.","summary":"Soft delete a comment on an article by article ID and comment ID.","parameters":[{"name":"articleId","description":"Unique identifier of the article containing the comment.","schema":{"type":"string","format":"uuid"}},{"name":"commentId","description":"Unique identifier of the comment to be soft deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","model_name":"shopping_mall_ai_backend_article_comments","soft_delete_column":"deleted_at","authorizationRole":"customer","authorizationType":null},{"specification":"Retrieve a paginated and filtered list of article categories. This operation supports advanced search, filtering by category attributes, and sorting, as defined in the shopping_mall_ai_backend_article_categories table. It enables discovery and management of article organization structures for various channels. The endpoint is designed for UI clients supporting structured article browsing, admin consoles, or public discovery interfaces.","path":"/shoppingMallAiBackend/admin/articleCategories","method":"patch","prisma_schemas":"model shopping_mall_ai_backend_article_categories {\n  id String @id @db.Uuid\n  parent_id String? @db.Uuid\n  channel_id String @db.Uuid\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint returns a filtered, paginated list of article categories. Filtering options can include parent category, channel, name search, or other available attributes as defined in the schema. Results are paginated for scalable consumption in applications such as admin panels or category selection UIs.\n\nThe underlying shopping_mall_ai_backend_article_categories model captures all structural and descriptive data for categories, such as hierarchy (parent_id), channel linkage, sort order, and audit fields. The operation is typically used in UIs to allow users or admins to browse and select from available categories for article creation or navigation.\n\nSecurity enforcement may restrict access to authenticated users or admins if category management is privileged. Typical use cases include category lookup for content management systems, or for populating navigation menus in public-facing UIs.","summary":"Search and retrieve paginated article categories list.","parameters":[],"requestBody":{"description":"Advanced filter, search, or pagination options for categories.","typeName":"IShoppingMallAiBackendArticleCategory.IRequest"},"responseBody":{"description":"A paginated set of article category summaries matching filters.","typeName":"IPageIShoppingMallAiBackendArticleCategory.ISummary"},"authorizationRoles":["admin"],"name":"index","model_name":"shopping_mall_ai_backend_article_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Get detailed information about a specific article category by its unique identifier. The operation returns category details, including its name, description, channel, parent category, order, timestamps, and deletion state, from the shopping_mall_ai_backend_article_categories model. Typically used in admin or content management systems for editing categories or viewing full details.","path":"/shoppingMallAiBackend/admin/articleCategories/{articleCategoryId}","method":"get","prisma_schemas":"model shopping_mall_ai_backend_article_categories {\n  id String @id @db.Uuid\n  parent_id String? @db.Uuid\n  channel_id String @db.Uuid\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"This endpoint returns a single article category based on its globally unique articleCategoryId. The result includes all category attributes such as hierarchy (parent_id), channel assignment, name, description, sorting order, and audit trail timestamps.\n\nThe operation relies on the shopping_mall_ai_backend_article_categories table for persistent category data. Use cases include viewing the details of a selected category in a category editor UI, or gathering comprehensive information for displaying a category within a navigation tree or article form.\n\nError handling covers not found (invalid ID), deleted categories, or access errors if the user has insufficient privilege.","summary":"Retrieve full information for a specific article category by ID.","parameters":[{"name":"articleCategoryId","description":"Unique identifier of the target article category.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details about the specified article category.","typeName":"IShoppingMallAiBackendArticleCategory"},"authorizationRoles":["admin"],"name":"at","model_name":"shopping_mall_ai_backend_article_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Create a new article category. The operation inserts a new category row into the shopping_mall_ai_backend_article_categories model, requiring at minimum a unique name, channel ID, and sort order. Admin or privileged user rights may be required depending on business policy. Validation includes checking the name for uniqueness within the channel, correct parent-child relationships for nested categories, and business logic for ordering.","path":"/shoppingMallAiBackend/admin/articleCategories","method":"post","prisma_schemas":"model shopping_mall_ai_backend_article_categories {\n  id String @id @db.Uuid\n  parent_id String? @db.Uuid\n  channel_id String @db.Uuid\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"An endpoint for creating a new article category by supplying required details, including the name, associated channel ID, sort order, and optional description or parent category for hierarchy. Before insertion, the endpoint enforces validation rules on unique category name per channel and proper parent assignment for category trees. Admin or other privileged user roles may be necessary to access this endpoint based on business policy.\n\nOn success, the newly created category is returned, while error states include uniqueness violations, missing or invalid required attributes, or access denial. Audit fields such as created_at and updated_at are managed automatically by the system.","summary":"Create a new article category.","parameters":[],"requestBody":{"description":"Required data to create the article category such as name, channel, and order.","typeName":"IShoppingMallAiBackendArticleCategory.ICreate"},"responseBody":{"description":"Information for the newly created article category.","typeName":"IShoppingMallAiBackendArticleCategory"},"authorizationRoles":["admin"],"name":"create","model_name":"shopping_mall_ai_backend_article_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"Update an existing article category by its unique identifier. This operation lets the user or admin modify fields such as the category's name, description, sort order, or parent for hierarchy restructuring, provided the category exists and business rules permit. The underlying shopping_mall_ai_backend_article_categories table is updated, and integrity checks ensure unique names, valid parentage, and business logic such as sort order or hierarchy consistency. Audit fields are refreshed accordingly.","path":"/shoppingMallAiBackend/admin/articleCategories/{articleCategoryId}","method":"put","prisma_schemas":"model shopping_mall_ai_backend_article_categories {\n  id String @id @db.Uuid\n  parent_id String? @db.Uuid\n  channel_id String @db.Uuid\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n}\n","description":"Allows the updating of a specific article category, selected by articleCategoryId. The payload may include changes to the name (with uniqueness checks within the channel), description, parent_id (if reorganizing category hierarchy), and sort order. All business rules are enforced to prevent hierarchy loops or name collisions.\n\nOn successful update, the updated category information is returned. Audit information (updated_at timestamp) is automatically refreshed. Only users with sufficient permissions—such as admins or category managers—can perform this operation. Error handling addresses invalid category IDs, permission errors, or uniqueness validation failures.","summary":"Update a single article category by its ID.","parameters":[{"name":"articleCategoryId","description":"Unique identifier of the article category to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating the category, such as name, parent, order, or description.","typeName":"IShoppingMallAiBackendArticleCategory.IUpdate"},"responseBody":{"description":"Details of the updated article category.","typeName":"IShoppingMallAiBackendArticleCategory"},"authorizationRoles":["admin"],"name":"update","model_name":"shopping_mall_ai_backend_article_categories","soft_delete_column":"deleted_at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation irreversibly removes an article category from the system by performing a hard delete in the shopping_mall_ai_backend_article_categories table. The API deletes the target category by its unique identifier (UUID) and removes all of its database records without retention for restoration or future audit beyond standard DB backups. Related entities such as articles or category mappings are expected to be managed by business logic prior to deletion, as cascade effects may impact navigation and content organization. This endpoint is designed for administrative back-office use when permanently retiring obsolete, redundant, or erroneous category entries from the taxonomy. Use with caution—once erased, the category record and its immediate hierarchical relations are no longer accessible.","path":"/shoppingMallAiBackend/admin/articleCategories/{articleCategoryId}","method":"delete","prisma_schemas":"model shopping_mall_ai_backend_article_categories {\n  id String @id @db.Uuid\n  parent_id String? @db.Uuid\n  channel_id String @db.Uuid\n  name String\n  description String?\n  order Int @db.Integer\n  created_at DateTime @db.Timestamptz\n  updated_at DateTime @db.Timestamptz\n  deleted_at DateTime? @db.Timestamptz\n  parent shopping_mall_ai_backend_article_categories? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  recursive shopping_mall_ai_backend_article_categories[] @relation(\"recursive\")\n  @@unique([channel_id, name])\n  @@index([parent_id])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","description":"Permanently remove an article category entity from the system by its unique identifier. This API endpoint performs a hard delete—completely erasing the record from the database instead of marking it as deleted—according to the structure defined in the shopping_mall_ai_backend_article_categories Prisma model.\n\nThe operation should only be accessible to system administrators. It does not handle recursive child removal or linked article reassignment; clients are responsible for resolving dependent relationships before using this endpoint. Any articles or hierarchical children that reference this category may encounter orphaned links or business logic errors if not processed beforehand.\n\nThis hard delete operation is irreversible and bypasses any soft delete mechanism. Once the category is erased, its metadata, relations, and all non-cascading links are unrecoverable. Use with caution and ensure a proper back-up and audit process exist at a business level, as this API is intended exclusively for permanent category removal by authorized operators.","summary":"Permanently erase an article category by ID from the system (hard delete)","parameters":[{"name":"articleCategoryId","description":"Unique identifier of the article category to be erased","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"name":"erase","model_name":"shopping_mall_ai_backend_article_categories","soft_delete_column":null,"authorizationRole":"admin","authorizationType":null}],"components":{"authorization":[{"name":"customer","description":"End users who browse, purchase, review products, and manage personal accounts. Can access as guest, member, or via external services. May accrue mileage, use coupons, and interact with service features via API authentication.","kind":"member"},{"name":"seller","description":"Authorized members who can register and manage products, fulfill orders, handle inquiries, analyze sales, and interact with compliance features. Accesses advanced sales dashboards and operational tools via API authentication.","kind":"member"},{"name":"admin","description":"System operators with elevated permissions for managing users, reviewing transactions, maintaining compliance, overseeing the system status, and setting global configurations. Responsible for all system-wide audits and monitoring via API authentication.","kind":"admin"}],"schemas":{"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IShoppingMallAiBackendCustomer.IJoin":{"type":"object","required":["email","phone_number","password","name"],"properties":{"email":{"type":"string","format":"email","description":"Email address for customer login and notifications. Must be unique per platform business policy. This becomes the primary contact for authentication and validation. (Prisma: 'email')"},"phone_number":{"type":"string","description":"Customer's verified mobile phone number (for regulatory and identity check). Must be unique. Must be stored in international format if possible. (Prisma: 'phone_number')"},"password":{"type":"string","format":"password","description":"User-chosen password (plain, not hash). Password is never exposed or stored except as hash. (Prisma: hashed in 'password_hash')"},"name":{"type":"string","description":"Full legal name of the customer for identification and regulatory compliance. Required. (Prisma: 'name')"},"nickname":{"oneOf":[{"type":"string","description":"Optional display nickname for the customer. Shown in social/community features if provided. (Prisma: 'nickname')"},{"type":"null"}],"description":"Optional display nickname for the customer. Shown in social/community features if provided. (Prisma: 'nickname')"}},"description":"Request body for customer registration. Maps to required fields described in shopping_mall_ai_backend_customers. Security note: password is sent raw and NEVER stored directly; use for hash generation only."},"IShoppingMallAiBackendCustomer.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Customer login email."},"password":{"type":"string","format":"password","description":"Plain password to be validated (only supplied at login)."}},"required":["email","password"],"description":"Customer login payload. Only used for API login to generate tokens."},"IShoppingMallAiBackendCustomer.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token to obtain new session."}},"required":["refresh_token"],"description":"Token refresh request for customer. Never accepts customer_id or other owner fields."},"IShoppingMallAiBackendCustomer.IAuthorized":{"type":"object","properties":{"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"},"customer":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomer"}},"required":["token","customer"],"description":"Response returned after customer registration, login, or refresh. Contains JWT authorization tokens and the authenticated customer entity. **No password or sensitive fields included.**"},"IShoppingMallAiBackendCustomer.ICustomer":{"type":"object","required":["id","email","phone_number","name","is_active","is_verified","created_at","updated_at"],"properties":{"id":{"type":"string","format":"uuid","description":"Customer's unique ID (UUID). (Prisma: PK)"},"email":{"type":"string","format":"email","description":"Business-verified email address. Unique across members. (Prisma: 'email')"},"phone_number":{"type":"string","description":"Customer's registered cellphone number. Unique per regulatory requirements. (Prisma: 'phone_number')"},"name":{"type":"string","description":"Legal name. (Prisma: 'name')"},"nickname":{"oneOf":[{"type":"string","description":"Optional nickname for display/social. (Prisma: 'nickname')"},{"type":"null"}],"description":"Optional nickname for display/social. (Prisma: 'nickname')"},"is_active":{"type":"boolean","description":"Whether account is enabled for login. (Prisma: 'is_active')"},"is_verified":{"type":"boolean","description":"Whether identity/mobile verification passed. (Prisma: 'is_verified')"},"last_login_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of last successful login. Can be null if never logged in. (Prisma: 'last_login_at')"},{"type":"null"}],"description":"Timestamp of last successful login. Can be null if never logged in. (Prisma: 'last_login_at')"},"created_at":{"type":"string","format":"date-time","description":"Registration date/time of the account. (Prisma: 'created_at')"},"updated_at":{"type":"string","format":"date-time","description":"Last profile update timestamp. (Prisma: 'updated_at')"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If soft-deleted, timestamp of logical deletion. Otherwise null. (Prisma: 'deleted_at')"},{"type":"null"}],"description":"If soft-deleted, timestamp of logical deletion. Otherwise null. (Prisma: 'deleted_at')"}},"description":"Customer profile entity as per shopping_mall_ai_backend_customers. Sensitive fields (password_hash) are never included in response."},"IShoppingMallAiBackendSeller.ICreate":{"type":"object","required":["email","business_registration_number","name"],"properties":{"email":{"type":"string","format":"email","description":"Seller's business email, unique per account. (Prisma: 'email')"},"business_registration_number":{"type":"string","description":"Legal business registration number required for seller onboarding. (Prisma: 'business_registration_number')"},"name":{"type":"string","description":"Legal business name of the seller entity. (Prisma: 'name')"}},"description":"Request body for seller account creation (registration flow). Maps to shopping_mall_ai_backend_sellers required fields. Password is typically managed via approval or separate onboarding; not included here."},"IShoppingMallAiBackendSeller.ILogin":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string","format":"email","description":"Seller's registration email for login. Unique per business registration."},"password":{"type":"string","format":"password","description":"Plain password to be validated against hash on login flow."}},"description":"Request body for seller login."},"IShoppingMallAiBackendSeller.IRefresh":{"type":"object","required":["refresh_token"],"properties":{"refresh_token":{"type":"string","description":"Seller's JWT refresh token for session renewal."}},"description":"Request body for seller token refresh."},"IShoppingMallAiBackendSeller.IAuthorized":{"type":"object","required":["token","seller"],"properties":{"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"},"seller":{"$ref":"#/components/schemas/IShoppingMallAiBackendSeller.ISeller","description":"Seller profile information (shopping_mall_ai_backend_sellers entity)."}},"description":"Response type. Seller authentication payload, includes JWT and profile."},"IShoppingMallAiBackendSeller.ISeller":{"type":"object","required":["id","email","business_registration_number","name","is_active","is_verified","created_at","updated_at"],"properties":{"id":{"type":"string","format":"uuid","description":"Unique seller identifier, UUID (PK). (Prisma: 'id')"},"email":{"type":"string","format":"email","description":"Registered seller business email. (Prisma: 'email')"},"business_registration_number":{"type":"string","description":"Seller's legal business registration number (unique, regional/country standard). (Prisma: 'business_registration_number')"},"name":{"type":"string","description":"Legal business name of this seller. (Prisma: 'name')"},"is_active":{"type":"boolean","description":"Whether seller account is currently active (able to access platform). (Prisma: 'is_active')"},"is_verified":{"type":"boolean","description":"Whether seller's identity and business registration were successfully verified. (Prisma: 'is_verified')"},"created_at":{"type":"string","format":"date-time","description":"When the seller account was registered with the system. (Prisma: 'created_at')"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to seller main record. (Prisma: 'updated_at')"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for business/account withdrawal (soft delete), or null."},{"type":"null"}],"description":"Timestamp for business/account withdrawal (soft delete), or null."}},"description":"Seller profile and compliance entity as per shopping_mall_ai_backend_sellers."},"IShoppingMallAiBackendAdmin.ICreate":{"type":"object","properties":{"username":{"type":"string","description":"Unique admin username for authentication."},"password_hash":{"type":"string","description":"Hash of the administrator's authentication password. NEVER accept plain password here."},"name":{"type":"string","description":"Real name of the admin for audit/evidence/traceability."},"email":{"type":"string","format":"email","description":"Unique business email address for the admin."},"phone_number":{"oneOf":[{"type":"string","description":"Optional admin contact phone for 2FA or notification."},{"type":"null"}],"description":"Optional admin contact phone for 2FA or notification."},"is_active":{"type":"boolean","description":"Whether the administrator account is currently enabled."}},"required":["username","password_hash","name","email","is_active"],"description":"DTO for admin account creation, matching shopping_mall_ai_backend_admins table. Email, username must be unique across all admins. Password must be hashed prior to use."},"IShoppingMallAiBackendAdmin.IAuthorized":{"type":"object","properties":{"admin":{"$ref":"#/components/schemas/IShoppingMallAiBackendAdmin","description":"The authenticated admin account details."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["admin","token"],"description":"Response type for admin authentication, registration, or refresh. Contains admin profile and JWT tokens."},"IShoppingMallAiBackendAdmin.ILogin":{"type":"object","properties":{"username":{"type":"string","description":"The admin username for login (must be unique)."},"password":{"type":"string","description":"Raw password to be checked against hash (NOT stored as cleartext)."}},"required":["username","password"],"description":"DTO for admin login submission."},"IShoppingMallAiBackendAdmin.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Existing refresh token to be exchanged for new access/refresh token."}},"required":["refresh_token"],"description":"DTO for admin token refresh operation."},"IShoppingMallAiBackendChannel.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Page number (for pagination)."},{"type":"null"}],"description":"Page number (for pagination)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"description":"Page size (number of records per page)."},{"type":"null"}],"description":"Page size (number of records per page)."},"code":{"oneOf":[{"type":"string","description":"Channel business code to filter on."},{"type":"null"}],"description":"Channel business code to filter on."},"name":{"oneOf":[{"type":"string","description":"Channel display name to filter on."},{"type":"null"}],"description":"Channel display name to filter on."},"country":{"oneOf":[{"type":"string","description":"Channel country code (ISO 3166-1)."},{"type":"null"}],"description":"Channel country code (ISO 3166-1)."},"currency":{"oneOf":[{"type":"string","description":"Currency code for filter (ISO 4217)."},{"type":"null"}],"description":"Currency code for filter (ISO 4217)."},"is_active":{"oneOf":[{"type":"boolean","description":"Optionally filter for active/visible channels."},{"type":"null"}],"description":"Optionally filter for active/visible channels."}},"description":"Request DTO supporting channel index/search operation. Covers pagination and major filters by code, name, country, currency, status (soft-deleted status handled in backend logic).","required":[]},"IPageIShoppingMallAiBackendChannel.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination context for result."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendChannel.ISummary"},"description":"Paged result set of channel summary records."}},"required":["pagination","data"],"description":"Paginated container for list/index result of channels."},"IShoppingMallAiBackendChannel.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique channel identifier."},"code":{"type":"string","description":"Business code for channel (unique)."},"name":{"type":"string","description":"Display name for the channel."},"country":{"type":"string","description":"Country (ISO 3166-1)."},"currency":{"type":"string","description":"Currency (ISO 4217)."},"language":{"type":"string","description":"Channel language (IETF tag)."},"timezone":{"type":"string","description":"Channel timezone (IANA Olson format)."},"created_at":{"type":"string","format":"date-time","description":"Datetime of channel creation."},"updated_at":{"type":"string","format":"date-time","description":"Datetime of most recent update for the channel."}},"required":["id","code","name","country","currency","language","timezone","created_at","updated_at"],"description":"Summary record for channel list/index/search. Omits potentially sensitive fields."},"IShoppingMallAiBackendChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the channel."},"code":{"type":"string","description":"Business channel code, unique per channel."},"name":{"type":"string","description":"Display name for channel."},"description":{"oneOf":[{"type":"string","description":"Detailed channel description for admin/reference."},{"type":"null"}],"description":"Detailed channel description for admin/reference."},"country":{"type":"string","description":"Country or region code (ISO 3166-1 alpha-2)."},"currency":{"type":"string","description":"Default currency for this channel (ISO 4217)."},"language":{"type":"string","description":"Default IETF language tag for the channel."},"timezone":{"type":"string","description":"IANA timezone string for the channel."},"created_at":{"type":"string","format":"date-time","description":"Datetime channel was created."},"updated_at":{"type":"string","format":"date-time","description":"Last time channel was altered."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If present, timestamp when the channel was soft deleted."},{"type":"null"}],"description":"If present, timestamp when the channel was soft deleted."}},"required":["id","code","name","country","currency","language","timezone","created_at","updated_at"],"description":"Full entity model for a sales channel (web, app, or affiliate). Includes business context, regulatory, and configuration fields."},"IShoppingMallAiBackendChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique business code for the new channel."},"name":{"type":"string","description":"Display name for the channel."},"description":{"oneOf":[{"type":"string","description":"Optional channel description for admin or reference use."},{"type":"null"}],"description":"Optional channel description for admin or reference use."},"country":{"type":"string","description":"Channel country/region (ISO 3166-1 alpha-2)."},"currency":{"type":"string","description":"Default transaction currency (ISO 4217)."},"language":{"type":"string","description":"Default language (IETF language tag)."},"timezone":{"type":"string","description":"Default timezone (IANA Olson DB format)."}},"required":["code","name","country","currency","language","timezone"],"description":"DTO for creating a new sales channel, matching Prisma shopping_mall_ai_backend_channels. Enforces code uniqueness and regulatory minimums."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number (1-based indexing)."},"limit":{"type":"integer","description":"Page size (max results per page in this list response)."},"records":{"type":"integer","description":"Total number of records matching the query/search."},"pages":{"type":"integer","description":"Total number of pages of results."}},"required":["current","limit","records","pages"],"description":"Standard page information for all IPage<T> containers, supporting business navigation, UX, and API featured search."},"IShoppingMallAiBackendChannel.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Unique business channel code. Required (non-nullable) on creation, but updatable for logic referencing and integration. Must remain unique system-wide."},"name":{"type":"string","description":"Public display name for the channel."},"description":{"oneOf":[{"type":"string","description":"Detailed channel description, including business usage, for admin/reference. Nullable."},{"type":"null","description":"Detailed channel description, including business usage, for admin/reference. Nullable."}],"description":"Detailed channel description, including business usage, for admin/reference. Nullable."},"country":{"type":"string","description":"Country or region for compliance and default settings. ISO 3166-1 (alpha-2)."},"currency":{"type":"string","description":"Default currency for transactions in this channel (ISO 4217 codes, e.g., KRW, USD, EUR)."},"language":{"type":"string","description":"Default language for this channel (IETF language tag)."},"timezone":{"type":"string","description":"Default timezone of the channel (IANA/Olson database format)."}},"description":"Payload for updating a shopping mall sales channel. All fields are optional and must comply with the original schema's constraints for channel identity uniqueness, compliance region settings, and logical update triggers. Allows change of business code, name, display description, country, currency, language, or timezone context, for administration or legal reconfiguration. Any omitted property in the payload is not updated.","required":[]},"IShoppingMallAiBackendChannelSection.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Filter sections by their unique code (within the channel)."},"name":{"type":"string","description":"Filter by display name for section/navigation. May use partial-match search for admin UI discovery."},"parent_id":{"type":"string","description":"Search only under the provided parent section for tree/listing logic, or null for root nodes."},"page":{"type":"number","format":"uint32","description":"Page of records to return (pagination)."},"limit":{"type":"number","format":"uint32","description":"Maximum records per page."},"sortBy":{"type":"string","description":"Field to sort by (e.g., name, order, created_at)."},"sortDir":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."}},"description":"Filtering and pagination request structure for shopping mall channel sections. Allows flexible query, hierarchical drill-down, and sort control for admin or configuration screens, respecting channel, code, name, parent node, ordering, and paging context for efficient navigation and management.","required":[]},"IShoppingMallAiBackendChannelSection.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique section ID (UUID, PK)."},"code":{"type":"string","description":"Section code, unique within channel."},"name":{"type":"string","description":"Display name for section."},"order":{"type":"number","description":"Order for visual sorting/navigation."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent section UUID, nullable for root sections."},{"type":"null","format":"uuid","description":"Parent section UUID, nullable for root sections."}],"description":"Parent section UUID, nullable for root sections."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp, nullable."},{"type":"null","format":"date-time","description":"Soft deletion timestamp, nullable."}],"description":"Soft deletion timestamp, nullable."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of section creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update."}},"required":["id","code","name","order","created_at","updated_at"],"description":"Minimal information for paged lists of channel sections, including business code, sort order, display names, and key audit fields. Excludes description and deep structure for performance."},"IPageIShoppingMallAiBackendChannelSection.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Detailed pagination structure for this page of channel sections."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendChannelSection.ISummary"},"description":"Paged records for channel section summaries."}},"required":["pagination","data"],"description":"Paged result for listing channel sections, with strongly typed section summaries and full pagination context. Used for admin and UI listing/search endpoints."},"IShoppingMallAiBackendChannelSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Section unique identifier (PK)."},"shopping_mall_ai_backend_channel_id":{"type":"string","format":"uuid","description":"Parent channel UUID; this section belongs to a single channel."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent section UUID; nullable for root/top-level sections."},{"type":"null","format":"uuid","description":"Parent section UUID; nullable for root/top-level sections."}],"description":"Parent section UUID; nullable for root/top-level sections."},"code":{"type":"string","description":"Unique code for this section within the channel (used for business logic and integration)."},"name":{"type":"string","description":"Display name for this section (used for visual navigation and admin reference)."},"description":{"oneOf":[{"type":"string","description":"Section admin/business description, nullable (used for context and evidence/audit)."},{"type":"null","description":"Section admin/business description, nullable (used for context and evidence/audit)."}],"description":"Section admin/business description, nullable (used for context and evidence/audit)."},"order":{"type":"number","description":"Visual sort order (admin UI or navigation ordering context)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (for evidence and sorting)."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp (for evidence and ordering)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp (nullable, used for evidence and business context.)"},{"type":"null","format":"date-time","description":"Soft deletion timestamp (nullable, used for evidence and business context.)"}],"description":"Soft deletion timestamp (nullable, used for evidence and business context.)"}},"required":["id","shopping_mall_ai_backend_channel_id","code","name","order","created_at","updated_at"],"description":"Complete channel section entity, including unique ID, admin/business codes, parent/child linkage, description, sort order, and full audit evidence via timestamps."},"IShoppingMallAiBackendChannelSection.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code for this new section (required)."},"name":{"type":"string","description":"Display name for the new section (required)."},"parent_id":{"oneOf":[{"type":"string","description":"Parent section UUID for tree structure, null for root/top-level section."},{"type":"null","description":"Parent section UUID for tree structure, null for root/top-level section."}],"description":"Parent section UUID for tree structure, null for root/top-level section."},"description":{"oneOf":[{"type":"string","description":"Optional section admin/business description."},{"type":"null","description":"Optional section admin/business description."}],"description":"Optional section admin/business description."},"order":{"type":"number","description":"Visual display order for navigation (required)."}},"required":["code","name","order"],"description":"Payload for creating a new sales channel section. Code and name are required for business reference and display; order defines the visual or navigation sequence. Parent can be null for root-level sections; description is optional."},"IShoppingMallAiBackendChannelSection.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Change/rename code for this section (unique within channel)."},"name":{"type":"string","description":"Change display name of the section."},"parent_id":{"oneOf":[{"type":"string","description":"Update parent linkage, null for root."},{"type":"null","description":"Update parent linkage, null for root."}],"description":"Update parent linkage, null for root."},"description":{"oneOf":[{"type":"string","description":"Change admin/business description."},{"type":"null","description":"Change admin/business description."}],"description":"Change admin/business description."},"order":{"type":"number","description":"Change display order for navigation."}},"required":[],"description":"Payload to update existing section business/metadata. All fields are optional and only updated if supplied, respecting business uniqueness and tree structure logic."},"IShoppingMallAiBackendChannelCategory.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Filter categories by unique category code within the channel."},"name":{"type":"string","description":"Filter by category display name."},"parent_id":{"type":"string","description":"Search children of the given parent, or null to show root/top-level categories."},"page":{"type":"number","format":"uint32","description":"Page number for pagination."},"limit":{"type":"number","format":"uint32","description":"Records per page (pagination size)."},"sortBy":{"type":"string","description":"Sort field (e.g., name, order, created_at)."},"sortDir":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."},"is_active":{"type":"boolean","description":"Filter by category active/inactive status."}},"description":"Filtering and paging request for channel categories, allowing business-defined search within a commercial channel/taxonomy.","required":[]},"IPageIShoppingMallAiBackendChannelCategory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for channel category page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendChannelCategory"},"description":"Array of channel category business objects."}},"required":["pagination","data"],"description":"Paged result structure for channel category index/search operations."},"IShoppingMallAiBackendChannelCategory":{"type":"object","required":["id","shopping_mall_ai_backend_channel_id","code","name","order","created_at","updated_at"],"properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the channel category. This maps to the primary key (id) in the corresponding Prisma table. Must be a valid UUID."},"shopping_mall_ai_backend_channel_id":{"type":"string","format":"uuid","description":"ID of the parent channel to which this category belongs. Required for all category definitions. Must correspond to the id of an existing channel."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent category ID for nested category trees. This enables the creation of hierarchical category structures. Null for top-level categories."},{"type":"null","format":"uuid","description":"Optional parent category ID for nested category trees. This enables the creation of hierarchical category structures. Null for top-level categories."}],"description":"Optional parent category ID for nested category trees. This enables the creation of hierarchical category structures. Null for top-level categories."},"code":{"type":"string","description":"Business code for identifying the category, unique within the channel. Used for lookup, navigation, and validation."},"name":{"type":"string","description":"Display name for the category, visible in UI and navigation elements. Must be unique within the channel and communicated clearly to users and admins."},"description":{"oneOf":[{"type":"string","description":"Optional business/admin context for the category. Textual, may be used for notes, localization, or audit history."},{"type":"null","description":"Optional business/admin context for the category. Textual, may be used for notes, localization, or audit history."}],"description":"Optional business/admin context for the category. Textual, may be used for notes, localization, or audit history."},"order":{"type":"integer","description":"Numeric ordering index for display or business priority purposes. Lower numbers appear first in lists or hierarchy visualizations."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the category was created. Read-only field mapped to schema-level audit requirements."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the category was last updated. Read-only field mapped to schema-level audit requirements."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp, if this category has been logically removed. Null if active."},{"type":"null","format":"date-time","description":"Soft deletion timestamp, if this category has been logically removed. Null if active."}],"description":"Soft deletion timestamp, if this category has been logically removed. Null if active."}},"description":"Represents a product or business category in the context of a channel, as defined by the Prisma model shopping_mall_ai_backend_channel_categories. Contains all core and audit fields necessary for navigation, display, and business logic, including support for soft deletion and parent-child hierarchical relationships. This entity is crucial for channel taxonomy management, UI organization, and filtering of products or promotions. All properties are included as per the underlying database schema, and audit fields provide compliance and evidence traceability."},"IShoppingMallAiBackendChannelCategory.ICreate":{"type":"object","required":["shopping_mall_ai_backend_channel_id","code","name","order"],"properties":{"shopping_mall_ai_backend_channel_id":{"type":"string","format":"uuid","description":"UUID of the parent sales channel for the new category. This aligns the category to a specific channel in the commerce backend, complying with business scoping and localization requirements."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent category UUID for supporting nested category trees. Null for top-level categories. Ensures flexible hierarchical navigation in the storefront."},{"type":"null","format":"uuid","description":"Optional parent category UUID for supporting nested category trees. Null for top-level categories. Ensures flexible hierarchical navigation in the storefront."}],"description":"Optional parent category UUID for supporting nested category trees. Null for top-level categories. Ensures flexible hierarchical navigation in the storefront."},"code":{"type":"string","description":"Unique business code for the category within its channel. Used for programmatic lookup, search, and analytics. Must be unique in context of the parent channel."},"name":{"type":"string","description":"Human-readable display name for the category. Used in navigation UI, admin screens, and business reporting. Must be unique and clear for users and operations staff."},"description":{"oneOf":[{"type":"string","description":"Optional admin or business-facing description for the category. Used for notes, additional context, or documentation of business rules."},{"type":"null","description":"Optional admin or business-facing description for the category. Used for notes, additional context, or documentation of business rules."}],"description":"Optional admin or business-facing description for the category. Used for notes, additional context, or documentation of business rules."},"order":{"type":"integer","description":"Display and navigation order for the category. Used to control appearance in menus/trees in the business UI. Lower values are shown first."}},"description":"Request body used to create a new channel category in the platform. All required business fields from the underlying Prisma schema must be supplied, including channel linkage, code, name, and order. Parent can be null for root-level categories. Must comply with unique constraints and business rule validations. This type enforces input consistency for new category registration."},"IShoppingMallAiBackendChannelCategory.IUpdate":{"type":"object","properties":{"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional UUID reference to a new or updated parent category. Use null to move a category to the root level. Hierarchy and cycle validation are enforced at the business logic layer."},{"type":"null","format":"uuid","description":"Optional UUID reference to a new or updated parent category. Use null to move a category to the root level. Hierarchy and cycle validation are enforced at the business logic layer."}],"description":"Optional UUID reference to a new or updated parent category. Use null to move a category to the root level. Hierarchy and cycle validation are enforced at the business logic layer."},"code":{"type":"string","description":"Optional updated business code for the category within the channel. Changing this value must respect uniqueness constraints and not disrupt business logic references. Should only be set when necessary."},"name":{"type":"string","description":"Optional updated display name for the category. Must remain unique within the parent channel for UI clarity. Must comply with naming and localization policy."},"description":{"oneOf":[{"type":"string","description":"Optional updated description for business use, admin guidance, or localization support. Null clears any prior context."},{"type":"null","description":"Optional updated description for business use, admin guidance, or localization support. Null clears any prior context."}],"description":"Optional updated description for business use, admin guidance, or localization support. Null clears any prior context."},"order":{"type":"integer","description":"Optional update for display/navigation order. Used to reorganize categories in menus or hierarchies for optimal business presentation."}},"description":"Represents partial updates for an existing channel category in the commerce backend. Only the fields provided are updated; all others remain unchanged. Properties mirror those available for creation, with all fields optional except the category's own identifier, which is provided in the API path. Update requests are subject to business rule and unique constraint validation, and changes must respect channel/category organizational logic. Soft deletion is managed separately.","required":[]},"IShoppingMallAiBackendChannelCategoryMapping.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Optional page number for paginated queries. Used for scrolling through large result sets. Null defaults to the first page."},{"type":"null","description":"Optional page number for paginated queries. Used for scrolling through large result sets. Null defaults to the first page."}],"description":"Optional page number for paginated queries. Used for scrolling through large result sets. Null defaults to the first page."},"limit":{"oneOf":[{"type":"integer","description":"Optional page size for paginated queries. Limits the number of results per response for performance and UI handling. Null uses system default."},{"type":"null","description":"Optional page size for paginated queries. Limits the number of results per response for performance and UI handling. Null uses system default."}],"description":"Optional page size for paginated queries. Limits the number of results per response for performance and UI handling. Null uses system default."},"sort":{"oneOf":[{"type":"string","description":"Optional sorting parameter for specifying result ordering (e.g., by creation date, code, etc). Null implies default system order."},{"type":"null","description":"Optional sorting parameter for specifying result ordering (e.g., by creation date, code, etc). Null implies default system order."}],"description":"Optional sorting parameter for specifying result ordering (e.g., by creation date, code, etc). Null implies default system order."},"filter_category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter to restrict results to a specific channel category. Null returns all mappings."},{"type":"null","format":"uuid","description":"Optional filter to restrict results to a specific channel category. Null returns all mappings."}],"description":"Optional filter to restrict results to a specific channel category. Null returns all mappings."},"filter_section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter to restrict results to a specific channel section. Null returns all mappings."},{"type":"null","format":"uuid","description":"Optional filter to restrict results to a specific channel section. Null returns all mappings."}],"description":"Optional filter to restrict results to a specific channel section. Null returns all mappings."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional ISO date-time (RFC 3339) to filter mappings created after this time for audit or business review. Null returns all creation times."},{"type":"null","format":"date-time","description":"Optional ISO date-time (RFC 3339) to filter mappings created after this time for audit or business review. Null returns all creation times."}],"description":"Optional ISO date-time (RFC 3339) to filter mappings created after this time for audit or business review. Null returns all creation times."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional ISO date-time (RFC 3339) to filter mappings created before this time for audit or business review. Null returns all creation times."},{"type":"null","format":"date-time","description":"Optional ISO date-time (RFC 3339) to filter mappings created before this time for audit or business review. Null returns all creation times."}],"description":"Optional ISO date-time (RFC 3339) to filter mappings created before this time for audit or business review. Null returns all creation times."}},"description":"Search/filter object for paginated queries of channel-section to channel-category mappings. Used in admin and analytics queries to retrieve, audit, or manage the relationships between navigation sections and defined categories. Includes support for pagination, sorting, and context filtering for high-performance administration in large or multichannel environments. All parameters are optional, and null values revert to default system or API behavior. Intended for service and backoffice interfaces for flexible navigation/category management.","required":[]},"IPageIShoppingMallAiBackendChannelCategoryMapping":{"type":"object","required":["pagination","data"],"properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Details about result paging (current page, limit, total records, total pages). Must always be included in paged responses."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendChannelCategoryMapping"},"description":"Array of mapping objects returned as search results. Type matches that after IPage in naming convention (here, IShoppingMallAiBackendChannelCategoryMapping)."}},"description":"Represents a paginated collection of channel section-category mappings, including both the result set and detailed pagination metadata. Used in admin UIs, analytics dashboards, and backoffice reporting systems to deliver large datasets in smaller, manageable pages. The pagination structure and result data array follow OpenAPI and business best practices for scalable search APIs."},"IShoppingMallAiBackendChannelCategoryMapping":{"type":"object","required":["id","shopping_mall_ai_backend_channel_section_id","shopping_mall_ai_backend_channel_category_id","created_at"],"properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the mapping between a channel section and a channel category. Maps directly to the primary key in the corresponding table."},"shopping_mall_ai_backend_channel_section_id":{"type":"string","format":"uuid","description":"UUID reference to the channel section entity for this mapping. Indicates from which section the mapping is created."},"shopping_mall_ai_backend_channel_category_id":{"type":"string","format":"uuid","description":"UUID reference to the channel category entity for this mapping. Indicates the navigation/analytics category being mapped to the section."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the mapping record was created. Read-only evidence field for audit and business history."}},"description":"Represents a concrete link between a navigation section and a category within a channel. This mapping underpins navigation logic, product discovery structures, and analytics reporting in omnichannel environments. Used primarily in administrative operations for managing cross-section/category relationships, with traceability for evidence, audit, and rollback. Only direct reference fields and evidence/audit fields are included."},"IShoppingMallAiBackendChannelCategoryMapping.ICreate":{"type":"object","required":["shopping_mall_ai_backend_channel_section_id","shopping_mall_ai_backend_channel_category_id"],"properties":{"shopping_mall_ai_backend_channel_section_id":{"type":"string","format":"uuid","description":"UUID of the channel section for this mapping. All category mappings must be associated with a specific navigation section."},"shopping_mall_ai_backend_channel_category_id":{"type":"string","format":"uuid","description":"UUID of the channel category to be linked to the section. Ensures only valid and existing categories are assignable to sections."}},"description":"Request body for creating a new mapping entry between a channel section and a channel category. Both required UUIDs must be supplied and exist in the relevant tables. Used for navigation configuration, analytics, and cross-domain product discovery. Follows uniqueness and referential integrity constraints in the application logic. No additional business or audit metadata is included in create requests."},"IShoppingMallAiBackendChannelCategoryMapping.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_channel_section_id":{"type":"string","format":"uuid","description":"Optionally, the new channel section UUID for the mapping. Allows re-assignment or correction in mapping relationships during admin edits. Must refer to a valid section."},"shopping_mall_ai_backend_channel_category_id":{"type":"string","format":"uuid","description":"Optionally, the new channel category UUID for the mapping. Permits changing or re-targeting mapped categories in business workflows."}},"description":"Represents a partial update to a channel section-category mapping (e.g., moving a mapping to a new section/category). All fields are optional; only present properties are updated. Responsible for maintaining referential and uniqueness constraints. Used by admin tools and service endpoints for managing navigation/category relationships. Input must pass business validation for assignability and relevance; audit fields are managed by the system.","required":[]},"IShoppingMallAiBackendSystemConfig":{"type":"object","description":"System configuration entity representing global or scoped platform settings. Each config has a unique 'key', a serialized 'value', effective time bounds, and audit fields. All configuration changes are evidence-traceable for compliance, supporting business feature toggles, operational policies, and legal mandates.\n\nRefer to: shopping_mall_ai_backend_system_configs Prisma schema.\n\nEvery property directly maps to the database fields and must be documented for audit and traceability. 'value' is a string/serialized blob enabling multi-type configs. Soft deletion via 'deleted_at' preserves evidence for business and regulatory purposes.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier of system config entry. Prisma: id."},"key":{"type":"string","description":"Unique business config key. Scope: global, unless per-channel/feature. Prisma: key."},"value":{"type":"string","description":"Config value (string/JSON), serialized. Prisma: value."},"description":{"oneOf":[{"type":"string","description":"Human readable description for business/admin; audit trace for config's business logic. Prisma: description."},{"type":"null","description":"Human readable description for business/admin; audit trace for config's business logic. Prisma: description."}],"description":"Human readable description for business/admin; audit trace for config's business logic. Prisma: description."},"effective_from":{"oneOf":[{"type":"string","format":"date-time","description":"Time when config takes effect (for scheduled/conditional). Prisma: effective_from."},{"type":"null","format":"date-time","description":"Time when config takes effect (for scheduled/conditional). Prisma: effective_from."}],"description":"Time when config takes effect (for scheduled/conditional). Prisma: effective_from."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional end time for config effectivity. Prisma: effective_to."},{"type":"null","format":"date-time","description":"Optional end time for config effectivity. Prisma: effective_to."}],"description":"Optional end time for config effectivity. Prisma: effective_to."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation for evidence and audit. Prisma: created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update. Prisma: updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion time; for evidence trail, not actual removal. Prisma: deleted_at."},{"type":"null","format":"date-time","description":"Soft deletion time; for evidence trail, not actual removal. Prisma: deleted_at."}],"description":"Soft deletion time; for evidence trail, not actual removal. Prisma: deleted_at."}},"required":["id","key","value","created_at","updated_at"]},"IShoppingMallAiBackendSystemConfig.ICreate":{"type":"object","description":"Request body for creating a new system configuration. Includes mandatory 'key', 'value', and optional description/time bounds for scheduled effectivity. Follows business logic for unique key constraint and audit trail.","properties":{"key":{"type":"string","description":"Unique key for the configuration item."},"value":{"type":"string","description":"Configuration value, serialized if necessary."},"description":{"oneOf":[{"type":"string","description":"Human-friendly description or memo (optional)."},{"type":"null","description":"Human-friendly description or memo (optional)."}],"description":"Human-friendly description or memo (optional)."},"effective_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional scheduled start time for config validity."},{"type":"null","format":"date-time","description":"Optional scheduled start time for config validity."}],"description":"Optional scheduled start time for config validity."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional scheduled end time."},{"type":"null","format":"date-time","description":"Optional scheduled end time."}],"description":"Optional scheduled end time."}},"required":["key","value"]},"IShoppingMallAiBackendSystemConfig.IUpdate":{"type":"object","description":"Request body for updating an existing system config entry. All fields are optional (partial update), with business logic enforcing unique key constraints and effectivity bounds validation. Follows audit evidence requirements.","properties":{"key":{"type":"string","description":"Config key (unique identifier for this entry); updatable only if allowed."},"value":{"type":"string","description":"New configuration value."},"description":{"oneOf":[{"type":"string","description":"Updated business description/notes, if provided."},{"type":"null","description":"Updated business description/notes, if provided."}],"description":"Updated business description/notes, if provided."},"effective_from":{"oneOf":[{"type":"string","format":"date-time","description":"Scheduled start time for updated config."},{"type":"null","format":"date-time","description":"Scheduled start time for updated config."}],"description":"Scheduled start time for updated config."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Scheduled end time for updated config."},{"type":"null","format":"date-time","description":"Scheduled end time for updated config."}],"description":"Scheduled end time for updated config."}},"required":[]},"IShoppingMallAiBackendSystemConfig.IRequest":{"type":"object","description":"Search, filter, and pagination parameters for system configs. Supports filter on key, value, time bounds, audit timeframe, and advanced options for global admin/system-level queries. Used for listing configurations in dashboards or audit consoles.","properties":{"key":{"type":"string","description":"Optionally filter results to only configs with this (exact) key."},"value":{"type":"string","description":"Optionally filter by config value pattern."},"description":{"oneOf":[{"type":"string","description":"Optional search by config description."},{"type":"null","description":"Optional search by config description."}],"description":"Optional search by config description."},"effective_from":{"oneOf":[{"type":"string","format":"date-time","description":"Return only configs effective from this time."},{"type":"null","format":"date-time","description":"Return only configs effective from this time."}],"description":"Return only configs effective from this time."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Return only configs effective until this time."},{"type":"null","format":"date-time","description":"Return only configs effective until this time."}],"description":"Return only configs effective until this time."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter configs created on or after this time."},{"type":"null","format":"date-time","description":"Filter configs created on or after this time."}],"description":"Filter configs created on or after this time."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter configs created on or before this time."},{"type":"null","format":"date-time","description":"Filter configs created on or before this time."}],"description":"Filter configs created on or before this time."},"deleted":{"type":"boolean","description":"If true, include only soft-deleted (evidence) configs in search."},"sort_by":{"type":"string","description":"Sort results by this field (e.g., 'created_at', 'key')."},"order":{"oneOf":[{"const":"asc","description":"Sort order for result set."},{"const":"desc","description":"Sort order for result set."}],"description":"Sort order for result set."},"page":{"type":"number","description":"Result page number (1-indexed)."},"limit":{"type":"number","description":"Maximum number of records per page."}},"required":[]},"IPageIShoppingMallAiBackendSystemConfig":{"type":"object","description":"Paginated page of system configuration records. Standard 'IPage' pattern. Used for list/search APIs in admin/UIs. Data contains array of system config objects. Pagination property has page, limit, records, and page count as per convention.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info for this result set."},"data":{"type":"array","description":"Array of system config objects on this page.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendSystemConfig"}}},"required":["pagination","data"]},"IShoppingMallAiBackendSystemAuditTrail":{"type":"object","description":"System audit trail/log entry. Each entry is immutable and append-only. Used for regulatory and business evidence. Prisma: shopping_mall_ai_backend_system_audit_trails. Includes event type, actor, context details, and optional machine-readable metadata.\n\nEntries are indexed for event type, actor, and business description. 'metadata' field is free-form JSON or text, derived from evidence source.","properties":{"id":{"type":"string","format":"uuid","description":"Audit trail primary key."},"event_type":{"type":"string","description":"Type of event (enum: config_change, access, permission, error, etc.). Schema may document exact enums elsewhere."},"actor_id":{"type":"string","format":"uuid","description":"Reference to user/admin/actor who triggered the event."},"description":{"type":"string","description":"Human-readable business context/event details."},"metadata":{"oneOf":[{"type":"string","description":"Optional serialized metadata for extra event context or evidence."},{"type":"null","description":"Optional serialized metadata for extra event context or evidence."}],"description":"Optional serialized metadata for extra event context or evidence."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of event occurrence, used for chronological evidence."}},"required":["id","event_type","actor_id","description","created_at"]},"IShoppingMallAiBackendSystemAuditTrail.IRequest":{"type":"object","description":"Search, filter, and pagination for audit trail records. Supports event_type filtering, actor lookup, date bounds, and description keyword search. Used for compliance dashboards, operational audit, and ad-hoc investigation queries.","properties":{"event_type":{"type":"string","description":"Filter for specific event_type (match or partial)."},"actor_id":{"type":"string","description":"Actor ID (UUID). Filter for only events by this actor."},"description":{"oneOf":[{"type":"string","description":"Partial or full search within business context field."},{"type":"null","description":"Partial or full search within business context field."}],"description":"Partial or full search within business context field."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for events created on or after this ISO 8601 time."},{"type":"null","format":"date-time","description":"Filter for events created on or after this ISO 8601 time."}],"description":"Filter for events created on or after this ISO 8601 time."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for events created on or before this time."},{"type":"null","format":"date-time","description":"Filter for events created on or before this time."}],"description":"Filter for events created on or before this time."},"sort_by":{"type":"string","description":"Field to sort results (e.g., 'created_at', 'event_type')."},"order":{"oneOf":[{"const":"asc","description":"Sort order."},{"const":"desc","description":"Sort order."}],"description":"Sort order."},"page":{"type":"number","description":"Page number for results."},"limit":{"type":"number","description":"Results per page."}},"required":[]},"IPageIShoppingMallAiBackendSystemAuditTrail.ISummary":{"type":"object","description":"Paginated summary view of system audit trail records. Standard 'IPage' container with data field containing audit trail summaries. Used for admin search interfaces. Data structure: array of SystemAuditTrail records.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for this result set."},"data":{"type":"array","description":"List of audit trail summaries for the current page.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendSystemAuditTrail"}}},"required":["pagination","data"]},"IShoppingMallAiBackendFile.IRequest":{"type":"object","description":"Request for file search, filtering, and pagination. Allows filtering by filename, MIME type, uploader, date range. Includes pagination, sorting, and soft deletion options.","properties":{"original_filename":{"type":"string","description":"Filter by original filename (partial match allowed)."},"mime_type":{"type":"string","description":"Filter by MIME type (e.g., image/png)."},"uploaded_by_id":{"type":"string","description":"Filter by uploader's user ID (UUID)."},"uploaded_at_from":{"type":"string","format":"date-time","description":"Earliest upload timestamp (include from this date)."},"uploaded_at_to":{"type":"string","format":"date-time","description":"Latest upload timestamp (include until this date)."},"deleted":{"type":"boolean","description":"If true, include only deleted files."},"page":{"type":"integer","minimum":1,"description":"Page number (1-based)."},"limit":{"type":"integer","minimum":1,"maximum":500,"description":"Records per page."},"sort":{"type":"string","description":"Sort field and order, e.g. 'uploaded_at:desc'."}},"required":[]},"IPageIShoppingMallAiBackendFile.ISummary":{"type":"object","description":"Paginated result schema for file metadata summary view. Includes pagination info and data array.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFile.ISummary"}}},"required":["pagination","data"]},"IShoppingMallAiBackendFile.ISummary":{"type":"object","description":"Summary of uploaded file metadata for search/list view.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the file metadata record."},"original_filename":{"type":"string","description":"Source/original filename as uploaded."},"mime_type":{"type":"string","description":"File content-type."},"size_bytes":{"type":"integer","description":"File size in bytes."},"uploaded_at":{"type":"string","format":"date-time","description":"Upload timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Logical deletion timestamp; null if active."},{"type":"null","format":"date-time","description":"Logical deletion timestamp; null if active."}],"description":"Logical deletion timestamp; null if active."}},"required":["id","original_filename","mime_type","size_bytes","uploaded_at"]},"IShoppingMallAiBackendFile":{"type":"object","description":"Full metadata record for uploaded files, referencing binary content in storage (S3, CDN, etc).","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the file metadata record."},"original_filename":{"type":"string","description":"Source/original filename as uploaded."},"mime_type":{"type":"string","description":"File content-type as detected by server or provided by user."},"storage_uri":{"type":"string","description":"Reference/location of object in file storage (e.g., S3 URI)."},"size_bytes":{"type":"integer","description":"File size, in bytes."},"uploaded_by_id":{"type":"string","format":"uuid","description":"Uploader's UUID."},"uploaded_at":{"type":"string","format":"date-time","description":"UTC timestamp of upload."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; set on logical deletion, null otherwise."},{"type":"null","format":"date-time","description":"Soft deletion timestamp; set on logical deletion, null otherwise."}],"description":"Soft deletion timestamp; set on logical deletion, null otherwise."}},"required":["id","original_filename","mime_type","storage_uri","size_bytes","uploaded_by_id","uploaded_at"]},"IShoppingMallAiBackendFile.ICreate":{"type":"object","description":"Creation DTO for file metadata entry registration; used in upload process. Excludes ID and system-generated columns.","properties":{"original_filename":{"type":"string","description":"Filename of uploaded content (as supplied by user)."},"mime_type":{"type":"string","description":"File type (e.g., image/png, application/pdf)."},"storage_uri":{"type":"string","description":"Object store URI link to binary file."},"size_bytes":{"type":"integer","description":"File size in bytes."},"uploaded_by_id":{"type":"string","format":"uuid","description":"Uploader's business entity UUID."},"uploaded_at":{"type":"string","format":"date-time","description":"Upload evidence timestamp, ISO 8601 UTC."}},"required":["original_filename","mime_type","storage_uri","size_bytes","uploaded_by_id","uploaded_at"]},"IShoppingMallAiBackendFile.IUpdate":{"type":"object","description":"Update DTO for file metadata. All fields optional and independent. Used for correcting metadata or hiding a deleted file.","properties":{"original_filename":{"type":"string","description":"Corrected source filename for evidence."},"mime_type":{"type":"string","description":"Corrected/updated file type."},"storage_uri":{"type":"string","description":"Updated object storage URI."},"size_bytes":{"type":"integer","description":"Corrected file size in bytes."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of logical deletion (or null for un-delete)."},{"type":"null","format":"date-time","description":"Timestamp of logical deletion (or null for un-delete)."}],"description":"Timestamp of logical deletion (or null for un-delete)."}},"required":[]},"IShoppingMallAiBackendCodebook.IRequest":{"type":"object","description":"Search, filter, and paginated request structure for codebook listing.","properties":{"code":{"type":"string","description":"Search or filter by codebook business code."},"name":{"type":"string","description":"Search or filter by codebook display name."},"created_from":{"type":"string","format":"date-time","description":"Minimum created_at for codebook record."},"created_to":{"type":"string","format":"date-time","description":"Maximum created_at timestamp for codebook record."},"deleted":{"type":"boolean","description":"If true, restrict search to deleted codebooks; otherwise only active shown."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number (1-based)."},"limit":{"type":"integer","minimum":1,"maximum":500,"description":"Pagination: page size."},"sort":{"type":"string","description":"Sort field/direction, e.g., 'created_at:desc' or 'name:asc'."}},"required":[]},"IPageIShoppingMallAiBackendCodebook.ISummary":{"type":"object","description":"Paginated codebook result set with summaries and pagination info.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCodebook.ISummary"}}},"required":["pagination","data"]},"IShoppingMallAiBackendCodebook.ISummary":{"type":"object","description":"Codebook row summary record for paginated search/lists.","properties":{"id":{"type":"string","format":"uuid","description":"Business dictionary unique identifier (UUID)."},"code":{"type":"string","description":"Dictionary code (system unique, business reference)."},"name":{"type":"string","description":"Display name/label for business use."},"description":{"oneOf":[{"type":"string","description":"Business notes or context; null for none."},{"type":"null","description":"Business notes or context; null for none."}],"description":"Business notes or context; null for none."},"created_at":{"type":"string","format":"date-time","description":"Created timestamp (business/audit evidence)."},"updated_at":{"type":"string","format":"date-time","description":"Patch/update timestamp for audit/evidence."}},"required":["id","code","name","created_at","updated_at"]},"IShoppingMallAiBackendCodebook":{"type":"object","description":"Business dictionary/codebook record for type/status/option mapping, audit/evidence use.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this business codebook (UUID)."},"code":{"type":"string","description":"System/business code; unique reference for dictionary/enum."},"name":{"type":"string","description":"Display name/label for UI reference and human context."},"description":{"oneOf":[{"type":"string","description":"Documentation, admin/business context, notes (optional/nullable)."},{"type":"null","description":"Documentation, admin/business context, notes (optional/nullable)."}],"description":"Documentation, admin/business context, notes (optional/nullable)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp in UTC ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Last modification/patch evidence timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp (set if logically removed; null if active)."},{"type":"null","format":"date-time","description":"Soft deletion timestamp (set if logically removed; null if active)."}],"description":"Soft deletion timestamp (set if logically removed; null if active)."}},"required":["id","code","name","created_at","updated_at"]},"IShoppingMallAiBackendCodebook.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique business code for the codebook. Used as a stable identifier for lookups, integration, and business logic referencing. Must be unique for each codebook. Example: 'status', 'region', 'payment_method'. Required for creation."},"name":{"type":"string","description":"Human readable name for the codebook. Used in admin UI and documentation. Should clearly represent the domain/purpose of this codebook."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable description or admin memo for the codebook. Used to provide business context or rules. Can be omitted or null for minimal setup."},{"type":"null","description":"Optional human-readable description or admin memo for the codebook. Used to provide business context or rules. Can be omitted or null for minimal setup."}],"description":"Optional human-readable description or admin memo for the codebook. Used to provide business context or rules. Can be omitted or null for minimal setup."}},"required":["code","name"],"description":"Request to create a new codebook in the dynamic business dictionary. Must provide code and name. Description optional."},"IShoppingMallAiBackendCodebook.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"New name for the codebook. Optional for update."},"description":{"oneOf":[{"type":"string","description":"Updated description or admin memo for this codebook. Optional, may be set null to clear."},{"type":"null","description":"Updated description or admin memo for this codebook. Optional, may be set null to clear."}],"description":"Updated description or admin memo for this codebook. Optional, may be set null to clear."}},"required":[],"description":"Update business name and/or description for a codebook. All fields optional, can supply only changed properties."},"IShoppingMallAiBackendCodebookEntry.IRequest":{"type":"object","properties":{"codebookId":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the parent codebook in which to search for entries. Required for all requests."},"code":{"type":"string","description":"Optional filter for the code of entries. Filters entries to those matching the provided code."},"label":{"type":"string","description":"Optional filter for entry label. Allows searching by part or full label string."},"order":{"type":"integer","description":"Optional filter for the sorting order of codebook entries. Only entries matching order will be included."},"visible":{"type":"boolean","description":"Filter by the visibility status for business use. 'true' returns only visible entries; 'false' returns only hidden."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination. Starts at 1. Null if not specified."},{"type":"null","description":"Page number for pagination. Starts at 1. Null if not specified."}],"description":"Page number for pagination. Starts at 1. Null if not specified."},"limit":{"oneOf":[{"type":"integer","description":"Number of entries per page for pagination. Null if using default or unlimited."},{"type":"null","description":"Number of entries per page for pagination. Null if using default or unlimited."}],"description":"Number of entries per page for pagination. Null if using default or unlimited."}},"required":["codebookId"],"description":"Request to search/filter paginated codebook entries for a specific codebook. Provide parent codebook UUID and optional filter/search fields."},"IShoppingMallAiBackendCodebookEntry.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique id (UUID) of this codebook entry. Used as primary key for lookup and management."},"code":{"type":"string","description":"Business code for this entry. Unique within its parent codebook."},"label":{"type":"string","description":"Human-readable label/meaning for this entry. Used in admin UI and in business logic."},"visible":{"type":"boolean","description":"Whether this entry is visible for business use. True if eligible for selection/assignment; false if hidden/deprecated."},"order":{"type":"integer","description":"Ordering number for sorting codebook entries; lower values appear first."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this entry was created. For audit/evidence."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this entry was last updated. For evidence/history."}},"required":["id","code","label","visible","order","created_at","updated_at"],"description":"Summary information about a single entry in a codebook. Used in codebook entry list and search views."},"IShoppingMallAiBackendCodebookEntry":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of this codebook entry. Primary key for reference, management, audit."},"shopping_mall_ai_backend_codebook_id":{"type":"string","format":"uuid","description":"UUID of the parent codebook to which this entry belongs. Links to business dictionary context."},"code":{"type":"string","description":"Business code (enum value) for this entry, unique within its parent codebook. Used for selection in business logic."},"label":{"type":"string","description":"Human display label/meaning for this entry; appears in UI and reports."},"description":{"oneOf":[{"type":"string","description":"Optional admin or business memo describing this codebook entry. Used for documentation or evidence."},{"type":"null","description":"Optional admin or business memo describing this codebook entry. Used for documentation or evidence."}],"description":"Optional admin or business memo describing this codebook entry. Used for documentation or evidence."},"order":{"type":"integer","description":"Sorting number for codebook entries; lower values have higher priority/order. Used for display and management."},"visible":{"type":"boolean","description":"True if this entry is active/useable in business workflows; false if hidden or deprecated."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation. Used for audit, compliance, and evidence."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of most recent update to this entry. For history/evidence."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Optional soft deletion timestamp. Null if entry is active; set if logically deleted for evidence/audit."},{"type":"null","format":"date-time","description":"Optional soft deletion timestamp. Null if entry is active; set if logically deleted for evidence/audit."}],"description":"Optional soft deletion timestamp. Null if entry is active; set if logically deleted for evidence/audit."}},"required":["id","shopping_mall_ai_backend_codebook_id","code","label","order","visible","created_at","updated_at"],"description":"Full record for a single entry in a codebook, including business code, label, order, visibility, and audit evidence fields."},"IShoppingMallAiBackendCodebookEntry.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Business code (enum value) to create. Must be unique in this codebook."},"label":{"type":"string","description":"Human-readable label for this entry."},"description":{"oneOf":[{"type":"string","description":"Optional entry description or business memo."},{"type":"null","description":"Optional entry description or business memo."}],"description":"Optional entry description or business memo."},"order":{"oneOf":[{"type":"integer","description":"Optional ordering value to assign. Lower numbers appear before higher. Null to auto-assign."},{"type":"null","description":"Optional ordering value to assign. Lower numbers appear before higher. Null to auto-assign."}],"description":"Optional ordering value to assign. Lower numbers appear before higher. Null to auto-assign."},"visible":{"oneOf":[{"type":"boolean","description":"Visibility of this codebook entry. True = business visible. Null uses system default (usually true)."},{"type":"null","description":"Visibility of this codebook entry. True = business visible. Null uses system default (usually true)."}],"description":"Visibility of this codebook entry. True = business visible. Null uses system default (usually true)."}},"required":["code","label"],"description":"Request to create a new entry in a codebook. Specify code and label. Other fields optional."},"IShoppingMallAiBackendCustomer.IRequest":{"type":"object","properties":{"email":{"type":"string","format":"email"},"phone_number":{"type":"string"},"name":{"type":"string"},"nickname":{"type":"string"},"is_active":{"type":"boolean"},"is_verified":{"type":"boolean"},"last_login_from":{"type":"string","format":"date-time"},"last_login_to":{"type":"string","format":"date-time"},"created_from":{"type":"string","format":"date-time"},"created_to":{"type":"string","format":"date-time"},"page":{"type":"integer","minimum":1},"limit":{"type":"integer","minimum":1,"maximum":500}},"description":"Search/filter and pagination parameters for customer admin search.","required":[]},"IPageIShoppingMallAiBackendCodebookEntry.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination state details for current page/result. Includes current/total page, record counts."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCodebookEntry.ISummary"},"description":"Paged result array of codebook entry summary records."}},"required":["pagination","data"],"description":"Paginated result set for codebook entry search/display. 'data' holds array of summary entries for the requested page. Used in admin/result UI."},"IPageIShoppingMallAiBackendCustomer.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomer.ISummary"}}},"required":["pagination","data"],"description":"Paginated list of customer summaries, matches IPage* structure."},"IShoppingMallAiBackendCustomer.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"email":{"type":"string","format":"email"},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}]},"is_active":{"type":"boolean"},"is_verified":{"type":"boolean"},"last_login_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}]}},"required":["id","email","is_active","is_verified"],"description":"Summary of customer account for admin or listing UIs."},"IShoppingMallAiBackendCustomer":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the customer. References the 'id' column in shopping_mall_ai_backend_customers."},"email":{"type":"string","format":"email","description":"Customer's email address. Must be unique per customer."},"phone_number":{"type":"string","description":"Customer's verified mobile phone number. Used for primary contact and regulatory identity check."},"name":{"type":"string","description":"Full legal name of the customer as supplied or verified during onboarding."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional preferred display nickname."},"is_active":{"type":"boolean","description":"Whether the customer account is currently active and enabled for login."},"is_verified":{"type":"boolean","description":"Whether real-name and/or mobile number identity verification is completed."},"last_login_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the customer's most recent valid login."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the customer account was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the customer account record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp recording logical deletion (withdrawal or admin removal) for compliance."}},"required":["id","email","phone_number","name","is_active","is_verified","created_at","updated_at"],"description":"Customer account entity reflecting shopping_mall_ai_backend_customers schema. **Sensitive fields such as passwords, hashes, or tokens are never included.** Used as root user entity for API, authentication, and compliance workflows."},"IShoppingMallAiBackendCustomer.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email"},"phone_number":{"type":"string"},"name":{"type":"string"},"nickname":{"type":"string"},"is_active":{"type":"boolean"},"is_verified":{"type":"boolean"}},"description":"Admin update for customer record (customer themselves may only update allowed fields). Omits all fields that must never be set/changed by clients (id, created_at, updated_at, deleted_at).","required":[]},"IShoppingMallAiBackendCustomerSession.IRequest":{"type":"object","properties":{"customer_id":{"type":"string","format":"uuid"},"status":{"type":"string"},"ip_address":{"type":"string"},"page":{"type":"integer","minimum":1},"limit":{"type":"integer","minimum":1,"maximum":500}},"description":"Session search, filtering, and pagination parameters.","required":[]},"IPageIShoppingMallAiBackendCustomerSession":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomerSession"}}},"required":["pagination","data"],"description":"Paginated result of session records."},"IShoppingMallAiBackendCustomerSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"customer_id":{"type":"string","format":"uuid"},"access_token":{"type":"string"},"refresh_token":{"oneOf":[{"type":"string"},{"type":"null"}]},"ip_address":{"type":"string"},"user_agent":{"type":"string"},"expires_at":{"type":"string","format":"date-time"},"created_at":{"type":"string","format":"date-time"},"terminated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}]}},"required":["id","customer_id","access_token","ip_address","user_agent","expires_at","created_at"],"description":"Session record for authentication, fraud investigation, and login tracking."},"IShoppingMallAiBackendCustomerSession.IUpdate":{"type":"object","properties":{"access_token":{"type":"string"},"refresh_token":{"type":"string"},"ip_address":{"type":"string"},"user_agent":{"type":"string"},"expires_at":{"type":"string","format":"date-time"},"terminated_at":{"type":"string","format":"date-time"}},"description":"Updatable fields for session objects. Used by admin for force logout or expiration updates.","required":[]},"IShoppingMallAiBackendCustomerExternalIdentity.IRequest":{"type":"object","properties":{"provider":{"type":"string"},"provider_key":{"type":"string"},"linked_from":{"type":"string","format":"date-time"},"linked_to":{"type":"string","format":"date-time"},"page":{"type":"integer","minimum":1},"limit":{"type":"integer","minimum":1,"maximum":500}},"description":"Parameterized request for external identity linkage and search.","required":[]},"IPageIShoppingMallAiBackendCustomerExternalIdentity.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomerExternalIdentity.ISummary"}}},"required":["pagination","data"],"description":"Paginated summary of customer external identity links."},"IShoppingMallAiBackendCustomerExternalIdentity.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"provider":{"type":"string"},"linked_at":{"type":"string","format":"date-time"},"last_verified_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}]}},"required":["id","provider","linked_at"],"description":"External identity summary for user profile and account management UIs."},"IShoppingMallAiBackendCustomer.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Customer email (unique per platform)."},"phone_number":{"type":"string","description":"Validated phone number for customer onboarding."},"password":{"type":"string","format":"password","description":"Plain customer password for registration (backend will hash; never returned to client)."},"name":{"type":"string","description":"Legal customer name."},"nickname":{"type":"string","description":"Optional display nickname for this customer."}},"required":["email","phone_number","password","name"],"description":"Payload to create a new customer account. Used in registration (join) flows. Password is required only at registration, never in responses."},"IShoppingMallAiBackendCustomerExternalIdentity":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the external identity mapping (UUID)."},"customer_id":{"type":"string","format":"uuid","description":"Referenced customer id (UUID). This must match an actual customer record."},"provider":{"type":"string","description":"External identity provider (e.g., google, apple, naver, kakao)."},"provider_key":{"type":"string","description":"Provider-issued unique external key or ID."},"linked_at":{"type":"string","format":"date-time","description":"Timestamp of initial linkage (ISO 8601 string)."},"last_verified_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of last successful verification (nullable)."},{"type":"null","format":"date-time","description":"Timestamp of last successful verification (nullable)."}],"description":"Timestamp of last successful verification (nullable)."}},"required":["id","customer_id","provider","provider_key","linked_at"],"description":"External identity mapping between customer and a third-party authentication provider account (OAuth/social SSO). Each record associates a customer with a specific provider and external identity key. Follows shopping_mall_ai_backend_customer_external_identities schema."},"IShoppingMallAiBackendCustomerExternalIdentity.ICreate":{"type":"object","properties":{"provider":{"type":"string"},"provider_key":{"type":"string"}},"required":["provider","provider_key"],"description":"Payload to link an external identity for a customer. No actor/customer IDs are provided by user—set in server logic."},"IShoppingMallAiBackendCustomerExternalIdentity.IUpdate":{"type":"object","properties":{"provider":{"type":"string","description":"Update provider (optional), e.g., google, apple, etc."},"provider_key":{"type":"string","description":"Update external provider key/id (optional)."},"last_verified_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set last-verified timestamp (ISO 8601 or null)."},{"type":"null","format":"date-time","description":"Set last-verified timestamp (ISO 8601 or null)."}],"description":"Set last-verified timestamp (ISO 8601 or null)."}},"description":"Request fields to update an existing customer external identity mapping. All fields optional; only provided fields will be changed.","required":[]},"IShoppingMallAiBackendCustomerWithdrawal.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional)."},{"type":"null","description":"Page number for pagination (optional)."}],"description":"Page number for pagination (optional)."},"limit":{"oneOf":[{"type":"integer","description":"Maximum records per page (optional)."},{"type":"null","description":"Maximum records per page (optional)."}],"description":"Maximum records per page (optional)."},"reason":{"oneOf":[{"type":"string","description":"Optional filter for withdrawal reason."},{"type":"null","description":"Optional filter for withdrawal reason."}],"description":"Optional filter for withdrawal reason."},"withdrawn_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter records withdrawn >= this datetime (optional)."},{"type":"null","format":"date-time","description":"Filter records withdrawn >= this datetime (optional)."}],"description":"Filter records withdrawn >= this datetime (optional)."},"withdrawn_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter records withdrawn <= this datetime (optional)."},{"type":"null","format":"date-time","description":"Filter records withdrawn <= this datetime (optional)."}],"description":"Filter records withdrawn <= this datetime (optional)."}},"description":"Request for searching/filtering paginated withdrawal (account deactivation) records. May specify pagination, reason, or withdrawn_at range. Used for auditing or compliance review.","required":[]},"IPageIShoppingMallAiBackendCustomerWithdrawal.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information (links to IPage.IPagination)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomerWithdrawal.ISummary"},"description":"Array of withdrawal summary records for the page."}},"required":["pagination","data"],"description":"Paginated summary view for withdrawal events (customer deactivation), as returned on search/list."},"IShoppingMallAiBackendCustomerWithdrawal":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for withdrawal record."},"customer_id":{"type":"string","format":"uuid","description":"Associated customer UUID."},"reason":{"oneOf":[{"type":"string","description":"Optional reason or rationale provided by customer for withdrawal."},{"type":"null","description":"Optional reason or rationale provided by customer for withdrawal."}],"description":"Optional reason or rationale provided by customer for withdrawal."},"withdrawn_at":{"type":"string","format":"date-time","description":"Datetime when withdrawal was finalized."},"created_at":{"type":"string","format":"date-time","description":"Datetime when this withdrawal record (snapshot/evidence) was created."}},"required":["id","customer_id","withdrawn_at","created_at"],"description":"Record of a single withdrawal event (customer account deactivation), minimally includes ID, customer, when, and reason (optional)."},"IShoppingMallAiBackendSeller.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Pagination page (optional)."},{"type":"null","description":"Pagination page (optional)."}],"description":"Pagination page (optional)."},"limit":{"oneOf":[{"type":"integer","description":"Max results per page (optional)."},{"type":"null","description":"Max results per page (optional)."}],"description":"Max results per page (optional)."},"email":{"oneOf":[{"type":"string","description":"Search by seller email address (optional)."},{"type":"null","description":"Search by seller email address (optional)."}],"description":"Search by seller email address (optional)."},"business_registration_number":{"oneOf":[{"type":"string","description":"Search by business registration number (optional)."},{"type":"null","description":"Search by business registration number (optional)."}],"description":"Search by business registration number (optional)."},"name":{"oneOf":[{"type":"string","description":"Search by seller legal/business name (optional)."},{"type":"null","description":"Search by seller legal/business name (optional)."}],"description":"Search by seller legal/business name (optional)."},"is_verified":{"oneOf":[{"type":"boolean","description":"Filter by verification status (optional)."},{"type":"null","description":"Filter by verification status (optional)."}],"description":"Filter by verification status (optional)."},"is_active":{"oneOf":[{"type":"boolean","description":"Filter by active/inactive status (optional)."},{"type":"null","description":"Filter by active/inactive status (optional)."}],"description":"Filter by active/inactive status (optional)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Start date for created_at filter (optional)."},{"type":"null","format":"date-time","description":"Start date for created_at filter (optional)."}],"description":"Start date for created_at filter (optional)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"End date for created_at filter (optional)."},{"type":"null","format":"date-time","description":"End date for created_at filter (optional)."}],"description":"End date for created_at filter (optional)."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Start date for updated_at filter (optional)."},{"type":"null","format":"date-time","description":"Start date for updated_at filter (optional)."}],"description":"Start date for updated_at filter (optional)."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"End date for updated_at filter (optional)."},{"type":"null","format":"date-time","description":"End date for updated_at filter (optional)."}],"description":"End date for updated_at filter (optional)."}},"description":"Search/filter request for finding sellers. Allows advanced criteria to narrow result set for compliance, onboarding, or operational review.","required":[]},"IPageIShoppingMallAiBackendSeller.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendSeller.ISummary"},"description":"Paged array of summarized seller records."}},"required":["pagination","data"],"description":"Paginated results for seller search/listing (summary variant)."},"IShoppingMallAiBackendSeller":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Seller's primary key (UUID)."},"email":{"type":"string","description":"Business/notification email address. Must be unique."},"business_registration_number":{"type":"string","description":"Unique business entity registration/verification number. Used for legal verification and linkage to official records."},"name":{"type":"string","description":"Seller's business legal name, as registered with authorities."},"is_verified":{"type":"boolean","description":"If set true, this seller completed verification/KYC/business review (onboarding)."},"is_active":{"type":"boolean","description":"True when the seller is enabled to operate (login, manage products/orders)."},"created_at":{"type":"string","format":"date-time","description":"Account registration timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update (profile, contact, or business info)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the seller account was logically deleted (withdrawal/closure). Null if not withdrawn."},{"type":"null","format":"date-time","description":"When the seller account was logically deleted (withdrawal/closure). Null if not withdrawn."}],"description":"When the seller account was logically deleted (withdrawal/closure). Null if not withdrawn."}},"required":["id","email","business_registration_number","name","is_verified","is_active","created_at","updated_at"],"description":"Full seller business account entity. Follows the shopping_mall_ai_backend_sellers schema. Used for onboarding, verification, onboarding, operational management, and compliance reviews."},"IPageIShoppingMallAiBackendCustomerWithdrawal":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information (links to IPage.IPagination)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCustomerWithdrawal"},"description":"Array of withdrawal records."}},"required":["pagination","data"],"description":"Paginated withdrawal event results for customer withdrawal (deactivation) events, including full records (not only summaries)."},"IPageIShoppingMallAiBackendSeller":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Record count, current, limit/count, and pages for the returned set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendSeller"},"description":"Array of seller entities."}},"required":["pagination","data"],"description":"Paginated result for full seller records, not only summaries."},"IShoppingMallAiBackendSeller.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"The primary business email address for the seller. Must be unique. Used for login, notifications, and compliance reference. Updatable only by admins for accuracy and regulatory compliance."},"business_registration_number":{"type":"string","description":"The seller's registered business identifier. This value is required for compliance with tax, legal, and onboarding policies. Must remain unique in the system."},"name":{"type":"string","description":"Legal or business-facing name of the seller. Appears on dashboards and for legal evidence."},"is_verified":{"type":"boolean","description":"Flag for whether business verification (KYC/KYB) is complete and approved. Only updatable by admin to prevent fraudulent verification."},"is_active":{"type":"boolean","description":"Flag to control whether the seller is currently able to operate in the system. Suspension and reactivation are managed here."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the most recent update to the seller record. Set by system."}},"description":"Data structure for updating an existing seller record. Only specific fields are mutable. This structure is for admin backoffice use to maintain accurate onboarding, compliance, and operational status for seller entities.","required":[]},"IShoppingMallAiBackendSellerVerification.IRequest":{"type":"object","properties":{"status":{"type":"string","description":"Filter verifications by status (e.g., submitted, approved, rejected, pending, expired) as defined in the business workflow."},"verification_type":{"type":"string","description":"Filter by type of verification evidence (e.g., identity, business_license, bank_account, AML, KYC)."},"created_at_from":{"type":"string","format":"date-time","description":"Lower bound for date-based filtering (inclusive). Use ISO8601 date format."},"created_at_to":{"type":"string","format":"date-time","description":"Upper bound for date-based filtering (inclusive). Use ISO8601 date format."},"page":{"type":"integer","format":"int32","description":"Page number for pagination (1-based)."},"limit":{"type":"integer","format":"int32","description":"Records per page for pagination."}},"description":"Advanced search and filter structure for querying seller verification evidence in audit and onboarding workflows. Allows filtering by evidence type, status, or creation window.","required":[]},"IPageIShoppingMallAiBackendSellerVerification":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for the result set (current page, total, limit, etc)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendSellerVerification"},"description":"Array of seller verification evidence matching the search criteria."}},"required":["pagination","data"],"description":"Paginated collection of seller onboarding/compliance verification entities. Used in audit dashboards and compliance review."},"IShoppingMallAiBackendSellerVerification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the seller verification evidence record."},"seller_id":{"type":"string","format":"uuid","description":"Reference to the verified seller. Business context: links to onboarding, compliance, and regulatory review."},"verification_type":{"type":"string","description":"What type of verification is provided (e.g., identity, business_license, bank_account, AML, KYC)."},"status":{"type":"string","description":"Status of verification ('submitted', 'approved', 'rejected', etc). Workflow controlled."},"document_uri":{"type":"string","description":"Secure storage URI or reference to KYC/KYB/business evidence file. Never exposed publicly."},"submitted_at":{"type":"string","format":"date-time","description":"Timestamp the verification was submitted."},"verified_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp the verification was approved (if successful), or null if not applicable."},{"type":"null","format":"date-time","description":"Timestamp the verification was approved (if successful), or null if not applicable."}],"description":"Timestamp the verification was approved (if successful), or null if not applicable."}},"required":["id","seller_id","verification_type","status","document_uri","submitted_at"],"description":"Records business/KYC/KYB evidence for seller onboarding, regulatory review, and audit. Stores immutable snapshots of submitted/approved records."},"IShoppingMallAiBackendSellerVerification.IUpdate":{"type":"object","properties":{"verification_type":{"type":"string","description":"Type of evidence this record verifies (KYC, business_license, AML, etc)."},"status":{"type":"string","description":"Workflow status of the verification; must match onboarding/approval policies (e.g., approved, rejected, pending)."},"document_uri":{"type":"string","description":"Reference URI to evidence file to be examined."},"verified_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for when the verification was approved. Null if rejected, pending, or not yet reviewed."},{"type":"null","format":"date-time","description":"Timestamp for when the verification was approved. Null if rejected, pending, or not yet reviewed."}],"description":"Timestamp for when the verification was approved. Null if rejected, pending, or not yet reviewed."}},"description":"Structure for updating a seller's onboarding/compliance verification record. Only allowed fields may be changed, and changes are snapshotted for compliance evidence.","required":[]},"IShoppingMallAiBackendSellerProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the seller profile record."},"seller_id":{"type":"string","format":"uuid","description":"Reference to seller account owning this profile."},"display_name":{"oneOf":[{"type":"string","description":"Public-facing display name for seller shop (optional)."},{"type":"null","description":"Public-facing display name for seller shop (optional)."}],"description":"Public-facing display name for seller shop (optional)."},"contact_phone":{"oneOf":[{"type":"string","description":"Primary phone for business contact (optional)."},{"type":"null","description":"Primary phone for business contact (optional)."}],"description":"Primary phone for business contact (optional)."},"contact_email":{"oneOf":[{"type":"string","description":"Contact email for customer service/support (optional)."},{"type":"null","description":"Contact email for customer service/support (optional)."}],"description":"Contact email for customer service/support (optional)."},"address":{"oneOf":[{"type":"string","description":"Business address or fulfillment location (optional, can be null)."},{"type":"null","description":"Business address or fulfillment location (optional, can be null)."}],"description":"Business address or fulfillment location (optional, can be null)."},"description":{"oneOf":[{"type":"string","description":"Seller's shop/business description or public introduction (optional)."},{"type":"null","description":"Seller's shop/business description or public introduction (optional)."}],"description":"Seller's shop/business description or public introduction (optional)."},"created_at":{"type":"string","format":"date-time","description":"Profile creation timestamp (set by system)."},"updated_at":{"type":"string","format":"date-time","description":"Profile modification timestamp (set by system)."}},"required":["id","seller_id","created_at","updated_at"],"description":"Seller-facing public profile fields. Used for shop page, admin review, business contact, and channel presentation."},"IShoppingMallAiBackendSellerProfile.IUpdate":{"type":"object","properties":{"display_name":{"oneOf":[{"type":"string","description":"(Optional) Seller-facing display name/brand for profile update."},{"type":"null","description":"(Optional) Seller-facing display name/brand for profile update."}],"description":"(Optional) Seller-facing display name/brand for profile update."},"contact_phone":{"oneOf":[{"type":"string","description":"(Optional) Business contact phone to display or update."},{"type":"null","description":"(Optional) Business contact phone to display or update."}],"description":"(Optional) Business contact phone to display or update."},"contact_email":{"oneOf":[{"type":"string","description":"(Optional) Seller support email or business contact email."},{"type":"null","description":"(Optional) Seller support email or business contact email."}],"description":"(Optional) Seller support email or business contact email."},"address":{"oneOf":[{"type":"string","description":"(Optional) Seller's (corporate) address, optional during onboarding, required for fulfillment."},{"type":"null","description":"(Optional) Seller's (corporate) address, optional during onboarding, required for fulfillment."}],"description":"(Optional) Seller's (corporate) address, optional during onboarding, required for fulfillment."},"description":{"oneOf":[{"type":"string","description":"(Optional) Shop or business description/public intro."},{"type":"null","description":"(Optional) Shop or business description/public intro."}],"description":"(Optional) Shop or business description/public intro."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the profile update (set by system, not client)."}},"description":"Updateable seller profile fields, used for shop presentation, business info, and public contact/support endpoints.","required":[]},"IShoppingMallAiBackendSellerSettlement":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Record id for the settlement configuration (primary key)."},"seller_id":{"type":"string","format":"uuid","description":"Reference to the seller for whom settlement applies."},"bank_name":{"type":"string","description":"Bank or financial institution for payout/disbursement."},"bank_account_number":{"type":"string","description":"Business bank account for seller's settlement/payment disbursement."},"account_holder":{"type":"string","description":"Name of the bank account holder (compliance validation)."},"remittance_memo":{"oneOf":[{"type":"string","description":"Optional custom memo for disbursement or settlement."},{"type":"null","description":"Optional custom memo for disbursement or settlement."}],"description":"Optional custom memo for disbursement or settlement."},"created_at":{"type":"string","format":"date-time","description":"Timestamp the settlement record was created (for business evidence)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp the settlement record was last updated (for audit purposes)."}},"required":["id","seller_id","bank_name","bank_account_number","account_holder","created_at","updated_at"],"description":"Configuration for seller's bank/settlement information. Required for payout, withdrawals, and disbursement of funds. Links to compliance approval, onboarding, and evidence logs."},"IShoppingMallAiBackendSellerSettlement.IUpdate":{"type":"object","properties":{"bank_name":{"type":"string","description":"(Optional) Bank name for deposit settlement."},"bank_account_number":{"type":"string","description":"(Optional) Bank account number for payout."},"account_holder":{"type":"string","description":"(Optional) Settlement account holder name."},"remittance_memo":{"oneOf":[{"type":"string","description":"(Optional) Remittance memo."},{"type":"null","description":"(Optional) Remittance memo."}],"description":"(Optional) Remittance memo."}},"description":"DTO for updating seller settlement bank details.","required":[]},"IShoppingMallAiBackendAdmin.IRequest":{"type":"object","properties":{"page":{"type":"number","description":"Pagination: page number (default 1)."},"limit":{"type":"number","description":"Pagination: limit per page."},"username":{"type":"string","description":"Filter: partial match of username."},"name":{"type":"string","description":"Filter: partial match of administrator's name."},"is_active":{"type":"boolean","description":"Filter: admin active status."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: created after this ISO date."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: created before this ISO date."},"sort_by":{"type":"string","description":"Sort by this field."},"sort_dir":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."}},"description":"DTO for searching/filtering admins in list view.","required":[]},"IPageIShoppingMallAiBackendAdmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendAdmin.ISummary"},"description":"Array of summarized admin records."}},"required":["pagination","data"],"description":"Paginated summary list of admin search results."},"IShoppingMallAiBackendAdmin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Admin id (UUID)."},"username":{"type":"string","description":"Admin's unique username."},"name":{"type":"string","description":"Admin's real name."},"email":{"type":"string","description":"Business e-mail."},"is_active":{"type":"boolean","description":"Account activation status."},"last_login_at":{"oneOf":[{"type":"string","format":"date-time","description":"Last login (nullable)."},{"type":"null","format":"date-time","description":"Last login (nullable)."}],"description":"Last login (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."}},"required":["id","username","name","email","is_active","created_at","updated_at"],"description":"Summary view of an administrator for list display."},"IShoppingMallAiBackendAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Admin unique identifier."},"username":{"type":"string","description":"Admin username (unique)."},"name":{"type":"string","description":"Real name."},"email":{"type":"string","description":"Business e-mail address."},"phone_number":{"oneOf":[{"type":"string","description":"Contact phone (nullable)."},{"type":"null","description":"Contact phone (nullable)."}],"description":"Contact phone (nullable)."},"is_active":{"type":"boolean","description":"Account enabled/disabled."},"last_login_at":{"oneOf":[{"type":"string","format":"date-time","description":"Last login timestamp."},{"type":"null","format":"date-time","description":"Last login timestamp."}],"description":"Last login timestamp."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp (nullable)."},{"type":"null","format":"date-time","description":"Soft deletion timestamp (nullable)."}],"description":"Soft deletion timestamp (nullable)."}},"required":["id","username","name","email","is_active","created_at","updated_at"],"description":"Full detail admin account object."},"IShoppingMallAiBackendAdmin.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Change admin name (optional)."},"email":{"type":"string","description":"Change admin e-mail (optional)."},"phone_number":{"oneOf":[{"type":"string","description":"Change contact phone (nullable)."},{"type":"null","description":"Change contact phone (nullable)."}],"description":"Change contact phone (nullable)."},"is_active":{"type":"boolean","description":"Change account status (optional)."}},"description":"DTO for updating admin properties.","required":[]},"IShoppingMallAiBackendProduct.IRequest":{"type":"object","properties":{"page":{"type":"number","description":"Pagination: page number."},"limit":{"type":"number","description":"Pagination: items per page."},"title":{"type":"string","description":"Search: keyword in product title."},"product_type":{"type":"string","description":"Filter: product type."},"business_status":{"type":"string","description":"Filter: business/commercial status."},"tax_code":{"type":"string","description":"Filter: tax code."},"sort_by":{"type":"string","description":"Sort by field."},"sort_dir":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."}},"description":"Request DTO for searching/filtering products (list view).","required":[]},"IPageIShoppingMallAiBackendProduct":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page info."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProduct"},"description":"Paged product list."}},"required":["pagination","data"],"description":"Paginated product list page."},"IShoppingMallAiBackendProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Product unique identifier."},"title":{"type":"string","description":"Product display title."},"slug":{"type":"string","description":"SEO/product slug (unique in channel+seller scope)."},"description":{"oneOf":[{"type":"string","description":"Detailed product description (nullable)."},{"type":"null","description":"Detailed product description (nullable)."}],"description":"Detailed product description (nullable)."},"product_type":{"type":"string","description":"Product category/type."},"business_status":{"type":"string","description":"Business status (e.g., active, draft)."},"min_order_quantity":{"type":"number","description":"Minimum orderable quantity."},"max_order_quantity":{"type":"number","description":"Maximum orderable quantity."},"tax_code":{"type":"string","description":"Tax code reference."},"sort_priority":{"type":"number","description":"Sorting priority for list."},"created_at":{"type":"string","format":"date-time","description":"Product creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp (nullable)."},{"type":"null","format":"date-time","description":"Soft deletion timestamp (nullable)."}],"description":"Soft deletion timestamp (nullable)."}},"required":["id","title","slug","product_type","business_status","min_order_quantity","max_order_quantity","tax_code","sort_priority","created_at","updated_at"],"description":"Detailed product record for view and database logic."},"IShoppingMallAiBackendProduct.ICreate":{"type":"object","properties":{"title":{"type":"string","description":"Product title (unique per seller/channel)"},"slug":{"type":"string","description":"Unique, SEO-friendly product slug (URL fragment)"},"description":{"oneOf":[{"type":"string","description":"Long-form product description (may be markdown or html); optional"},{"type":"null","description":"Long-form product description (may be markdown or html); optional"}],"description":"Long-form product description (may be markdown or html); optional"},"product_type":{"type":"string","description":"Required: product type code (e.g., 'physical', 'digital', etc)"},"business_status":{"type":"string","description":"Required: business status initial state (e.g., 'draft', 'active', 'paused')"},"min_order_quantity":{"type":"number","description":"Minimum orderable quantity"},"max_order_quantity":{"type":"number","description":"Maximum orderable quantity per order"},"tax_code":{"type":"string","description":"Tax code or category identifier"},"sort_priority":{"type":"number","description":"Display sorting priority in product listings"}},"required":["title","slug","product_type","business_status","min_order_quantity","max_order_quantity","tax_code","sort_priority"],"description":"Request type for creating a new product entity based on the shopping mall backend's business rules and schema. Required fields are documented as based on the Prisma schema. Optional description field may be omitted if not available."},"IShoppingMallAiBackendProduct.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Product title (unique per seller/channel)"},"slug":{"type":"string","description":"Unique, SEO-friendly product slug (URL fragment)"},"description":{"oneOf":[{"type":"string","description":"Long-form product description (may be markdown or html); optional"},{"type":"null","description":"Long-form product description (may be markdown or html); optional"}],"description":"Long-form product description (may be markdown or html); optional"},"product_type":{"type":"string","description":"Required: product type code (e.g., 'physical', 'digital', etc)"},"business_status":{"type":"string","description":"Required: business status initial state (e.g., 'draft', 'active', 'paused')"},"min_order_quantity":{"type":"number","description":"Minimum orderable quantity"},"max_order_quantity":{"type":"number","description":"Maximum orderable quantity per order"},"tax_code":{"type":"string","description":"Tax code or category identifier"},"sort_priority":{"type":"number","description":"Display sorting priority in product listings"}},"description":"Update type for partially modifying product entity attributes. All fields are optional, enabling partial update per business/prisma rules. Fields not set will not change.","required":[]},"IShoppingMallAiBackendAdminAuditLog.IRequest":{"type":"object","properties":{"admin_id":{"type":"string","description":"Optionally filter by admin account ID (UUID)"},"operation":{"type":"string","description":"Optionally filter by operation name"},"description":{"type":"string","description":"Filter on partial description matches"},"created_from":{"type":"string","description":"Date/time range filters"},"created_to":{"type":"string","description":"Date/time range filters"},"page":{"type":"number","description":"Pagination - page number (starts at 1)"},"page_size":{"type":"number","description":"Pagination - size per page"},"sort":{"type":"string","description":"Sorting preference, e.g., \"created_at_desc\""}},"description":"Request filter, search, and pagination type for admin audit log listing.","required":[]},"IPageIShoppingMallAiBackendAdminAuditLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging info"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendAdminAuditLog.ISummary"},"description":"Audit log summary records"}},"required":["pagination","data"],"description":"Paginated, filtered summary page of admin audit log records."},"IShoppingMallAiBackendAdminAuditLog.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Audit log entry ID (UUID)"},"operation":{"type":"string","description":"Operation name performed (e.g., 'approve_user', 'change_config')"},"target_type":{"type":"string","description":"Target entity type (user, order, config, etc)"},"target_id":{"type":"string","description":"Target entity ID (UUID)"},"description":{"oneOf":[{"type":"string","description":"Optional description or rationale"},{"type":"null","description":"Optional description or rationale"}],"description":"Optional description or rationale"},"created_at":{"type":"string","description":"Audit timestamp"},"admin_id":{"type":"string","description":"Admin account ID (UUID) who performed the operation"}},"required":["id","operation","target_type","target_id","created_at","admin_id"],"description":"Summary representation for an admin audit log entry."},"IShoppingMallAiBackendAdminAuditLog":{"type":"object","properties":{"id":{"type":"string"},"admin_id":{"type":"string"},"operation":{"type":"string"},"target_id":{"type":"string"},"target_type":{"type":"string"},"description":{"oneOf":[{"type":"string"},{"type":"null"}]},"created_at":{"type":"string"}},"required":["id","admin_id","operation","target_id","target_type","created_at"],"description":"Full representation of an admin audit log record, includes all columns except relations."},"IShoppingMallAiBackendRoleEscalation.IRequest":{"type":"object","properties":{"user_id":{"type":"string","description":"User (UUID) filter: escalatee"},"admin_id":{"type":"string","description":"Admin (UUID) filter: escalator"},"from_role":{"type":"string","description":"From role filter (e.g., 'customer', 'seller', 'admin')"},"to_role":{"type":"string","description":"To role filter (e.g., 'customer', 'seller', 'admin')"},"escalation_type":{"type":"string","description":"Type of escalation filter (e.g., 'promotion', 'demotion')"},"created_from":{"type":"string","description":"Date/time filters"},"created_to":{"type":"string","description":"Date/time filters"},"page":{"type":"number","description":"Pagination parameters"},"page_size":{"type":"number","description":"Pagination parameters"},"sort":{"type":"string","description":"Sorting preference"}},"description":"Role escalation listing/search filter request type.","required":[]},"IPageIShoppingMallAiBackendRoleEscalation.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging info"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendRoleEscalation.ISummary"},"description":"List of role escalation event summaries"}},"required":["pagination","data"],"description":"Paginated summary page of role escalation events for the shopping mall platform."},"IShoppingMallAiBackendRoleEscalation.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Escalation event ID (UUID)"},"user_id":{"type":"string","description":"User UUID (escalatee)"},"admin_id":{"oneOf":[{"type":"string","description":"Admin UUID (escalator)"},{"type":"null","description":"Admin UUID (escalator)"}],"description":"Admin UUID (escalator)"},"from_role":{"type":"string","description":"Role before escalation"},"to_role":{"type":"string","description":"Role after escalation"},"escalation_type":{"type":"string","description":"Type of escalation (promotion, demotion, etc.)"},"reason":{"oneOf":[{"type":"string","description":"Optional rationale for change"},{"type":"null","description":"Optional rationale for change"}],"description":"Optional rationale for change"},"created_at":{"type":"string","description":"Escalation event creation timestamp"}},"required":["id","user_id","from_role","to_role","escalation_type","created_at"],"description":"Summary-type representation of a role escalation event."},"IShoppingMallAiBackendRoleEscalation":{"type":"object","properties":{"id":{"type":"string"},"user_id":{"type":"string"},"admin_id":{"oneOf":[{"type":"string"},{"type":"null"}]},"from_role":{"type":"string"},"to_role":{"type":"string"},"escalation_type":{"type":"string"},"reason":{"oneOf":[{"type":"string"},{"type":"null"}]},"created_at":{"type":"string"}},"required":["id","user_id","from_role","to_role","escalation_type","created_at"],"description":"Full representation of role escalation/snapshot event. Includes all business-critical and audit fields. (Does not include lookups to user/admin details.)"},"IPageIShoppingMallAiBackendProduct.ISummary":{"type":"object","description":"Paginated list of product summary responses. Used for catalog search/crawling/listing views. 'pagination' provides basic paging information, and 'data' contains a list of ISummary records for each matching product.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information about the result set. Includes fields like current page, page size, total records."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProduct.ISummary"},"description":"List of product summary records returned for this page."}},"required":["pagination","data"]},"IShoppingMallAiBackendProductOptions.IRequest":{"type":"object","description":"Request structure for searching/filtering product options (option groups) for a product. Filters by option name, required-flag, and supports pagination and sorting.","properties":{"option_name":{"type":"string","description":"Filter source for option group label (e.g., 색상, 사이즈). Partial match enabled."},"required":{"type":"boolean","description":"Whether option group is required (true) or optional (false)."},"order":{"type":"integer","description":"Preferred sort order for results. Lower numbers appear first."},"page":{"type":"integer","description":"Page number for pagination. Starts at 1."},"limit":{"type":"integer","description":"Maximum number of results per page. Defaults to 20/50/etc."}},"required":[]},"IPageIShoppingMallAiBackendProductOptions":{"type":"object","description":"Paginated response containing all product option group records returned by the current search request.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductOptions"}}},"required":["pagination","data"]},"IShoppingMallAiBackendProductOptions":{"type":"object","description":"Product option group for a specific product. Each group is a selectable aspect (e.g., 색상, 사이즈) and drives the available product variants. All fields are audit-tracked per the schema. 'required' indicates buyers must choose a value. 'sort_order' is used to display options in proper order. Option groups are unique per product context.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the option group record. Required for update/delete."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"ID (UUID) of the product this option group belongs to."},"option_name":{"type":"string","description":"Label for this option group (e.g., 색상, 사이즈)."},"required":{"type":"boolean","description":"True if selection required for ordering, false if optional."},"sort_order":{"type":"integer","description":"Order among option groups (lower = first). Enables UI ordering and is unique within product."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when option group was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when option group last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Logical deletion timestamp. Null if active."},{"type":"null","format":"date-time","description":"Logical deletion timestamp. Null if active."}],"description":"Logical deletion timestamp. Null if active."}},"required":["id","shopping_mall_ai_backend_products_id","option_name","required","sort_order","created_at","updated_at"]},"IShoppingMallAiBackendProductOptions.ICreate":{"type":"object","description":"Request structure for creating a new product option group (e.g., 색상) for a given product.","properties":{"option_name":{"type":"string","description":"Label for new option group (required, unique within product, e.g., 색상, 사이즈, 추가구성)."},"required":{"type":"boolean","description":"Flag whether selection is required for buyer to order (true=required, false=optional)."},"sort_order":{"type":"integer","description":"Display order for the new option group. Lower value is shown first in UI."}},"required":["option_name","required","sort_order"]},"IShoppingMallAiBackendProductOptions.IUpdate":{"type":"object","description":"Request structure for updating an existing product option group for a product. All fields are optional and only changed if provided.","properties":{"option_name":{"type":"string","description":"Updated label for the option group (must remain unique within product)."},"required":{"type":"boolean","description":"Flag to set selection requirement (true=required, false=optional)."},"sort_order":{"type":"integer","description":"Updated display order value for option group."}},"required":[]},"IShoppingMallAiBackendProductOptionUnits.IRequest":{"type":"object","description":"Request for searching/filering product option units (specific values in an option group, e.g., 빨강, XL). Includes filtering by value/code and supports pagination.","properties":{"unit_value":{"type":"string","description":"String search for option unit value/label (e.g. 빨강, XL)."},"unit_code":{"type":"string","description":"Unique code for this unit within the option group (may match external system)."},"sort_order":{"type":"integer","description":"If set, filter results by display order value."},"page":{"type":"integer","description":"Page number for pagination (1-based)."},"limit":{"type":"integer","description":"Page size (max records per page)."}},"required":[]},"IPageIShoppingMallAiBackendProductOptionUnits":{"type":"object","description":"Paged response containing all option unit records matching a given search/pagination request. Supports audit evidence, export, or admin inspection.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductOptionUnits"}}},"required":["pagination","data"]},"IShoppingMallAiBackendProductOptionUnits":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the product option unit. Primary key as per shopping_mall_ai_backend_product_option_units table."},"shopping_mall_ai_backend_product_options_id":{"type":"string","format":"uuid","description":"Foreign key referencing the belonging product option group."},"unit_value":{"type":"string","description":"Display value for this selectable unit (e.g., Red, XL)."},"unit_code":{"type":"string","description":"Machine-readable code for business logic, analytics. Must be unique per option group."},"sort_order":{"type":"integer","description":"Display order for selectable units within the option group."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp or null if not deleted."},{"type":"null","format":"date-time","description":"Soft deletion timestamp or null if not deleted."}],"description":"Soft deletion timestamp or null if not deleted."}},"required":["id","shopping_mall_ai_backend_product_options_id","unit_value","unit_code","sort_order","created_at","updated_at"],"description":"A selectable unit (e.g., Red, XL) in a product option group. Represents a unique value for combination and variant SKU purposes. Full audit and compliance fields included."},"IShoppingMallAiBackendProductOptionUnit.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_product_options_id":{"type":"string","format":"uuid","description":"ID of the parent product option group."},"unit_value":{"type":"string","description":"Display value for the unit (required)."},"unit_code":{"type":"string","description":"Unique code for the unit within the group (required)."},"sort_order":{"type":"integer","description":"Ordering index of the unit in the group (required)."}},"required":["shopping_mall_ai_backend_product_options_id","unit_value","unit_code","sort_order"],"description":"Payload for creating a new selectable unit in a product's option group. Must supply all core fields for variant definition and audit."},"IShoppingMallAiBackendProductOptionUnit":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductOptionUnits","description":"Alias for the full product option unit entity as defined in the main table."},"IShoppingMallAiBackendProductOptionUnit.IUpdate":{"type":"object","properties":{"unit_value":{"type":"string","description":"Updated display value (optional)."},"unit_code":{"type":"string","description":"Updated unit code (optional; must remain unique if changed)."},"sort_order":{"type":"integer","description":"Updated sort order within the option group (optional)."}},"description":"Update request for fields of a product option unit. Only one or more fields may be included.","required":[]},"IShoppingMallAiBackendProductBundle.IRequest":{"type":"object","properties":{"productId":{"type":"string","format":"uuid","description":"Parent product ID to filter bundles (required)."},"search":{"type":"string","description":"Optional free search parameter (bundle name, SKU, etc)."},"page":{"type":"integer","description":"Page number for results."},"limit":{"type":"integer","description":"Records per page (default: 20 or similar)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order direction for results (by created_at or sort params)."},{"const":"desc","description":"Sort order direction for results (by created_at or sort params)."}],"description":"Sort order direction for results (by created_at or sort params)."}},"required":["productId"],"description":"Request object for searching/filtering product bundles (variants) for a specific product, with support for pagination and search."},"IPageIShoppingMallAiBackendProductBundle.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paginated results metadata."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductBundle.ISummary"},"description":"Array of summary product bundle (variant) records."}},"required":["pagination","data"],"description":"Paginated result for searched bundles (SKU variants) of a product."},"IShoppingMallAiBackendProductBundle.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Bundle unique ID (SKU variant)."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"Parent product ID."},"bundle_name":{"type":"string","description":"Display name for the bundle."},"sku_code":{"type":"string","description":"Unique SKU code for the bundle (must be unique globally)."},"price":{"type":"number","description":"Bundle price (may override product base price)."},"inventory_policy":{"type":"string","description":"Inventory management policy for bundle."},"is_active":{"type":"boolean","description":"Whether this bundle is available for sale."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp or null if not deleted."},{"type":"null","format":"date-time","description":"Soft delete timestamp or null if not deleted."}],"description":"Soft delete timestamp or null if not deleted."}},"required":["id","shopping_mall_ai_backend_products_id","bundle_name","sku_code","price","inventory_policy","is_active","created_at","updated_at"],"description":"Summary of a product bundle (SKU variant) used in lists or pagination. Contains essential business and audit fields."},"IShoppingMallAiBackendProductBundle":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Bundle unique ID (required)."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"Parent product ID (required)."},"bundle_name":{"type":"string","description":"Display name for the bundle (required)."},"sku_code":{"type":"string","description":"Unique SKU code (required)."},"price":{"type":"number","description":"Bundle price."},"inventory_policy":{"type":"string","description":"Inventory management policy."},"is_active":{"type":"boolean","description":"Whether the bundle is for sale/available."},"created_at":{"type":"string","format":"date-time","description":"Creation datetime."},"updated_at":{"type":"string","format":"date-time","description":"Modification timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp or null."},{"type":"null","format":"date-time","description":"Soft delete timestamp or null."}],"description":"Soft delete timestamp or null."}},"required":["id","shopping_mall_ai_backend_products_id","bundle_name","sku_code","price","inventory_policy","is_active","created_at","updated_at"],"description":"Detail object for a single product bundle (SKU variant), with all relevant fields for business, inventory, and compliance."},"IShoppingMallAiBackendProductBundle.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"Product ID to which this bundle/variant belongs."},"bundle_name":{"type":"string","description":"Name for the bundle (e.g., 'Red XL')."},"sku_code":{"type":"string","description":"Unique code/SKU for this bundle. Must be globally unique."},"price":{"type":"number","description":"Variant price for this bundle (required)."},"inventory_policy":{"type":"string","description":"How inventory is handled (track, ignore, inherit, etc)."},"is_active":{"type":"boolean","description":"Whether the bundle is active upon creation."}},"required":["shopping_mall_ai_backend_products_id","bundle_name","sku_code","price","inventory_policy","is_active"],"description":"Creation DTO for a new product bundle/SKU variant, including inventory policy and status (required)."},"IShoppingMallAiBackendProductBundle.IUpdate":{"type":"object","properties":{"bundle_name":{"type":"string","description":"Display name for this bundle/variant combination."},"sku_code":{"type":"string","description":"Unique code representing this bundle/SKU."},"price":{"type":"number","description":"Price for this bundle (may override product base price)."},"inventory_policy":{"type":"string","description":"Inventory control logic for this bundle (e.g., track, ignore)."},"is_active":{"type":"boolean","description":"Whether this bundle is available for sale."}},"description":"Update input for a product bundle (SKU variant) entity. Allows updating bundle name, SKU code, price, inventory policy, and activation status. Fields are all optional and can be supplied individually for partial updates as per PATCH or bulk update business requirements.","required":[]},"IShoppingMallAiBackendProductCategory.IRequest":{"type":"object","properties":{"category_name":{"type":"string","description":"Filter for category display name (partial match supported)"},"category_code":{"type":"string","description":"Filter by unique business code for the category."},"parent_id":{"oneOf":[{"type":"string","description":"Optional: restrict to subcategories of a particular parent (null for top level)"},{"type":"null","description":"Optional: restrict to subcategories of a particular parent (null for top level)"}],"description":"Optional: restrict to subcategories of a particular parent (null for top level)"},"is_active":{"type":"boolean","description":"Whether to list only categories that are active for navigation/business use."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (starting from 1)."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Records per page (default: 100, max: 1000)."},"sort":{"type":"string","description":"Field name for sort ordering (e.g., 'sort_order', 'category_name')."},"order":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."}},"description":"Search/filter and pagination request for product categories.","required":[]},"IPageIShoppingMallAiBackendProductCategory.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for the page of results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductCategory"},"description":"Array of product category objects matching the search criteria for this page."}},"required":["pagination","data"],"description":"Paginated summary set of product category records."},"IShoppingMallAiBackendProductCategory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this category."},"category_name":{"type":"string","description":"Display name for the category (shown in navigation/search)."},"category_code":{"type":"string","description":"Business code/identifier for category lookup and integration."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of parent category for tree navigation (null if root)."},{"type":"null","format":"uuid","description":"UUID of parent category for tree navigation (null if root)."}],"description":"UUID of parent category for tree navigation (null if root)."},"category_depth":{"type":"integer","description":"Depth of the category in the tree (0 for root)."},"is_active":{"type":"boolean","description":"Whether this category is currently active for business navigation/filter."},"sort_order":{"type":"integer","description":"Order for display/navigation among sibling categories."},"created_at":{"type":"string","format":"date-time","description":"Category creation timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Category last updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. If null, category is active."},{"type":"null","format":"date-time","description":"Soft deletion timestamp. If null, category is active."}],"description":"Soft deletion timestamp. If null, category is active."}},"required":["id","category_name","category_code","category_depth","is_active","sort_order","created_at","updated_at"],"description":"Represents a product category (business navigation), supporting hierarchy, display, and catalogue analytics. Follows Prisma schema for fields/types."},"IShoppingMallAiBackendProductCategory.ICreate":{"type":"object","properties":{"category_name":{"type":"string","description":"Display name to show for this category."},"category_code":{"type":"string","description":"Unique code for the new category for business logic and reference."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent category UUID, or null for top level."},{"type":"null","format":"uuid","description":"Parent category UUID, or null for top level."}],"description":"Parent category UUID, or null for top level."},"sort_order":{"type":"integer","description":"Order among sibling categories (optional, default at end)."},"is_active":{"type":"boolean","description":"Whether the new category is immediately active (optional, default true)."},"category_depth":{"type":"integer","description":"Optional: depth in hierarchy if calculated externally."}},"required":["category_name","category_code"],"description":"Input schema for creating a new product category."},"IShoppingMallAiBackendProductCategory.IUpdate":{"type":"object","properties":{"category_name":{"type":"string","description":"(Optional) New display name for the category."},"category_code":{"type":"string","description":"(Optional) New unique business code for the category."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Change parent category (null for root)."},{"type":"null","format":"uuid","description":"(Optional) Change parent category (null for root)."}],"description":"(Optional) Change parent category (null for root)."},"sort_order":{"type":"integer","description":"(Optional) Change display/sibling order."},"is_active":{"type":"boolean","description":"(Optional) Activate or deactivate the category."},"category_depth":{"type":"integer","description":"(Optional) Adjust the explicit depth value for the tree, if needed."}},"description":"Update input for a product category; all fields optional, used for PATCH.","required":[]},"IShoppingMallAiBackendProductCategoryMapping.IRequest":{"type":"object","properties":{"shopping_mall_ai_backend_products_id":{"type":"string","description":"Filter by product UUID linked to this mapping."},"shopping_mall_ai_backend_product_categories_id":{"type":"string","description":"Filter by category UUID for category mapping search."},"page":{"type":"integer","minimum":1,"description":"Page number (1-based)."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Records per page (default: 100, max: 1000)."},"sort":{"type":"string","description":"Optional field name for sorting (default: assigned_at)."},"order":{"oneOf":[{"const":"asc","description":"Sort order direction."},{"const":"desc","description":"Sort order direction."}],"description":"Sort order direction."}},"description":"Request schema for searching product-to-category mappings.","required":[]},"IPageIShoppingMallAiBackendProductCategoryMapping":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for the mapping result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductCategoryMapping.ISummary"},"description":"Array of product-category mapping summary records for current page."}},"required":["pagination","data"],"description":"Paginated response for product-category mapping search/index. Data field is an array of `IShoppingMallAiBackendProductCategoryMapping.ISummary`."},"IShoppingMallAiBackendProductCategoryMapping":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product-category mapping. Corresponds to the PK in the shopping_mall_ai_backend_product_category_mappings table."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"The unique identifier of the product associated with this mapping. Foreign key referencing shopping_mall_ai_backend_products.id."},"shopping_mall_ai_backend_product_categories_id":{"type":"string","format":"uuid","description":"The unique identifier of the product category associated with this mapping. Foreign key referencing shopping_mall_ai_backend_product_categories.id."},"assigned_at":{"type":"string","format":"date-time","description":"The ISO 8601 timestamp when the product was assigned to the category. Used for historical evidence and compliance."}},"required":["id","shopping_mall_ai_backend_products_id","shopping_mall_ai_backend_product_categories_id","assigned_at"],"description":"A mapping entity associating a product with a category. Represents a link between a product and a business category, enabling navigation, filtering, and analytics. Used for catalog management in the shopping mall backend. Each mapping ensures a product can belong to multiple categories as defined in the business logic. See Prisma model shopping_mall_ai_backend_product_category_mappings."},"IShoppingMallAiBackendProductCategoryMapping.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"The unique identifier of the product to assign to a category. Must match an existing product id."},"shopping_mall_ai_backend_product_categories_id":{"type":"string","format":"uuid","description":"The unique identifier of the category to which the product will be assigned. Must match an existing category id."},"assigned_at":{"type":"string","format":"date-time","description":"The ISO 8601 timestamp for when the mapping is created. Should reflect evidence of when the mapping takes effect; set by business logic at creation."}},"required":["shopping_mall_ai_backend_products_id","shopping_mall_ai_backend_product_categories_id","assigned_at"],"description":"Request payload for creating a new product-category mapping. Used in POST operations to establish a business linkage between a product and a category. All fields must be supplied. Field names match the Prisma schema."},"IShoppingMallAiBackendProductCategoryMapping.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"Optional updated product id for this mapping. If present, reassigns the mapping to a new product."},"shopping_mall_ai_backend_product_categories_id":{"type":"string","format":"uuid","description":"Optional updated category id for this mapping. If present, reassigns the mapping to a new category."},"assigned_at":{"type":"string","format":"date-time","description":"Optional updated assignment datetime for evidence update or audit correction."}},"required":[],"description":"Payload for updating an existing product-category mapping. Allows changing either the associated product, category, or assignment timestamp. Use only for business logic requiring migration or correction of existing mappings."},"IShoppingMallAiBackendProductFile.IRequest":{"type":"object","properties":{"productId":{"type":"string","format":"uuid","description":"Optional filter specifying the product to which the files are attached. Used for scoping product-level file searches."},"file_type":{"type":"string","description":"Optional filter for the uploaded file's content type (e.g. 'image/jpeg', 'application/pdf')."},"display_order":{"type":"integer","description":"Optional filter for file's display order. Enables UI sort or position-based filtering."},"is_primary":{"type":"boolean","description":"Optional filter for whether the file is the primary image/file for the product."},"page":{"type":"integer","description":"Page number for paginated queries.","minimum":1},"limit":{"type":"integer","description":"Number of items to return per page.","minimum":1},"sort":{"type":"string","description":"Sort criteria expressed as a field or field:direction string (e.g., 'display_order:asc')."}},"required":[],"description":"Search and filter parameters for retrieving product files. Used for advanced queries on files/images attached to products. Accepts pagination and filtering fields."},"IPageIShoppingMallAiBackendProductFile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductFile.ISummary"},"description":"Array of product file summaries on this page."}},"required":["pagination","data"],"description":"Paginated listing of product file resources. The data field is always an array of `IShoppingMallAiBackendProductFile.ISummary` as required by IPage pattern."},"IShoppingMallAiBackendProductFile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product file entity. Maps to the PK in shopping_mall_ai_backend_product_files."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"Unique identifier for the product to which the file is attached. References shopping_mall_ai_backend_products.id."},"file_uri":{"type":"string","description":"Storage URI, CDN link, or path to the file/object in underlying storage (e.g. S3, Blob Storage)."},"file_type":{"type":"string","description":"Content type of the file (e.g. 'image/jpeg', 'application/pdf')."},"display_order":{"type":"integer","description":"Display order for file rendering purposes. Controls order in UI and navigation."},"is_primary":{"type":"boolean","description":"If true, indicates primary/main image/file of the product. Only one per product should be marked primary."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the file attachment was created and stored, in ISO 8601 date-time format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. If present, file is logically deleted but retained for evidence/audit. Null if active."},{"type":"null"}],"description":"Soft deletion timestamp. If present, file is logically deleted but retained for evidence/audit. Null if active."}},"required":["id","shopping_mall_ai_backend_products_id","file_uri","file_type","display_order","is_primary","created_at"],"description":"Represents a file, image, or attachment object associated with a product. Models product media asset metadata for display, content management, and evidence in the AI shopping mall backend. See Prisma schema shopping_mall_ai_backend_product_files."},"IShoppingMallAiBackendProductFile.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"The product id to which this file will be attached."},"file_uri":{"type":"string","description":"Storage URI, CDN link, or upload path for the file/image."},"file_type":{"type":"string","description":"The content-type for the file (e.g. 'image/png', 'application/pdf')."},"display_order":{"type":"integer","description":"Order for the file among all product files, for UI sorting."},"is_primary":{"type":"boolean","description":"Whether the file is the main/primary image or content for this product. Only one should be set true per product."}},"required":["shopping_mall_ai_backend_products_id","file_uri","file_type","display_order","is_primary"],"description":"Payload for creating a new product file/image attachment. Used to register/upload a new media asset. All business-critical fields must be supplied."},"IShoppingMallAiBackendProductFile.IUpdate":{"type":"object","properties":{"file_uri":{"type":"string","description":"New storage URI, CDN path, or upload target for the file if updated."},"file_type":{"type":"string","description":"New content type for the file."},"display_order":{"type":"integer","description":"Updated sort/display order for UI or business analytics."},"is_primary":{"type":"boolean","description":"Updated state for whether this is the main product image/content."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks the file attachment as logically deleted with a timestamp for audit and compliance. Null for active."},{"type":"null"}],"description":"If set, marks the file attachment as logically deleted with a timestamp for audit and compliance. Null for active."}},"required":[],"description":"Payload for updating an existing product file or image attachment. Allows updating metadata fields and handling soft deletion via deleted_at."},"IShoppingMallAiBackendProductCategoryMapping.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product-category mapping."},"shopping_mall_ai_backend_products_id":{"type":"string","format":"uuid","description":"ID of the assigned product."},"shopping_mall_ai_backend_product_categories_id":{"type":"string","format":"uuid","description":"ID of the assigned category."},"assigned_at":{"type":"string","format":"date-time","description":"Datetime the mapping was created."}},"required":["id","shopping_mall_ai_backend_products_id","shopping_mall_ai_backend_product_categories_id","assigned_at"],"description":"Summary of a product-category mapping, suitable for listing/search purposes. Includes only key identifiers and assigned_at for efficiency in admin dashboards."},"IShoppingMallAiBackendProductFile.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the product file."},"file_uri":{"type":"string","description":"Storage URI or CDN path for the file."},"file_type":{"type":"string","description":"Content type for file (image, pdf, etc)."},"is_primary":{"type":"boolean","description":"Whether this file is the main/primary image or file for the product."},"display_order":{"type":"integer","description":"Display order among product's files for UI sorting."}},"required":["id","file_uri","file_type","is_primary","display_order"],"description":"Summary data for product files/images, suitable for fast list/browse display. Does not expose detailed internal fields or soft-deletion markers."},"IShoppingMallAiBackendProductTag":{"type":"object","description":"Represents a product tag within the shopping mall backend. Used for classifying, searching and filtering products for catalog management and recommendation analytics. Closely mirrors the model 'shopping_mall_ai_backend_product_tags' from the schema, supporting tag management, analytics, and AI-powered filtering. It captures all relevant business and evidence fields: ID, name, unique code, creation, update, and optional soft-deletion timestamp. This structure is vital for dynamic product discovery and marketing segmentation workflows.\n\nDerived from: Prisma model 'shopping_mall_ai_backend_product_tags'.","properties":{"id":{"type":"string","description":"Globally unique identifier (UUID) for this product tag. Generated by the system at creation and referenced in all tag associations."},"tag_name":{"type":"string","description":"Display name of the tag. Shown to users in search/filter UIs and used for analytics grouping. Required and must be concise yet descriptive (ex. 'New Arrival', 'Eco-friendly')."},"tag_code":{"type":"string","description":"Business-unique code or key for tag lookup. Used internally for analytics, search, or business logic. Enforced uniqueness at the DB layer and usually never changes after creation (ex. 'eco_friendly')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when this tag was created. Automatically set by the backend upon insertion; required for audit trails and system logs."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when this tag was last updated. Changes whenever any property (other than deleted_at) is modified."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp for logical tag deletion. If set, this tag is considered removed from use, but is retained for compliance, evidence, or audit trail purposes."},{"type":"null","format":"date-time","description":"Soft-delete timestamp for logical tag deletion. If set, this tag is considered removed from use, but is retained for compliance, evidence, or audit trail purposes."}],"description":"Soft-delete timestamp for logical tag deletion. If set, this tag is considered removed from use, but is retained for compliance, evidence, or audit trail purposes."}},"required":["id","tag_name","tag_code","created_at","updated_at"]},"IShoppingMallAiBackendProductTag.IRequest":{"type":"object","description":"Query/search criteria for advanced filtering and pagination over product tags. These parameters are accepted by backoffice product management UIs, tag suggestion interfaces, and AI analytics. Corresponds to search requirements for listing tags with filter/sort/pagination.","properties":{"tag_name":{"oneOf":[{"type":"string","description":"Partial or full match for tag name. Used for searching tags by user intent or substring filtering."},{"type":"null","description":"Partial or full match for tag name. Used for searching tags by user intent or substring filtering."}],"description":"Partial or full match for tag name. Used for searching tags by user intent or substring filtering."},"tag_code":{"oneOf":[{"type":"string","description":"Exact or partial match for tag_code to filter by unique system codes. Used for admin, analytics, and technical search scenarios."},{"type":"null","description":"Exact or partial match for tag_code to filter by unique system codes. Used for admin, analytics, and technical search scenarios."}],"description":"Exact or partial match for tag_code to filter by unique system codes. Used for admin, analytics, and technical search scenarios."},"order_by":{"oneOf":[{"type":"string","description":"Field to order the result set by (ex. 'tag_name', 'updated_at'). Must map to a property of IShoppingMallAiBackendProductTag."},{"type":"null","description":"Field to order the result set by (ex. 'tag_name', 'updated_at'). Must map to a property of IShoppingMallAiBackendProductTag."}],"description":"Field to order the result set by (ex. 'tag_name', 'updated_at'). Must map to a property of IShoppingMallAiBackendProductTag."},"sort":{"oneOf":[{"const":"asc","description":"Sort direction for results. Use 'asc' for ascending or 'desc' for descending."},{"const":"desc","description":"Sort direction for results. Use 'asc' for ascending or 'desc' for descending."},{"type":"null","enum":["asc","desc",null],"description":"Sort direction for results. Use 'asc' for ascending or 'desc' for descending."}],"description":"Sort direction for results. Use 'asc' for ascending or 'desc' for descending."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination, > 0. Used for batch result navigation."},{"type":"null","description":"Page number for pagination, > 0. Used for batch result navigation."}],"description":"Page number for pagination, > 0. Used for batch result navigation."},"limit":{"oneOf":[{"type":"integer","description":"Page size; limits the number of results per page (ex. 20, 50, 100)."},{"type":"null","description":"Page size; limits the number of results per page (ex. 20, 50, 100)."}],"description":"Page size; limits the number of results per page (ex. 20, 50, 100)."},"deleted":{"oneOf":[{"type":"boolean","description":"Whether to include soft-deleted tags in the result set. If null or not specified, only active tags are returned."},{"type":"null","description":"Whether to include soft-deleted tags in the result set. If null or not specified, only active tags are returned."}],"description":"Whether to include soft-deleted tags in the result set. If null or not specified, only active tags are returned."}},"required":[]},"IShoppingMallAiBackendProductTag.ICreate":{"type":"object","description":"Request body for creating a new product tag. Used by product managers, admins, or automated workflows to introduce new classification tags to the catalog for AI, analytics, or search. Must supply a unique tag_code and user-facing tag_name.","properties":{"tag_name":{"type":"string","description":"Display name of the tag to be created. Must be provided and be user-friendly for product search, filter, or recommendation UIs."},"tag_code":{"type":"string","description":"Unique business code for tag. Must be globally unique (enforced by DB). Used for technical search and business analytics; must obey organization naming conventions."}},"required":["tag_name","tag_code"]},"IShoppingMallAiBackendProductTag.IUpdate":{"type":"object","description":"Update body for modifying a product tag. Used for correcting tag names, changing codes (rare), or managing tag lifecycles. Only updatable fields (name, code) are included. Only supply the fields that should be updated (PATCH-style).","properties":{"tag_name":{"type":"string","description":"Optional: updated display name for the tag (if renamed)."},"tag_code":{"type":"string","description":"Optional: updated business code for the tag. Should rarely be changed except for error correction or reclassification."}},"required":[]},"IPageIShoppingMallAiBackendProductTag":{"type":"object","description":"Paginated result set for product tag queries, following platform-wide pagination schema requirements. Used for API responses across admin/search UIs and AI-driven tag dashboards.\n\nFollows the IPage<T> convention, with 'pagination' and 'data' fields. Data is an array of IShoppingMallAiBackendProductTag records.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page metadata: current page, limit per page, total records, total pages. Required for all paginated responses per documentation."},"data":{"type":"array","description":"Array of product tag entity objects matching the search/filter criteria for this page. Each element is a fully-specified tag entity.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductTag"}}},"required":["pagination","data"]},"IShoppingMallAiBackendProductInventory":{"type":"object","description":"Represents an inventory entry associated with a specific product. Used for stock management, fulfillment, business analytics, and AI-driven inventory forecasting. Closely aligned with the `shopping_mall_ai_backend_product_inventories` table in the schema.\n\nContains supply, reserved, status, and audit metadata for inventory tracking, reconciliation, and compliance workflows.","properties":{"id":{"type":"string","description":"Unique identifier (UUID) for this inventory record."},"shopping_mall_ai_backend_products_id":{"type":"string","description":"Foreign key for referenced product. Indicates which catalog product this inventory record manages (UUID)."},"available_quantity":{"type":"integer","description":"The number of available units in this inventory record. Represents total stock minus committed orders. Always a non-negative integer."},"reserved_quantity":{"type":"integer","description":"Count of units that have been reserved for pending orders, returns, or incidents. Used to block double selling and implement accurate inventory logic."},"last_update_at":{"type":"string","format":"date-time","description":"Timestamp when this inventory record was last modified, adjusted, or otherwise changed. Important for audit and stock reconciliation."},"inventory_status":{"type":"string","description":"Status string indicating current inventory disposition. May be business-enumerated status values (e.g., 'in_stock', 'out_of_stock', 'reserved', 'discontinued')."}},"required":["id","shopping_mall_ai_backend_products_id","available_quantity","reserved_quantity","last_update_at","inventory_status"]},"IShoppingMallAiBackendProductInventory.IRequest":{"type":"object","description":"Request query for paginating/filtering product inventory records. Supports fulfillment checks, stock reporting, and business-analytics filtering by inventory status or other business attributes.","properties":{"inventory_status":{"oneOf":[{"type":"string","description":"Optional filter to return only inventories matching a status (e.g., 'in_stock', 'reserved')."},{"type":"null","description":"Optional filter to return only inventories matching a status (e.g., 'in_stock', 'reserved')."}],"description":"Optional filter to return only inventories matching a status (e.g., 'in_stock', 'reserved')."},"page":{"oneOf":[{"type":"integer","description":"Page number for paginated results."},{"type":"null","description":"Page number for paginated results."}],"description":"Page number for paginated results."},"limit":{"oneOf":[{"type":"integer","description":"Maximum page size for result set (often 20, 50, or 100)."},{"type":"null","description":"Maximum page size for result set (often 20, 50, or 100)."}],"description":"Maximum page size for result set (often 20, 50, or 100)."},"order_by":{"oneOf":[{"type":"string","description":"Optional field to determine the order (e.g., 'last_update_at', 'available_quantity')."},{"type":"null","description":"Optional field to determine the order (e.g., 'last_update_at', 'available_quantity')."}],"description":"Optional field to determine the order (e.g., 'last_update_at', 'available_quantity')."},"sort":{"oneOf":[{"const":"asc","description":"Direction for sorting results (ascending or descending)."},{"const":"desc","description":"Direction for sorting results (ascending or descending)."},{"type":"null","enum":["asc","desc",null],"description":"Direction for sorting results (ascending or descending)."}],"description":"Direction for sorting results (ascending or descending)."}},"required":[]},"IPageIShoppingMallAiBackendProductInventory":{"type":"object","description":"Standard IPage<T> paginated result wrapper for product inventory records. Used in all paginated inventory result API responses for consistency with platform-wide response contracts. Contains page metadata and an array of inventory entries for the result set.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging metadata for current request (current, limit, total records, total pages)."},"data":{"type":"array","description":"Page of inventory records for the search. Each array element is a IShoppingMallAiBackendProductInventory.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendProductInventory"}}},"required":["pagination","data"]},"IShoppingMallAiBackendProductInventory.ICreate":{"type":"object","properties":{"available_quantity":{"type":"integer","description":"Number of items available for sale in this inventory record. Must be non-negative."},"reserved_quantity":{"type":"integer","description":"Quantity currently reserved (not available for new orders). Must be non-negative."},"last_update_at":{"type":"string","format":"date-time","description":"DateTime when inventory was last updated (ISO 8601, required)."},"inventory_status":{"type":"string","description":"Current inventory status (e.g., in_stock, out_of_stock, reserved, discontinued). Must match allowed status values per business policy."}},"required":["available_quantity","reserved_quantity","last_update_at","inventory_status"],"description":"Request payload for creating a product inventory record. Represents all business fields from the Prisma model for available and reserved quantities, status, and timestamp."},"IShoppingMallAiBackendProductInventory.IUpdate":{"type":"object","properties":{"available_quantity":{"type":"integer","description":"Number of items available for sale in this inventory record. Must be non-negative."},"reserved_quantity":{"type":"integer","description":"Quantity currently reserved (not available for new orders). Must be non-negative."},"last_update_at":{"type":"string","format":"date-time","description":"DateTime when inventory was last updated (ISO 8601)."},"inventory_status":{"type":"string","description":"Current inventory status (e.g., in_stock, out_of_stock, reserved, discontinued). Must match allowed status values per business policy."}},"required":[],"description":"Request payload for updating a product inventory record. All fields optional for patch/update. Represents all mutable business fields for the inventory entity as per the Prisma schema."},"IShoppingMallAiBackendCart.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Results page number for pagination. Optional."},{"type":"null","description":"Results page number for pagination. Optional."}],"description":"Results page number for pagination. Optional."},"limit":{"oneOf":[{"type":"integer","description":"Max results per page for pagination. Optional."},{"type":"null","description":"Max results per page for pagination. Optional."}],"description":"Max results per page for pagination. Optional."},"status":{"type":"string","description":"Optional filter for cart status (active, submitted, merged, cleared, abandoned, etc)."},"customer_id":{"type":"string","format":"uuid","description":"Filter carts for a specific customer. UUID."},"session_id":{"type":"string","format":"uuid","description":"Filter carts by session. UUID."},"note_search":{"type":"string","description":"Filter carts by text search on note field."},"created_at_min":{"type":"string","format":"date-time","description":"Filter for carts created after this time."},"created_at_max":{"type":"string","format":"date-time","description":"Filter for carts created before this time."},"sort_field":{"type":"string","description":"Field to sort carts by (created_at, updated_at, status, etc)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction. One of 'asc', 'desc'."},{"const":"desc","description":"Sort direction. One of 'asc', 'desc'."}],"description":"Sort direction. One of 'asc', 'desc'."}},"required":[],"description":"Search, filter, and pagination options for shopping cart index/search APIs. Used by customers, sellers, or admins to locate active or historical cart records."},"IPageIShoppingMallAiBackendCart.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the current page of results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCart.ISummary"},"description":"A page of summarized shopping cart entries, as defined by IShoppingMallAiBackendCart.ISummary."}},"required":["pagination","data"],"description":"A paginated collection of customer shopping cart summaries for UI paging and backoffice listings following the standard IPage structure."},"IShoppingMallAiBackendCart":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this cart."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the customer for member carts, or null for guest carts."},{"type":"null","format":"uuid","description":"UUID of the customer for member carts, or null for guest carts."}],"description":"UUID of the customer for member carts, or null for guest carts."},"shopping_mall_ai_backend_customer_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the session this cart is linked to. Null if cart is persistent."},{"type":"null","format":"uuid","description":"UUID of the session this cart is linked to. Null if cart is persistent."}],"description":"UUID of the session this cart is linked to. Null if cart is persistent."},"cart_token":{"type":"string","description":"Opaque token for cart re-linking (guest or merged cart context)."},"status":{"type":"string","description":"Cart status code (active/submitted/merged/etc)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Expiration timestamp for the cart; determines auto-clear/abandon/self-destruct. May be null."},{"type":"null","format":"date-time","description":"Expiration timestamp for the cart; determines auto-clear/abandon/self-destruct. May be null."}],"description":"Expiration timestamp for the cart; determines auto-clear/abandon/self-destruct. May be null."},"last_merged_at":{"oneOf":[{"type":"string","format":"date-time","description":"When merged with another cart, this is the merge timestamp. Nullable."},{"type":"null","format":"date-time","description":"When merged with another cart, this is the merge timestamp. Nullable."}],"description":"When merged with another cart, this is the merge timestamp. Nullable."},"note":{"oneOf":[{"type":"string","description":"Business or user note attached to the cart, for analytics/evidence. Nullable."},{"type":"null","description":"Business or user note attached to the cart, for analytics/evidence. Nullable."}],"description":"Business or user note attached to the cart, for analytics/evidence. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of logical deletion if the cart is marked deleted. Nullable."},{"type":"null","format":"date-time","description":"Timestamp of logical deletion if the cart is marked deleted. Nullable."}],"description":"Timestamp of logical deletion if the cart is marked deleted. Nullable."}},"required":["id","shopping_mall_ai_backend_customer_id","shopping_mall_ai_backend_customer_session_id","cart_token","status","expires_at","last_merged_at","note","created_at","updated_at","deleted_at"],"description":"Cart metadata record with key business fields and all needed data for business logic and evidence preservation."},"IShoppingMallAiBackendCart.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) UUID of the customer if cart is member's, or null for guest."},{"type":"null","format":"uuid","description":"(Optional) UUID of the customer if cart is member's, or null for guest."}],"description":"(Optional) UUID of the customer if cart is member's, or null for guest."},"shopping_mall_ai_backend_customer_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) UUID of the session if linked. Nullable."},{"type":"null","format":"uuid","description":"(Optional) UUID of the session if linked. Nullable."}],"description":"(Optional) UUID of the session if linked. Nullable."},"cart_token":{"type":"string","description":"Opaque token for linking (required, must be unique for guest flows)."},"status":{"type":"string","description":"Status to initialize the cart (active/submitted etc)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Set when the cart will expire. Null if not specified."},{"type":"null","format":"date-time","description":"(Optional) Set when the cart will expire. Null if not specified."}],"description":"(Optional) Set when the cart will expire. Null if not specified."},"last_merged_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Last merge event, nullable."},{"type":"null","format":"date-time","description":"(Optional) Last merge event, nullable."}],"description":"(Optional) Last merge event, nullable."},"note":{"oneOf":[{"type":"string","description":"(Optional) User or business note for this cart."},{"type":"null","description":"(Optional) User or business note for this cart."}],"description":"(Optional) User or business note for this cart."}},"required":["cart_token","status"],"description":"Request body for creating a new cart instance with user/session associations, status, and business metadata."},"IShoppingMallAiBackendCart.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update the customer reference for this cart (nullable to dissociate for guest flows)."},{"type":"null","format":"uuid","description":"Update the customer reference for this cart (nullable to dissociate for guest flows)."}],"description":"Update the customer reference for this cart (nullable to dissociate for guest flows)."},"shopping_mall_ai_backend_customer_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update the session reference for this cart. Nullable."},{"type":"null","format":"uuid","description":"Update the session reference for this cart. Nullable."}],"description":"Update the session reference for this cart. Nullable."},"cart_token":{"type":"string","description":"Replace the cart token (rarely used; for guest merge/transfer cases)."},"status":{"type":"string","description":"Update status of the cart (business logic: submitted/abandoned etc)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Update cart's expiration timestamp. Null disables auto-clear."},{"type":"null","format":"date-time","description":"Update cart's expiration timestamp. Null disables auto-clear."}],"description":"Update cart's expiration timestamp. Null disables auto-clear."},"last_merged_at":{"oneOf":[{"type":"string","format":"date-time","description":"Update merge timestamp. Null for clearout."},{"type":"null","format":"date-time","description":"Update merge timestamp. Null for clearout."}],"description":"Update merge timestamp. Null for clearout."},"note":{"oneOf":[{"type":"string","description":"Update note for this cart."},{"type":"null","description":"Update note for this cart."}],"description":"Update note for this cart."}},"required":[],"description":"Request body for updating a cart instance. Fields are optional and for partial update use. Allows business logic operations for session binding, status, and metadata in shopping mall cart flows."},"IShoppingMallAiBackendCartItem.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination."},{"type":"null","description":"Page number for pagination."}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Max items per page."},{"type":"null","description":"Max items per page."}],"description":"Max items per page."},"quantity_min":{"type":"integer","description":"Filter for cart items with quantity at least this value."},"quantity_max":{"type":"integer","description":"Filter for cart items with quantity at most this value."},"bundle_code":{"type":"string","description":"Filter for specific bundle code in cart items."},"note_search":{"type":"string","description":"Search on note field."},"created_at_min":{"type":"string","format":"date-time","description":"Earliest creation date for filtering."},"created_at_max":{"type":"string","format":"date-time","description":"Latest creation date for filtering."},"sort_field":{"type":"string","description":"Key field to sort by (e.g. created_at, quantity)."},"sort_order":{"oneOf":[{"const":"asc","description":"Direction of sorting: 'asc' or 'desc'."},{"const":"desc","description":"Direction of sorting: 'asc' or 'desc'."}],"description":"Direction of sorting: 'asc' or 'desc'."}},"required":[],"description":"Request payload supporting pagination, search, and filter for cart items listing APIs."},"IShoppingMallAiBackendCart.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique UUID primary key of the cart."},"cart_token":{"type":"string","description":"Opaque unique cart identifier for re-linking across devices/sessions."},"status":{"type":"string","description":"Current cart status."},"created_at":{"type":"string","format":"date-time","description":"Cart creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Cart last update timestamp."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the customer who owns the cart (nullable: guest/anonymous)."},{"type":"null","format":"uuid","description":"UUID of the customer who owns the cart (nullable: guest/anonymous)."}],"description":"UUID of the customer who owns the cart (nullable: guest/anonymous)."},"note":{"oneOf":[{"type":"string","description":"User or business note attached to the cart, as of summary."},{"type":"null","description":"User or business note attached to the cart, as of summary."}],"description":"User or business note attached to the cart, as of summary."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the cart expires and is purged. Null if not set."},{"type":"null","format":"date-time","description":"When the cart expires and is purged. Null if not set."}],"description":"When the cart expires and is purged. Null if not set."}},"required":["id","cart_token","status","created_at","updated_at"],"description":"Essential summary fields for cart listings, suitable for paging display in UI or search flows."},"IPageIShoppingMallAiBackendCartItem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination details per standard API pagination schema for list endpoints. Contains page number, limit, record count, pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCartItem"},"description":"A list of cart item records for the current page as defined by pagination."}},"required":["pagination","data"],"description":"Paginated list of shopping mall AI backend cart items, supporting pagination for UI list views or reporting."},"IShoppingMallAiBackendCartItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the cart item. Primary key."},"shopping_mall_ai_backend_cart_id":{"type":"string","format":"uuid","description":"ID of the cart (shopping_mall_ai_backend_carts) this item belongs to."},"shopping_mall_ai_backend_product_snapshot_id":{"type":"string","format":"uuid","description":"References the product snapshot at the time item was added to cart. Ensures evidence for order/inventory."},"quantity":{"type":"integer","minimum":1,"description":"Number of units of the product being added to cart. Must be >= 1."},"option_code":{"type":"string","description":"Aggregate code for the option/variant selection of the product for this cart item."},"bundle_code":{"oneOf":[{"type":"string","description":"Selected product bundle, if any. Null if not used."},{"type":"null","description":"Selected product bundle, if any. Null if not used."}],"description":"Selected product bundle, if any. Null if not used."},"note":{"oneOf":[{"type":"string","description":"Customer's note for this cart item, e.g., gift message. Optional."},{"type":"null","description":"Customer's note for this cart item, e.g., gift message. Optional."}],"description":"Customer's note for this cart item, e.g., gift message. Optional."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the cart item was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the cart item was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when the cart item was logically deleted. Null if not deleted."},{"type":"null","format":"date-time","description":"Timestamp when the cart item was logically deleted. Null if not deleted."}],"description":"Timestamp when the cart item was logically deleted. Null if not deleted."}},"required":["id","shopping_mall_ai_backend_cart_id","shopping_mall_ai_backend_product_snapshot_id","quantity","option_code","created_at","updated_at"],"description":"A single cart item entity in the shopping mall backend system. Captures evidence for each addition to the cart with full auditability."},"IShoppingMallAiBackendCartItem.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_cart_id":{"type":"string","format":"uuid","description":"The cart ID to which this item is being added."},"shopping_mall_ai_backend_product_snapshot_id":{"type":"string","format":"uuid","description":"References the product snapshot at the moment of cart item creation. Ensures item matches product at the time."},"quantity":{"type":"integer","minimum":1,"description":"Amount of product being added. Must be at least 1."},"option_code":{"type":"string","description":"Aggregate option/variant code for item selection."},"bundle_code":{"oneOf":[{"type":"string","description":"Bundle code if a bundle is selected, null otherwise."},{"type":"null","description":"Bundle code if a bundle is selected, null otherwise."}],"description":"Bundle code if a bundle is selected, null otherwise."},"note":{"oneOf":[{"type":"string","description":"Optional note for this cart item, e.g., customer instructions."},{"type":"null","description":"Optional note for this cart item, e.g., customer instructions."}],"description":"Optional note for this cart item, e.g., customer instructions."}},"required":["shopping_mall_ai_backend_cart_id","shopping_mall_ai_backend_product_snapshot_id","quantity","option_code"],"description":"Request body for adding a cart item to a user's cart in the system."},"IShoppingMallAiBackendCartItem.IUpdate":{"type":"object","properties":{"quantity":{"type":"integer","minimum":1,"description":"Optional new quantity for the item. Must be at least 1 if provided."},"option_code":{"type":"string","description":"Optional new aggregate option/variant code, if changing selection."},"bundle_code":{"oneOf":[{"type":"string","description":"Optional new bundle code if selection is changed or to nullify bundle."},{"type":"null","description":"Optional new bundle code if selection is changed or to nullify bundle."}],"description":"Optional new bundle code if selection is changed or to nullify bundle."},"note":{"oneOf":[{"type":"string","description":"Optional note update for the cart item."},{"type":"null","description":"Optional note update for the cart item."}],"description":"Optional note update for the cart item."}},"required":[],"description":"Fields that may be updated for a cart item after initial creation. Used for partial modification, e.g., changing quantity or note."},"IPageIShoppingMallAiBackendOrder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging structure for order summary list endpoints, including current page, page size, record count, and total pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrder.ISummary"},"description":"List of summarized order entries for the requested page."}},"required":["pagination","data"],"description":"Paginated list of order summary records as returned for order search index APIs."},"IShoppingMallAiBackendOrder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Order's unique business identifier (UUID)."},"code":{"type":"string","description":"Business-visible order code or reference number. Used for order tracking."},"status":{"type":"string","description":"Current status code of the order, e.g., 'pending', 'confirmed', 'delivered'."},"total_amount":{"type":"number","format":"double","description":"Total (final) charged amount for the order including discounts, in the specified currency."},"currency":{"type":"string","description":"Order currency (ISO 4217), e.g., 'KRW', 'USD'."},"ordered_at":{"type":"string","format":"date-time","description":"Timestamp when the order was placed by the customer."},"closed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Closing time of the order, or null if not yet closed."},{"type":"null","format":"date-time","description":"Closing time of the order, or null if not yet closed."}],"description":"Closing time of the order, or null if not yet closed."}},"required":["id","code","status","total_amount","currency","ordered_at"],"description":"Summary DTO for orders, used for order list UIs. Contains the key fields needed for high-level list display."},"IShoppingMallAiBackendOrder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique order ID in the system."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"ID of the customer (shopping_mall_ai_backend_customers) who placed the order."},"shopping_mall_ai_backend_channel_id":{"type":"string","format":"uuid","description":"ID of the channel (shopping_mall_ai_backend_channels) through which order was placed."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the seller responsible for the order, if any. Nullable for non-seller-linked orders or composite orders."},{"type":"null","format":"uuid","description":"ID of the seller responsible for the order, if any. Nullable for non-seller-linked orders or composite orders."}],"description":"ID of the seller responsible for the order, if any. Nullable for non-seller-linked orders or composite orders."},"code":{"type":"string","description":"Human/business-visible code for order tracking and lookup."},"status":{"type":"string","description":"Current business status of the order, e.g., 'pending', 'paid', 'shipped', etc."},"total_amount":{"type":"number","format":"double","description":"Total billed charge for this order, used for settlement, analysis, etc."},"currency":{"type":"string","description":"Order currency (ISO 4217 code), e.g. 'USD', 'KRW'."},"ordered_at":{"type":"string","format":"date-time","description":"Order date/time (placed by customer)."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when order was business-confirmed by inventory/payment. Null if not confirmed."},{"type":"null","format":"date-time","description":"Timestamp when order was business-confirmed by inventory/payment. Null if not confirmed."}],"description":"Timestamp when order was business-confirmed by inventory/payment. Null if not confirmed."},"cancelled_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp if/when the order was cancelled by customer/operator."},{"type":"null","format":"date-time","description":"Timestamp if/when the order was cancelled by customer/operator."}],"description":"Timestamp if/when the order was cancelled by customer/operator."},"closed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Completion/closure time. Null if order not yet fulfilled/finalized."},{"type":"null","format":"date-time","description":"Completion/closure time. Null if order not yet fulfilled/finalized."}],"description":"Completion/closure time. Null if order not yet fulfilled/finalized."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update to any order business data."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp for audit/evidence. Null if order is not deleted."},{"type":"null","format":"date-time","description":"Soft delete timestamp for audit/evidence. Null if order is not deleted."}],"description":"Soft delete timestamp for audit/evidence. Null if order is not deleted."}},"required":["id","shopping_mall_ai_backend_customer_id","shopping_mall_ai_backend_channel_id","code","status","total_amount","currency","ordered_at","created_at","updated_at"],"description":"Full order entity in shopping mall AI backend, capturing all business/settlement fields."},"IShoppingMallAiBackendOrder.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Requested page number for paginated search. Null for default (first page)."},{"type":"null","description":"Requested page number for paginated search. Null for default (first page)."}],"description":"Requested page number for paginated search. Null for default (first page)."},"limit":{"oneOf":[{"type":"integer","description":"Max records per page, pagination. Null for system default."},{"type":"null","description":"Max records per page, pagination. Null for system default."}],"description":"Max records per page, pagination. Null for system default."},"sort":{"oneOf":[{"type":"string","description":"Sort field or order instruction. Null for default sorting."},{"type":"null","description":"Sort field or order instruction. Null for default sorting."}],"description":"Sort field or order instruction. Null for default sorting."},"filter":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"Restrict orders to a specific channel, if supplied."},"seller_id":{"type":"string","format":"uuid","description":"Restrict orders to a specific seller, if supplied."},"status":{"type":"string","description":"Status code or filter for orders."},"currency":{"type":"string","description":"Currency code to filter."},"ordered_at_from":{"type":"string","format":"date-time","description":"Start time filter for order placement time."},"ordered_at_to":{"type":"string","format":"date-time","description":"End time filter for order placement time."},"total_amount_min":{"type":"number","description":"Filter for orders with total amount >= this."},"total_amount_max":{"type":"number","description":"Filter for orders with total amount <= this."}},"required":[],"description":"Optional filter criteria for advanced order search: channel, seller, order status, currency, datetime range, amount range."}},"required":[],"description":"Request envelope for order list/search endpoints. Includes pagination, sort, and optional filter criteria."},"IShoppingMallAiBackendOrder.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"Customer UUID making the order."},"shopping_mall_ai_backend_channel_id":{"type":"string","format":"uuid","description":"Channel UUID for the order session/context."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller UUID if single-seller order, otherwise null for marketplace or multi-seller checkouts."},{"type":"null","format":"uuid","description":"Seller UUID if single-seller order, otherwise null for marketplace or multi-seller checkouts."}],"description":"Seller UUID if single-seller order, otherwise null for marketplace or multi-seller checkouts."},"code":{"type":"string","description":"Business-visible order code/number, unique per channel."},"status":{"type":"string","description":"Initial order status for new order, e.g., 'pending', 'created'."},"total_amount":{"type":"number","format":"double","description":"Final order charge for settlement, used for payments and reports."},"currency":{"type":"string","description":"ISO 4217 code for monetary currency."},"ordered_at":{"type":"string","format":"date-time","description":"Datetime of order placement/reception."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime if immediately business-confirmed, or null if not."},{"type":"null","format":"date-time","description":"Datetime if immediately business-confirmed, or null if not."}],"description":"Datetime if immediately business-confirmed, or null if not."},"cancelled_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime if immediately cancelled, or null."},{"type":"null","format":"date-time","description":"Datetime if immediately cancelled, or null."}],"description":"Datetime if immediately cancelled, or null."},"closed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime for completed/closed order status, or null."},{"type":"null","format":"date-time","description":"Datetime for completed/closed order status, or null."}],"description":"Datetime for completed/closed order status, or null."}},"required":["shopping_mall_ai_backend_customer_id","shopping_mall_ai_backend_channel_id","code","status","total_amount","currency","ordered_at"],"description":"Request DTO for creating a new order in shopping mall AI backend. Includes required business context, totals, and session data."},"IShoppingMallAiBackendOrder.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"The current business status of the order. Updates must comply with valid transitions (e.g., 'pending' → 'confirmed') as defined by platform business policy."},"delivery_notes":{"type":"string","description":"Optional notes or instructions to modify delivery or fulfillment, as per business process."},"contact_name":{"type":"string","description":"Update for the recipient/contact name on this order."},"contact_phone":{"type":"string","description":"Update for the recipient's phone number associated with this order, for notifications or delivery communication."},"delivery_address":{"type":"string","description":"Update for the full delivery address for this order."},"customer_note":{"type":"string","description":"Optional update to customer's note or instructions for the order. Used for after-sale."},"seller_note":{"type":"string","description":"For admin/seller only, update note on the order, such as hold, review, or internal memo."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of this update action for evidence/audit."}},"description":"Update allowable business fields of an order, as per status and workflow compliance. All fields in this object are optional. Only permitted for orders in states not finalized (not delivered/closed/cancelled). Ownership and permission checks must be respected.","required":[]},"IShoppingMallAiBackendOrderItem.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Desired page number (1-based for paginated response)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum number of items per page, for pagination control."},"order_id":{"type":"string","format":"uuid","description":"Filter by the parent order's UUID."},"product_id":{"type":"string","format":"uuid","description":"Filter by associated product's UUID."},"status":{"type":"string","description":"Optionally filter by the current status of the order item."},"created_at":{"type":"string","format":"date-time","description":"Filter by items created at or after this timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Filter by items updated at or after this timestamp."}},"description":"Request parameters for searching/filtering/paginating order items for a given order. All fields optional for broad or filtered search.","required":[]},"IPageIShoppingMallAiBackendOrderItem.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderItem.ISummary"},"description":"List of order item summary views"}},"required":["pagination","data"],"description":"Paginated summary view of order items as returned in search queries."},"IShoppingMallAiBackendOrderItem.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the order item."},"order_id":{"type":"string","format":"uuid","description":"Order's unique identifier associated with the item."},"product_id":{"type":"string","format":"uuid","description":"UUID of the purchased product related to the item."},"product_title":{"type":"string","description":"Snapshot of the product title as recorded at time of order."},"quantity":{"type":"integer","minimum":1,"description":"Ordered quantity of this item."},"final_amount":{"type":"number","description":"Final payment amount (after discounts) for this item line."},"status":{"type":"string","description":"Current fulfillment/status code for this line item (e.g., 'pending','fulfilled','returned')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when item was created."}},"required":["id","order_id","product_id","product_title","quantity","final_amount","status","created_at"],"description":"Summary view of an order item for paginated list results."},"IShoppingMallAiBackendOrderItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key: Unique identifier for the order item."},"order_id":{"type":"string","format":"uuid","description":"UUID of the parent order."},"product_id":{"type":"string","format":"uuid","description":"UUID of the purchased product."},"product_option_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable; refers to the option (color/size/etc)."},{"type":"null"}],"description":"Nullable; refers to the option (color/size/etc)."},"product_bundle_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable; refers to the bundle (for variant/SKU) within the order item."},{"type":"null"}],"description":"Nullable; refers to the bundle (for variant/SKU) within the order item."},"product_title":{"type":"string","description":"Snapshot of product title at time of order, not necessarily current product title."},"quantity":{"type":"integer","minimum":1,"description":"Quantity for this line item."},"unit_price":{"type":"number","description":"Unit price (at order time, pre-discount)."},"discount_amount":{"type":"number","description":"Amount discounted for this item."},"final_amount":{"type":"number","description":"Final amount for this order item (after discounts)."},"currency":{"type":"string","description":"Currency code for this item."},"status":{"type":"string","description":"Current status code for this order item."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for this line item."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for this line item."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Null if item is active."},{"type":"null"}],"description":"Soft delete timestamp. Null if item is active."}},"required":["id","order_id","product_id","product_title","quantity","unit_price","discount_amount","final_amount","currency","status","created_at","updated_at"],"description":"Represents one product item line in an order, including references to product, options/bundles, and snapshot data."},"IShoppingMallAiBackendOrderItem.IUpdate":{"type":"object","properties":{"quantity":{"type":"integer","minimum":1,"description":"Update the order item quantity, if permitted by status and business rule."},"discount_amount":{"type":"number","description":"Modify the discount for this item, reflecting approved after-sale/promotion."},"final_amount":{"type":"number","description":"Final payment for this item line after any discount/update."},"status":{"type":"string","description":"Update status for after-sales, cancellation, or fulfillment (e.g. 'cancelled', 'fulfilled', etc.)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of update for audit/compliance."}},"description":"Request payload to update mutable fields of a single order item. All fields optional; includes audit evidence for update time.","required":[]},"IShoppingMallAiBackendOrderItemSnapshot.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Desired result page for paginated snapshot listing."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum snapshots per page."},"order_item_id":{"type":"string","format":"uuid","description":"Filter snapshots by order item UUID."},"snapshot_reason":{"type":"string","description":"Reason code for snapshot to filter (e.g., 'manual_update','price_adjust','after_sale')."},"created_at":{"type":"string","format":"date-time","description":"Filter by creation date/time of snapshot."}},"description":"Search and paginated retrieval for order item snapshots (history of state for a single item). All fields optional.","required":[]},"IPageIShoppingMallAiBackendOrderItemSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for the result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderItemSnapshot"},"description":"List of snapshot records within the page."}},"required":["pagination","data"],"description":"Paged collection of order item snapshots for a query."},"IShoppingMallAiBackendOrderItemSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the order item snapshot (historical version of an item)."},"order_item_id":{"type":"string","format":"uuid","description":"UUID of the referenced, original order item."},"snapshot_reason":{"type":"string","description":"Reason for snapshot creation (business rule: 'after_sale','return','admin_update', etc.)."},"quantity":{"type":"integer","description":"Historical snapshot of item quantity at snapshot creation."},"unit_price":{"type":"number","description":"Unit price at time of this snapshot."},"discount_amount":{"type":"number","description":"Discount value as of the snapshot version."},"final_amount":{"type":"number","description":"Final amount for this item version as of the snapshot."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the snapshot entry."}},"required":["id","order_item_id","snapshot_reason","quantity","unit_price","discount_amount","final_amount","created_at"],"description":"Historical state record for one order item version (evidence for audits, after-sales, etc.)."},"IShoppingMallAiBackendOrderPayment.IRequest":{"type":"object","properties":{"order_id":{"type":"string","description":"Order UUID to filter payments by."},"payment_method":{"type":"string","description":"Payment method to filter, e.g., 'card', 'bank_transfer', etc."},"status":{"type":"string","description":"Payment status to filter on, e.g., 'pending', 'succeeded', 'failed', etc."},"external_reference":{"type":"string","description":"External payment provider code/reference to filter."},"requested_after":{"type":"string","format":"date-time","description":"Start of request time filter."},"requested_before":{"type":"string","format":"date-time","description":"End of request time filter."},"page":{"type":"integer","format":"int32","description":"Page number."},"limit":{"type":"integer","format":"int32","description":"Number of records per page."},"sort":{"type":"string","description":"Sort order (e.g., 'requested_at:desc')."}},"description":"Search and filter criteria for paginated payment query.","required":[]},"IPageIShoppingMallAiBackendOrderPayment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the current result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderPayment"},"description":"Paginated order payment records."}},"required":["pagination","data"],"description":"A paginated set of order payment records."},"IShoppingMallAiBackendOrderPayment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the payment record."},"shopping_mall_ai_backend_order_id":{"type":"string","format":"uuid","description":"UUID of the related order."},"payment_method":{"type":"string","description":"Payment method, such as 'card', 'bank_transfer', 'coupon', etc."},"amount":{"type":"number","format":"double","description":"Total payment amount."},"currency":{"type":"string","description":"Currency code (ISO 4217, e.g., USD, EUR, KRW)."},"status":{"type":"string","description":"Current payment status, e.g., 'pending', 'succeeded', 'failed', etc."},"external_reference":{"oneOf":[{"type":"string","description":"Optional reference for external payment processor."},{"type":"null","description":"Optional reference for external payment processor."}],"description":"Optional reference for external payment processor."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp payment was requested."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When payment was completed (if succeeded)."},{"type":"null","format":"date-time","description":"When payment was completed (if succeeded)."}],"description":"When payment was completed (if succeeded)."},"failed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When payment failed (if failed)."},{"type":"null","format":"date-time","description":"When payment failed (if failed)."}],"description":"When payment failed (if failed)."},"cancelled_at":{"oneOf":[{"type":"string","format":"date-time","description":"When payment was cancelled, if cancelled."},{"type":"null","format":"date-time","description":"When payment was cancelled, if cancelled."}],"description":"When payment was cancelled, if cancelled."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp."},{"type":"null","format":"date-time","description":"Soft deletion timestamp."}],"description":"Soft deletion timestamp."}},"required":["id","shopping_mall_ai_backend_order_id","payment_method","amount","currency","status","requested_at","created_at","updated_at"],"description":"Order payment record representing a payment transaction linked to an order."},"IShoppingMallAiBackendOrderPayment.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_order_id":{"type":"string","format":"uuid","description":"UUID for the order being paid for."},"payment_method":{"type":"string","description":"Payment method used for the new payment record."},"amount":{"type":"number","format":"double","description":"Total payment amount for the record."},"currency":{"type":"string","description":"Currency code (ISO 4217, e.g., USD)."},"external_reference":{"oneOf":[{"type":"string","description":"Optional external payment gateway reference for this payment."},{"type":"null","description":"Optional external payment gateway reference for this payment."}],"description":"Optional external payment gateway reference for this payment."}},"required":["shopping_mall_ai_backend_order_id","payment_method","amount","currency"],"description":"Request body for creating an order payment entry."},"IShoppingMallAiBackendOrderPayment.IUpdate":{"type":"object","properties":{"payment_method":{"type":"string","description":"If provided, updates the payment method."},"amount":{"type":"number","format":"double","description":"If provided, updates the payment amount."},"currency":{"type":"string","description":"If provided, updates the payment currency."},"status":{"type":"string","description":"New status for the payment (e.g., after success, fail, refund, etc)."},"external_reference":{"oneOf":[{"type":"string","description":"If provided, updates the external payment reference."},{"type":"null","description":"If provided, updates the external payment reference."}],"description":"If provided, updates the external payment reference."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks the payment as completed at this time."},{"type":"null","format":"date-time","description":"If set, marks the payment as completed at this time."}],"description":"If set, marks the payment as completed at this time."},"failed_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks the payment as failed at this time."},{"type":"null","format":"date-time","description":"If set, marks the payment as failed at this time."}],"description":"If set, marks the payment as failed at this time."},"cancelled_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks the payment as cancelled at this time."},{"type":"null","format":"date-time","description":"If set, marks the payment as cancelled at this time."}],"description":"If set, marks the payment as cancelled at this time."}},"description":"Update fields for an existing order payment.","required":[]},"IShoppingMallAiBackendOrderPaymentAttempt.IRequest":{"type":"object","properties":{"order_payment_id":{"type":"string","format":"uuid","description":"UUID of the order payment record being queried for attempts."},"attempt_state":{"type":"string","description":"State/status to filter attempts by (e.g., 'pending', 'success', 'fail')."},"provider_code":{"type":"string","description":"External payment provider code to filter."},"from":{"type":"string","format":"date-time","description":"Filter for attempts after this datetime."},"to":{"type":"string","format":"date-time","description":"Filter for attempts before this datetime."},"page":{"type":"integer","format":"int32","description":"Page of results."},"limit":{"type":"integer","format":"int32","description":"Page size, records per page."},"sort":{"type":"string","description":"Sort order by attempt field(s)."}},"description":"Request search/filter parameters for payment attempts.","required":[]},"IPageIShoppingMallAiBackendOrderPaymentAttempt":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for current result page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderPaymentAttempt"},"description":"List of payment attempts matching search/filter criteria."}},"required":["pagination","data"],"description":"Paginated list of payment attempt records matching the request."},"IShoppingMallAiBackendOrderPaymentAttempt":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the payment attempt record."},"shopping_mall_ai_backend_order_payment_id":{"type":"string","format":"uuid","description":"UUID for the related order payment."},"attempt_state":{"type":"string","description":"Result state of this payment attempt (e.g., 'pending', 'success', 'fail', 'retry', etc)."},"error_message":{"oneOf":[{"type":"string","description":"Failure reason if attempt failed. Null if successful or not applicable."},{"type":"null","description":"Failure reason if attempt failed. Null if successful or not applicable."}],"description":"Failure reason if attempt failed. Null if successful or not applicable."},"provider_code":{"oneOf":[{"type":"string","description":"External or gateway provider code for the attempt, if applicable."},{"type":"null","description":"External or gateway provider code for the attempt, if applicable."}],"description":"External or gateway provider code for the attempt, if applicable."},"requested_at":{"type":"string","format":"date-time","description":"When this attempt was initiated."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When this attempt was completed, if so."},{"type":"null","format":"date-time","description":"When this attempt was completed, if so."}],"description":"When this attempt was completed, if so."},"created_at":{"type":"string","format":"date-time","description":"System creation timestamp of payment attempt record."}},"required":["id","shopping_mall_ai_backend_order_payment_id","attempt_state","requested_at","created_at"],"description":"Detailed information for each attempt made at processing an order payment."},"IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for paged result sets."},"data":{"type":"array","items":{"type":"object","properties":{},"required":[]},"description":"List of records in the current page. Should be $ref to specific summary/detail types in usage."}},"required":["pagination","data"],"description":"Standard paginated result set wrapper."},"IShoppingMallAiBackendOrderDelivery.IRequest":{"type":"object","properties":{"orderStatus":{"type":"string","description":"Order status filter. Accepts order status codes or descriptions to filter associated deliveries. Optional."},"trackingNumber":{"type":"string","description":"Tracking number filter. Can be a full or partial carrier-provided tracking code to find deliveries. Optional."},"deliveryStatus":{"type":"string","description":"Delivery status filter. Filter by current delivery business status, e.g., 'ready', 'in_progress', 'complete', 'failed', 'returned', etc. Optional."},"provider":{"type":"string","description":"Logistics provider filter. Search deliveries by the partner/carrier handling the shipment. Optional."},"startDate":{"type":"string","format":"date-time","description":"Start date (inclusive) for filtering deliveries by shipped_at or created_at. ISO 8601 format. Optional."},"endDate":{"type":"string","format":"date-time","description":"End date (inclusive) for filtering deliveries by shipped_at or created_at. ISO 8601 format. Optional."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination, starting from 1. Default is 1 if unspecified."},"limit":{"type":"integer","minimum":1,"description":"Page size for pagination. Default is system default if not provided."},"sortBy":{"type":"string","description":"Sort by a delivery field (created_at, delivered_at, status, etc.). Optional."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort order direction ('asc' or 'desc'). Optional."},{"const":"desc","description":"Sort order direction ('asc' or 'desc'). Optional."}],"description":"Sort order direction ('asc' or 'desc'). Optional."}},"description":"Filter and pagination parameters for searching order deliveries, supporting by status, provider, tracking code, and time windows. All fields are optional.","required":[]},"IPageIShoppingMallAiBackendOrderDelivery":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the order delivery result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderDelivery"},"description":"Array of order delivery records in the searched page."}},"required":["pagination","data"],"description":"Paginated result set for order deliveries, including pagination info and array of matching order deliveries."},"IShoppingMallAiBackendOrderDelivery":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this delivery record, as per the shopping_mall_ai_backend_order_deliveries model."},"shopping_mall_ai_backend_order_id":{"type":"string","format":"uuid","description":"UUID of the parent order to which this delivery record belongs."},"delivery_status":{"type":"string","description":"Business logic status for the delivery (e.g. 'ready', 'in_progress', 'complete', 'failed', 'returned', etc.)."},"logistics_provider":{"oneOf":[{"type":"string","description":"Name or code of the logistics partner (carrier) handling the shipment. Optional, may be null if not shipped or assigned."},{"type":"null"}],"description":"Name or code of the logistics partner (carrier) handling the shipment. Optional, may be null if not shipped or assigned."},"tracking_number":{"oneOf":[{"type":"string","description":"Carrier-assigned tracking number (if present), used for status updates and public tracking. Optional, may be null before shipment."},{"type":"null"}],"description":"Carrier-assigned tracking number (if present), used for status updates and public tracking. Optional, may be null before shipment."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime the package was shipped/dispatched, if available. Null if not yet shipped."},{"type":"null"}],"description":"Datetime the package was shipped/dispatched, if available. Null if not yet shipped."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime the package was delivered by the carrier, if delivered. Null if not yet delivered."},{"type":"null"}],"description":"Datetime the package was delivered by the carrier, if delivered. Null if not yet delivered."},"delivery_notes":{"oneOf":[{"type":"string","description":"Free-text field for shipping notes, instructions, or business context. Optional."},{"type":"null"}],"description":"Free-text field for shipping notes, instructions, or business context. Optional."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp; immutable and generated by the system on insertion."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp; refreshed on all updates."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; null if record is active, non-null if logically deleted for audit/evidence."},{"type":"null"}],"description":"Soft deletion timestamp; null if record is active, non-null if logically deleted for audit/evidence."}},"required":["id","shopping_mall_ai_backend_order_id","delivery_status","created_at","updated_at"],"description":"A delivery/shipping event associated with an order. Tracks shipment state, carrier, tracking, evidence, and timing. Follows the shopping_mall_ai_backend_order_deliveries schema."},"IShoppingMallAiBackendOrderDelivery.IUpdate":{"type":"object","properties":{"delivery_status":{"type":"string","description":"Updated delivery status, e.g. 'shipped', 'in_progress', 'delivered', or other business values as per delivery workflow."},"logistics_provider":{"type":"string","description":"Updated logistics provider name or code."},"tracking_number":{"type":"string","description":"New tracking number for the shipment (carrier-assigned)."},"shipped_at":{"type":"string","format":"date-time","description":"Timestamp when the shipment was dispatched."},"delivered_at":{"type":"string","format":"date-time","description":"Timestamp for when delivery was confirmed completed by carrier."},"delivery_notes":{"type":"string","description":"Updated business notes, information, or instructions about this shipment."}},"description":"Fields which can be updated for an order delivery record. All properties optional; only set those which are being changed.","required":[]},"IShoppingMallAiBackendOrderDeliveryEvent.IRequest":{"type":"object","properties":{"eventType":{"type":"string","description":"Type of delivery event to filter by (e.g., status update, exception, checkpoint, etc.). Optional."},"startDate":{"type":"string","format":"date-time","description":"Start date/time range for logged_at filtering (inclusive). ISO 8601. Optional."},"endDate":{"type":"string","format":"date-time","description":"End date/time range for logged_at filtering (inclusive). ISO 8601. Optional."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number, starts at 1. Optional, system default used if not supplied."},"limit":{"type":"integer","minimum":1,"description":"Limit (page size) for pagination, default is system default when omitted."},"sortBy":{"type":"string","description":"Sort by a delivery event field, e.g., logged_at or created_at. Optional."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort order direction ('asc' or 'desc'). Optional."},{"const":"desc","description":"Sort order direction ('asc' or 'desc'). Optional."}],"description":"Sort order direction ('asc' or 'desc'). Optional."}},"description":"Delivery event log retrieval parameters including event type, date range, and pagination/sorting. All fields are optional.","required":[]},"IPageIShoppingMallAiBackendOrderDeliveryEvent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination details for the delivery event list."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderDeliveryEvent"},"description":"Array of delivery event records matching search criteria for this page."}},"required":["pagination","data"],"description":"Paginated list structure for delivery/shipment events, with details and pagination metadata."},"IShoppingMallAiBackendOrderDeliveryEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this delivery event, as per the shopping_mall_ai_backend_order_delivery_events model."},"shopping_mall_ai_backend_order_delivery_id":{"type":"string","format":"uuid","description":"UUID linking this event to its parent delivery/shipment record."},"event_type":{"type":"string","description":"Event type (status update, exception, checkpoint, manual event, etc.). Business-defined."},"event_context":{"oneOf":[{"type":"string","description":"Detailed free-form business context or note about the event. Optional; null if unused."},{"type":"null"}],"description":"Detailed free-form business context or note about the event. Optional; null if unused."},"logged_at":{"type":"string","format":"date-time","description":"Timestamp when this event was logged (system business date or carrier event time, UTC ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"System creation timestamp for the event record (for audit/evidence)."}},"required":["id","shopping_mall_ai_backend_order_delivery_id","event_type","logged_at","created_at"],"description":"An event or status checkpoint relating to an order delivery record, such as shipping, exception, or manual event. Contains key attributes for tracking and evidence."},"IShoppingMallAiBackendOrderReturn.IRequest":{"type":"object","properties":{"page":{"type":"number","description":"Target page number for pagination."},"limit":{"type":"number","description":"Page size (records per page)."},"status":{"$ref":"#/components/schemas/EOrderReturnStatus","description":"Filter returns by workflow status."},"date_start":{"type":"string","format":"date-time","description":"Lower bound for return date/time query."},"date_end":{"type":"string","format":"date-time","description":"Upper bound for return date/time query."}},"required":[],"description":"Filter options and pagination for searching order returns (see EOrderReturnStatus for workflows)."},"IPageIShoppingMallAiBackendOrderReturn":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for order returns page result. Follows IPage.IPagination definition used across shopping mall backend."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderReturn"},"description":"Array of order return records on the current page."}},"required":["pagination","data"],"description":"A paginated collection of order return records and associated pagination parameters for result page info."},"IShoppingMallAiBackendOrderReturn":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the order return record. Corresponds to id field in shopping_mall_ai_backend_order_returns table."},"shopping_mall_ai_backend_order_id":{"type":"string","format":"uuid","description":"The UUID of the associated order in shopping_mall_ai_backend_orders related to this return event."},"shopping_mall_ai_backend_order_item_id":{"type":"string","format":"uuid","description":"The UUID of the returned item's order record."},"return_reason":{"type":"string","description":"Business reason provided by the customer for requesting the return."},"status":{"type":"string","description":"Current status in the return process, such as requested, approved, rejected, completed."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when the return request was submitted."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when this return was processed (approved/rejected). Nullable when pending."},{"type":"null"}],"description":"Timestamp when this return was processed (approved/rejected). Nullable when pending."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Return process completion timestamp. Nullable until finalized."},{"type":"null"}],"description":"Return process completion timestamp. Nullable until finalized."},"created_at":{"type":"string","format":"date-time","description":"System record creation timestamp for business/audit evidence."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp. Set if logically deleted, otherwise null."},{"type":"null"}],"description":"Soft-delete timestamp. Set if logically deleted, otherwise null."}},"required":["id","shopping_mall_ai_backend_order_id","shopping_mall_ai_backend_order_item_id","return_reason","status","requested_at","created_at","updated_at"],"description":"Represents a return request for an order item, including all status, evidence, and business context. Aligned with shopping_mall_ai_backend_order_returns schema."},"IShoppingMallAiBackendOrderReturn.IUpdate":{"type":"object","properties":{"return_reason":{"type":"string","description":"Business rationale for updating return."},"status":{"$ref":"#/components/schemas/EOrderReturnStatus","description":"Updated status for workflow transition."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Mark as completed/finished (date-time or null)."}},"required":[],"description":"Admin/staff update for return event: status change, rationale correction, and completion."},"IShoppingMallAiBackendOrderExchange.IRequest":{"type":"object","properties":{"page":{"type":"number","description":"Page number to fetch."},"limit":{"type":"number","description":"Records per page."},"status":{"$ref":"#/components/schemas/EOrderExchangeStatus","description":"Filter by exchange workflow status."},"date_start":{"type":"string","format":"date-time","description":"Start date for exchange search filter."},"date_end":{"type":"string","format":"date-time","description":"End date for exchange search filter."}},"required":[],"description":"Paging and search/filter parameters for order exchange list APIs."},"IPageIShoppingMallAiBackendOrderExchange":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging information for order exchanges search result."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderExchange"},"description":"Order exchange records in the current result page."}},"required":["pagination","data"],"description":"A paged collection of order exchange records and corresponding paging data."},"IShoppingMallAiBackendOrderExchange":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the order exchange record."},"shopping_mall_ai_backend_order_id":{"type":"string","format":"uuid","description":"UUID of the affected order, referencing shopping_mall_ai_backend_orders."},"shopping_mall_ai_backend_order_item_id":{"type":"string","format":"uuid","description":"Id of the exchanged item in shopping_mall_ai_backend_order_items."},"exchange_reason":{"type":"string","description":"Reason provided for exchange event."},"status":{"type":"string","description":"Current status in exchange process workflow (e.g., requested/approved/rejected/completed)."},"requested_at":{"type":"string","format":"date-time","description":"Exchange request creation timestamp."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Approval/rejection time (nullable if not yet processed)."},{"type":"null"}],"description":"Approval/rejection time (nullable if not yet processed)."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Exchange completion time, nullable until finished."},{"type":"null"}],"description":"Exchange completion time, nullable until finished."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time (audit/evidence/updating events)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp if logically deleted."},{"type":"null"}],"description":"Soft-delete timestamp if logically deleted."}},"required":["id","shopping_mall_ai_backend_order_id","shopping_mall_ai_backend_order_item_id","exchange_reason","status","requested_at","created_at","updated_at"],"description":"Represents an after-sales exchange record for an item/order, tracking evidence, state, and business workflow. Aligned to shopping_mall_ai_backend_order_exchanges table."},"IShoppingMallAiBackendOrderExchange.IUpdate":{"type":"object","properties":{"exchange_reason":{"type":"string","description":"Updated or corrected rationale for the exchange."},"status":{"$ref":"#/components/schemas/EOrderExchangeStatus","description":"Updated business workflow status post admin/staff action."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Update time for when the exchange was marked completed."}},"required":[],"description":"Staff-admin update for exchange status, completion, or rationale correction."},"IShoppingMallAiBackendOrderRefund.IRequest":{"type":"object","properties":{"page":{"type":"number","description":"Current page number."},"limit":{"type":"number","description":"Page record count."},"status":{"$ref":"#/components/schemas/EOrderRefundStatus","description":"Workflow status filter."}},"required":[],"description":"Paging/search filter for order refunds (see EOrderRefundStatus for validation)."},"IPageIShoppingMallAiBackendOrderReturn.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination details for the order return summary page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderReturn.ISummary"},"description":"Array of order return summary records in this page."}},"required":["pagination","data"],"description":"Paginated list of order return summary records for result datagrid or list view."},"IShoppingMallAiBackendOrderReturn.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID identifier of this order return record."},"order_id":{"type":"string","format":"uuid","description":"UUID of the parent order associated with this return."},"item_id":{"type":"string","format":"uuid","description":"UUID for the particular item in the order returned."},"return_reason":{"type":"string","description":"Short business/literal reason for customer-requested return."},"status":{"$ref":"#/components/schemas/EOrderReturnStatus","description":"Workflow status of the return (see EOrderReturnStatus enum)."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when the return was initially requested."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the return was finalized/completed."},{"type":"null"}],"description":"Nullable: time the return process was finished."}},"required":["id","order_id","item_id","return_reason","status","requested_at"],"description":"Summary return record for order-management table and business overviews. Omits internal evidence and audit fields."},"IShoppingMallAiBackendOrderReturn.ICreate":{"type":"object","properties":{"order_id":{"type":"string","format":"uuid","description":"UUID of the parent order initiating a return."},"item_id":{"type":"string","format":"uuid","description":"UUID of the specific order item being returned."},"return_reason":{"type":"string","description":"Reason entered by the customer for requesting return."}},"required":["order_id","item_id","return_reason"],"description":"Request body for initiating a new order return. Client only enters business rationale for return; all evidence/audit set by system."},"EOrderReturnStatus":{"oneOf":[{"const":"requested","description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."},{"const":"approved","description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."},{"const":"rejected","description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."},{"const":"in_progress","description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."},{"const":"completed","description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."}],"description":"Enum representing workflow status for an order return. Refer to business policy and Prisma status codes. Values: requested, approved, rejected, in_progress, completed."},"IPageIShoppingMallAiBackendOrderExchange.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination data for the order exchange summary list."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderExchange.ISummary"},"description":"Array of summarized order exchange records for this result page."}},"required":["pagination","data"],"description":"Paginated collection of order exchange summaries suitable for business analytics and list rendering."},"IShoppingMallAiBackendOrderExchange.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for this exchange event."},"order_id":{"type":"string","format":"uuid","description":"Order UUID for the exchanged item."},"item_id":{"type":"string","format":"uuid","description":"UUID of the returned item."},"exchange_reason":{"type":"string","description":"Short reason given for requesting the exchange."},"status":{"$ref":"#/components/schemas/EOrderExchangeStatus","description":"Current business workflow status for the exchange."},"requested_at":{"type":"string","format":"date-time","description":"When the exchange was first requested (ISO timestamp)."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable - when the exchange process finished."}},"required":["id","order_id","item_id","exchange_reason","status","requested_at"],"description":"Summarized exchange event for order item, for table view, staff/admin dashboard, or analytics."},"IShoppingMallAiBackendOrderExchange.ICreate":{"type":"object","properties":{"order_id":{"type":"string","format":"uuid","description":"The order identifier for this exchange."},"item_id":{"type":"string","format":"uuid","description":"UUID for the associated order item."},"exchange_reason":{"type":"string","description":"Customer-submitted exchange reason/justification (string required by business policy)."}},"required":["order_id","item_id","exchange_reason"],"description":"Request body for creating a new order item exchange (after-sales process). Only order and item IDs and business reason are submitted by the client; all others generated and managed by system/fulfillment logic."},"EOrderExchangeStatus":{"oneOf":[{"const":"requested","description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."},{"const":"approved","description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."},{"const":"rejected","description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."},{"const":"in_progress","description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."},{"const":"completed","description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."}],"description":"Enum for all workflow states of order exchanges. Refer to platform and business process for valid transitions."},"IPageIShoppingMallAiBackendOrderRefund.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination data for order refund summary page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderRefund.ISummary"},"description":"Array of refund summary rows in the current page."}},"required":["pagination","data"],"description":"Paginated summary result for order refund query/list endpoint."},"IShoppingMallAiBackendOrderRefund.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the refund event record."},"order_id":{"type":"string","format":"uuid","description":"Order ID related to this refund."},"refund_reason":{"type":"string","description":"Short reason for the refund (customer or admin provided)."},"refund_type":{"type":"string","description":"Business or process type for refund calculation (e.g. full, partial, per-item)."},"amount":{"type":"number","description":"Refund amount in primary order currency."},"currency":{"type":"string","description":"Order/payment currency (ISO 4217)."},"status":{"$ref":"#/components/schemas/EOrderRefundStatus","description":"Refund workflow status."},"requested_at":{"type":"string","format":"date-time","description":"Time refund was requested."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable - time refund was completed or paid."}},"required":["id","order_id","refund_reason","refund_type","amount","currency","status","requested_at"],"description":"Summary refund row for list display and reporting/analytics use."},"IShoppingMallAiBackendOrderRefund.ICreate":{"type":"object","properties":{"order_id":{"type":"string","format":"uuid","description":"ID of the order associated to this refund creation."},"refund_reason":{"type":"string","description":"Customer/admin stated refund reason."},"refund_type":{"type":"string","description":"Classification of refund (full/partial/per-item)."},"amount":{"type":"number","description":"Refund value to credit/pay in primary order currency."},"currency":{"type":"string","description":"ISO 4217 code for refund currency."}},"required":["order_id","refund_reason","refund_type","amount","currency"],"description":"API body to create a refund request or issue a business/accounting refund."},"IShoppingMallAiBackendOrderRefund.IUpdate":{"type":"object","properties":{"refund_reason":{"type":"string","description":"New or updated reason for the refund. Optional for update."},"refund_type":{"type":"string","description":"Type of refund change, e.g., partial addition. Optional."},"amount":{"type":"number","description":"New refund amount if correcting or adjusting (admin/seller only). Optional."},"currency":{"type":"string","description":"New currency if required by financial rules (admin only). Optional."},"status":{"type":"string","description":"Updated status for the refund (approval, payout, etc). Optional."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for processing/approval, ISO 8601 or null."},{"type":"null","format":"date-time","description":"Timestamp for processing/approval, ISO 8601 or null."}],"description":"Timestamp for processing/approval, ISO 8601 or null."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for refund completion, ISO 8601 or null."},{"type":"null","format":"date-time","description":"Timestamp for refund completion, ISO 8601 or null."}],"description":"Timestamp for refund completion, ISO 8601 or null."}},"description":"Update input for refund record. Only mutable fields allowed (business constraints and compliance apply).","required":[]},"EOrderRefundStatus":{"oneOf":[{"const":"requested","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},{"const":"approved","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},{"const":"rejected","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},{"const":"processing","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},{"const":"paid","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},{"const":"completed","description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."}],"description":"Enum for all order refund process workflow statuses. requested, approved, rejected, processing, paid, completed."},"IShoppingMallAiBackendOrderRefund":{"type":"object","properties":{"id":{"type":"string","description":"Globally unique identifier for this refund transaction."},"shopping_mall_ai_backend_order_id":{"type":"string","description":"Foreign key: ID of the order to which this refund belongs."},"refund_reason":{"type":"string","description":"Description or business reason for refund, mapped to customer/admin/incident context."},"refund_type":{"type":"string","description":"Type of refund (e.g., full, partial, item, policy, etc.)."},"amount":{"type":"number","description":"Refund amount in the specified currency."},"currency":{"type":"string","description":"Currency code (ISO 4217) for the refund."},"status":{"type":"string","description":"Current status of the refund, e.g., requested, approved, paid, completed."},"requested_at":{"type":"string","format":"date-time","description":"Time when refund was requested (ISO 8601 UTC)."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Time when the refund was approved/rejected by admin/operator."},{"type":"null","format":"date-time","description":"Time when the refund was approved/rejected by admin/operator."}],"description":"Time when the refund was approved/rejected by admin/operator."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Time when refund process was completed (e.g., payout, payment confirmed)."},{"type":"null","format":"date-time","description":"Time when refund process was completed (e.g., payout, payment confirmed)."}],"description":"Time when refund process was completed (e.g., payout, payment confirmed)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Last modify timestamp (ISO 8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of soft deletion (if any) for compliance/audit evidence."},{"type":"null","format":"date-time","description":"Timestamp of soft deletion (if any) for compliance/audit evidence."}],"description":"Timestamp of soft deletion (if any) for compliance/audit evidence."}},"required":["id","shopping_mall_ai_backend_order_id","refund_reason","refund_type","amount","currency","status","requested_at","created_at","updated_at"],"description":"Refund record for an order. All major business, timing, and compliance fields for audit and evidence."},"IPageIShoppingMallAiBackendOrderRefund":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the page"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderRefund"},"description":"Array of refund records on this page"}},"required":["pagination","data"],"description":"Paginated page of order refund records. Used for admin, customer, and compliance review."},"IShoppingMallAiBackendOrderIncident.IRequest":{"type":"object","properties":{"incident_type":{"type":"string","description":"Type of incident, such as fraud, dispute, compliance, evidence, error."},"status":{"type":"string","description":"Filter by incident status. E.g., open, investigating, closed, resolved, reversed, pending."},"customer_id":{"type":"string","description":"(Optional) Filter by incident's customer UUID."},"seller_id":{"type":"string","description":"(Optional) Filter by incident's seller UUID."},"from":{"type":"string","description":"(Optional) Filter incidents after this ISO 8601 date."},"to":{"type":"string","description":"(Optional) Filter to incidents before this ISO 8601 date."},"page":{"type":"integer","description":"Page number for pagination, starts at 1."},"limit":{"type":"integer","description":"Max records per page (pagination), recommend max 100."}},"description":"Search/filter input for order incidents. Used for compliance, fraud, and incident dashboards.","required":[]},"IPageIShoppingMallAiBackendOrderIncident":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the page"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendOrderIncident"},"description":"Array of order incident records on this page"}},"required":["pagination","data"],"description":"Paginated list of order incident records."},"IShoppingMallAiBackendOrderIncident":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier (UUID) for the incident record."},"shopping_mall_ai_backend_order_id":{"type":"string","description":"Order UUID involved in this incident."},"incident_type":{"type":"string","description":"Type/category of the incident: e.g., fraud, dispute, system_error, compliance, evidence, etc."},"context":{"oneOf":[{"type":"string","description":"Extended context/explanation (business or system annotation), may be serialized data."},{"type":"null","description":"Extended context/explanation (business or system annotation), may be serialized data."}],"description":"Extended context/explanation (business or system annotation), may be serialized data."},"event_at":{"type":"string","format":"date-time","description":"Datetime for the incident event (ISO 8601)."},"status":{"type":"string","description":"Incident status: open, closed, resolved, investigating, reversed, etc. (optional, may not exist for legacy data)."},"created_at":{"type":"string","format":"date-time","description":"Audit record created at (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Audit record updated at (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the incident was marked as deleted (soft)."},{"type":"null","format":"date-time","description":"When the incident was marked as deleted (soft)."}],"description":"When the incident was marked as deleted (soft)."}},"required":["id","shopping_mall_ai_backend_order_id","incident_type","event_at","created_at","updated_at"],"description":"Single order incident record with all context and evidence fields."},"IShoppingMallAiBackendCoupon.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"(Optional) Business code for the coupon or campaign, filter by like/equals."},"title":{"type":"string","description":"(Optional) Filter by coupon title, partial or fuzzy match supported."},"type":{"type":"string","description":"(Optional) Coupon type, e.g., fixed, percentage, shipping, event, welcome, etc."},"status":{"type":"string","description":"(Optional) Coupon status (active, expired, scheduled, hidden, restricted)."},"channel_id":{"type":"string","description":"(Optional) Channel UUID to filter coupons by."},"seller_id":{"type":"string","description":"(Optional) Seller UUID to filter coupons by."},"expires_from":{"type":"string","description":"(Optional) Start expiry time (inclusive, ISO 8601 date/time) filter window."},"expires_to":{"type":"string","description":"(Optional) End expiry time (inclusive, ISO 8601 date/time) filter window."},"page":{"type":"integer","description":"Pagination: page number to fetch."},"limit":{"type":"integer","description":"Pagination: number of records per page."}},"description":"Search and filter input for coupon/query endpoints. Used for admin/campaign search and listing.","required":[]},"IPageIShoppingMallAiBackendCoupon.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCoupon.ISummary"},"description":"List of coupon summary records on this page"}},"required":["pagination","data"],"description":"Paginated page of coupon summary records."},"IShoppingMallAiBackendCoupon.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Coupon UUID."},"code":{"type":"string","description":"Business code for the coupon or promotion campaign."},"title":{"type":"string","description":"Coupon display title."},"type":{"type":"string","description":"Coupon type: e.g., fixed, percentage, shipping, etc."},"status":{"type":"string","description":"Coupon status (business logic enumeration)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"When coupon expires."},{"type":"null","format":"date-time","description":"When coupon expires."}],"description":"When coupon expires."},"issued_count":{"type":"integer","description":"Running count of coupons issued (aggregate for campaign)."},"used_count":{"type":"integer","description":"How many times the coupon has been used (across all recipients/issued instances)."},"created_at":{"type":"string","format":"date-time","description":"When coupon policy/record was created."},"updated_at":{"type":"string","format":"date-time","description":"When coupon policy/record was last updated."}},"required":["id","code","title","type","status","issued_count","used_count","created_at","updated_at"],"description":"Coupon summary for use in paginated index/search responses."},"IShoppingMallAiBackendCoupon":{"type":"object","properties":{"id":{"type":"string","description":"Unique coupon identifier (UUID) for this policy."},"shopping_mall_ai_backend_channel_id":{"oneOf":[{"type":"string","description":"Optional channel UUID if the coupon is scoped to a specific sales channel/storefront."},{"type":"null","description":"Optional channel UUID if the coupon is scoped to a specific sales channel/storefront."}],"description":"Optional channel UUID if the coupon is scoped to a specific sales channel/storefront."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","description":"Optional seller UUID if the coupon is seller-specific."},{"type":"null","description":"Optional seller UUID if the coupon is seller-specific."}],"description":"Optional seller UUID if the coupon is seller-specific."},"code":{"type":"string","description":"Business/marketing code for this coupon (ex: SPRING2025, XMASGIFT)."},"type":{"type":"string","description":"Type indicator, e.g., fixed, percentage, shipping, personal, etc."},"title":{"type":"string","description":"Human-recognizable title for the coupon/promotion."},"description":{"oneOf":[{"type":"string","description":"Detailed business/policy description for display/audit."},{"type":"null","description":"Detailed business/policy description for display/audit."}],"description":"Detailed business/policy description for display/audit."},"value":{"type":"number","description":"Coupon value—either fixed amount or percent—according to type."},"min_order_amount":{"oneOf":[{"type":"number","description":"Minimum order total for coupon eligibility (may be null/undefined for no minimum)."},{"type":"null","description":"Minimum order total for coupon eligibility (may be null/undefined for no minimum)."}],"description":"Minimum order total for coupon eligibility (may be null/undefined for no minimum)."},"max_discount_amount":{"oneOf":[{"type":"number","description":"Maximum discount allowed by this coupon per usage (percent coupons only, null if no cap)."},{"type":"null","description":"Maximum discount allowed by this coupon per usage (percent coupons only, null if no cap)."}],"description":"Maximum discount allowed by this coupon per usage (percent coupons only, null if no cap)."},"currency":{"oneOf":[{"type":"string","description":"Currency code (ISO 4217) for value fields (null/non-monetary for special/percent/off)."},{"type":"null","description":"Currency code (ISO 4217) for value fields (null/non-monetary for special/percent/off)."}],"description":"Currency code (ISO 4217) for value fields (null/non-monetary for special/percent/off)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Coupon expiry date/time according to policy."},{"type":"null","format":"date-time","description":"Coupon expiry date/time according to policy."}],"description":"Coupon expiry date/time according to policy."},"stackable":{"type":"boolean","description":"Whether the coupon may be stacked/combined with other coupons."},"personal":{"type":"boolean","description":"True if this coupon is issued for a single/personal use; false for mass/public."},"issued_quantity":{"oneOf":[{"type":"integer","description":"Maximum number of coupons allowed to be issued overall (null/unlimited for public campaigns)."},{"type":"null","description":"Maximum number of coupons allowed to be issued overall (null/unlimited for public campaigns)."}],"description":"Maximum number of coupons allowed to be issued overall (null/unlimited for public campaigns)."},"issued_per_user":{"oneOf":[{"type":"integer","description":"Maximum number of times a single user can receive this coupon (null for unlimited/per intended scenario)."},{"type":"null","description":"Maximum number of times a single user can receive this coupon (null for unlimited/per intended scenario)."}],"description":"Maximum number of times a single user can receive this coupon (null for unlimited/per intended scenario)."},"used_per_user":{"oneOf":[{"type":"integer","description":"Maximum usage count allowed per user (null/unlimited for policy flexibility)."},{"type":"null","description":"Maximum usage count allowed per user (null/unlimited for policy flexibility)."}],"description":"Maximum usage count allowed per user (null/unlimited for policy flexibility)."},"usage_limit_total":{"oneOf":[{"type":"integer","description":"Total usage limit for this coupon policy (null=unlimited, else numeric cap for campaign)."},{"type":"null","description":"Total usage limit for this coupon policy (null=unlimited, else numeric cap for campaign)."}],"description":"Total usage limit for this coupon policy (null=unlimited, else numeric cap for campaign)."},"issued_count":{"type":"integer","description":"Actual issued coupon count (system counter)."},"used_count":{"type":"integer","description":"Actual used coupon count (system counter; evidence for analytics)."},"published_at":{"oneOf":[{"type":"string","format":"date-time","description":"First time coupon is published/visible for acquisition/claiming."},{"type":"null","format":"date-time","description":"First time coupon is published/visible for acquisition/claiming."}],"description":"First time coupon is published/visible for acquisition/claiming."},"status":{"type":"string","description":"Current coupon business status (active, expired, hidden, scheduled, restricted, etc.)."},"created_at":{"type":"string","format":"date-time","description":"Coupon policy creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Coupon policy last updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete deletion time, preserved for audit/evidence."},{"type":"null","format":"date-time","description":"Soft delete deletion time, preserved for audit/evidence."}],"description":"Soft delete deletion time, preserved for audit/evidence."}},"required":["id","code","type","title","value","stackable","personal","issued_count","used_count","status","created_at","updated_at"],"description":"Coupon policy detail and configuration entity. Contains all business, evidence, and analytics attributes."},"IShoppingMallAiBackendCoupon.ICreate":{"type":"object","description":"Schema for creating a coupon promotion policy. This type matches the requirements for initiating a new coupon in the system. All fields correspond to the business and regulatory constraints described in the database model.","properties":{"shopping_mall_ai_backend_channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional reference to the target channel for channel-scoped coupons."},{"type":"null","format":"uuid","description":"Optional reference to the target channel for channel-scoped coupons."}],"description":"Optional reference to the target channel for channel-scoped coupons."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional, indicates the seller issuing the coupon. Null for system/global coupons."},{"type":"null","format":"uuid","description":"Optional, indicates the seller issuing the coupon. Null for system/global coupons."}],"description":"Optional, indicates the seller issuing the coupon. Null for system/global coupons."},"code":{"type":"string","description":"Unique business code for the coupon or promotion campaign. Required and unique."},"type":{"type":"string","description":"Coupon type. E.g., fixed, percentage, shipping, event, etc."},"title":{"type":"string","description":"Short display title for recognition."},"description":{"oneOf":[{"type":"string","description":"Extended business description (display/audit)."},{"type":"null","description":"Extended business description (display/audit)."}],"description":"Extended business description (display/audit)."},"value":{"type":"number","description":"Discount value (amount or percent)."},"min_order_amount":{"oneOf":[{"type":"number","description":"Minimum order value for eligibility."},{"type":"null","description":"Minimum order value for eligibility."}],"description":"Minimum order value for eligibility."},"max_discount_amount":{"oneOf":[{"type":"number","description":"Capped discount max value; only for percent coupons, null for none."},{"type":"null","description":"Capped discount max value; only for percent coupons, null for none."}],"description":"Capped discount max value; only for percent coupons, null for none."},"currency":{"oneOf":[{"type":"string","description":"Currency code for fixed amount (ISO 4217, e.g., KRW, USD). Null for percent/non-monetary."},{"type":"null","description":"Currency code for fixed amount (ISO 4217, e.g., KRW, USD). Null for percent/non-monetary."}],"description":"Currency code for fixed amount (ISO 4217, e.g., KRW, USD). Null for percent/non-monetary."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Expiration datetime (ISO8601), null for unlimited."},{"type":"null","format":"date-time","description":"Expiration datetime (ISO8601), null for unlimited."}],"description":"Expiration datetime (ISO8601), null for unlimited."},"stackable":{"type":"boolean","description":"Whether this coupon can stack with others."},"personal":{"type":"boolean","description":"If true, coupon is assigned per-user and never general audience."},"issued_quantity":{"oneOf":[{"type":"integer","description":"Campaign-level issuance cap. Null for unlimited."},{"type":"null","description":"Campaign-level issuance cap. Null for unlimited."}],"description":"Campaign-level issuance cap. Null for unlimited."},"issued_per_user":{"oneOf":[{"type":"integer","description":"Max issues per user; e.g., 1 for single-use personal. Null for unlimited."},{"type":"null","description":"Max issues per user; e.g., 1 for single-use personal. Null for unlimited."}],"description":"Max issues per user; e.g., 1 for single-use personal. Null for unlimited."},"used_per_user":{"oneOf":[{"type":"integer","description":"Usage limit per user, null for unlimited."},{"type":"null","description":"Usage limit per user, null for unlimited."}],"description":"Usage limit per user, null for unlimited."},"usage_limit_total":{"oneOf":[{"type":"integer","description":"Maximum total usages for coupon, null for unlimited."},{"type":"null","description":"Maximum total usages for coupon, null for unlimited."}],"description":"Maximum total usages for coupon, null for unlimited."},"published_at":{"oneOf":[{"type":"string","format":"date-time","description":"First public visibility, null for immediate."},{"type":"null","format":"date-time","description":"First public visibility, null for immediate."}],"description":"First public visibility, null for immediate."},"status":{"type":"string","description":"Status of coupon: active, expired, scheduled, hidden, restricted."}},"required":["code","type","title","value","stackable","personal","status"]},"IShoppingMallAiBackendCoupon.IUpdate":{"type":"object","description":"Schema for updating an existing coupon. This type allows mutable fields only. Omitted fields are not changed. All updates ensure regulatory compliance and proper business logic enforcement.","properties":{"shopping_mall_ai_backend_channel_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null","format":"uuid"}]},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null","format":"uuid"}]},"type":{"type":"string"},"title":{"type":"string"},"description":{"oneOf":[{"type":"string"},{"type":"null"}]},"value":{"type":"number"},"min_order_amount":{"oneOf":[{"type":"number"},{"type":"null"}]},"max_discount_amount":{"oneOf":[{"type":"number"},{"type":"null"}]},"currency":{"oneOf":[{"type":"string"},{"type":"null"}]},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"stackable":{"type":"boolean"},"personal":{"type":"boolean"},"issued_quantity":{"oneOf":[{"type":"integer"},{"type":"null"}]},"issued_per_user":{"oneOf":[{"type":"integer"},{"type":"null"}]},"used_per_user":{"oneOf":[{"type":"integer"},{"type":"null"}]},"usage_limit_total":{"oneOf":[{"type":"integer"},{"type":"null"}]},"published_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"status":{"type":"string"}},"required":[]},"IShoppingMallAiBackendCouponIssuance.IRequest":{"type":"object","description":"Advanced search/filter for coupon issuances. Supports optional status, customer, and issued date range. Pagination fields available.","properties":{"status":{"type":"string","description":"Issuance status to include, e.g., issued, used, revoked."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"Filter by specific customer UUID (optional)."},"issued_at_from":{"type":"string","format":"date-time","description":"Filter results after this timestamp (inclusive, optional)."},"issued_at_to":{"type":"string","format":"date-time","description":"Filter results on/before this timestamp (inclusive, optional)."},"page":{"type":"integer","description":"Query page number (1-based, optional)."},"limit":{"type":"integer","description":"Results per page (optional, business default applies if null)."}},"required":[]},"IPageIShoppingMallAiBackendCouponIssuance.ISummary":{"type":"object","description":"Paginated summary of coupon issuances for search listings. Contains issue/usage status and primary fields. Used in admin, seller, or compliance dashboards.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponIssuance.ISummary"}}},"required":[]},"IShoppingMallAiBackendCouponIssuance.ISummary":{"type":"object","description":"Summary view of coupon issuance for list views or audit. Contains only primary and business critical fields for efficient browsing and search.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the coupon issuance."},"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"Parent coupon policy UUID."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Recipient customer UUID if applicable."},{"type":"null","format":"uuid","description":"Recipient customer UUID if applicable."}],"description":"Recipient customer UUID if applicable."},"status":{"type":"string","description":"Current status of the issuance, e.g., issued, used, revoked."},"issued_at":{"type":"string","format":"date-time","description":"Issuance timestamp, ISO8601."},"used_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when coupon was used, if any."},{"type":"null","format":"date-time","description":"Timestamp when coupon was used, if any."}],"description":"Timestamp when coupon was used, if any."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp if coupon was revoked, if applicable."},{"type":"null","format":"date-time","description":"Timestamp if coupon was revoked, if applicable."}],"description":"Timestamp if coupon was revoked, if applicable."},"expires_at":{"oneOf":[{"type":"string","format":"date-time","description":"Expiry time for personal/campaign coupon. Null if unlimited."},{"type":"null","format":"date-time","description":"Expiry time for personal/campaign coupon. Null if unlimited."}],"description":"Expiry time for personal/campaign coupon. Null if unlimited."}},"required":[]},"IShoppingMallAiBackendCouponIssuance":{"type":"object","description":"Complete coupon issuance entity with all fields for audit, compliance, or user delivery flows. Matches schema table mapping.","properties":{"id":{"type":"string","format":"uuid"},"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid"},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null","format":"uuid"}]},"external_code":{"oneOf":[{"type":"string"},{"type":"null"}]},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"status":{"type":"string"},"issued_at":{"type":"string","format":"date-time"},"used_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"created_at":{"type":"string","format":"date-time"}},"required":[]},"IShoppingMallAiBackendCouponIssuance.ICreate":{"type":"object","description":"Payload to create and issue a coupon to a specific user/event. Typically includes the recipient (customer), external code if necessary, and expiry override if needed by business logic.","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null","format":"uuid"}]},"external_code":{"oneOf":[{"type":"string"},{"type":"null"}]},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]}},"required":[]},"IShoppingMallAiBackendCouponIssuance.IUpdate":{"type":"object","description":"Mutable fields for coupon issuance, allowing status change (e.g., revoke), expiry extension, and optional metadata correction. Used in campaign management tools and customer service consoles.","properties":{"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]},"status":{"type":"string"},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null","format":"date-time"}]}},"required":[]},"IShoppingMallAiBackendCouponUsage.IRequest":{"type":"object","description":"Advanced filter/search payload for reviewing coupon usage. Includes status, specific customer, coupon, usage dates, and pagination.","properties":{"status":{"type":"string","description":"Usage status: success, failed, revoked, etc."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid"},"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid"},"used_at_from":{"type":"string","format":"date-time"},"used_at_to":{"type":"string","format":"date-time"},"page":{"type":"integer"},"limit":{"type":"integer"}},"required":[]},"IShoppingMallAiBackendCouponUsage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the coupon usage record, globally unique. Represents the unique business and audit identity for each coupon usage event, necessary for evidence tracking, rollback, and compliance reporting."},"shopping_mall_ai_backend_coupon_issuance_id":{"type":"string","format":"uuid","description":"Identifier linking to the coupon issuance entity (shopping_mall_ai_backend_coupon_issuances), indicating which issued coupon was redeemed by the user. Critical for audit chain, eligibility checks, and unique usage policy enforcement."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"Customer identity (UUID) who used or attempted to use the coupon. Used for compliance, analytics, personalization, and user-specific policy validation."},"shopping_mall_ai_backend_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Nullable) UUID for the order the coupon was used on. Used for audit/query, refund/reversal logic, and linking coupon usage to a specific transaction/event."},{"type":"null","format":"uuid","description":"(Nullable) UUID for the order the coupon was used on. Used for audit/query, refund/reversal logic, and linking coupon usage to a specific transaction/event."}],"description":"(Nullable) UUID for the order the coupon was used on. Used for audit/query, refund/reversal logic, and linking coupon usage to a specific transaction/event."},"used_at":{"type":"string","format":"date-time","description":"Date-time (ISO8601) of coupon usage event by the customer. Required for evidence compliance, reporting, and business rules on when usage occurred."},"amount_discounted":{"type":"number","description":"Monetary discount value applied for this coupon usage (in coupon's currency if specified). Required for analytics, actual cost to business, and refunds."},"status":{"type":"string","description":"Business usage status: e.g., 'success', 'failed', 'revoked', 'rolled_back'. Used for business/audit review, compliance investigation, and system health tracking."},"rolledback_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when this usage was rolled back/refunded/canceled, if applicable. Enables evidence-based tracking of reversal actions for compliance and audit."},{"type":"null","format":"date-time","description":"Timestamp when this usage was rolled back/refunded/canceled, if applicable. Enables evidence-based tracking of reversal actions for compliance and audit."}],"description":"Timestamp when this usage was rolled back/refunded/canceled, if applicable. Enables evidence-based tracking of reversal actions for compliance and audit."}},"required":["id","shopping_mall_ai_backend_coupon_issuance_id","shopping_mall_ai_backend_customer_id","used_at","amount_discounted","status"],"description":"Coupon usage event representing a customer redeeming a coupon (typically via checkout/order). Contains detailed evidence fields, compliance identifiers, references to issuance, target order, usage status, and audit dates. Used for all downstream analytics, refund calculations, fraud prevention, and legal business requirements."},"IPageIShoppingMallAiBackendCouponUsage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata describing page number, limit, record count, and total pages for the coupon usage search. Used to support UI, analytics, and compliance process navigation."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponUsage"},"description":"List of coupon usage records matching the search criteria. Each list item contains full business and audit information as defined in the CouponUsage schema."}},"required":["pagination","data"],"description":"Paginated response of coupon usage events, providing metadata and a structured list of usage records for business, operational, and compliance use."},"IShoppingMallAiBackendCouponCode":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the coupon code record. Primary key for business, audit, and campaign management."},"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"(Foreign key) Coupon entity UUID to which this code belongs. Used for campaign analytics, eligibility, and codebook mapping."},"shopping_mall_ai_backend_coupon_issuance_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable foreign key. References coupon issuance if generated via personal issuance, otherwise null. Used for evidence, per-person/campaign mapping, and compliance."},{"type":"null","format":"uuid","description":"Nullable foreign key. References coupon issuance if generated via personal issuance, otherwise null. Used for evidence, per-person/campaign mapping, and compliance."}],"description":"Nullable foreign key. References coupon issuance if generated via personal issuance, otherwise null. Used for evidence, per-person/campaign mapping, and compliance."},"bulk_code":{"type":"string","description":"Unique public code string used for external distribution, event, or campaign. Must be globally unique per business, used for fast promo entry."},"issued_to_email":{"oneOf":[{"type":"string","description":"(Optional) Email address the code was targeted/delivered to (for event/campaign/personalized distribution). Used for analytics, campaign review, and evidence."},{"type":"null","description":"(Optional) Email address the code was targeted/delivered to (for event/campaign/personalized distribution). Used for analytics, campaign review, and evidence."}],"description":"(Optional) Email address the code was targeted/delivered to (for event/campaign/personalized distribution). Used for analytics, campaign review, and evidence."},"status":{"type":"string","description":"Code status: 'available', 'issued', 'redeemed', 'invalidated', 'revoked', etc. Used for eligibility/business/policy checks and evidence review."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of code creation or event registration. Used for evidence, campaign start analytics, and audit log."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when code was used/redeemed (if any). Used for business, distribution, and campaign effectivity."},{"type":"null","format":"date-time","description":"Timestamp when code was used/redeemed (if any). Used for business, distribution, and campaign effectivity."}],"description":"Timestamp when code was used/redeemed (if any). Used for business, distribution, and campaign effectivity."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when code was revoked/invalidated, if applicable."},{"type":"null","format":"date-time","description":"Timestamp when code was revoked/invalidated, if applicable."}],"description":"Timestamp when code was revoked/invalidated, if applicable."}},"required":["id","shopping_mall_ai_backend_coupon_id","bulk_code","status","created_at"],"description":"Represents a unique coupon code (bulk, event, distribution) tied to a campaign. Used for external or personal code delivery, campaign events, analytics, fraud prevention, and business rule enforcement. Each code includes full audit and evidence fields for compliance."},"IShoppingMallAiBackendCouponCode.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Pagination page number (1-based indexing). Defaults to 1 if omitted."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Maximum number of records per page. Used to control result set size and performance, default is system-configurable (commonly 100)."},"status":{"type":"string","description":"Optional status filter (e.g., 'available', 'redeemed', 'revoked'). Filters results by business status for code management."},"code":{"type":"string","description":"Search filter to match coupon code strings (bulk_code). Allows campaign managers to search for a specific code."},"issuedToEmail":{"type":"string","description":"Filter for codes issued to a specific email address (for event or direct campaigns, corresponds to issued_to_email field)."}},"required":[],"description":"Search and filter parameters for paginated coupon code lookups. Allows campaign/user/email, status, code value, and per-page controls. Used for audit/campaign management dashboards, bulk lookups, and external event support."},"IPageIShoppingMallAiBackendCouponCode":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for code search results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponCode"},"description":"Array of coupon code summary records that matched the query criteria. Each record provides audit-traceable metadata and campaign context."}},"required":["pagination","data"],"description":"Paginated results of coupon codes for event, campaign, and audit purposes. Used in business dashboards, analytics, and evidence preservation."},"IShoppingMallAiBackendCouponStackingRule":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the stacking rule record (PK, evidence-compliant, campaign management)."},"shopping_mall_ai_backend_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Coupon UUID for which this stacking rule applies (or null if generic type rule). References main coupon for campaign and audit analytics."},{"type":"null","format":"uuid","description":"Coupon UUID for which this stacking rule applies (or null if generic type rule). References main coupon for campaign and audit analytics."}],"description":"Coupon UUID for which this stacking rule applies (or null if generic type rule). References main coupon for campaign and audit analytics."},"excluded_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable foreign key. References exclusion/coupon that this coupon cannot stack with (if applies to a specific coupon, else null for generic rules)."},{"type":"null","format":"uuid","description":"Nullable foreign key. References exclusion/coupon that this coupon cannot stack with (if applies to a specific coupon, else null for generic rules)."}],"description":"Nullable foreign key. References exclusion/coupon that this coupon cannot stack with (if applies to a specific coupon, else null for generic rules)."},"type":{"type":"string","description":"Type of stacking rule: 'allow','deny','override'. Used for campaign, business logic, and UI for combinability matrix."},"applies_to_type":{"oneOf":[{"type":"string","description":"Optional: coupon type or category this stacking rule applies to (for type-level stacking rules, not coupon-specific). Used for advanced campaign management, audit filtering, and policy configuration."},{"type":"null","description":"Optional: coupon type or category this stacking rule applies to (for type-level stacking rules, not coupon-specific). Used for advanced campaign management, audit filtering, and policy configuration."}],"description":"Optional: coupon type or category this stacking rule applies to (for type-level stacking rules, not coupon-specific). Used for advanced campaign management, audit filtering, and policy configuration."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of stacking rule creation, for audit, campaign evidence, and lifecycle management."}},"required":["id","type","created_at"],"description":"Coupon stacking rule representing business policy constraints for combinability of discounts/coupons: which can or cannot be stacked, exclusion relationships, override exceptions, and applicable types. Required for both business UI (matrix view) and backend enforcement logic, with full evidence fields for audit."},"IShoppingMallAiBackendCouponStackingRule.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Pagination page number (1-based). Defaults to 1."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Maximum number of records per page (default determined by business/configuration)."},"type":{"type":"string","description":"Optional filter by stacking rule type: 'allow','deny','override'. Enables targeted searches for combinability policies."},"appliesToType":{"type":"string","description":"Optional filter for stacking rules applying to a specific coupon type/category. Used for business/policy audits and campaign optimization."},"excludedCouponId":{"type":"string","format":"uuid","description":"Optional UUID filter for rules excluding a specific coupon's stacking. Allows fine-grained policy lookup, evidence review, and troubleshooting."}},"required":[],"description":"Search/filter request parameters for paginated stacking rule results, for campaign/business management and policy compliance audits."},"IPageIShoppingMallAiBackendCouponStackingRule":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination details for stacking rule search responses."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponStackingRule"},"description":"Array of stacking rule configuration records for business logic, UI combinability, and compliance reporting."}},"required":["pagination","data"],"description":"Paginated, filterable business policy matrix for coupon stacking, used in compliance, campaign, and advanced rule management UIs."},"IShoppingMallAiBackendCouponStackingRule.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"The UUID of the coupon to which this stacking rule belongs. Optional; rule may be global or specific to a coupon."},"excluded_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to a coupon which should be excluded from stacking with this coupon. Optional."},{"type":"null"}],"description":"Reference to a coupon which should be excluded from stacking with this coupon. Optional."},"type":{"oneOf":[{"const":"allow","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},{"const":"deny","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},{"const":"override","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."}],"description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},"applies_to_type":{"oneOf":[{"type":"string","description":"Target coupon type/category this rule applies to (e.g. all 'fixed', 'shipping'). Null if only per-coupon."},{"type":"null"}],"description":"Target coupon type/category this rule applies to (e.g. all 'fixed', 'shipping'). Null if only per-coupon."}},"required":["type"],"description":"Parameters for creating a stacking rule for a coupon. Indicates whether other coupons (by id or type) can/cannot be stacked with this one."},"IShoppingMallAiBackendCouponStackingRule.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"The UUID of the coupon to which this stacking rule belongs. Optional; rule may be global or specific to a coupon."},"excluded_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to a coupon which should be excluded from stacking with this coupon. Optional."},{"type":"null"}],"description":"Reference to a coupon which should be excluded from stacking with this coupon. Optional."},"type":{"oneOf":[{"const":"allow","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},{"const":"deny","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},{"const":"override","description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."}],"description":"Type of stacking rule. Indicates policy: 'allow', 'deny', or 'override'. Enum."},"applies_to_type":{"oneOf":[{"type":"string","description":"Target coupon type/category this rule applies to (e.g. all 'fixed', 'shipping'). Null if only per-coupon."},{"type":"null"}],"description":"Target coupon type/category this rule applies to (e.g. all 'fixed', 'shipping'). Null if only per-coupon."}},"description":"Parameters for updating a stacking rule for a coupon. All fields are optional; only send fields to be patched.","required":[]},"IShoppingMallAiBackendCouponRestriction.IRequest":{"type":"object","properties":{"coupon_id":{"type":"string","format":"uuid","description":"UUID of the parent coupon to filter restrictions by."},"product_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the restricted product. Filter."},{"type":"null"}],"description":"UUID of the restricted product. Filter."},"channel_section_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the channel section this restriction targets. Filter."},{"type":"null"}],"description":"UUID of the channel section this restriction targets. Filter."},"channel_category_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the channel category this restriction targets. Filter."},{"type":"null"}],"description":"UUID of the channel category this restriction targets. Filter."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the restricted customer. Filter."},{"type":"null"}],"description":"UUID of the restricted customer. Filter."},"start_time_from":{"oneOf":[{"type":"string","format":"date-time","description":"Start of filtered range for restriction's start time."},{"type":"null"}],"description":"Start of filtered range for restriction's start time."},"start_time_to":{"oneOf":[{"type":"string","format":"date-time","description":"End of filtered range for restriction's start time."},{"type":"null"}],"description":"End of filtered range for restriction's start time."},"end_time_from":{"oneOf":[{"type":"string","format":"date-time","description":"Start of filtered range for restriction's end time."},{"type":"null"}],"description":"Start of filtered range for restriction's end time."},"end_time_to":{"oneOf":[{"type":"string","format":"date-time","description":"End of filtered range for restriction's end time."},{"type":"null"}],"description":"End of filtered range for restriction's end time."},"weekday_bitmask":{"oneOf":[{"type":"integer","description":"Bitmask filter for specific restricted days of week (optional)."},{"type":"null"}],"description":"Bitmask filter for specific restricted days of week (optional)."},"is_holiday_restricted":{"oneOf":[{"type":"boolean","description":"True if filtering for restrictions enforced on holidays."},{"type":"null"}],"description":"True if filtering for restrictions enforced on holidays."},"reason_code":{"oneOf":[{"type":"string","description":"Business code of restriction. Filter."},{"type":"null"}],"description":"Business code of restriction. Filter."},"page":{"type":"integer","minimum":1,"default":1,"description":"Page number for pagination (1-based)."},"limit":{"type":"integer","minimum":1,"maximum":500,"default":100,"description":"Records per page."},"orderBy":{"oneOf":[{"const":"created_at","description":"Field to sort results by."},{"const":"start_time","description":"Field to sort results by."},{"const":"end_time","description":"Field to sort results by."}],"description":"Field to sort results by."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction."},{"const":"desc","description":"Sort direction."}],"description":"Sort direction."}},"description":"Request type for searching coupon restrictions. Allows advanced filtering, pagination, and sorting.","required":[]},"IPageIShoppingMallAiBackendCouponRestriction.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata returned with the page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponRestriction"},"description":"List of coupon restriction summary records on the current page."}},"required":["pagination","data"],"description":"Paginated response for searching coupon restrictions. Holds page info and summary array."},"IShoppingMallAiBackendCouponRestriction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this coupon restriction entry."},"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"UUID of the coupon this restriction is associated with."},"shopping_mall_ai_backend_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"If restriction applies to a product, its UUID (optional)."},{"type":"null"}],"description":"If restriction applies to a product, its UUID (optional)."},"shopping_mall_ai_backend_channel_section_id":{"oneOf":[{"type":"string","format":"uuid","description":"If restriction applies to a channel section, its UUID (optional)."},{"type":"null"}],"description":"If restriction applies to a channel section, its UUID (optional)."},"shopping_mall_ai_backend_channel_category_id":{"oneOf":[{"type":"string","format":"uuid","description":"If restriction applies to a channel category, its UUID (optional)."},{"type":"null"}],"description":"If restriction applies to a channel category, its UUID (optional)."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"If restriction applies to a customer, their UUID (optional)."},{"type":"null"}],"description":"If restriction applies to a customer, their UUID (optional)."},"start_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement start timestamp. Nullable."},{"type":"null"}],"description":"Restriction enforcement start timestamp. Nullable."},"end_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement end timestamp. Nullable."},{"type":"null"}],"description":"Restriction enforcement end timestamp. Nullable."},"weekday_bitmask":{"oneOf":[{"type":"integer","description":"Bitmask for restriction by weekday. Optional."},{"type":"null"}],"description":"Bitmask for restriction by weekday. Optional."},"is_holiday_restricted":{"oneOf":[{"type":"boolean","description":"If true, restriction applies on holidays. Nullable."},{"type":"null"}],"description":"If true, restriction applies on holidays. Nullable."},"reason_code":{"oneOf":[{"type":"string","description":"Business code for this restriction's reason."},{"type":"null"}],"description":"Business code for this restriction's reason."},"created_at":{"type":"string","format":"date-time","description":"When the restriction record was created."}},"required":["id","shopping_mall_ai_backend_coupon_id","created_at"],"description":"A business logic restriction attached to a coupon, limiting its scope. May restrict by product, section, category, user, weekday, holiday, etc."},"IShoppingMallAiBackendCouponRestriction.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"Coupon ID to which this restriction is applied (required)."},"shopping_mall_ai_backend_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Product UUID if restriction is product-specific."},{"type":"null"}],"description":"Product UUID if restriction is product-specific."},"shopping_mall_ai_backend_channel_section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Channel section if restriction applies at section level."},{"type":"null"}],"description":"Channel section if restriction applies at section level."},"shopping_mall_ai_backend_channel_category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Channel category, if restriction is by category."},{"type":"null"}],"description":"Channel category, if restriction is by category."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer ID, if user restriction."},{"type":"null"}],"description":"Customer ID, if user restriction."},"start_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement start datetime. Optional."},{"type":"null"}],"description":"Restriction enforcement start datetime. Optional."},"end_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement end datetime. Optional."},{"type":"null"}],"description":"Restriction enforcement end datetime. Optional."},"weekday_bitmask":{"oneOf":[{"type":"integer","description":"Bitmask to restrict on certain days. Optional."},{"type":"null"}],"description":"Bitmask to restrict on certain days. Optional."},"is_holiday_restricted":{"oneOf":[{"type":"boolean","description":"Restriction on holidays (if true, also applies during holidays). Optional."},{"type":"null"}],"description":"Restriction on holidays (if true, also applies during holidays). Optional."},"reason_code":{"oneOf":[{"type":"string","description":"Reason business code for audit/evidence. Optional."},{"type":"null"}],"description":"Reason business code for audit/evidence. Optional."}},"required":["shopping_mall_ai_backend_coupon_id"],"description":"Parameters for creating a coupon restriction."},"IShoppingMallAiBackendCouponRestriction.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_coupon_id":{"type":"string","format":"uuid","description":"Coupon ID to which this restriction is applied."},"shopping_mall_ai_backend_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Product UUID if restriction is product-specific."},{"type":"null"}],"description":"Product UUID if restriction is product-specific."},"shopping_mall_ai_backend_channel_section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Channel section if restriction applies at section level."},{"type":"null"}],"description":"Channel section if restriction applies at section level."},"shopping_mall_ai_backend_channel_category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Channel category, if restriction is by category."},{"type":"null"}],"description":"Channel category, if restriction is by category."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer ID, if user restriction."},{"type":"null"}],"description":"Customer ID, if user restriction."},"start_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement start datetime. Optional."},{"type":"null"}],"description":"Restriction enforcement start datetime. Optional."},"end_time":{"oneOf":[{"type":"string","format":"date-time","description":"Restriction enforcement end datetime. Optional."},{"type":"null"}],"description":"Restriction enforcement end datetime. Optional."},"weekday_bitmask":{"oneOf":[{"type":"integer","description":"Bitmask to restrict on certain days. Optional."},{"type":"null"}],"description":"Bitmask to restrict on certain days. Optional."},"is_holiday_restricted":{"oneOf":[{"type":"boolean","description":"Restriction on holidays (if true, also applies during holidays). Optional."},{"type":"null"}],"description":"Restriction on holidays (if true, also applies during holidays). Optional."},"reason_code":{"oneOf":[{"type":"string","description":"Reason business code for audit/evidence. Optional."},{"type":"null"}],"description":"Reason business code for audit/evidence. Optional."}},"description":"Parameters for updating a coupon restriction. All fields optional.","required":[]},"IShoppingMallAiBackendCouponNotification.IRequest":{"type":"object","properties":{"coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by coupon UUID"},{"type":"null"}],"description":"Filter by coupon UUID"},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer UUID"},{"type":"null"}],"description":"Filter by customer UUID"},"notification_type":{"oneOf":[{"type":"string","description":"Type: 'issuance','expiry','reminder','redemption','admin','campaign','error'. Filter."},{"type":"null"}],"description":"Type: 'issuance','expiry','reminder','redemption','admin','campaign','error'. Filter."},"status":{"oneOf":[{"type":"string","description":"Delivery status filter: 'pending','sent','failed','acknowledged'."},{"type":"null"}],"description":"Delivery status filter: 'pending','sent','failed','acknowledged'."},"send_attempts_min":{"oneOf":[{"type":"integer","description":"Min attempts (inclusive)"},{"type":"null"}],"description":"Min attempts (inclusive)"},"send_attempts_max":{"oneOf":[{"type":"integer","description":"Max attempts (inclusive)"},{"type":"null"}],"description":"Max attempts (inclusive)"},"last_attempted_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for sent after this date"},{"type":"null"}],"description":"Filter for sent after this date"},"last_attempted_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for sent before this date"},{"type":"null"}],"description":"Filter for sent before this date"},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Created after date"},{"type":"null"}],"description":"Created after date"},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Created before date"},{"type":"null"}],"description":"Created before date"},"page":{"type":"integer","minimum":1,"default":1,"description":"Page number (>=1)"},"limit":{"type":"integer","minimum":1,"maximum":300,"default":100,"description":"Max records per page"},"orderBy":{"oneOf":[{"const":"created_at","description":"Sorting field"},{"const":"last_attempted_at","description":"Sorting field"}],"description":"Sorting field"},"direction":{"oneOf":[{"const":"asc","description":"Sort direction"},{"const":"desc","description":"Sort direction"}],"description":"Sort direction"}},"description":"Request type for searching coupon notifications. Supports filter, sort, paging.","required":[]},"IShoppingMallAiBackendCouponNotification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the coupon notification event.\n\nThis value uniquely identifies each notification event entity within the shopping mall platform and is used for query, update, or evidence purposes.\n"},"shopping_mall_ai_backend_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Coupon entity this notification relates to (UUID).\n\nMay be null if the notification is only for a specific issuance/code.\n"},{"type":"null","format":"uuid","description":"Coupon entity this notification relates to (UUID).\n\nMay be null if the notification is only for a specific issuance/code.\n"}],"description":"Coupon entity this notification relates to (UUID).\n\nMay be null if the notification is only for a specific issuance/code.\n"},"shopping_mall_ai_backend_coupon_issuance_id":{"oneOf":[{"type":"string","format":"uuid","description":"Coupon issuance entity this notification is about, such as for customer delivery or redemption.\n\nNullable field. If present, this notification is about a particular issuance event.\n"},{"type":"null","format":"uuid","description":"Coupon issuance entity this notification is about, such as for customer delivery or redemption.\n\nNullable field. If present, this notification is about a particular issuance event.\n"}],"description":"Coupon issuance entity this notification is about, such as for customer delivery or redemption.\n\nNullable field. If present, this notification is about a particular issuance event.\n"},"shopping_mall_ai_backend_coupon_code_id":{"oneOf":[{"type":"string","format":"uuid","description":"Coupon code associated with this notification, if it is a code-type campaign/event.\n\nNullable, for bulk/event code notification.\n"},{"type":"null","format":"uuid","description":"Coupon code associated with this notification, if it is a code-type campaign/event.\n\nNullable, for bulk/event code notification.\n"}],"description":"Coupon code associated with this notification, if it is a code-type campaign/event.\n\nNullable, for bulk/event code notification.\n"},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer recipient for the notification, if targeted.\n\nUsed to deliver/track user-specific notification events.\n"},{"type":"null","format":"uuid","description":"Customer recipient for the notification, if targeted.\n\nUsed to deliver/track user-specific notification events.\n"}],"description":"Customer recipient for the notification, if targeted.\n\nUsed to deliver/track user-specific notification events.\n"},"notification_type":{"type":"string","description":"Business event that triggered the notification, e.g., 'issuance', 'expiry', 'reminder', 'redemption', 'admin', 'campaign', 'error'.\n\nSee business codebook or campaign logic for types.\n"},"status":{"type":"string","description":"Delivery state for this notification: e.g., 'pending', 'sent', 'failed', 'acknowledged'.\n\nBusiness status code aligns with communication event state.\n"},"send_attempts":{"type":"integer","description":"Number of send attempts made for this notification event.\n\nAll delivery attempts, including retries, are tracked for reporting.\n"},"last_attempted_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO8601 timestamp of the last delivery attempt for this notification event.\n\nNull if no attempt has yet occurred.\n"},{"type":"null","format":"date-time","description":"ISO8601 timestamp of the last delivery attempt for this notification event.\n\nNull if no attempt has yet occurred.\n"}],"description":"ISO8601 timestamp of the last delivery attempt for this notification event.\n\nNull if no attempt has yet occurred.\n"},"result_message":{"oneOf":[{"type":"string","description":"Provider or platform message outcome for the last notification attempt.\n\nSet on success/failure/error as delivered by external communication system.\n"},{"type":"null","description":"Provider or platform message outcome for the last notification attempt.\n\nSet on success/failure/error as delivered by external communication system.\n"}],"description":"Provider or platform message outcome for the last notification attempt.\n\nSet on success/failure/error as delivered by external communication system.\n"},"created_at":{"type":"string","format":"date-time","description":"Timestamp this notification entry was created (UTC, ISO8601).\n\nRequired for audit and evidence trace.\n"}},"required":["id","notification_type","status","send_attempts","created_at"],"description":"Business-layer event and transaction log for coupon notification attempts (issuance, usage, expiry, etc). Records state, result, and details for every notification handled by the shopping mall system for coupons, campaign, or event-driven user flows. Supports compliance, reporting, marketing analysis, and support resolution. Used for evidence trace in campaign or business dispute scenarios."},"IPageIShoppingMallAiBackendCouponNotification.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for paged response."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCouponNotification.ISummary"},"description":"Array of summary notification objects matching search criteria."}},"required":["pagination","data"],"description":"Paginated collection of coupon notification summary objects matching query. Used for admin and marketing reporting, evidence trace, or analytics UI for campaign effectiveness and operational delivery monitoring."},"IShoppingMallAiBackendCouponNotification.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Notification event UUID (unique ID)."},"notification_type":{"type":"string","description":"Business code for notification event type."},"status":{"type":"string","description":"Delivery/push status for notification event."},"send_attempts":{"type":"integer","description":"Delivery attempt count."},"last_attempted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date/time of last send attempt."},{"type":"null","format":"date-time","description":"Date/time of last send attempt."}],"description":"Date/time of last send attempt."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of notification event."}},"required":["id","notification_type","status","send_attempts","created_at"],"description":"Summary view of a coupon notification event (for paginated table or analytics display)."},"IShoppingMallAiBackendDeposit.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional; null returns first page or default)."},{"type":"null","description":"Page number for pagination (optional; null returns first page or default)."}],"description":"Page number for pagination (optional; null returns first page or default)."},"limit":{"oneOf":[{"type":"integer","description":"Number of items per page (for pagination control; server default if not specified)."},{"type":"null","description":"Number of items per page (for pagination control; server default if not specified)."}],"description":"Number of items per page (for pagination control; server default if not specified)."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter search to only the given customer ID (UUID)."},{"type":"null","format":"uuid","description":"Filter search to only the given customer ID (UUID)."}],"description":"Filter search to only the given customer ID (UUID)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Search only deposit ledgers belonging to this seller ID (UUID)."},{"type":"null","format":"uuid","description":"Search only deposit ledgers belonging to this seller ID (UUID)."}],"description":"Search only deposit ledgers belonging to this seller ID (UUID)."},"min_usable_balance":{"oneOf":[{"type":"number","description":"Minimum usable balance to include in results (nullable; for balance range search)."},{"type":"null","description":"Minimum usable balance to include in results (nullable; for balance range search)."}],"description":"Minimum usable balance to include in results (nullable; for balance range search)."},"max_usable_balance":{"oneOf":[{"type":"number","description":"Maximum usable balance to include in results (nullable; for range filtering)."},{"type":"null","description":"Maximum usable balance to include in results (nullable; for range filtering)."}],"description":"Maximum usable balance to include in results (nullable; for range filtering)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"ISO8601 timestamp to filter from this creation date (inclusive, UTC we recommend)."},{"type":"null","format":"date-time","description":"ISO8601 timestamp to filter from this creation date (inclusive, UTC we recommend)."}],"description":"ISO8601 timestamp to filter from this creation date (inclusive, UTC we recommend)."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"ISO8601 timestamp to filter results up to (inclusive, UTC)."},{"type":"null","format":"date-time","description":"ISO8601 timestamp to filter results up to (inclusive, UTC)."}],"description":"ISO8601 timestamp to filter results up to (inclusive, UTC)."}},"description":"Advanced search and filtering logic for deposit ledger index queries. Allows balancing search and auditing usage scenarios for finance/operations UIs.","required":[]},"IPageIShoppingMallAiBackendDeposit.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging information for browsing large deposit sets."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendDeposit.ISummary"},"description":"Array of summary deposit ledger records for response page."}},"required":["pagination","data"],"description":"Paginated list of deposit ledger summary records, supporting finance, compliance, and search reporting for user/seller balances."},"IShoppingMallAiBackendDeposit.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Deposit ledger unique ID."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Owner customer ID (nullable if not customer type)."},{"type":"null","format":"uuid","description":"Owner customer ID (nullable if not customer type)."}],"description":"Owner customer ID (nullable if not customer type)."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Owner seller ID (nullable if not seller type)."},{"type":"null","format":"uuid","description":"Owner seller ID (nullable if not seller type)."}],"description":"Owner seller ID (nullable if not seller type)."},"total_accrued":{"type":"number","description":"Cumulative credited amount (lifetime)."},"usable_balance":{"type":"number","description":"Current balance available to account holder."},"expired_balance":{"type":"number","description":"Sum of expired balance for evidence/tracking."},"on_hold_balance":{"type":"number","description":"Temporary hold (not available) due to freeze, withdrawal, etc."},"created_at":{"type":"string","format":"date-time","description":"Ledger account creation date/time UTC."},"updated_at":{"type":"string","format":"date-time","description":"Most recent timestamp ledger was updated (for evidence/audit)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-deleted timestamp, if logically removed (else null)."},{"type":"null","format":"date-time","description":"Soft-deleted timestamp, if logically removed (else null)."}],"description":"Soft-deleted timestamp, if logically removed (else null)."}},"required":["id","total_accrued","usable_balance","expired_balance","on_hold_balance","created_at","updated_at"],"description":"Summarized information about a deposit ledger (customer/seller) for paginated reporting."},"IShoppingMallAiBackendDeposit":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Deposit ledger unique business identifier (UUID primary key)."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"If present, deposit ledger is for customer (UUID foreign key)."},{"type":"null","format":"uuid","description":"If present, deposit ledger is for customer (UUID foreign key)."}],"description":"If present, deposit ledger is for customer (UUID foreign key)."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"If present, deposit ledger is for seller (UUID foreign key)."},{"type":"null","format":"uuid","description":"If present, deposit ledger is for seller (UUID foreign key)."}],"description":"If present, deposit ledger is for seller (UUID foreign key)."},"total_accrued":{"type":"number","description":"All-time sum of credited amounts for this ledger account."},"usable_balance":{"type":"number","description":"Current balance available to account holder for use/withdrawal."},"expired_balance":{"type":"number","description":"Cumulative sum of expired (not available) value."},"on_hold_balance":{"type":"number","description":"Balance temporarily blocked/frozen/unusable due to incident/withdrawal/fraud (not included in usable_balance)."},"created_at":{"type":"string","format":"date-time","description":"UTC timestamp when the account ledger was created."},"updated_at":{"type":"string","format":"date-time","description":"UTC timestamp ledger was last updated (for audit)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp marking ledger as removed (never physically deleted)."},{"type":"null","format":"date-time","description":"Soft delete timestamp marking ledger as removed (never physically deleted)."}],"description":"Soft delete timestamp marking ledger as removed (never physically deleted)."}},"required":["id","total_accrued","usable_balance","expired_balance","on_hold_balance","created_at","updated_at"],"description":"Deposit (cash or cash-like) ledger business entity, holding financial status, audit trail fields, and business evidence. Uniquely identified per customer/seller for traceability and compliance. All fields required except soft delete (deleted_at)."},"IShoppingMallAiBackendDeposit.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional customer UUID to bind deposit ledger to customer (nullable if seller)."},{"type":"null","format":"uuid","description":"Optional customer UUID to bind deposit ledger to customer (nullable if seller)."}],"description":"Optional customer UUID to bind deposit ledger to customer (nullable if seller)."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional seller UUID to bind deposit ledger to seller (nullable if customer type only)."},{"type":"null","format":"uuid","description":"Optional seller UUID to bind deposit ledger to seller (nullable if customer type only)."}],"description":"Optional seller UUID to bind deposit ledger to seller (nullable if customer type only)."},"total_accrued":{"oneOf":[{"type":"number","description":"Initial sum for account; defaults to zero if not set explicitly."},{"type":"null","description":"Initial sum for account; defaults to zero if not set explicitly."}],"description":"Initial sum for account; defaults to zero if not set explicitly."},"usable_balance":{"oneOf":[{"type":"number","description":"Initial available balance, defaults to 0 if omitted."},{"type":"null","description":"Initial available balance, defaults to 0 if omitted."}],"description":"Initial available balance, defaults to 0 if omitted."},"expired_balance":{"oneOf":[{"type":"number","description":"Sum of expired currency at creation, defaults to zero."},{"type":"null","description":"Sum of expired currency at creation, defaults to zero."}],"description":"Sum of expired currency at creation, defaults to zero."},"on_hold_balance":{"oneOf":[{"type":"number","description":"Initial on-hold amount, defaults to zero."},{"type":"null","description":"Initial on-hold amount, defaults to zero."}],"description":"Initial on-hold amount, defaults to zero."}},"description":"Create-request for a deposit (cash) ledger entity. Used only by authorized admin/finance roles for onboarding or legacy migration scenarios.","required":[]},"IShoppingMallAiBackendDeposit.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update this to transfer deposit to a different customer ID (rare, restricted to admin/system)."},{"type":"null","format":"uuid","description":"Update this to transfer deposit to a different customer ID (rare, restricted to admin/system)."}],"description":"Update this to transfer deposit to a different customer ID (rare, restricted to admin/system)."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update this to transfer deposit to a different seller ID (rare, restricted to admin/system)."},{"type":"null","format":"uuid","description":"Update this to transfer deposit to a different seller ID (rare, restricted to admin/system)."}],"description":"Update this to transfer deposit to a different seller ID (rare, restricted to admin/system)."},"total_accrued":{"oneOf":[{"type":"number","description":"Correct cumulative credit (for admin/system-correction only)."},{"type":"null","description":"Correct cumulative credit (for admin/system-correction only)."}],"description":"Correct cumulative credit (for admin/system-correction only)."},"usable_balance":{"oneOf":[{"type":"number","description":"Update usable balance (for admin/system correction, subject to business rules)."},{"type":"null","description":"Update usable balance (for admin/system correction, subject to business rules)."}],"description":"Update usable balance (for admin/system correction, subject to business rules)."},"expired_balance":{"oneOf":[{"type":"number","description":"Adjust expired balance (admin/system-correction only)."},{"type":"null","description":"Adjust expired balance (admin/system-correction only)."}],"description":"Adjust expired balance (admin/system-correction only)."},"on_hold_balance":{"oneOf":[{"type":"number","description":"Update on-hold amount (admin/system correction only)."},{"type":"null","description":"Update on-hold amount (admin/system correction only)."}],"description":"Update on-hold amount (admin/system correction only)."}},"description":"Update-request for a deposit ledger entry. Used only in admin/system flows for correcting business or migration defects.","required":[]},"IShoppingMallAiBackendDepositTransaction.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page sequence for paginated query (zero-based or one-based by business convention)."},{"type":"null","description":"Page sequence for paginated query (zero-based or one-based by business convention)."}],"description":"Page sequence for paginated query (zero-based or one-based by business convention)."},"limit":{"oneOf":[{"type":"integer","description":"Page size for pagination."},{"type":"null","description":"Page size for pagination."}],"description":"Page size for pagination."},"deposit_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by associated deposit ledger (UUID)."},{"type":"null","format":"uuid","description":"Filter by associated deposit ledger (UUID)."}],"description":"Filter by associated deposit ledger (UUID)."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer owner (UUID, optional)."},{"type":"null","format":"uuid","description":"Filter by customer owner (UUID, optional)."}],"description":"Filter by customer owner (UUID, optional)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by seller owner (UUID, optional)."},{"type":"null","format":"uuid","description":"Filter by seller owner (UUID, optional)."}],"description":"Filter by seller owner (UUID, optional)."},"change_type":{"oneOf":[{"type":"string","description":"Type of deposit event (accrual, withdrawal, adjustment, freeze, release, admin, etc; see codebook)."},{"type":"null","description":"Type of deposit event (accrual, withdrawal, adjustment, freeze, release, admin, etc; see codebook)."}],"description":"Type of deposit event (accrual, withdrawal, adjustment, freeze, release, admin, etc; see codebook)."},"description_query":{"oneOf":[{"type":"string","description":"Full-text search filter for description field (text match, optional)."},{"type":"null","description":"Full-text search filter for description field (text match, optional)."}],"description":"Full-text search filter for description field (text match, optional)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Start date/time for filtered event list."},{"type":"null","format":"date-time","description":"Start date/time for filtered event list."}],"description":"Start date/time for filtered event list."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"End date/time for filtered event list."},{"type":"null","format":"date-time","description":"End date/time for filtered event list."}],"description":"End date/time for filtered event list."}},"description":"Paginated search/filter/query for deposit transaction log entries, as shown in audit, evidence, compliance, and business reporting UIs.","required":[]},"IShoppingMallAiBackendDepositTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this deposit transaction. Corresponds to primary key."},"shopping_mall_ai_backend_deposit_id":{"type":"string","format":"uuid","description":"Associated deposit ledger id. Foreign key."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to customer owner if applicable."},{"type":"null","format":"uuid","description":"Reference to customer owner if applicable."}],"description":"Reference to customer owner if applicable."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to seller owner if applicable."},{"type":"null","format":"uuid","description":"Reference to seller owner if applicable."}],"description":"Reference to seller owner if applicable."},"change_type":{"type":"string","description":"Nature of transaction (e.g., accrual, usage, withdrawal, expire, reversal, manual_adjustment, incident_lock, incident_unlock, etc.)"},"amount":{"type":"number","description":"Amount changed in this transaction (positive for accrual, negative for usage/expire)."},"transaction_reference":{"oneOf":[{"type":"string","description":"External/internal reference code for audit/correlation (e.g., withdrawal req, order id, etc.)."},{"type":"null","description":"External/internal reference code for audit/correlation (e.g., withdrawal req, order id, etc.)."}],"description":"External/internal reference code for audit/correlation (e.g., withdrawal req, order id, etc.)."},"balance_before":{"type":"number","description":"Ledger balance immediately before this transaction."},"balance_after":{"type":"number","description":"Ledger balance after this transaction is applied."},"reason_code":{"oneOf":[{"type":"string","description":"Business reason or outcome code for analytics/compliance."},{"type":"null","description":"Business reason or outcome code for analytics/compliance."}],"description":"Business reason or outcome code for analytics/compliance."},"description":{"oneOf":[{"type":"string","description":"Textual explanation/context for this transaction, for business review or compliance."},{"type":"null","description":"Textual explanation/context for this transaction, for business review or compliance."}],"description":"Textual explanation/context for this transaction, for business review or compliance."},"created_at":{"type":"string","format":"date-time","description":"Transaction creation timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; null if active."},{"type":"null","format":"date-time","description":"Soft deletion timestamp; null if active."}],"description":"Soft deletion timestamp; null if active."}},"required":["id","shopping_mall_ai_backend_deposit_id","change_type","amount","balance_before","balance_after","created_at"],"description":"A single deposit ledger transaction entry, capturing business event, reference, before/after balances and context. Used as a child ledger row for cash-like deposits."},"IPageIShoppingMallAiBackendDepositTransaction.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendDepositTransaction.ISummary"}}},"required":["pagination","data"],"description":"Paginated summary of deposit transactions, with essential identifying information only for list or search view."},"IShoppingMallAiBackendDepositTransaction.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Transaction id."},"change_type":{"type":"string","description":"Nature of deposit change (enum possible, e.g. accrual/usage/expire/etc)."},"amount":{"type":"number","description":"Amount of transaction."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of transaction creation."}},"required":["id","change_type","amount","created_at"],"description":"Summary row for a deposit transaction, suitable for paginated lists."},"IShoppingMallAiBackendMileage.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"uint32","description":"Page number for search pagination."},{"type":"null","format":"uint32","description":"Page number for search pagination."}],"description":"Page number for search pagination."},"limit":{"oneOf":[{"type":"integer","format":"uint32","description":"Max records per page."},{"type":"null","format":"uint32","description":"Max records per page."}],"description":"Max records per page."}},"description":"Request for paginated/searchable list of mileage ledgers.","required":[]},"IPageIShoppingMallAiBackendMileage.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendMileage.ISummary"}}},"required":["pagination","data"],"description":"Paginated result set containing mileage ledger summaries."},"IShoppingMallAiBackendMileage.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Global mileage ledger id."},"usable_mileage":{"type":"number","description":"Mileage balance available for use."},"created_at":{"type":"string","format":"date-time","description":"Ledger creation timestamp."}},"required":["id","usable_mileage","created_at"],"description":"Summary information for mileage ledger list page."},"IShoppingMallAiBackendMileage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for mileage ledger."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer account owner if present."},{"type":"null","format":"uuid","description":"Customer account owner if present."}],"description":"Customer account owner if present."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller account owner if present."},{"type":"null","format":"uuid","description":"Seller account owner if present."}],"description":"Seller account owner if present."},"total_accrued":{"type":"number","description":"Total mileage/point credits (all-time) including expired/lost."},"usable_mileage":{"type":"number","description":"Current mileage balance available for use."},"expired_mileage":{"type":"number","description":"Mileage value expired or deleted and not available to user."},"on_hold_mileage":{"type":"number","description":"Mileage temporarily frozen due to incident, claim, fraud, etc."},"created_at":{"type":"string","format":"date-time","description":"Ledger creation time for evidence/audit."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for evidence/audit."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; null if active."},{"type":"null","format":"date-time","description":"Soft deletion timestamp; null if active."}],"description":"Soft deletion timestamp; null if active."}},"required":["id","total_accrued","usable_mileage","expired_mileage","on_hold_mileage","created_at","updated_at"],"description":"Mileage (rewards/points) ledger object, mapping to a customer or seller. Contains all balance and evidence fields for compliance."},"IShoppingMallAiBackendMileage.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer owner if applicable."},{"type":"null","format":"uuid","description":"Customer owner if applicable."}],"description":"Customer owner if applicable."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller owner if applicable."},{"type":"null","format":"uuid","description":"Seller owner if applicable."}],"description":"Seller owner if applicable."},"total_accrued":{"type":"number","description":"Initial total accrued mileage (points), may be zero."},"usable_mileage":{"type":"number","description":"Available mileage at account creation."},"expired_mileage":{"type":"number","description":"Expired mileage at creation (rare, usually zero)."},"on_hold_mileage":{"type":"number","description":"On hold mileage value at creation (rare unless migrating/frozen)."}},"required":["total_accrued","usable_mileage","expired_mileage","on_hold_mileage"],"description":"Request body to create a new mileage ledger for a customer or seller, specifying balances as required."},"IShoppingMallAiBackendMileage.IUpdate":{"type":"object","properties":{"total_accrued":{"type":"number","description":"(Admin) Update for total accrued points."},"usable_mileage":{"type":"number","description":"Update for usable mileage."},"expired_mileage":{"type":"number","description":"Update for expired mileage."},"on_hold_mileage":{"type":"number","description":"Update for on-hold/frozen points."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks mileage as deleted (for compliance/soft-delete)."},{"type":"null","format":"date-time","description":"If set, marks mileage as deleted (for compliance/soft-delete)."}],"description":"If set, marks mileage as deleted (for compliance/soft-delete)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for audit."}},"description":"Request body to update an existing mileage ledger, permitting balance changes (admin only) or deletion for compliance.","required":[]},"IPageIShoppingMallAiBackendMileage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendMileage"}}},"required":["pagination","data"],"description":"Paginated response containing an array of mileage ledger objects."},"IShoppingMallAiBackendMileageTransaction.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"uint32","description":"Page number to retrieve."},{"type":"null","format":"uint32","description":"Page number to retrieve."}],"description":"Page number to retrieve."},"limit":{"oneOf":[{"type":"integer","format":"uint32","description":"Records per page."},{"type":"null","format":"uint32","description":"Records per page."}],"description":"Records per page."}},"description":"Request model for paginating and searching a mileage transaction log (history).","required":[]},"IShoppingMallAiBackendCoin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for this coin wallet entity, as a UUID. Used for all business lookup, update, and evidence referencing throughout the system."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique identifier for the customer who owns this coin wallet. Nullable if this wallet is owned by a seller, not a customer. Used to link wallet to customer context for loyalty, refund, campaign, or transaction workflows."},{"type":"null","format":"uuid","description":"Unique identifier for the customer who owns this coin wallet. Nullable if this wallet is owned by a seller, not a customer. Used to link wallet to customer context for loyalty, refund, campaign, or transaction workflows."}],"description":"Unique identifier for the customer who owns this coin wallet. Nullable if this wallet is owned by a seller, not a customer. Used to link wallet to customer context for loyalty, refund, campaign, or transaction workflows."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique identifier for the seller who owns this coin wallet. Nullable if wallet is customer-owned. Used to connect wallet with marketplace sellers for business analytics, settlement, and promotional credits."},{"type":"null","format":"uuid","description":"Unique identifier for the seller who owns this coin wallet. Nullable if wallet is customer-owned. Used to connect wallet with marketplace sellers for business analytics, settlement, and promotional credits."}],"description":"Unique identifier for the seller who owns this coin wallet. Nullable if wallet is customer-owned. Used to connect wallet with marketplace sellers for business analytics, settlement, and promotional credits."},"total_accrued":{"type":"number","description":"Total value of all coins ever granted or accrued (including expired/lost/used). Used for analytics and regulatory audit."},"usable_coin":{"type":"number","description":"Current usable balance of coins available to the account holder. Subset of total accrued less used, expired, or on hold coins."},"expired_coin":{"type":"number","description":"Total value of coins in this wallet that have expired and are thus no longer usable."},"on_hold_coin":{"type":"number","description":"Total value of coins temporarily on hold for review, withdrawal, or compliance issues. These coins cannot be used until released."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of coin wallet creation as ISO date-time. Used in audit log, history, and reporting."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this coin wallet. Used for audit trails and evidence tracking."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Logical deletion timestamp (ISO date-time) for regulatory evidence and compliance. Null if coin wallet is active."},{"type":"null","format":"date-time","description":"Logical deletion timestamp (ISO date-time) for regulatory evidence and compliance. Null if coin wallet is active."}],"description":"Logical deletion timestamp (ISO date-time) for regulatory evidence and compliance. Null if coin wallet is active."}},"required":["id","total_accrued","usable_coin","expired_coin","on_hold_coin","created_at","updated_at"],"description":"Coin wallet ledger for customer/seller promotional/event value accounting. Used for wallet-based promotions, campaign distribution, and compliance evidence. References customer or seller as owner. Used for analytics and regulatory reconciliation."},"IShoppingMallAiBackendCoin.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: UUID of customer to own this new coin wallet. Nullable if this is a seller wallet."},{"type":"null","format":"uuid","description":"Optional: UUID of customer to own this new coin wallet. Nullable if this is a seller wallet."}],"description":"Optional: UUID of customer to own this new coin wallet. Nullable if this is a seller wallet."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: UUID of seller to own this new coin wallet. Nullable if this is a customer wallet."},{"type":"null","format":"uuid","description":"Optional: UUID of seller to own this new coin wallet. Nullable if this is a customer wallet."}],"description":"Optional: UUID of seller to own this new coin wallet. Nullable if this is a customer wallet."},"total_accrued":{"type":"number","description":"Initial value for total coins ever granted (must be 0 or greater; use 0 when first created)."},"usable_coin":{"type":"number","description":"Initial balance of usable coins in this wallet (must be 0 or greater)."},"expired_coin":{"type":"number","description":"Initial expired coins value (usually 0 on creation)."},"on_hold_coin":{"type":"number","description":"Amount of coins to place on hold at creation (typically 0)."}},"required":["total_accrued","usable_coin","expired_coin","on_hold_coin"],"description":"Request body structure for creating a coin wallet ledger for customer/seller. Includes required balances and optional owner identification."},"IShoppingMallAiBackendCoin.IRequest":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for owner customer ID."},{"type":"null","format":"uuid","description":"Optional filter for owner customer ID."}],"description":"Optional filter for owner customer ID."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for owner seller ID."},{"type":"null","format":"uuid","description":"Optional filter for owner seller ID."}],"description":"Optional filter for owner seller ID."},"min_usable_coin":{"type":"number","description":"Minimum usable coin balance filter."},"max_usable_coin":{"type":"number","description":"Maximum usable coin balance filter."},"created_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) timestamp (ISO date-time) for coin wallet creation."},"created_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) timestamp (ISO date-time) for coin wallet creation."},"page":{"type":"integer","description":"Result page number (default 1)."},"limit":{"type":"integer","description":"Maximum number of results per page (default 100)."}},"required":[],"description":"Request structure for advanced search, pagination, or filtering when querying coin wallet ledgers. Fields are all optional. Used for admin and analytical tools."},"IPageIShoppingMallAiBackendCoin":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage_IPagination","description":"Paging and total count metadata."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCoin"},"description":"Paginated result set of coin wallet ledger records."}},"required":["pagination","data"],"description":"Paginated container of coin wallet ledger result record set. Used for API list/search responses, always includes paging information and array of wallet objects."},"IShoppingMallAiBackendCoin.IUpdate":{"type":"object","properties":{"total_accrued":{"type":"number","description":"If set, new total coin value (must reflect true issued/used/expired sum for audit purposes, admin/system only)."},"usable_coin":{"type":"number","description":"If set, adjusted usable coin balance for this wallet."},"expired_coin":{"type":"number","description":"If set, replacement value for expired coins."},"on_hold_coin":{"type":"number","description":"If set, new value for coin balance held (typically for incident/compliance reasons)."}},"required":[],"description":"Fields available for updating a coin wallet ledger via admin or system API call. All properties optional; system determines audit/consistency. Used for business correction, incident handling, or reconciliation. Normal users may not arbitrarily change balances."},"IShoppingMallAiBackendCoinTransaction.IRequest":{"type":"object","properties":{"shopping_mall_ai_backend_coin_id":{"type":"string","format":"uuid","description":"Coin wallet record ID (wallet whose transactions are being queried)."},"change_type":{"type":"string","description":"Optional filter by transaction event type (accrue/use/expire/adjustment/etc, business-defined codes)."},"min_amount":{"type":"number","description":"Minimum transaction value filter."},"max_amount":{"type":"number","description":"Maximum transaction value filter."},"created_from":{"type":"string","format":"date-time","description":"Earliest (inclusive) transaction creation time (ISO date-time)."},"created_to":{"type":"string","format":"date-time","description":"Latest (inclusive) transaction creation time (ISO date-time)."},"page":{"type":"integer","description":"Page number (default 1)."},"limit":{"type":"integer","description":"Maximum number of transaction records per page (default 100)."}},"required":[],"description":"Request filter structure for paginated search and filtering of coin wallet transactions, suitable for analytics, business audit, or incident review scenarios."},"IPageIShoppingMallAiBackendCoinTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage_IPagination","description":"Page metadata for the transaction result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendCoinTransaction"},"description":"Paginated list of coin transaction events."}},"required":["pagination","data"],"description":"Paginated return type for coin wallet transaction query, including paging block and array of transaction items."},"IShoppingMallAiBackendCoinTransaction":{"type":"object","description":"Coin transaction event record for digital wallet changes.\nRepresents one change event (accrual, deduction, manual/admin/incident) for a user's or seller's coin balance.\nThis is an immutable business and audit entity.","properties":{"id":{"type":"string","format":"uuid","description":"Unique transaction event ID (uuid)."},"shopping_mall_ai_backend_coin_id":{"type":"string","format":"uuid","description":"Coin wallet ledger (uuid) this transaction event modifies."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Owner customer (uuid) if the transaction is performed for a user wallet."},{"type":"null","format":"uuid","description":"Owner customer (uuid) if the transaction is performed for a user wallet."}],"description":"Owner customer (uuid) if the transaction is performed for a user wallet."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Owner seller (uuid) if transaction occurs in a seller context."},{"type":"null","format":"uuid","description":"Owner seller (uuid) if transaction occurs in a seller context."}],"description":"Owner seller (uuid) if transaction occurs in a seller context."},"change_type":{"type":"string","description":"Transaction type, e.g. accrue, use, adjustment, campaign event."},"amount":{"type":"number","description":"Value change (positive for addition, negative for deduction)."},"transaction_reference":{"oneOf":[{"type":"string","description":"Transaction context/correlation reference (nullable)."},{"type":"null","description":"Transaction context/correlation reference (nullable)."}],"description":"Transaction context/correlation reference (nullable)."},"coin_before":{"type":"number","description":"Balance before transaction event."},"coin_after":{"type":"number","description":"Balance after transaction event."},"reason_code":{"oneOf":[{"type":"string","description":"Code describing the business/action reason (nullable)."},{"type":"null","description":"Code describing the business/action reason (nullable)."}],"description":"Code describing the business/action reason (nullable)."},"description":{"oneOf":[{"type":"string","description":"Free-text details or audit context (nullable)."},{"type":"null","description":"Free-text details or audit context (nullable)."}],"description":"Free-text details or audit context (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Transaction event creation datetime (ISO8601 with timezone)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete (if present) for compliance context."},{"type":"null","format":"date-time","description":"Soft delete (if present) for compliance context."}],"description":"Soft delete (if present) for compliance context."}},"required":["id","shopping_mall_ai_backend_coin_id","change_type","amount","coin_before","coin_after","created_at"]},"IPageIShoppingMallAiBackendMileageTransaction.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage_IPagination","description":"Pagination and total record information for this summary page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendMileageTransaction.ISummaryItem"},"description":"Current page subset of mileage transaction summary entries."}},"required":["pagination","data"],"description":"Paginated array for summary view of mileage transaction history, typically for user, seller, or admin dashboard and audit review."},"IShoppingMallAiBackendMileageTransaction.ISummaryItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique summary record identifier for the transaction event, globally unique UUID."},"shopping_mall_ai_backend_mileage_id":{"type":"string","format":"uuid","description":"Parent mileage ledger UUID for tracing event in user/seller context."},"change_type":{"type":"string","description":"Type of business event for this transaction, business/loyalty defined."},"amount":{"type":"number","description":"Transaction value added (accrual), used, or expired (negative sign for use or loss)."},"transaction_reference":{"oneOf":[{"type":"string","description":"External or system reference, such as order code or incident reference."},{"type":"null","description":"External or system reference, such as order code or incident reference."}],"description":"External or system reference, such as order code or incident reference."},"mileage_before":{"type":"number","description":"Ledger balance before this transaction was posted."},"mileage_after":{"type":"number","description":"Ledger balance after transaction posts."},"reason_code":{"oneOf":[{"type":"string","description":"Audit/business reason code."},{"type":"null","description":"Audit/business reason code."}],"description":"Audit/business reason code."},"description":{"oneOf":[{"type":"string","description":"Business narrative/notes for this transaction (for audit, evidence, or analytics)."},{"type":"null","description":"Business narrative/notes for this transaction (for audit, evidence, or analytics)."}],"description":"Business narrative/notes for this transaction (for audit, evidence, or analytics)."},"created_at":{"type":"string","format":"date-time","description":"Ledger event timestamp (ISO date-time) for this summary."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp or null if active, used for compliance."},{"type":"null","format":"date-time","description":"Soft deletion timestamp or null if active, used for compliance."}],"description":"Soft deletion timestamp or null if active, used for compliance."}},"required":["id","shopping_mall_ai_backend_mileage_id","change_type","amount","mileage_before","mileage_after","created_at"],"description":"Summary view item for a single mileage point transaction, providing reference linkage and main evidence for dashboards or reporting needs."},"IPage_IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number, for paging calculation."},"limit":{"type":"integer","description":"Result count per page."},"records":{"type":"integer","description":"Total records matching query parameters."},"pages":{"type":"integer","description":"Total number of available result pages."}},"required":["current","limit","records","pages"],"description":"Standard page block information for paginated results. Includes total, page, and capacity information for navigation in paged API responses."},"IShoppingMallAiBackendMileageTransaction":{"type":"object","description":"Mileage points transaction record for accrual, usage, or compliance adjustments.\nLogs one event for a mileage (points) ledger; used for rewards/loyalty evidence.\nImmutable by business rule. Supports customer and seller.","properties":{"id":{"type":"string","format":"uuid","description":"Event UUID primary key."},"shopping_mall_ai_backend_mileage_id":{"type":"string","format":"uuid","description":"Target mileage ledger UUID."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer UUID if applicable."},{"type":"null","format":"uuid","description":"Customer UUID if applicable."}],"description":"Customer UUID if applicable."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller UUID if applicable."},{"type":"null","format":"uuid","description":"Seller UUID if applicable."}],"description":"Seller UUID if applicable."},"change_type":{"type":"string","description":"Transaction type: accrual, use, expire, admin_adjust, etc."},"amount":{"type":"number","description":"Amount (positive or negative based on event context)."},"transaction_reference":{"oneOf":[{"type":"string","description":"Source event reference (order, promo, campaign, etc)."},{"type":"null","description":"Source event reference (order, promo, campaign, etc)."}],"description":"Source event reference (order, promo, campaign, etc)."},"mileage_before":{"type":"number","description":"Ledger state before event."},"mileage_after":{"type":"number","description":"Ledger state after event."},"reason_code":{"oneOf":[{"type":"string","description":"Code describing business/process reason."},{"type":"null","description":"Code describing business/process reason."}],"description":"Code describing business/process reason."},"description":{"oneOf":[{"type":"string","description":"Free-text for audit, compliance, fraud flag, etc."},{"type":"null","description":"Free-text for audit, compliance, fraud flag, etc."}],"description":"Free-text for audit, compliance, fraud flag, etc."},"created_at":{"type":"string","format":"date-time","description":"Datetime of transaction (ISO8601+TZ)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp if record is logically deleted."},{"type":"null","format":"date-time","description":"Soft delete timestamp if record is logically deleted."}],"description":"Soft delete timestamp if record is logically deleted."}},"required":["id","shopping_mall_ai_backend_mileage_id","change_type","amount","mileage_before","mileage_after","created_at"]},"IShoppingMallAiBackendInquiry.IRequest":{"type":"object","description":"Search request for customer/seller/admin inquiries (QnA, support, after-sale, etc).\nAll fields are optional; present for advanced filtering in admin/UX.","properties":{"page":{"oneOf":[{"type":"integer","description":"Page for pagination, optional."},{"type":"null","description":"Page for pagination, optional."}],"description":"Page for pagination, optional."},"limit":{"oneOf":[{"type":"integer","description":"Page size, optional, for paginated search."},{"type":"null","description":"Page size, optional, for paginated search."}],"description":"Page size, optional, for paginated search."},"sort":{"type":"string","description":"Sort expression string, e.g. created_at desc."},"filter":{"type":"object","description":"Business logic filter object.","properties":{},"required":[]},"status":{"type":"string","description":"Only inquiries matching status (open/closed/pending/etc)."},"title":{"type":"string","description":"Partial title text search."},"product_id":{"type":"string","description":"Related product id for filtering."},"order_id":{"type":"string","description":"Order id for filtering."},"private":{"type":"boolean","description":"Filter for privacy (true/false)."},"created_from":{"type":"string","description":"Lower created_at time for filtering."},"created_to":{"type":"string","description":"Upper created_at time for filtering."}},"required":[]},"IPageIShoppingMallAiBackendInquiry.ISummary":{"type":"object","description":"Paginated summary list of inquiries according to pagination structure.\nFor search results or filtered inquiry overviews.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging meta information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendInquiry.ISummary"},"description":"Array of inquiry summary records for this page."}},"required":["pagination","data"]},"IShoppingMallAiBackendInquiry.ISummary":{"type":"object","description":"Summary structure for a user inquiry in listings.\nUsed for list pages, admin overview, customer UX, etc.","properties":{"id":{"type":"string","format":"uuid","description":"Inquiry unique identifier."},"title":{"type":"string","description":"Inquiry title (subject line)."},"status":{"type":"string","description":"Status - open/answered/closed/etc."},"private":{"type":"boolean","description":"Privacy (private/public); true if only owner and counterpart can see."},"created_at":{"type":"string","description":"Creation timestamp."},"updated_at":{"type":"string","description":"Last update timestamp."}},"required":["id","title","status","private","created_at","updated_at"]},"IShoppingMallAiBackendInquiry":{"type":"object","description":"Full inquiry business entity. Used for get/detail and main inquiry flows.\nAligns to schema record for reading, updating, evidence.","properties":{"id":{"type":"string","format":"uuid","description":"Unique inquiry record."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Owner customer (nullable for seller-only inquiries)."},{"type":"null","format":"uuid","description":"Owner customer (nullable for seller-only inquiries)."}],"description":"Owner customer (nullable for seller-only inquiries)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller owner (nullable for customer-only or admin inquiries)."},{"type":"null","format":"uuid","description":"Seller owner (nullable for customer-only or admin inquiries)."}],"description":"Seller owner (nullable for customer-only or admin inquiries)."},"product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Product ID the inquiry is about (if applicable)."},{"type":"null","format":"uuid","description":"Product ID the inquiry is about (if applicable)."}],"description":"Product ID the inquiry is about (if applicable)."},"order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order ID this inquiry is linked to (for post-sales activity)."},{"type":"null","format":"uuid","description":"Order ID this inquiry is linked to (for post-sales activity)."}],"description":"Order ID this inquiry is linked to (for post-sales activity)."},"title":{"type":"string","description":"Inquiry subject/summary line."},"body":{"type":"string","description":"Full text content of the inquiry."},"private":{"type":"boolean","description":"True if private (visible only to owner and target); false if public."},"status":{"type":"string","description":"Workflow state (open/answered/closed/etc)."},"closed_at":{"oneOf":[{"type":"string","description":"Timestamp inquiry was closed/resolved."},{"type":"null","description":"Timestamp inquiry was closed/resolved."}],"description":"Timestamp inquiry was closed/resolved."},"created_at":{"type":"string","description":"Creation timestamp."},"updated_at":{"type":"string","description":"Timestamp of last update."},"deleted_at":{"oneOf":[{"type":"string","description":"Soft delete (when logically deleted)."},{"type":"null","description":"Soft delete (when logically deleted)."}],"description":"Soft delete (when logically deleted)."}},"required":["id","title","body","private","status","created_at","updated_at"]},"IShoppingMallAiBackendInquiry.ICreate":{"type":"object","description":"Creation structure for a new inquiry from any party.\nUsed with POST endpoints for customer/seller/admin engagement.","properties":{"customer_id":{"oneOf":[{"type":"string","description":"Customer creating the inquiry (if applicable)."},{"type":"null","description":"Customer creating the inquiry (if applicable)."}],"description":"Customer creating the inquiry (if applicable)."},"seller_id":{"oneOf":[{"type":"string","description":"Seller creating/managing the inquiry (if applicable)."},{"type":"null","description":"Seller creating/managing the inquiry (if applicable)."}],"description":"Seller creating/managing the inquiry (if applicable)."},"product_id":{"oneOf":[{"type":"string","description":"Related product ID."},{"type":"null","description":"Related product ID."}],"description":"Related product ID."},"order_id":{"oneOf":[{"type":"string","description":"Related order ID if linked."},{"type":"null","description":"Related order ID if linked."}],"description":"Related order ID if linked."},"title":{"type":"string","description":"Inquiry title/subject."},"body":{"type":"string","description":"Body content."},"private":{"type":"boolean","description":"Private=visible only to owner/counterparty; public=open."},"status":{"type":"string","description":"Initial workflow status ('open', etc)."}},"required":["title","body","private","status"]},"IShoppingMallAiBackendInquiry.IUpdate":{"type":"object","description":"Partial update patch structure for an existing inquiry.\nOnly includes fields permitted to be changed.","properties":{"title":{"type":"string","description":"New/edited title for the inquiry."},"body":{"type":"string","description":"Content/body update."},"private":{"type":"boolean","description":"Change privacy state."},"status":{"type":"string","description":"Status update (e.g. open, closed, etc)."},"closed_at":{"oneOf":[{"type":"string","description":"Close timestamp for status transitions."},{"type":"null","description":"Close timestamp for status transitions."}],"description":"Close timestamp for status transitions."}},"required":[]},"IShoppingMallAiBackendInquiryReply.IRequest":{"type":"object","description":"Request for searching replies to an inquiry.\nAll fields optional, for use in advanced filtering/pagination.","properties":{"page":{"oneOf":[{"type":"integer","description":"Page for reply pagination."},{"type":"null","description":"Page for reply pagination."}],"description":"Page for reply pagination."},"limit":{"oneOf":[{"type":"integer","description":"Max items per page."},{"type":"null","description":"Max items per page."}],"description":"Max items per page."},"sort":{"type":"string","description":"Sorting keys/rules for reply list."},"filter":{"type":"object","description":"Additional filter logic as appropriate.","properties":{},"required":[]},"author_type":{"type":"string","description":"Filter by author (customer/seller/admin/system)."},"created_from":{"type":"string","description":"Created_at min boundary."},"created_to":{"type":"string","description":"Created_at max boundary."}},"required":[]},"IPageIShoppingMallAiBackendInquiryReply.ISummary":{"type":"object","description":"A page of inquiry reply summaries. Contains summary data on individual replies made to inquiries in the system, supporting paginated admin/customer/seller views. Pagination allows efficient retrieval of large thread or ticket histories. The data array contains reply summaries with evidence/audit fields. Used for dashboards, thread viewers, or audit reporting. STRICTLY use named summary type for reply item type.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info for this page, including current page, record count, and total pages."},"data":{"type":"array","description":"Paginated array of inquiry reply summary objects.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendInquiryReply.ISummary"}}},"required":["pagination","data"]},"IShoppingMallAiBackendInquiryReply.ISummary":{"type":"object","description":"A summary view of an inquiry reply for paged lists. Exposes evidence/audit fields and basic author/timestamps for a reply to an inquiry, but omits full relational/nested objects for performance. Used in paginated reply threads, dashboards, or inbox views. All fields mirror the inquiry reply table columns but are typically a subset/reflection for list rendering.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this inquiry reply."},"inquiry_id":{"type":"string","format":"uuid","description":"The inquiry this reply references."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent reply's ID if this is a nested thread. Nullable."},{"type":"null","format":"uuid","description":"Parent reply's ID if this is a nested thread. Nullable."}],"description":"Parent reply's ID if this is a nested thread. Nullable."},"author_type":{"oneOf":[{"const":"customer","description":"Type of author who wrote this reply (customer, seller, admin).","example":"customer"},{"const":"seller","description":"Type of author who wrote this reply (customer, seller, admin).","example":"customer"},{"const":"admin","description":"Type of author who wrote this reply (customer, seller, admin).","example":"customer"}],"description":"Type of author who wrote this reply (customer, seller, admin)."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"If authored by a customer, this is their UUID. Nullable."},{"type":"null","format":"uuid","description":"If authored by a customer, this is their UUID. Nullable."}],"description":"If authored by a customer, this is their UUID. Nullable."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"If authored by a seller, this is their UUID. Nullable."},{"type":"null","format":"uuid","description":"If authored by a seller, this is their UUID. Nullable."}],"description":"If authored by a seller, this is their UUID. Nullable."},"body":{"type":"string","description":"The content of the reply."},"private":{"type":"boolean","description":"Whether the reply is private (not visible to all)."},"created_at":{"type":"string","format":"date-time","description":"Reply creation time (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time (ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp this reply was (soft) deleted, else null."},{"type":"null","format":"date-time","description":"Timestamp this reply was (soft) deleted, else null."}],"description":"Timestamp this reply was (soft) deleted, else null."}},"required":["id","inquiry_id","author_type","body","private","created_at","updated_at"]},"IShoppingMallAiBackendFinancialIncident.IRequest":{"type":"object","description":"Request search/filter parameters for paginated financial incident queries. Allows admins and compliance teams to filter and paginate across financial event records on deposits, mileage, coins, customers, sellers, or incidents. Provides for time windows and result ordering for business/forensic review. All fields optional to allow flexible searching. Omit fields for open-ended queries.","properties":{"id":{"type":"string","format":"uuid","description":"Financial incident ID (optional)."},"shopping_mall_ai_backend_deposit_id":{"type":"string","format":"uuid","description":"Restrict search to incidents for this depositRecord (optional)."},"shopping_mall_ai_backend_mileage_id":{"type":"string","format":"uuid","description":"Incident on this mileage ledger only."},"shopping_mall_ai_backend_coin_id":{"type":"string","format":"uuid","description":"Incident involving this coin ledger only."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"Incident only for this customer (optional)."},"shopping_mall_ai_backend_seller_id":{"type":"string","format":"uuid","description":"Incident only for this seller (optional)."},"incident_type":{"type":"string","description":"String filter for incident business type (see codebook enumeration)."},"status":{"type":"string","description":"Business/processing status filter."},"details":{"type":"string","description":"Text filter for context (optional, full-text search)."},"created_at_from":{"type":"string","format":"date-time","description":"Filter for creation timestamps on/after this (optional)."},"created_at_to":{"type":"string","format":"date-time","description":"Favorites added before this datetime."},"resolved_at_from":{"type":"string","format":"date-time","description":"Window for incidents resolved after this (optional)."},"resolved_at_to":{"type":"string","format":"date-time","description":"Window for incident resolution before this (optional)."},"page":{"type":"integer","description":"Pagination: page number (1-based index)."},"limit":{"type":"integer","description":"Pagination: max rows per page."},"order_by":{"type":"string","description":"Field to order sorting by (e.g., created_at, status)."},"direction":{"oneOf":[{"const":"asc","description":"Ascending or descending sort."},{"const":"desc","description":"Ascending or descending sort."}],"description":"Ascending or descending sort."}},"required":[]},"IPageIShoppingMallAiBackendFinancialIncident.ISummary":{"type":"object","description":"A page containing summaries of financial incidents. Used by admin or compliance staff for business and regulatory monitoring. Supports pagination, sort, and summary/evidence access.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info."},"data":{"type":"array","description":"Array of financial incident summary objects.","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFinancialIncident.ISummary"}}},"required":["pagination","data"]},"IShoppingMallAiBackendFinancialIncident.ISummary":{"type":"object","description":"Summary view for a financial incident record, omitting full details for list efficiency. Used in pages, dashboards, or search screens. Evidence fields present; only fields required for identification, state, and review included.","properties":{"id":{"type":"string","format":"uuid","description":"Incident record ID."},"incident_type":{"type":"string","description":"Incident type code (see codebook for enum)."},"status":{"type":"string","description":"Current business/system status (see codebook for enum)."},"created_at":{"type":"string","format":"date-time","description":"Original creation time."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time","description":"Resolution time or null if unresolved."},{"type":"null","format":"date-time","description":"Resolution time or null if unresolved."}],"description":"Resolution time or null if unresolved."},"external_reference":{"oneOf":[{"type":"string","description":"External reference code, if any."},{"type":"null","description":"External reference code, if any."}],"description":"External reference code, if any."}},"required":["id","incident_type","status","created_at"]},"IShoppingMallAiBackendFinancialIncident":{"type":"object","description":"Full detail for an individual financial incident record, including all context, relations, business/rule attributes, and audit evidence. Used for support, regulatory, or compliance reviews.","properties":{"id":{"type":"string","format":"uuid","description":"Incident record ID."},"shopping_mall_ai_backend_deposit_id":{"oneOf":[{"type":"string","format":"uuid","description":"If related to deposit ledger, the reference. Nullable."},{"type":"null","format":"uuid","description":"If related to deposit ledger, the reference. Nullable."}],"description":"If related to deposit ledger, the reference. Nullable."},"shopping_mall_ai_backend_mileage_id":{"oneOf":[{"type":"string","format":"uuid","description":"If related to mileage ledger, the reference."},{"type":"null","format":"uuid","description":"If related to mileage ledger, the reference."}],"description":"If related to mileage ledger, the reference."},"shopping_mall_ai_backend_coin_id":{"oneOf":[{"type":"string","format":"uuid","description":"If involves coin ledger, the reference."},{"type":"null","format":"uuid","description":"If involves coin ledger, the reference."}],"description":"If involves coin ledger, the reference."},"shopping_mall_ai_backend_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"If incident relates to customer, this field holds their ID."},{"type":"null","format":"uuid","description":"If incident relates to customer, this field holds their ID."}],"description":"If incident relates to customer, this field holds their ID."},"shopping_mall_ai_backend_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"If incident relates to seller, their ID."},{"type":"null","format":"uuid","description":"If incident relates to seller, their ID."}],"description":"If incident relates to seller, their ID."},"incident_type":{"type":"string","description":"Incident code string (enum in codebook, e.g.: fraud, compliance_audit, withdrawal_dispute, etc)."},"status":{"type":"string","description":"Business/processing status (enum: open, closed, resolved, reversing, etc.)."},"details":{"type":"string","description":"Narrative or machine context for the incident (text)."},"external_reference":{"oneOf":[{"type":"string","description":"Reference code for linking this incident to an external system or legal/compliance event; nullable."},{"type":"null","description":"Reference code for linking this incident to an external system or legal/compliance event; nullable."}],"description":"Reference code for linking this incident to an external system or legal/compliance event; nullable."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601, UTC)."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time","description":"Resolution time or null if unresolved."},{"type":"null","format":"date-time","description":"Resolution time or null if unresolved."}],"description":"Resolution time or null if unresolved."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Time incident was soft-deleted, or null if active."},{"type":"null","format":"date-time","description":"Time incident was soft-deleted, or null if active."}],"description":"Time incident was soft-deleted, or null if active."}},"required":["id","incident_type","status","details","created_at"]},"IShoppingMallAiBackendInquiryReply":{"type":"object","description":"Full detail representation of an inquiry reply. Contains all primary audit fields and business context from the database. Used for drill-down, reply viewing, or moderation. Mirrors the inquiry reply table in the schema and documents all business/evidence state properties.","properties":{"id":{"type":"string","format":"uuid","description":"Unique reply identifier."},"inquiry_id":{"type":"string","format":"uuid","description":"Inquiry for which this reply was written."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"If this is a reply to another reply, the parent. Nullable for top-level replies."},{"type":"null","format":"uuid","description":"If this is a reply to another reply, the parent. Nullable for top-level replies."}],"description":"If this is a reply to another reply, the parent. Nullable for top-level replies."},"author_type":{"oneOf":[{"const":"customer","description":"Role/actor type who authored the reply."},{"const":"seller","description":"Role/actor type who authored the reply."},{"const":"admin","description":"Role/actor type who authored the reply."}],"description":"Role/actor type who authored the reply."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of customer if author_type==customer."},{"type":"null","format":"uuid","description":"UUID of customer if author_type==customer."}],"description":"UUID of customer if author_type==customer."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of seller if author_type==seller."},{"type":"null","format":"uuid","description":"UUID of seller if author_type==seller."}],"description":"UUID of seller if author_type==seller."},"body":{"type":"string","description":"Reply message content."},"private":{"type":"boolean","description":"Whether the reply is private/secret."},"created_at":{"type":"string","format":"date-time","description":"Time of reply creation (UTC, ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Time of last modification (UTC, ISO8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of soft deletion, null if active."},{"type":"null","format":"date-time","description":"Timestamp of soft deletion, null if active."}],"description":"Timestamp of soft deletion, null if active."}},"required":["id","inquiry_id","author_type","body","private","created_at","updated_at"]},"IShoppingMallAiBackendInquiryReply.ICreate":{"type":"object","description":"Request body for creating a new inquiry reply. Contains required and optional business fields, all input must follow security and evidence rules. Never accepts author id (inferred from login context). Optional parent_id allows reply nesting. Only input fields are shown here.","properties":{"inquiry_id":{"type":"string","format":"uuid","description":"Unique identifier of inquiry being replied to."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: parent reply id for nesting/threaded reply (nullable)."},{"type":"null","format":"uuid","description":"Optional: parent reply id for nesting/threaded reply (nullable)."}],"description":"Optional: parent reply id for nesting/threaded reply (nullable)."},"body":{"type":"string","description":"Main message content of the reply (required)."},"private":{"type":"boolean","description":"Whether the reply is private or should be visible to all."}},"required":["inquiry_id","body","private"]},"IShoppingMallAiBackendInquiryReply.IUpdate":{"type":"object","description":"Request body for updating an inquiry reply. All properties are optional; only present fields are updated. No updatable relation fields (inquiry_id, author, etc).","properties":{"body":{"type":"string","description":"Revised reply message content (optional)."},"private":{"type":"boolean","description":"Updated privacy flag (optional)."}},"required":[]},"IShoppingMallAiBackendFavorite.IRequest":{"type":"object","description":"Advanced search/filter object for paginated favorite queries. Used by customers (and admins) to filter favorites (products, addresses, inquiries) by type, folder, text, time. Document all fields here so UI/queries can offer full-featured searching. No required field; composite queries welcome.","properties":{"target_type":{"type":"string","description":"Type of the favorited entity (e.g., product, address, inquiry, etc)."},"folder_id":{"type":"string","format":"uuid","description":"Favorites folder/group id for this query (optional)."},"q":{"type":"string","description":"Free-text search for favorited entity name, snapshot, or other content."},"created_at_from":{"type":"string","format":"date-time","description":"Filter favorites added on/after this datetime."},"created_at_to":{"type":"string","format":"date-time","description":"Favorites added before this datetime."},"page":{"type":"integer","description":"Page number, defaults to 1."},"limit":{"type":"integer","description":"Records per page, defaults by system config."},"order_by":{"type":"string","description":"Field to sort on (e.g.: created_at, target_type, snapshot, etc)."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction for the ordered field."},{"const":"desc","description":"Sort direction for the ordered field."}],"description":"Sort direction for the ordered field."}},"required":[]},"IShoppingMallAiBackendFavorite":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the favorite bookmark record. Created upon favoriting and used for referencing and evidence. Prisma: id."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"ID of the customer who owns this favorite bookmark. Prisma: shopping_mall_ai_backend_customer_id."},"shopping_mall_ai_backend_favorite_folder_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional folder/group ID for organizing this favorite bookmark. Null if not grouped. Prisma: shopping_mall_ai_backend_favorite_folder_id."},{"type":"null","format":"uuid","description":"Optional folder/group ID for organizing this favorite bookmark. Null if not grouped. Prisma: shopping_mall_ai_backend_favorite_folder_id."}],"description":"Optional folder/group ID for organizing this favorite bookmark. Null if not grouped. Prisma: shopping_mall_ai_backend_favorite_folder_id."},"title_snapshot":{"oneOf":[{"type":"string","description":"Snapshot of the favorited item's title at the moment of favoriting for notification/audit. Nullable. Prisma: title_snapshot."},{"type":"null","description":"Snapshot of the favorited item's title at the moment of favoriting for notification/audit. Nullable. Prisma: title_snapshot."}],"description":"Snapshot of the favorited item's title at the moment of favoriting for notification/audit. Nullable. Prisma: title_snapshot."},"target_type":{"type":"string","description":"Type of entity favorited (e.g., product, address, inquiry). Used for join mapping and evidence. Prisma: target_type."},"target_id_snapshot":{"oneOf":[{"type":"string","description":"Target entity's identifier snapshot. Used to reconstruct state at favoriting. Prisma: target_id_snapshot."},{"type":"null","description":"Target entity's identifier snapshot. Used to reconstruct state at favoriting. Prisma: target_id_snapshot."}],"description":"Target entity's identifier snapshot. Used to reconstruct state at favoriting. Prisma: target_id_snapshot."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the favorite was created. ISO 8601. Prisma: created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this favorite record. Prisma: updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when logically deleted. Null if active. Prisma: deleted_at."},{"type":"null","format":"date-time","description":"Timestamp when logically deleted. Null if active. Prisma: deleted_at."}],"description":"Timestamp when logically deleted. Null if active. Prisma: deleted_at."}},"required":["id","shopping_mall_ai_backend_customer_id","target_type","created_at","updated_at"],"description":"Favorite bookmark record in the shopping mall backend. Links a customer to a favorited item (product, address, inquiry, etc.) with snapshot evidence and folder/group organization. Follows the shopping_mall_ai_backend_favorites schema. Used for favorite list UI, notifications, and audit compliance."},"IShoppingMallAiBackendFavorite.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"ID of the customer creating this favorite bookmark."},"shopping_mall_ai_backend_favorite_folder_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional folder/group ID for organizing this favorite. May be null."},{"type":"null","format":"uuid","description":"Optional folder/group ID for organizing this favorite. May be null."}],"description":"Optional folder/group ID for organizing this favorite. May be null."},"title_snapshot":{"oneOf":[{"type":"string","description":"Title of the favorited item at the time of favoriting. For audit and notifications, can be null."},{"type":"null","description":"Title of the favorited item at the time of favoriting. For audit and notifications, can be null."}],"description":"Title of the favorited item at the time of favoriting. For audit and notifications, can be null."},"target_type":{"type":"string","description":"Type code for the favorited entity (e.g., product, address, inquiry)."},"target_id_snapshot":{"oneOf":[{"type":"string","description":"Target entity's identifier at favoriting. Can be null for non-entity or complex group."},{"type":"null","description":"Target entity's identifier at favoriting. Can be null for non-entity or complex group."}],"description":"Target entity's identifier at favoriting. Can be null for non-entity or complex group."}},"required":["shopping_mall_ai_backend_customer_id","target_type"],"description":"Request DTO for creating a new favorite (bookmark). Used in POST to /favorites endpoint. Maps to shopping_mall_ai_backend_favorites. Excludes evidence, timestamps, and ID (system managed)."},"IShoppingMallAiBackendFavorite.IUpdate":{"type":"object","properties":{"shopping_mall_ai_backend_favorite_folder_id":{"oneOf":[{"type":"string","format":"uuid","description":"New folder to put the favorite in, or null to remove grouping."},{"type":"null","format":"uuid","description":"New folder to put the favorite in, or null to remove grouping."}],"description":"New folder to put the favorite in, or null to remove grouping."},"title_snapshot":{"oneOf":[{"type":"string","description":"Update snapshot title. Rarely edited, but can support display correction or notifications."},{"type":"null","description":"Update snapshot title. Rarely edited, but can support display correction or notifications."}],"description":"Update snapshot title. Rarely edited, but can support display correction or notifications."}},"description":"Request type for updating a customer's favorite bookmark. Only group/folder and title snapshot are updatable. Used in PUT on /favorites/{favoriteId}.","required":[]},"IShoppingMallAiBackendFavorite.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Favorite record ID."},"target_type":{"type":"string","description":"Summary type (e.g., product, address, inquiry)."},"title_snapshot":{"oneOf":[{"type":"string","description":"Saved title of the favorited entity (for evidence/audit)."},{"type":"null","description":"Saved title of the favorited entity (for evidence/audit)."}],"description":"Saved title of the favorited entity (for evidence/audit)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp favorite was created."}},"required":["id","target_type","created_at"],"description":"Summary model for listing customer favorites, includes essential fields only for efficiency."},"IPageIShoppingMallAiBackendFavorite.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for a page of favorites."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFavorite.ISummary"},"description":"Array of summarized favorite records for the page."}},"required":["pagination","data"],"description":"Paginated results of summarized favorites for listing UI and search with meta info."},"IShoppingMallAiBackendFavoriteProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for this favorite<->product mapping record."},"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"Favorite entity ID this mapping belongs to (bookmark/group/folder)."},"shopping_mall_ai_backend_product_id":{"type":"string","format":"uuid","description":"Product entity favorited in this map."},"created_at":{"type":"string","format":"date-time","description":"Timestamp this product was added to favorites."}},"required":["id","shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_product_id","created_at"],"description":"Join table mapping a customer favorite to a favorited product, with evidence and timestamps. Prisma: shopping_mall_ai_backend_favorite_products."},"IShoppingMallAiBackendFavoriteProduct.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Requested page number. 1-based; if omitted/null, defaults to first page."},{"type":"null","description":"Requested page number. 1-based; if omitted/null, defaults to first page."}],"description":"Requested page number. 1-based; if omitted/null, defaults to first page."},"limit":{"oneOf":[{"type":"integer","description":"Maximum results per page. If null, use business default."},{"type":"null","description":"Maximum results per page. If null, use business default."}],"description":"Maximum results per page. If null, use business default."},"sort":{"type":"string","description":"Sort order, formatted as 'field,(asc|desc)'. E.g. 'created_at,desc'."},"filter":{"type":"string","description":"Raw filter/query for advanced searching (reserved for business logic)."}},"description":"Advanced query/filter/search for favorite products list in a folder/group. Used on PATCH for /favorites/{favoriteId}/products.","required":[]},"IShoppingMallAiBackendFavoriteProduct.ICreate":{"type":"object","properties":{"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"Favorite bookmark/group ID to map the product to."},"shopping_mall_ai_backend_product_id":{"type":"string","format":"uuid","description":"ID of the product being favorited by customer."}},"required":["shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_product_id"],"description":"Request DTO for creating a new favorite product mapping under a favorite bookmark/group."},"IShoppingMallAiBackendFavoriteProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Mapping record's unique identifier."},"shopping_mall_ai_backend_product_id":{"type":"string","format":"uuid","description":"Favorited product ID (foreign key reference)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp the product was favorited."}},"required":["id","shopping_mall_ai_backend_product_id","created_at"],"description":"Summary of a favorited product under a favorite group/folder for customer dashboards."},"IPageIShoppingMallAiBackendFavoriteProduct.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging object."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFavoriteProduct.ISummary"},"description":"List of favorited product summary records for the requested page."}},"required":["pagination","data"],"description":"Paginated response type for batches of favorited product summary records."},"IShoppingMallAiBackendFavoriteAddress":{"type":"object","description":"Favorite address mapping entity, representing a customer's favorited delivery address. Mirrors the shopping_mall_ai_backend_favorite_addresses schema. Used to display or manage favorites in user dashboards and for notification or checkout efficiency. Includes a business evidence snapshot for audit and notification.\n\n- id: Unique identifier (UUID) of the favorite address entry.\n- shopping_mall_ai_backend_favorite_id: UUID of the parent favorite entity.\n- shopping_mall_ai_backend_customer_id: UUID of the customer owner.\n- address_snapshot: Optional. JSON/text snapshot of the address details at the time it was favorited. Used for evidence and as backup in case address changes later.\n- created_at: ISO8601 datetime string of creation.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for favorite address."},"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"UUID of parent favorite entity/folder/group."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"UUID of the customer who owns this favorite."},"address_snapshot":{"oneOf":[{"type":"string","description":"Serialized snapshot of address details at time of favoriting. Used for evidence and rollback."},{"type":"null","description":"Serialized snapshot of address details at time of favoriting. Used for evidence and rollback."}],"description":"Serialized snapshot of address details at time of favoriting. Used for evidence and rollback."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 creation datetime of favorite address."}},"required":["id","shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_customer_id","created_at"]},"IShoppingMallAiBackendFavoriteAddress.IRequest":{"type":"object","description":"Request object for searching/paginating a customer's favorited addresses in a favorite group. Adds optional filterable fields for UI/UX scenarios. All fields optional for flexible queries.","properties":{"page":{"type":"integer","format":"int32","minimum":1,"description":"Page number for pagination (1-based)."},"limit":{"type":"integer","format":"int32","minimum":1,"description":"Page size limit."},"sort":{"type":"string","description":"Sort order string (e.g., 'created_at:desc')."},"search":{"type":"string","description":"Free text search for address snapshot fields."}},"required":[]},"IShoppingMallAiBackendFavoriteAddress.ISummary":{"type":"object","description":"Summary entry for one favorited address, for paginated results. Returns only high-level fields appropriate for brief list views, like address preview and favorited date. Used for displaying favorites folders, list UIs, etc.","properties":{"id":{"type":"string","format":"uuid","description":"Fav address unique identifier."},"address_snapshot":{"oneOf":[{"type":"string","description":"Minimal/preview string snapshot of the favorited address."},{"type":"null","description":"Minimal/preview string snapshot of the favorited address."}],"description":"Minimal/preview string snapshot of the favorited address."},"created_at":{"type":"string","format":"date-time","description":"Favorited date/time (ISO8601)."}},"required":["id","created_at"]},"IShoppingMallAiBackendFavoriteAddress.ICreate":{"type":"object","description":"Payload to create a new favorited address. Maps only to explicit favorite-folder/customer relationship, and (optionally) the current snapshot of address details for evidence. Used on 'add to favorites' flow in profile or checkout UI.","properties":{"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"UUID of parent favorite/folder to assign this address to."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"UUID of customer performing the favorite action."},"address_snapshot":{"oneOf":[{"type":"string","description":"Current address snapshot at time of favoriting."},{"type":"null","description":"Current address snapshot at time of favoriting."}],"description":"Current address snapshot at time of favoriting."}},"required":["shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_customer_id"]},"IPageIShoppingMallAiBackendFavoriteAddress.ISummary":{"type":"object","description":"Paginated response for favorited addresses summary records. Conforms to IPage<T> pattern, where data contains array of address summaries. Used for favorites folder contents list.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the result set. Page, limit, record count, total pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFavoriteAddress.ISummary"},"description":"Array of summary records for each favorite address."}},"required":["pagination","data"]},"IShoppingMallAiBackendFavoriteInquiry":{"type":"object","description":"A single favorited inquiry (QnA/bookmarked question) mapping for a customer. Mirrors shopping_mall_ai_backend_favorite_inquiries table fields, includes inquiry reference and cached snapshot for evidence. Used in QnA dashboards, notification flows, personalized service management. Serves as an association enabling customer-focused features around support and contextual follow-up.","properties":{"id":{"type":"string","format":"uuid","description":"Unique favorited inquiry ID."},"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"Parent favorite group/folder UUID."},"shopping_mall_ai_backend_inquiry_id":{"type":"string","format":"uuid","description":"Associated inquiry's UUID."},"inquiry_snapshot":{"oneOf":[{"type":"string","description":"Snapshot or preview string of inquiry at favoriting (for audit/evidence)."},{"type":"null","description":"Snapshot or preview string of inquiry at favoriting (for audit/evidence)."}],"description":"Snapshot or preview string of inquiry at favoriting (for audit/evidence)."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 creation datetime of the favorite-inquiry object."}},"required":["id","shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_inquiry_id","created_at"]},"IShoppingMallAiBackendFavoriteInquiry.IRequest":{"type":"object","description":"Request object for searching or paginating a customer's favorited inquiries in a given folder. All fields optional for flexible searching, supports advanced UIs.","properties":{"page":{"type":"integer","format":"int32","minimum":1,"description":"Page number (1-based)."},"limit":{"type":"integer","format":"int32","minimum":1,"description":"Results per page."},"sort":{"type":"string","description":"Sort string (e.g. created_at:desc)."},"search":{"type":"string","description":"Search within inquiry_snapshot or inquiry reference."}},"required":[]},"IShoppingMallAiBackendFavoriteInquiry.ISummary":{"type":"object","description":"Summary object for a favorited inquiry. For paginated list UIs, showing only minimal preview and favorited date. Excludes large data, returns fields safe for quick UI rendering.","properties":{"id":{"type":"string","format":"uuid","description":"Favorited inquiry UUID."},"inquiry_snapshot":{"oneOf":[{"type":"string","description":"Preview/cached inquiry snapshot."},{"type":"null","description":"Preview/cached inquiry snapshot."}],"description":"Preview/cached inquiry snapshot."},"created_at":{"type":"string","format":"date-time","description":"Favorited date/time ISO8601."}},"required":["id","created_at"]},"IShoppingMallAiBackendFavoriteInquiry.ICreate":{"type":"object","description":"Payload for favoriting an inquiry (QnA/bookmark creation). Requires reference to the parent favorite entity and target inquiry, with optional snapshot of inquiry detail at time of favoriting.","properties":{"shopping_mall_ai_backend_favorite_id":{"type":"string","format":"uuid","description":"Favorite folder/group into which the inquiry is being favorited."},"shopping_mall_ai_backend_inquiry_id":{"type":"string","format":"uuid","description":"Target inquiry (QnA/Support ID) to favorite."},"inquiry_snapshot":{"oneOf":[{"type":"string","description":"Optional inquiry state at favoriting for audit/tracing."},{"type":"null","description":"Optional inquiry state at favoriting for audit/tracing."}],"description":"Optional inquiry state at favoriting for audit/tracing."}},"required":["shopping_mall_ai_backend_favorite_id","shopping_mall_ai_backend_inquiry_id"]},"IPageIShoppingMallAiBackendFavoriteInquiry.ISummary":{"type":"object","description":"Paginated response for favorited inquiry summary records. Used for favorites folder contents in profile/dashboard. Follows IPage<T> with data[] as array of ISummary.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination object, with page, limit, count, and page count."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFavoriteInquiry.ISummary"},"description":"Array of summary objects for customer-favorited inquiries."}},"required":["pagination","data"]},"IShoppingMallAiBackendFavoriteFolder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of this favorite folder. Sourced from the shopping_mall_ai_backend_favorite_folders table (field: id)."},"shopping_mall_ai_backend_customer_id":{"type":"string","format":"uuid","description":"UUID of the owning customer. Never exposed on creation, but is used for ownership security. (shopping_mall_ai_backend_customer_id)"},"name":{"type":"string","description":"User-assigned folder name for organizational/grouping. (name)"},"description":{"oneOf":[{"type":"string","description":"Optional folder description for personal notes (nullable)."},{"type":"null","description":"Optional folder description for personal notes (nullable)."}],"description":"Optional folder description for personal notes (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp, UTC string (created_at). Set by system, read-only."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp, UTC string (updated_at)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable timestamp for soft deletion. Logical delete for evidence/business compliance (nullable)."},{"type":"null","format":"date-time","description":"Nullable timestamp for soft deletion. Logical delete for evidence/business compliance (nullable)."}],"description":"Nullable timestamp for soft deletion. Logical delete for evidence/business compliance (nullable)."}},"required":["id","shopping_mall_ai_backend_customer_id","name","created_at","updated_at"],"description":"A folder/group entity for organizing a user's favorites/bookmarks. Referenced in shopping_mall_ai_backend_favorite_folders. Used for grouping, notification management, and personalization."},"IShoppingMallAiBackendFavoriteFolder.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number (1-indexed) for paginated list requests. Optional."},{"type":"null","description":"Page number (1-indexed) for paginated list requests. Optional."}],"description":"Page number (1-indexed) for paginated list requests. Optional."},"limit":{"oneOf":[{"type":"integer","description":"Page size for pagination. Optional. Default may be applied by backend."},{"type":"null","description":"Page size for pagination. Optional. Default may be applied by backend."}],"description":"Page size for pagination. Optional. Default may be applied by backend."},"name":{"oneOf":[{"type":"string","description":"Partial search for folder name (case insensitive)."},{"type":"null","description":"Partial search for folder name (case insensitive)."}],"description":"Partial search for folder name (case insensitive)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Created after/on this UTC time. Optional."},{"type":"null","format":"date-time","description":"Filter: Created after/on this UTC time. Optional."}],"description":"Filter: Created after/on this UTC time. Optional."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Created before/on this UTC time. Optional."},{"type":"null","format":"date-time","description":"Filter: Created before/on this UTC time. Optional."}],"description":"Filter: Created before/on this UTC time. Optional."},"sort":{"oneOf":[{"const":"created_at","description":"Sorting field. Optional. Must be one of: created_at, name, updated_at."},{"const":"name","description":"Sorting field. Optional. Must be one of: created_at, name, updated_at."},{"const":"updated_at","description":"Sorting field. Optional. Must be one of: created_at, name, updated_at."},{"type":"null","enum":["created_at","name","updated_at"],"description":"Sorting field. Optional. Must be one of: created_at, name, updated_at."}],"description":"Sorting field. Optional. Must be one of: created_at, name, updated_at."},"order":{"oneOf":[{"const":"asc","description":"Sort order: asc or desc. Default descending."},{"const":"desc","description":"Sort order: asc or desc. Default descending."},{"type":"null","enum":["asc","desc"],"description":"Sort order: asc or desc. Default descending."}],"description":"Sort order: asc or desc. Default descending."}},"required":[],"description":"Search/paging/filter input for favorite folders."},"IShoppingMallAiBackendFavoriteFolder.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"User-given name for new favorite folder. Must be unique per user."},"description":{"oneOf":[{"type":"string","description":"Optional note for personal folder (nullable)."},{"type":"null","description":"Optional note for personal folder (nullable)."}],"description":"Optional note for personal folder (nullable)."}},"required":["name"],"description":"Request body for creating a new favorite folder. Only name is required."},"IShoppingMallAiBackendFavoriteFolder.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Optionally update favorite folder display name."},"description":{"oneOf":[{"type":"string","description":"Optionally update folder description/null to clear."},{"type":"null","description":"Optionally update folder description/null to clear."}],"description":"Optionally update folder description/null to clear."}},"required":[],"description":"Fields for updating a favorite folder; all fields optional."},"IShoppingMallAiBackendFavoriteFolder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the favorite folder (summary view)."},"name":{"type":"string","description":"Display name of the folder (summary)."},"description":{"oneOf":[{"type":"string","description":"Optional folder description (nullable, summary only)."},{"type":"null","description":"Optional folder description (nullable, summary only)."}],"description":"Optional folder description (nullable, summary only)."},"created_at":{"type":"string","format":"date-time","description":"Creation time (summary, UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Update time (summary, UTC)."}},"required":["id","name","created_at","updated_at"],"description":"Paginated summary view for a favorite folder."},"IPageIShoppingMallAiBackendFavoriteFolder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for this page of favorite folders."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendFavoriteFolder.ISummary"},"description":"Array of favorite folder summary records for this result page."}},"required":["pagination","data"],"description":"Paginated container for retrieving favorite folder summaries."},"IShoppingMallAiBackendArticle":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Article UUID (system unique)."},"channel_id":{"type":"string","format":"uuid","description":"Sales/content channel UUID this article belongs to."},"title":{"type":"string","description":"Article title. Must be concise and business-relevant."},"body":{"type":"string","description":"Primary article content (multi-format allowed; markdown/html)."},"author_id":{"type":"string","format":"uuid","description":"Author UUID (business role)."},"pinned":{"type":"boolean","description":"Is article pinned to top of channel."},"status":{"type":"string","description":"Status (draft, published, archived, etc)."},"view_count":{"type":"integer","description":"View count (audience metric)."},"is_notice":{"type":"boolean","description":"Is this article a formal notice (shown in notices/announcements)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable soft delete timestamp; if set, indicates logically deleted."},{"type":"null","format":"date-time","description":"Nullable soft delete timestamp; if set, indicates logically deleted."}],"description":"Nullable soft delete timestamp; if set, indicates logically deleted."}},"required":["id","channel_id","title","body","author_id","pinned","status","view_count","is_notice","created_at","updated_at"],"description":"Full information about a single article entity."},"IShoppingMallAiBackendArticle.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination."},{"type":"null","description":"Page number for pagination."}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Results per page for pagination."},{"type":"null","description":"Results per page for pagination."}],"description":"Results per page for pagination."},"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for channel UUID (search only this channel)."},{"type":"null","format":"uuid","description":"Optional filter for channel UUID (search only this channel)."}],"description":"Optional filter for channel UUID (search only this channel)."},"status":{"oneOf":[{"type":"string","description":"Filter by article status (draft,published,archived,hidden,...)."},{"type":"null","description":"Filter by article status (draft,published,archived,hidden,...)."}],"description":"Filter by article status (draft,published,archived,hidden,...)."},"author_id":{"oneOf":[{"type":"string","format":"uuid","description":"Search by author UUID."},{"type":"null","format":"uuid","description":"Search by author UUID."}],"description":"Search by author UUID."},"title":{"oneOf":[{"type":"string","description":"Search by partial title text."},{"type":"null","description":"Search by partial title text."}],"description":"Search by partial title text."},"body":{"oneOf":[{"type":"string","description":"Search by body content."},{"type":"null","description":"Search by body content."}],"description":"Search by body content."},"is_notice":{"oneOf":[{"type":"boolean","description":"Filter: is notice / not notice."},{"type":"null","description":"Filter: is notice / not notice."}],"description":"Filter: is notice / not notice."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Searches for articles created after/on this date-time (UTC)."},{"type":"null","format":"date-time","description":"Searches for articles created after/on this date-time (UTC)."}],"description":"Searches for articles created after/on this date-time (UTC)."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Searches for articles created before/on this date-time (UTC)."},{"type":"null","format":"date-time","description":"Searches for articles created before/on this date-time (UTC)."}],"description":"Searches for articles created before/on this date-time (UTC)."},"sort":{"oneOf":[{"const":"created_at","description":"Sort by: created_at | view_count | title"},{"const":"view_count","description":"Sort by: created_at | view_count | title"},{"const":"title","description":"Sort by: created_at | view_count | title"},{"type":"null","enum":["created_at","view_count","title"],"description":"Sort by: created_at | view_count | title"}],"description":"Sort by: created_at | view_count | title"},"order":{"oneOf":[{"const":"asc","description":"Sort order: asc or desc"},{"const":"desc","description":"Sort order: asc or desc"},{"type":"null","enum":["asc","desc"],"description":"Sort order: asc or desc"}],"description":"Sort order: asc or desc"}},"required":[],"description":"Input for paginated/filterable article search operation."},"IShoppingMallAiBackendArticle.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Article UUID (summary view)."},"channel_id":{"type":"string","format":"uuid","description":"Channel UUID for article."},"title":{"type":"string","description":"Article title (summary view)."},"author_id":{"type":"string","format":"uuid","description":"Author's UUID (summary view only)."},"status":{"type":"string","description":"Business status (summary fields)."},"view_count":{"type":"integer","description":"View count at summary level."},"is_notice":{"type":"boolean","description":"Summary: Is this article a notice?"},"created_at":{"type":"string","format":"date-time","description":"When created (summary, UTC)."},"updated_at":{"type":"string","format":"date-time","description":"When last updated (summary, UTC)."}},"required":["id","channel_id","title","author_id","status","view_count","is_notice","created_at","updated_at"],"description":"Summary view for paginated/search article listings."},"IPageIShoppingMallAiBackendArticle.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging info for articles result"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendArticle.ISummary"},"description":"Array of article summary data for result page"}},"required":["pagination","data"],"description":"Paginated article summary listing for results."},"IShoppingMallAiBackendArticle.ICreate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"Unique identifier of the channel to which this article is posted. Required for associating the article with a sales/content channel."},"title":{"type":"string","description":"Title for the article. Must be unique within the channel. Required."},"body":{"type":"string","description":"Main content body of the article (markdown or rich text allowed). Required."},"author_id":{"type":"string","format":"uuid","description":"Unique identifier of the author (user, admin, or seller). Required for ownership and evidence tracking."},"status":{"type":"string","description":"Article status (draft, published, archived, hidden, etc). Required for workflow. Enum values usually controlled elsewhere."},"is_notice":{"type":"boolean","description":"Whether this article is system/official notice. Required."},"pinned":{"type":"boolean","description":"Whether this article is pinned to the top. Required."},"view_count":{"type":"integer","description":"Initial view count (for advanced usage or importing legacy data). Optional."}},"required":["channel_id","title","body","author_id","status","is_notice","pinned"],"description":"Request body for creating a new article. Maps to the shopping_mall_ai_backend_articles entity. All required properties must be supplied. Do not include audit timestamps or generated fields; these are managed by the system."},"IShoppingMallAiBackendArticle.IUpdate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"Unique identifier of the channel this article is associated with. Optional."},"title":{"type":"string","description":"Title for the article (must be unique within the channel). Optional."},"body":{"type":"string","description":"Main content body for the article. Optional."},"author_id":{"type":"string","format":"uuid","description":"Author's unique identifier. Optional."},"status":{"type":"string","description":"Article workflow status. Optional."},"is_notice":{"type":"boolean","description":"Whether this is a system/official notice. Optional."},"pinned":{"type":"boolean","description":"Whether this article is pinned for the channel. Optional."},"view_count":{"type":"integer","description":"View count. Optional."}},"required":[],"description":"Request body type for updating an article. All fields are optional; only supply those to be updated. Maps to shopping_mall_ai_backend_articles entity."},"IShoppingMallAiBackendArticleComment.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Number of records per page."},"sort":{"type":"string","description":"Sort order or field."},"author_id":{"type":"string","format":"uuid","description":"Filter by author (user/admin/seller) id."},"status":{"type":"string","description":"Filter by comment status (visible, hidden, pending, etc)."},"is_secret":{"type":"boolean","description":"Filter by secret/private comments."},"q":{"type":"string","description":"Full-text search across comment body or relevant fields."},"created_from":{"type":"string","format":"date-time","description":"Filter comments created on or after this ISO-8601 datetime."},"created_to":{"type":"string","format":"date-time","description":"Filter comments created on or before this ISO-8601 datetime."}},"required":[],"description":"Filter and search object for paginated article comment queries."},"IPageIShoppingMallAiBackendArticleComment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for this page of comment summaries."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendArticleComment.ISummary"},"description":"Array of comment summary records displayed on this page."}},"required":["pagination","data"],"description":"Paginated page object for comment summaries following IPage<T> standard. Always contains both pagination and data (array of comment summaries)."},"IShoppingMallAiBackendArticleComment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the comment."},"article_id":{"type":"string","format":"uuid","description":"Reference to parent article id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent comment (thread parent), null if root comment."},{"type":"null","format":"uuid","description":"Optional parent comment (thread parent), null if root comment."}],"description":"Optional parent comment (thread parent), null if root comment."},"author_id":{"type":"string","format":"uuid","description":"Identifier for the comment author."},"body":{"type":"string","description":"Full text content of the comment."},"is_secret":{"type":"boolean","description":"Whether the comment is secret/private."},"status":{"type":"string","description":"Publication/moderation state."},"created_at":{"type":"string","format":"date-time","description":"Datetime the comment was created."},"updated_at":{"type":"string","format":"date-time","description":"Datetime the comment was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for logical deletion (null if not deleted)."},{"type":"null","format":"date-time","description":"Timestamp for logical deletion (null if not deleted)."}],"description":"Timestamp for logical deletion (null if not deleted)."}},"required":["id","article_id","author_id","body","is_secret","status","created_at","updated_at"],"description":"Full article comment entity record with all fields. Used for detail view, update, evidence and audit traces."},"IShoppingMallAiBackendArticleComment.ICreate":{"type":"object","properties":{"article_id":{"type":"string","format":"uuid","description":"Parent article's uuid which this comment is posted under."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent comment/thread id for threaded discussions."},{"type":"null","format":"uuid","description":"Optional parent comment/thread id for threaded discussions."}],"description":"Optional parent comment/thread id for threaded discussions."},"author_id":{"type":"string","format":"uuid","description":"This comment's author—writing user/admin/seller id."},"body":{"type":"string","description":"Comment content body, markdown or plain text accepted."},"is_secret":{"type":"boolean","description":"Whether comment is private/secret. Required."}},"required":["article_id","author_id","body","is_secret"],"description":"Request body for creating a new article comment. All required fields must be supplied; parent_id is used for reply/threading when applicable."},"IShoppingMallAiBackendArticleComment.IUpdate":{"type":"object","properties":{"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent comment id if changing threading structure."},{"type":"null","format":"uuid","description":"Optional parent comment id if changing threading structure."}],"description":"Optional parent comment id if changing threading structure."},"body":{"type":"string","description":"New/updated comment content (markdown or string)."},"is_secret":{"type":"boolean","description":"Whether this comment is flagged secret/private."},"status":{"type":"string","description":"Publication/moderation status (optional, backend controlled)."}},"required":[],"description":"Request body type for updating an article comment. Only supply fields to be updated."},"IShoppingMallAiBackendArticleCategory.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Number of results per page."},"sort":{"type":"string","description":"Sort order or name of sort field."},"parent_id":{"type":"string","format":"uuid","description":"Filter/control by parent category id for hierarchy filtering."},"channel_id":{"type":"string","format":"uuid","description":"Filter by channel id."},"q":{"type":"string","description":"Filter by keywords or partial name matching."}},"required":[],"description":"Search/filter definition for retrieving article categories."},"IShoppingMallAiBackendArticleComment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the comment."},"author_id":{"type":"string","format":"uuid","description":"Identifier of the author."},"body":{"type":"string","description":"Shortened comment body or excerpt suitable for summary display."},"is_secret":{"type":"boolean","description":"Indicates whether the comment is private/secret (user-restricted)."},"status":{"type":"string","description":"Current moderation/publication status for this comment."},"created_at":{"type":"string","format":"date-time","description":"Datetime when the comment was created."},"parent_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional parent comment thread id if threaded."}},"required":["id","author_id","body","is_secret","status","created_at"],"description":"Summary object for a comment, used in page listings or summary UIs."},"IShoppingMallAiBackendArticleCategory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the article category. Corresponds to id in the Prisma model."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent category's uuid or null if top-level. Mirrors parent_id in schema."},{"type":"null","format":"uuid","description":"Parent category's uuid or null if top-level. Mirrors parent_id in schema."}],"description":"Parent category's uuid or null if top-level. Mirrors parent_id in schema."},"channel_id":{"type":"string","format":"uuid","description":"UUID of the channel this category belongs to. Required."},"name":{"type":"string","description":"Business/category name. Must be unique within a channel."},"description":{"oneOf":[{"type":"string","description":"Optional long-form description for the category."},{"type":"null","description":"Optional long-form description for the category."}],"description":"Optional long-form description for the category."},"order":{"type":"integer","description":"Display or sorting order for navigation in the channel. Required."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of category creation."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of last update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO 8601 timestamp of logical (soft) deletion, or null if not deleted."},{"type":"null","format":"date-time","description":"ISO 8601 timestamp of logical (soft) deletion, or null if not deleted."}],"description":"ISO 8601 timestamp of logical (soft) deletion, or null if not deleted."}},"required":["id","channel_id","name","order","created_at","updated_at"],"description":"Article category record, as defined by shopping_mall_ai_backend_article_categories table. Includes all standard business fields, parent/child relationships, audit trail timestamps, and logical deletion evidence. Refer to ERD and business documentation for full context."},"IShoppingMallAiBackendArticleCategory.ICreate":{"type":"object","properties":{"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional parent category id for hierarchy structure. Null or omitted for top-level."},{"type":"null","format":"uuid","description":"Optional parent category id for hierarchy structure. Null or omitted for top-level."}],"description":"Optional parent category id for hierarchy structure. Null or omitted for top-level."},"channel_id":{"type":"string","format":"uuid","description":"UUID of the channel/category tree this category belongs to. Required."},"name":{"type":"string","description":"The category name. Must be unique within channel context."},"description":{"oneOf":[{"type":"string","description":"Optional description to explain the purpose or content of the category."},{"type":"null","description":"Optional description to explain the purpose or content of the category."}],"description":"Optional description to explain the purpose or content of the category."},"order":{"type":"integer","description":"Order for display or navigation."}},"required":["channel_id","name","order"],"description":"Request body DTO for creating a new article category in the backend. Ensures required hierarchical, channel, and naming context are provided, enforcing business constraints around uniqueness and navigation appearance."},"IShoppingMallAiBackendArticleCategory.IUpdate":{"type":"object","properties":{"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Change the category's parent. Null to make top-level."},{"type":"null","format":"uuid","description":"(Optional) Change the category's parent. Null to make top-level."}],"description":"(Optional) Change the category's parent. Null to make top-level."},"name":{"type":"string","description":"(Optional) New name for the category. Must remain unique within a channel."},"description":{"oneOf":[{"type":"string","description":"(Optional) Category description for detail/edit flows."},{"type":"null","description":"(Optional) Category description for detail/edit flows."}],"description":"(Optional) Category description for detail/edit flows."},"order":{"type":"integer","description":"(Optional) Change navigation/display order."}},"required":[],"description":"Request body DTO for updating an existing article category. Only provided fields are patched. All optional for partial edit. Renaming must not conflict with siblings; order/parent can be updated for reorganizing the taxonomy."},"IShoppingMallAiBackendArticleCategory.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the article category (primary key)."},"channel_id":{"type":"string","format":"uuid","description":"UUID of the associated channel for navigation/context."},"name":{"type":"string","description":"Business display name of the article category."},"order":{"type":"integer","description":"Display order for sort/navigation in business UI."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO 8601 timestamp of soft deletion, or null if active."},{"type":"null","format":"date-time","description":"ISO 8601 timestamp of soft deletion, or null if active."}],"description":"ISO 8601 timestamp of soft deletion, or null if active."}},"required":["id","channel_id","name","order"],"description":"Summary view of article category entity, pared down for list/pagination performance. Only business- and navigation-relevant fields included; detailed relationships and descriptions omitted."},"IPageIShoppingMallAiBackendArticleCategory.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information, including current page, page size, and total records."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IShoppingMallAiBackendArticleCategory.ISummary"},"description":"Array of summary article category items for paginated search/list response."}},"required":["pagination","data"],"description":"Paginated response type for retrieving a filtered/searchable list of article category summaries. Uses standard pagination and summary entity conventions for business UIs."},"IShoppingMallAiBackendCustomerWithdrawal.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the withdrawal event record."},"customer_id":{"type":"string","format":"uuid","description":"UUID of the customer who performed the withdrawal."},"withdrawn_at":{"type":"string","format":"date-time","description":"Timestamp at which the withdrawal was completed."},"reason":{"oneOf":[{"type":"string","description":"Reason for the withdrawal event."},{"type":"null","description":"Reason for the withdrawal event."}],"description":"Reason for the withdrawal event."}},"required":["id","customer_id","withdrawn_at"],"description":"Summary view of a single customer withdrawal (account deactivation) event. Fields are chosen for list/pagination of withdrawals, audit dashboards, and compliance tables. Used in APIs returning summaries of account withdrawal activity."},"IShoppingMallAiBackendSeller.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the seller (UUID PK)."},"email":{"type":"string","format":"email","description":"Main business email address for the seller."},"business_registration_number":{"type":"string","description":"Legal registration number (unique, verified at onboarding)."},"name":{"type":"string","description":"Business legal name of seller."},"is_active":{"type":"boolean","description":"Current enabled/disabled state of the seller account."},"is_verified":{"type":"boolean","description":"Verification state (approved for commerce/business workflows)."}},"required":["id","email","business_registration_number","name","is_active","is_verified"],"description":"Summary record for seller admin/search listing. Contains identifying business fields, onboarding state, and minimal evidence fields for compliance or onboarding dashboards."},"IShoppingMallAiBackendProduct.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of the product (UUID PK)."},"title":{"type":"string","description":"Product display title for customer-facing and admin lists."},"slug":{"type":"string","description":"SEO and navigation-friendly product slug (unique, for marketing/links)."},"product_type":{"type":"string","description":"Type code for product (physical, digital, service, etc)."},"business_status":{"type":"string","description":"Current lifecycle status (draft, active, paused, restricted, etc)."},"tax_code":{"type":"string","description":"Applicable compliance or business tax code."},"min_order_quantity":{"type":"integer","description":"Minimum orderable quantity per policy (for B2B/wholesale/retail limits)."},"max_order_quantity":{"type":"integer","description":"Maximum allowed per-transaction order quantity."},"created_at":{"type":"string","format":"date-time","description":"Product creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last business update to product metadata (ISO 8601)."}},"required":["id","title","slug","product_type","business_status","tax_code","min_order_quantity","max_order_quantity","created_at","updated_at"],"description":"Summary view of a product, for use in catalog browsing, search results, and admin datagrids. Columns included are for display lists, table pagers, and search performance UX. Omitted fields are reserved for detail/deep APIs or product edit forms."}}}}