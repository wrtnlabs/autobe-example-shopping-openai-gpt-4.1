import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getaiCommerceChannelsChannelIdCategoriesCategoryId } from "../../../../providers/getaiCommerceChannelsChannelIdCategoriesCategoryId";

import { IAiCommerceCategory } from "../../../../api/structures/IAiCommerceCategory";

@Controller("/aiCommerce/channels/:channelId/categories/:categoryId")
export class AicommerceChannelsCategoriesController {
  /**
   * Retrieve detailed information about a specific channel category from
   * ai_commerce_categories.
   *
   * This operation retrieves detailed information about a specific category
   * under a particular channel. Categories are managed as tree structures for
   * product classification, filtering, and analytics, each mapped to a parent
   * channel. The operation requires both the channelId and categoryId as path
   * parameters. It outputs all category fields including hierarchical level,
   * parent/child relationships, activation status, business_workflow status,
   * and audit timestamps.
   *
   * Security is consideredâ€”while category structure is readable by most users,
   * detailed editing is reserved for administrative roles. This endpoint
   * supports front-end category navigation, analytics, and business rule
   * enforcement. Using the ai_commerce_categories table as defined in the
   * Prisma schema, related data includes channel linkage, parentage, and
   * active/archived state. Error scenarios include missing IDs, non-existent or
   * deleted categories, and channel-category mismatches.
   *
   * Developers may use this API in combination with category listing or channel
   * querying APIs to power mobile or web navigation, and with admin/creator
   * permission for more advanced category management flows.
   *
   * @param connection
   * @param channelId Unique identifier of the parent sales channel (UUID
   *   format).
   * @param categoryId Unique identifier of the category to retrieve (UUID
   *   format).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("channelId")
    channelId: string & tags.Format<"uuid">,
    @TypedParam("categoryId")
    categoryId: string & tags.Format<"uuid">,
  ): Promise<IAiCommerceCategory> {
    try {
      return await getaiCommerceChannelsChannelIdCategoriesCategoryId({
        channelId,
        categoryId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
