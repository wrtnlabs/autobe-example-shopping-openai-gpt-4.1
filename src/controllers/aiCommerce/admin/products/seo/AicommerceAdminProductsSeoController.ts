import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { putaiCommerceAdminProductsProductIdSeo } from "../../../../../providers/putaiCommerceAdminProductsProductIdSeo";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

import { IAiCommerceProductSeo } from "../../../../../api/structures/IAiCommerceProductSeo";

@Controller("/aiCommerce/admin/products/:productId/seo")
export class AicommerceAdminProductsSeoController {
  /**
   * Update or create the SEO metadata for a specific product in
   * ai_commerce_product_seo (upsert behavior).
   *
   * The PUT /products/{productId}/seo endpoint allows a seller or admin to set
   * or update all SEO configuration fields for a specific product, including
   * title, canonical URL, meta description, keywords, and open graph
   * attributes. The operation supports both full update and creation (upsert):
   * if metadata exists for the product, it is replaced; if not, a new record is
   * created.
   *
   * Business logic validates ownership (sellers can update only their
   * products), and admins may override globally. On success, the updated or
   * created SEO entity is returned, ensuring only one SEO record per product
   * (enforced by a unique constraint in ai_commerce_product_seo). All updates
   * are compliance-logged, capturing before and after state for regulatory
   * audit.
   *
   * This operation is not accessible by the public or buyers; only authorized
   * sellers (for their products) and admins may update SEO data. Audit logging
   * supports SEO compliance and legal traceability. Invalid or non-existent
   * productIds, or unauthorized attempts, return error responses as per
   * business rule.
   *
   * Request validation ensures input conforms to OpenAPI
   * IAiCommerceProductSeo.IUpdate schema. Idempotent behavior returns the
   * complete, current SEO entity upon success.
   *
   * @param connection
   * @param productId Unique identifier of the product to update SEO metadata
   *   for.
   * @param body Full update information for product SEO fields (title,
   *   canonical URL, description, etc.).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put()
  public async update(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("productId")
    productId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IAiCommerceProductSeo.IUpdate,
  ): Promise<IAiCommerceProductSeo> {
    try {
      return await putaiCommerceAdminProductsProductIdSeo({
        admin,
        productId,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
