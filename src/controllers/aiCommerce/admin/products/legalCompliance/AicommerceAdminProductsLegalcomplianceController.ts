import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { putaiCommerceAdminProductsProductIdLegalCompliance } from "../../../../../providers/putaiCommerceAdminProductsProductIdLegalCompliance";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

import { IAiCommerceProductLegalCompliance } from "../../../../../api/structures/IAiCommerceProductLegalCompliance";

@Controller("/aiCommerce/admin/products/:productId/legalCompliance")
export class AicommerceAdminProductsLegalcomplianceController {
  /**
   * Update or create the legal compliance and regulatory metadata for a product
   * in ai_commerce_product_legal_compliance.
   *
   * The PUT /products/{productId}/legalCompliance endpoint enables authorized
   * sellers or admins to update (or create) a full set of compliance data for a
   * product. Data includes jurisdiction, certifications, restricted age, hazard
   * flags, evidence, and review timestamps. If the product lacks compliance
   * metadata, a new record is created (upsert semantics); otherwise, the
   * existing entity is replaced.
   *
   * The service enforces authorization, allowing only the product's seller or
   * admins to modify compliance details. Successful execution updates the
   * ai_commerce_product_legal_compliance table and returns the latest
   * compliance entity. All modifications trigger compliance-logging, including
   * snapshotting before/after state for legal evidence.
   *
   * If the productId is invalid, not found, or unauthorized, appropriate error
   * codes and messages are returned. The request body must comply with the
   * IAiCommerceProductLegalCompliance.IUpdate OpenAPI schema. The endpoint is
   * safe for idempotent repeated calls. Buyers and the public cannot update
   * compliance records.
   *
   * @param connection
   * @param productId Unique identifier for the product to update compliance
   *   info for.
   * @param body Complete legal compliance information to set on the product.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put()
  public async update(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("productId")
    productId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IAiCommerceProductLegalCompliance.IUpdate,
  ): Promise<IAiCommerceProductLegalCompliance> {
    try {
      return await putaiCommerceAdminProductsProductIdLegalCompliance({
        admin,
        productId,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
