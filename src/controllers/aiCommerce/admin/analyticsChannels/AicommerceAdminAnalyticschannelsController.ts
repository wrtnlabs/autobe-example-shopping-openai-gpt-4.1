import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchaiCommerceAdminAnalyticsChannels } from "../../../../providers/patchaiCommerceAdminAnalyticsChannels";
import { AdminAuth } from "../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../decorators/payload/AdminPayload";
import { getaiCommerceAdminAnalyticsChannelsChannelAnalyticsId } from "../../../../providers/getaiCommerceAdminAnalyticsChannelsChannelAnalyticsId";

import { IPageIAiCommerceAnalyticsChannels } from "../../../../api/structures/IPageIAiCommerceAnalyticsChannels";
import { IAiCommerceAnalyticsChannels } from "../../../../api/structures/IAiCommerceAnalyticsChannels";

@Controller("/aiCommerce/admin/analyticsChannels")
export class AicommerceAdminAnalyticschannelsController {
  /**
   * Search and list analytics channel summaries
   * (ai_commerce_analytics_channels).
   *
   * Search and retrieve analytics channel summaries, supporting advanced
   * filter, pagination, and sorting options. Only admin role can access or
   * query detailed analytics, which cover channel KPIs such as total orders,
   * sales amount, number of buyers, and stat date. The results are based on the
   * ai_commerce_analytics_channels model and can be used for business
   * intelligence dashboards and compliance reporting.
   *
   * All searches are logged for audit. Errors are raised if search parameters
   * are missing or malformed.
   *
   * @param connection
   * @param body Filter and paging criteria for analytics channels.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @AdminAuth()
    admin: AdminPayload,
    @TypedBody()
    body: IAiCommerceAnalyticsChannels.IRequest,
  ): Promise<IPageIAiCommerceAnalyticsChannels> {
    try {
      return await patchaiCommerceAdminAnalyticsChannels({
        admin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Get analytics KPI summary for a specific channel
   * (ai_commerce_analytics_channels).
   *
   * Get analytics summary and KPI details for a specific channel, by its unique
   * identifier (channelAnalyticsId). The result includes order statistics,
   * sales, buyers, and analytic timestamps, as persisted in the
   * ai_commerce_analytics_channels model. Only admins may view this data, and
   * the channelAnalyticsId must be valid. Returned data is used for business
   * monitoring and compliance requirements.
   *
   * Errors are returned if the ID is invalid or does not exist.
   *
   * @param connection
   * @param channelAnalyticsId Primary key identifier for analyticsChannels
   *   record to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":channelAnalyticsId")
  public async at(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("channelAnalyticsId")
    channelAnalyticsId: string & tags.Format<"uuid">,
  ): Promise<IAiCommerceAnalyticsChannels> {
    try {
      return await getaiCommerceAdminAnalyticsChannelsChannelAnalyticsId({
        admin,
        channelAnalyticsId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
