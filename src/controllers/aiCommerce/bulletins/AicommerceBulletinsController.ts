import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getaiCommerceBulletinsBulletinId } from "../../../providers/getaiCommerceBulletinsBulletinId";

import { IAiCommerceBulletin } from "../../../api/structures/IAiCommerceBulletin";

@Controller("/aiCommerce/bulletins/:bulletinId")
export class AicommerceBulletinsController {
  /**
   * Get the details of a specific bulletin by its ID (ai_commerce_bulletins).
   *
   * Retrieve the detailed contents of a specific bulletin by its unique
   * identifier. This includes all public fields such as title, body,
   * visibility, status, and timestamps, suitable for display in user or admin
   * dashboards.
   *
   * Buyers may only view published and public bulletins, while admins can view
   * all bulletins regardless of status or visibility. The bulletinId parameter
   * is required and mapped directly to the record's UUID in the
   * ai_commerce_bulletins table.
   *
   * On not found, an appropriate error is returned. Usage of this endpoint is
   * controlled by the caller's role and bulletin visibility status.
   *
   * @param connection
   * @param bulletinId The unique identifier of the bulletin to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("bulletinId")
    bulletinId: string & tags.Format<"uuid">,
  ): Promise<IAiCommerceBulletin> {
    try {
      return await getaiCommerceBulletinsBulletinId({
        bulletinId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
