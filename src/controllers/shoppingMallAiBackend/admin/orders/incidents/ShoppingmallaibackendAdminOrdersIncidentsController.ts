import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patch__shoppingMallAiBackend_admin_orders_$orderId_incidents } from "../../../../../providers/patch__shoppingMallAiBackend_admin_orders_$orderId_incidents";
import { AdminAuth } from "../../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../../decorators/payload/AdminPayload";

import { IPageIShoppingMallAiBackendOrderIncident } from "../../../../../api/structures/IPageIShoppingMallAiBackendOrderIncident";
import { IShoppingMallAiBackendOrderIncident } from "../../../../../api/structures/IShoppingMallAiBackendOrderIncident";

@Controller("/shoppingMallAiBackend/admin/orders/:orderId/incidents")
export class ShoppingmallaibackendAdminOrdersIncidentsController {
  /**
   * List incidents (fraud, dispute, compliance) for an order, including current
   * and historical events.
   *
   * Retrieves all incidents and compliance records related to an order, for
   * review by compliance staff, admins, or the record owner. Includes fraud
   * incidents, disputes, customer escalations, and other exceptional events
   * linked to the order. All records are returned with business context,
   * severity, event time, resolution details, and supporting metadata. Proper
   * authorization is enforced to ensure data privacy and role-based access.
   *
   * @param connection
   * @param orderId Order ID whose incidents are being listed.
   * @param body Incident search/filter parameters, supports pagination and
   *   sorting.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("orderId")
    orderId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IShoppingMallAiBackendOrderIncident.IRequest,
  ): Promise<IPageIShoppingMallAiBackendOrderIncident> {
    try {
      return await patch__shoppingMallAiBackend_admin_orders_$orderId_incidents(
        {
          admin,
          orderId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
