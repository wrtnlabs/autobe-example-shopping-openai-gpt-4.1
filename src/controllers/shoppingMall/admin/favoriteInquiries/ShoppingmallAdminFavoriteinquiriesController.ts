import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteShoppingMallAdminFavoriteInquiriesFavoriteInquiryId } from "../../../../providers/deleteShoppingMallAdminFavoriteInquiriesFavoriteInquiryId";
import { AdminAuth } from "../../../../decorators/AdminAuth";
import { AdminPayload } from "../../../../decorators/payload/AdminPayload";

@Controller("/shoppingMall/admin/favoriteInquiries/:favoriteInquiryId")
export class ShoppingmallAdminFavoriteinquiriesController {
  /**
   * Soft delete a favorited inquiry by ID in shopping_mall_favorite_inquiries
   * (Favorites module).
   *
   * This endpoint enables a customer to unfavorite a previously favorited
   * product inquiry. Instead of physically deleting the favorite record, it
   * performs a soft deletion by setting the deleted_at timestamp, preserving
   * the full snapshot history of the associated inquiry for audit, compliance,
   * and potential future dispute resolution.
   *
   * Role-based security is enforced: customers can remove their own favorite
   * inquiries, while platform administrators can remove any for regulatory or
   * support purposes. The endpoint does not require a request body.
   *
   * Business logic will ensure that upon unfavoriting, any active notifications
   * linked to this favorite are unsubscribed. The deletion is audit-logged, and
   * the action can be viewed in the user's favorite inquiry management
   * interface.
   *
   * Error handling includes: 404 for nonexistent or already deleted
   * favoriteInquiryId, 403 if requesting actor lacks proper ownership/access,
   * and audit trail creation for successful and failed attempts.
   *
   * @param connection
   * @param favoriteInquiryId ID of the favorited inquiry to be removed
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @AdminAuth()
    admin: AdminPayload,
    @TypedParam("favoriteInquiryId")
    favoriteInquiryId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteShoppingMallAdminFavoriteInquiriesFavoriteInquiryId({
        admin,
        favoriteInquiryId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
