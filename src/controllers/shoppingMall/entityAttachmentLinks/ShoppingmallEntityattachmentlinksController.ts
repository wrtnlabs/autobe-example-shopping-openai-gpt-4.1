import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { getShoppingMallEntityAttachmentLinksEntityAttachmentLinkId } from "../../../providers/getShoppingMallEntityAttachmentLinksEntityAttachmentLinkId";

import { IShoppingMallEntityAttachmentLink } from "../../../api/structures/IShoppingMallEntityAttachmentLink";

@Controller("/shoppingMall/entityAttachmentLinks/:entityAttachmentLinkId")
export class ShoppingmallEntityattachmentlinksController {
  /**
   * Retrieve entity-attachment link details by ID
   * (shopping_mall_entity_attachment_links table).
   *
   * This operation fetches the details of a specific entity-attachment link
   * from the shopping_mall_entity_attachment_links table. It is used to
   * retrieve all association metadata, including the business entity (e.g.,
   * product, order, review) related to the attachment, as well as permission
   * details and context of linkage. The entity-attachment link contains
   * references to the target entity (with entity type and ID), linked
   * attachment ID, the user who performed the linking, the purpose of the
   * attachment (such as evidence, thumbnail, document), business context, and
   * audit-compliance fields. Sensitive attributes such as createdAt, deletedAt,
   * and permission scope are also returned if the requesting user has
   * appropriate permissions.
   *
   * This endpoint is read-only and does not require authentication for public
   * attachments, but restricted resources enforce permission checks. The
   * operation will return all non-deleted, logically active entity-attachment
   * links, and fail if the link is not found or access is denied. All responses
   * are formatted according to the IShoppingMallEntityAttachmentLink schema and
   * include error handling for missing IDs, permission violations, or deleted
   * entities.
   *
   * @param connection
   * @param entityAttachmentLinkId Unique identifier of the entity-attachment
   *   link (UUID).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async at(
    @TypedParam("entityAttachmentLinkId")
    entityAttachmentLinkId: string & tags.Format<"uuid">,
  ): Promise<IShoppingMallEntityAttachmentLink> {
    try {
      return await getShoppingMallEntityAttachmentLinksEntityAttachmentLinkId({
        entityAttachmentLinkId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
