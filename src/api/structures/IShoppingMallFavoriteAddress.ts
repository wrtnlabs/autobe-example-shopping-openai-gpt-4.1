import { tags } from "typia";

/**
 * Represents a user-favorited address. Links the shopping_mall_customers entry,
 * the corresponding address business ID, and a snapshot at time of favoriting.
 *
 * Supports notification preferences and optional labels for organizing
 * favorites.
 *
 * All modifications are audit-logged for compliance and evidence purposes. The
 * record is never hard-deleted; logical (soft) deletion uses deleted_at.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallFavoriteAddress = {
  /** Primary Key: Unique identifier for the favorite address entry. */
  id: string & tags.Format<"uuid">;

  /** Reference to the favoriting customer's shopping_mall_customers.id. */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /**
   * Reference to the snapshot record at the moment of favoriting
   * (shopping_mall_favorite_snapshots.id).
   */
  shopping_mall_favorite_snapshot_id: string & tags.Format<"uuid">;

  /**
   * Business-level ID of the favorited address (must correspond to
   * shopping_mall_addresses).
   */
  shopping_mall_address_id: string & tags.Format<"uuid">;

  /**
   * Whether notifications (e.g., address update, delivery event) are enabled
   * for this favorite address.
   */
  notification_enabled: boolean;

  /**
   * Customer organizational label/tag for batch operation (e.g.,
   * organizational context for UI or API batch management).
   */
  batch_label?: string | null | undefined;

  /** Timestamp when favorite was created. */
  created_at: string & tags.Format<"date-time">;

  /** Last update to favorite (meta, not address entity). */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when favorite was removed (soft delete); null if still active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallFavoriteAddress {
  /**
   * Request DTO for searching and paginating favorite addresses for the
   * authenticated customer.
   *
   * Allows filtering by organizational label, notification settings, creation
   * date range, and supports pagination (page, limit) as well as custom sort.
   * Only returns favorite addresses owned by the requesting user.
   */
  export type IRequest = {
    /**
     * Filter: Organizational label or user-supplied tag for batch operation
     * management. Null to match entries with no label. Optional.
     */
    batch_label?: string | null | undefined;

    /**
     * Optional filter on notification enabled status: true/false for
     * specific notification preference or null for all.
     */
    notification_enabled?: boolean | null | undefined;

    /**
     * ISO-8601 datetime string (inclusive, UTC). Filter for items created
     * at or after this timestamp. Optional: If null, no lower bound is
     * enforced.
     */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * ISO-8601 datetime string (inclusive, UTC). Filter for items created
     * at or before this timestamp. Optional: If null, no upper bound is
     * enforced.
     */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination. Optional, default 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Page size for pagination. Optional, default system page size. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Optional sort criteria: typically created_at, batch_label, etc. */
    sort?: string | null | undefined;
  };

  /**
   * Input type for creating a favorited address. Used by customers to mark an
   * address as favorite and set notification and organizational preferences.
   *
   * Enforces business rules on address existence/ownership, prevents
   * duplication, and creates a snapshot at the moment of favoriting for audit
   * and personalization purposes.
   */
  export type ICreate = {
    /**
     * UUID reference to the favorited address (external/business-level
     * address system), not a Prisma relation. Must refer to an existing,
     * accessible address that belongs to the authenticated customer.
     */
    shopping_mall_address_id: string & tags.Format<"uuid">;

    /**
     * Whether notifications (e.g., address update, delivery event) are
     * enabled for this favorite.
     */
    notification_enabled: boolean;

    /**
     * Optional customer-supplied label/tag for organizing or batch
     * management of favorite addresses.
     */
    batch_label?: string | null | undefined;
  };

  /**
   * DTO for updating a user's favorite address entity. This object supports
   * modifications to notification_enabled (turning address change/delivery
   * notifications on/off) and batch_label (a user-defined label or folder
   * grouping). Used in PATCH/PUT operations on the
   * shopping_mall_favorite_addresses table. No address relationship or
   * snapshot can be changed here; only metadata of the favorite.
   */
  export type IUpdate = {
    /**
     * Indicates whether notifications are enabled for this favorited
     * address. When true, the user receives entity change alerts or
     * delivery event notifications. Changing this property updates live
     * notification preferences for favorite address events.
     */
    notification_enabled?: boolean | undefined;

    /**
     * Batch label or organizational tag for the favorite address. Set to
     * null to clear grouping or labeling of this favorite.
     */
    batch_label?: string | null | undefined;
  };
}
