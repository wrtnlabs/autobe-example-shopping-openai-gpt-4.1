import { tags } from "typia";

/**
 * Represents a product or business category in the context of a channel, as
 * defined by the Prisma model shopping_mall_ai_backend_channel_categories.
 * Contains all core and audit fields necessary for navigation, display, and
 * business logic, including support for soft deletion and parent-child
 * hierarchical relationships. This entity is crucial for channel taxonomy
 * management, UI organization, and filtering of products or promotions. All
 * properties are included as per the underlying database schema, and audit
 * fields provide compliance and evidence traceability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendChannelCategory = {
  /**
   * Unique identifier for the channel category. This maps to the primary key
   * (id) in the corresponding Prisma table. Must be a valid UUID.
   */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the parent channel to which this category belongs. Required for all
   * category definitions. Must correspond to the id of an existing channel.
   */
  shopping_mall_ai_backend_channel_id: string & tags.Format<"uuid">;

  /**
   * Optional parent category ID for nested category trees. This enables the
   * creation of hierarchical category structures. Null for top-level
   * categories.
   */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /**
   * Business code for identifying the category, unique within the channel.
   * Used for lookup, navigation, and validation.
   */
  code: string;

  /**
   * Display name for the category, visible in UI and navigation elements.
   * Must be unique within the channel and communicated clearly to users and
   * admins.
   */
  name: string;

  /**
   * Optional business/admin context for the category. Textual, may be used
   * for notes, localization, or audit history.
   */
  description?: string | null;

  /**
   * Numeric ordering index for display or business priority purposes. Lower
   * numbers appear first in lists or hierarchy visualizations.
   */
  order: number & tags.Type<"int32">;

  /**
   * Timestamp when the category was created. Read-only field mapped to
   * schema-level audit requirements.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the category was last updated. Read-only field mapped to
   * schema-level audit requirements.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp, if this category has been logically removed.
   * Null if active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendChannelCategory {
  /**
   * Filtering and paging request for channel categories, allowing
   * business-defined search within a commercial channel/taxonomy.
   */
  export type IRequest = {
    /** Filter categories by unique category code within the channel. */
    code?: string;

    /** Filter by category display name. */
    name?: string;

    /**
     * Search children of the given parent, or null to show root/top-level
     * categories.
     */
    parent_id?: string;

    /** Page number for pagination. */
    page?: number &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /** Records per page (pagination size). */
    limit?: number &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /** Sort field (e.g., name, order, created_at). */
    sortBy?: string;

    /** Sort direction. */
    sortDir?: "asc" | "desc";

    /** Filter by category active/inactive status. */
    is_active?: boolean;
  };

  /**
   * Request body used to create a new channel category in the platform. All
   * required business fields from the underlying Prisma schema must be
   * supplied, including channel linkage, code, name, and order. Parent can be
   * null for root-level categories. Must comply with unique constraints and
   * business rule validations. This type enforces input consistency for new
   * category registration.
   */
  export type ICreate = {
    /**
     * UUID of the parent sales channel for the new category. This aligns
     * the category to a specific channel in the commerce backend, complying
     * with business scoping and localization requirements.
     */
    shopping_mall_ai_backend_channel_id: string & tags.Format<"uuid">;

    /**
     * Optional parent category UUID for supporting nested category trees.
     * Null for top-level categories. Ensures flexible hierarchical
     * navigation in the storefront.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Unique business code for the category within its channel. Used for
     * programmatic lookup, search, and analytics. Must be unique in context
     * of the parent channel.
     */
    code: string;

    /**
     * Human-readable display name for the category. Used in navigation UI,
     * admin screens, and business reporting. Must be unique and clear for
     * users and operations staff.
     */
    name: string;

    /**
     * Optional admin or business-facing description for the category. Used
     * for notes, additional context, or documentation of business rules.
     */
    description?: string | null;

    /**
     * Display and navigation order for the category. Used to control
     * appearance in menus/trees in the business UI. Lower values are shown
     * first.
     */
    order: number & tags.Type<"int32">;
  };

  /**
   * Represents partial updates for an existing channel category in the
   * commerce backend. Only the fields provided are updated; all others remain
   * unchanged. Properties mirror those available for creation, with all
   * fields optional except the category's own identifier, which is provided
   * in the API path. Update requests are subject to business rule and unique
   * constraint validation, and changes must respect channel/category
   * organizational logic. Soft deletion is managed separately.
   */
  export type IUpdate = {
    /**
     * Optional UUID reference to a new or updated parent category. Use null
     * to move a category to the root level. Hierarchy and cycle validation
     * are enforced at the business logic layer.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Optional updated business code for the category within the channel.
     * Changing this value must respect uniqueness constraints and not
     * disrupt business logic references. Should only be set when
     * necessary.
     */
    code?: string;

    /**
     * Optional updated display name for the category. Must remain unique
     * within the parent channel for UI clarity. Must comply with naming and
     * localization policy.
     */
    name?: string;

    /**
     * Optional updated description for business use, admin guidance, or
     * localization support. Null clears any prior context.
     */
    description?: string | null;

    /**
     * Optional update for display/navigation order. Used to reorganize
     * categories in menus or hierarchies for optimal business
     * presentation.
     */
    order?: number & tags.Type<"int32">;
  };
}
