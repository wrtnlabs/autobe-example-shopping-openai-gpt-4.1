import { tags } from "typia";

/**
 * Coin transaction event record for digital wallet changes. Represents one
 * change event (accrual, deduction, manual/admin/incident) for a user's or
 * seller's coin balance. This is an immutable business and audit entity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendCoinTransaction = {
  /** Unique transaction event ID (uuid). */
  id: string & tags.Format<"uuid">;

  /** Coin wallet ledger (uuid) this transaction event modifies. */
  shopping_mall_ai_backend_coin_id: string & tags.Format<"uuid">;

  /** Owner customer (uuid) if the transaction is performed for a user wallet. */
  shopping_mall_ai_backend_customer_id?: (string & tags.Format<"uuid">) | null;

  /** Owner seller (uuid) if transaction occurs in a seller context. */
  shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

  /** Transaction type, e.g. accrue, use, adjustment, campaign event. */
  change_type: string;

  /** Value change (positive for addition, negative for deduction). */
  amount: number;

  /** Transaction context/correlation reference (nullable). */
  transaction_reference?: string | null;

  /** Balance before transaction event. */
  coin_before: number;

  /** Balance after transaction event. */
  coin_after: number;

  /** Code describing the business/action reason (nullable). */
  reason_code?: string | null;

  /** Free-text details or audit context (nullable). */
  description?: string | null;

  /** Transaction event creation datetime (ISO8601 with timezone). */
  created_at: string & tags.Format<"date-time">;

  /** Soft delete (if present) for compliance context. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendCoinTransaction {
  /**
   * Request filter structure for paginated search and filtering of coin
   * wallet transactions, suitable for analytics, business audit, or incident
   * review scenarios.
   */
  export type IRequest = {
    /** Coin wallet record ID (wallet whose transactions are being queried). */
    shopping_mall_ai_backend_coin_id?: string & tags.Format<"uuid">;

    /**
     * Optional filter by transaction event type
     * (accrue/use/expire/adjustment/etc, business-defined codes).
     */
    change_type?: string;

    /** Minimum transaction value filter. */
    min_amount?: number;

    /** Maximum transaction value filter. */
    max_amount?: number;

    /** Earliest (inclusive) transaction creation time (ISO date-time). */
    created_from?: string & tags.Format<"date-time">;

    /** Latest (inclusive) transaction creation time (ISO date-time). */
    created_to?: string & tags.Format<"date-time">;

    /** Page number (default 1). */
    page?: number & tags.Type<"int32">;

    /** Maximum number of transaction records per page (default 100). */
    limit?: number & tags.Type<"int32">;
  };
}
