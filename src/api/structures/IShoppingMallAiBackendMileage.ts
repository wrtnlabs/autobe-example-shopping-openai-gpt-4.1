import { tags } from "typia";

/**
 * Mileage (rewards/points) ledger object, mapping to a customer or seller.
 * Contains all balance and evidence fields for compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendMileage = {
  /** Unique identifier for mileage ledger. */
  id: string & tags.Format<"uuid">;

  /** Customer account owner if present. */
  shopping_mall_ai_backend_customer_id?: (string & tags.Format<"uuid">) | null;

  /** Seller account owner if present. */
  shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

  /** Total mileage/point credits (all-time) including expired/lost. */
  total_accrued: number;

  /** Current mileage balance available for use. */
  usable_mileage: number;

  /** Mileage value expired or deleted and not available to user. */
  expired_mileage: number;

  /** Mileage temporarily frozen due to incident, claim, fraud, etc. */
  on_hold_mileage: number;

  /** Ledger creation time for evidence/audit. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp for evidence/audit. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendMileage {
  /** Request for paginated/searchable list of mileage ledgers. */
  export type IRequest = {
    /** Page number for search pagination. */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** Max records per page. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;
  };

  /** Summary information for mileage ledger list page. */
  export type ISummary = {
    /** Global mileage ledger id. */
    id: string & tags.Format<"uuid">;

    /** Mileage balance available for use. */
    usable_mileage: number;

    /** Ledger creation timestamp. */
    created_at: string & tags.Format<"date-time">;
  };

  /**
   * Request body to create a new mileage ledger for a customer or seller,
   * specifying balances as required.
   */
  export type ICreate = {
    /** Customer owner if applicable. */
    shopping_mall_ai_backend_customer_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Seller owner if applicable. */
    shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

    /** Initial total accrued mileage (points), may be zero. */
    total_accrued: number;

    /** Available mileage at account creation. */
    usable_mileage: number;

    /** Expired mileage at creation (rare, usually zero). */
    expired_mileage: number;

    /** On hold mileage value at creation (rare unless migrating/frozen). */
    on_hold_mileage: number;
  };

  /**
   * Request body to update an existing mileage ledger, permitting balance
   * changes (admin only) or deletion for compliance.
   */
  export type IUpdate = {
    /** (Admin) Update for total accrued points. */
    total_accrued?: number;

    /** Update for usable mileage. */
    usable_mileage?: number;

    /** Update for expired mileage. */
    expired_mileage?: number;

    /** Update for on-hold/frozen points. */
    on_hold_mileage?: number;

    /** If set, marks mileage as deleted (for compliance/soft-delete). */
    deleted_at?: (string & tags.Format<"date-time">) | null;

    /** Last updated timestamp for audit. */
    updated_at?: string & tags.Format<"date-time">;
  };
}
