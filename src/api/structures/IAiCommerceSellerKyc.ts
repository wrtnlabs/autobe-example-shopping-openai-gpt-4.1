import { tags } from "typia";

/**
 * Seller Know Your Customer (KYC) entity for compliance, identity verification,
 * and onboarding in aiCommerce.
 *
 * This object fully describes all attributes and state of a seller's KYC
 * process during onboarding, compliance review, and status transitions.
 * References unique relationships to onboarding workflow, provided identity or
 * legal documents, audit notes, and timestamps. All details required for audit,
 * evidence, and legal retention are present, following the original Prisma
 * schema and ERD documentation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSellerKyc = {
  /**
   * Unique identifier for the KYC record, auto-generated UUID according to
   * the ai_commerce_seller_kyc table in the schema.
   */
  id: string & tags.Format<"uuid">;

  /**
   * User authentication reference (ai_commerce_user_authentications.id) for
   * whom this KYC applies.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * Reference to onboarding application (ai_commerce_seller_onboarding.id)
   * for which KYC was submitted.
   */
  onboarding_id: string & tags.Format<"uuid">;

  /**
   * Current status code for KYC workflow. Example values: 'pending',
   * 'verified', 'rejected', 'escalated', etc. Sourced from domain rules and
   * schema comments.
   */
  kyc_status: string;

  /**
   * Type of submitted identity document. Example values: 'passport',
   * 'business_license', 'driver_license'. Nullable per schema definition.
   */
  document_type?: string | null | undefined;

  /**
   * Additional details about document, typically JSON string. May contain
   * extracted metadata, validation info, or image references. Nullable
   * depending on step.
   */
  document_metadata?: string | null | undefined;

  /**
   * Notes recorded by compliance/AI reviewer regarding this KYC record.
   * Nullable, freeform field for compliance.
   */
  verification_notes?: string | null | undefined;

  /** ISO 8601 date-time when KYC record was created (schema: created_at). */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 date-time when KYC record last updated (schema: updated_at). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * If set, the ISO 8601 datetime KYC was soft-deleted for privacy/audit.
   * Null if still active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSellerKyc {
  /**
   * Request parameters to search, filter, or page through seller KYC records
   * for onboarding/compliance review in ai_commerce_seller_kyc table.
   *
   * Fields match known filter columns used in KYC analytics and review UIs,
   * and optionally include pagination parameters.
   *
   * Optional properties per client context, all values should match expected
   * business state or search patterns.
   */
  export type IRequest = {
    /**
     * Target onboarding application to filter KYC results by
     * (ai_commerce_seller_onboarding.id, optional).
     */
    onboarding_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * User authentication record, if filtering to a specific actor
     * (ai_commerce_user_authentications.id).
     */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** KYC workflow state to filter by (pending, verified, rejected, etc.). */
    kyc_status?: string | undefined;

    /**
     * Type of submitted document to filter results (business_license,
     * passport, etc.).
     */
    document_type?: string | undefined;

    /** Fetch KYC records created on or after this ISO 8601 date-time. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Fetch KYC records created on or before this ISO 8601 date-time. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. Default is 1. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records per page. Default/maximum is
     * business-policy-defined.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Payload to create a new seller KYC (Know Your Customer) verification
   * application in aiCommerce onboarding workflows.
   *
   * All required fields must be provided according to database and business
   * logic. Only optional if value is not defined in this particular
   * onboarding flow per schema.
   */
  export type ICreate = {
    /**
     * User authentication ID for whom the KYC application is being created
     * (ai_commerce_user_authentications.id).
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Associated onboarding application ID
     * (ai_commerce_seller_onboarding.id).
     */
    onboarding_id: string & tags.Format<"uuid">;

    /**
     * Initial workflow status for KYC. Often 'pending',
     * 'awaiting_submission', or local default. Domain-specific codes align
     * with system policy and schema docs.
     */
    kyc_status: string;

    /**
     * Optional, the type of document provided (passport, business_license,
     * etc). Defaults to null if missing.
     */
    document_type?: string | null | undefined;

    /**
     * Optional, additional metadata about the provided document (JSON
     * string, can be null).
     */
    document_metadata?: string | null | undefined;

    /** Optional, compliance notes or justification (nullable). */
    verification_notes?: string | null | undefined;
  };

  /**
   * Update operation for seller KYC record. Allows modification during
   * compliance review (such as setting workflow status, attaching review
   * notes, or updating document details).
   *
   * Omit unchanged fields. Accepts only schema-defined fields for editing,
   * following business and privacy constraints.
   */
  export type IUpdate = {
    /**
     * New business status for this record. Must match recognized workflow
     * state (pending, verified, rejected, escalated, etc.).
     */
    kyc_status?: string | undefined;

    /**
     * Update (or clear with null) the document type (e.g., 'passport',
     * 'business_license').
     */
    document_type?: string | null | undefined;

    /**
     * Replace or clear the metadata for the attached document (optional,
     * freeform JSON).
     */
    document_metadata?: string | null | undefined;

    /**
     * Modify reviewer compliance notes if updating after review. (Optional,
     * can be null to clear notes).
     */
    verification_notes?: string | null | undefined;
  };
}
