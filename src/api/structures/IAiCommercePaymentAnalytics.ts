import { tags } from "typia";

/**
 * Analytics KPI summary for payments in a defined window/channel/method.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommercePaymentAnalytics = {
  /** Primary key UUID for this analytics record. */
  id: string;

  /** Start of analytics period (ISO8601). */
  period_start: string & tags.Format<"date-time">;

  /** End of analytics period (ISO8601). */
  period_end: string & tags.Format<"date-time">;

  /** UUID of channel referenced by this analytics record. */
  channel_id: string;

  /** UUID of payment method for analytics breakdown. */
  method_id: string;

  /** UUID of payment gateway for this analytics bucket. */
  gateway_id: string;

  /** Total number of completed payment events in this interval. */
  total_payments: number & tags.Type<"int32">;

  /**
   * Total monetary value of all payment transactions for the window (float,
   * typically platform currency).
   */
  total_amount: number;

  /** Count of refunds processed in this window (int). */
  total_refunds: number & tags.Type<"int32">;

  /** Total coupons redeemed in this window (int). */
  coupon_uses: number & tags.Type<"int32">;

  /** Total mileage redemptions in this window (int). */
  mileage_redemptions: number & tags.Type<"int32">;

  /** Total usages of deposit account in this window (int). */
  deposit_usages: number & tags.Type<"int32">;

  /** Timestamp of analytics window creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update/recalculation for this window. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAiCommercePaymentAnalytics {
  /**
   * Search/payment analytics query filters. Set only desired criteria and
   * paging (all are optional).
   */
  export type IRequest = {
    /** Start of analytics period (ISO8601, optional) */
    period_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** End of analytics period (ISO8601, optional) */
    period_end?: (string & tags.Format<"date-time">) | null | undefined;

    /** Channel UUID filter (optional, can be omitted or null) */
    channel_id?: string | null | undefined;

    /** Payment method UUID filter (optional) */
    method_id?: string | null | undefined;

    /** Payment gateway UUID filter (optional) */
    gateway_id?: string | null | undefined;

    /** Pagination: page number, optional, default = 1 */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Pagination: page size, optional, default = 50 */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };
}
