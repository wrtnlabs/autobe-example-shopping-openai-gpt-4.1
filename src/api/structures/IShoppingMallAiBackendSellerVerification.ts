import { tags } from "typia";

/**
 * Records business/KYC/KYB evidence for seller onboarding, regulatory review,
 * and audit. Stores immutable snapshots of submitted/approved records.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendSellerVerification = {
  /** Primary key for the seller verification evidence record. */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the verified seller. Business context: links to onboarding,
   * compliance, and regulatory review.
   */
  seller_id: string & tags.Format<"uuid">;

  /**
   * What type of verification is provided (e.g., identity, business_license,
   * bank_account, AML, KYC).
   */
  verification_type: string;

  /**
   * Status of verification ('submitted', 'approved', 'rejected', etc).
   * Workflow controlled.
   */
  status: string;

  /**
   * Secure storage URI or reference to KYC/KYB/business evidence file. Never
   * exposed publicly.
   */
  document_uri: string;

  /** Timestamp the verification was submitted. */
  submitted_at: string & tags.Format<"date-time">;

  /**
   * Timestamp the verification was approved (if successful), or null if not
   * applicable.
   */
  verified_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendSellerVerification {
  /**
   * Advanced search and filter structure for querying seller verification
   * evidence in audit and onboarding workflows. Allows filtering by evidence
   * type, status, or creation window.
   */
  export type IRequest = {
    /**
     * Filter verifications by status (e.g., submitted, approved, rejected,
     * pending, expired) as defined in the business workflow.
     */
    status?: string;

    /**
     * Filter by type of verification evidence (e.g., identity,
     * business_license, bank_account, AML, KYC).
     */
    verification_type?: string;

    /**
     * Lower bound for date-based filtering (inclusive). Use ISO8601 date
     * format.
     */
    created_at_from?: string & tags.Format<"date-time">;

    /**
     * Upper bound for date-based filtering (inclusive). Use ISO8601 date
     * format.
     */
    created_at_to?: string & tags.Format<"date-time">;

    /** Page number for pagination (1-based). */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Records per page for pagination. */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * Structure for updating a seller's onboarding/compliance verification
   * record. Only allowed fields may be changed, and changes are snapshotted
   * for compliance evidence.
   */
  export type IUpdate = {
    /**
     * Type of evidence this record verifies (KYC, business_license, AML,
     * etc).
     */
    verification_type?: string;

    /**
     * Workflow status of the verification; must match onboarding/approval
     * policies (e.g., approved, rejected, pending).
     */
    status?: string;

    /** Reference URI to evidence file to be examined. */
    document_uri?: string;

    /**
     * Timestamp for when the verification was approved. Null if rejected,
     * pending, or not yet reviewed.
     */
    verified_at?: (string & tags.Format<"date-time">) | null;
  };
}
