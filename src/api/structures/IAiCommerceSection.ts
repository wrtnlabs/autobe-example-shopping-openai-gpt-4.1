import { tags } from "typia";

/**
 * Object entity for a merchandising or discovery section in a sales channel,
 * matching ai_commerce_sections Prisma model.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSection = {
  /** UUID primary key for the section. */
  id: string & tags.Format<"uuid">;

  /** UUID of the channel to which the section belongs. */
  ai_commerce_channel_id: string & tags.Format<"uuid">;

  /** Unique code for section within a channel. */
  code: string;

  /** The display name for this section. */
  name: string;

  /** If true, this section is currently active/visible in the channel. */
  is_active: boolean;

  /** Business workflow status (e.g., 'normal', 'archived', 'pending'). */
  business_status: string;

  /** Display order value for this section. */
  sort_order: number & tags.Type<"int32">;

  /** Timestamp (ISO 8601) of section creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp (ISO 8601) of last section update. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for logical removal, or null if section is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSection {
  /**
   * Parameters for filtering, searching, and pagination of section entities
   * for list/search operations. All fields optional and suitable for API
   * search endpoints.
   */
  export type IRequest = {
    /**
     * Optional full-text search or query string for narrowing section
     * results.
     */
    search?: string | undefined;

    /** Filter by active/inactive sections. */
    is_active?: boolean | undefined;

    /** Filter by business workflow status for section search. */
    business_status?: string | undefined;

    /** Sort key for the returned list. */
    sort_by?: string | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Limit of records per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request type for creating a new section within a channel. All fields are
   * required as per schema.
   */
  export type ICreate = {
    /** UUID of the parent channel for this section (FK). */
    ai_commerce_channel_id: string & tags.Format<"uuid">;

    /** Unique code for the section within the parent channel. */
    code: string;

    /** Section display name. */
    name: string;

    /** Whether section is initially active/visible. */
    is_active: boolean;

    /** Initial workflow status (e.g., 'normal', 'pending', 'archived'). */
    business_status: string;

    /** Display order index for the new section. */
    sort_order: number & tags.Type<"int32">;
  };

  /**
   * Request body type for updating an existing section. All fields are
   * optional (Partial), with updates applied only to those supplied. Follows
   * business rules for allowed field changes based on ai_commerce_sections
   * schema.
   */
  export type IUpdate = {
    /** New display name for the section, if changing. */
    name?: string | undefined;

    /** Update section visibility or business status. */
    is_active?: boolean | undefined;

    /** Workflow/business state override if updating. */
    business_status?: string | undefined;

    /** Update the display order of this section. */
    sort_order?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary view of a channel section entity from ai_commerce_sections;
   * includes core business and UI organization fields, used for management
   * and list displays. Does not include detailed content, settings, or
   * relationships.
   */
  export type ISummary = {
    /**
     * Unique identifier for the section. References the primary key in
     * ai_commerce_sections.
     */
    id: string & tags.Format<"uuid">;

    /** Unique code for the section within a channel. */
    code: string;

    /** Display name of the section (e.g., 'Deals', 'Main Banner'). */
    name: string;

    /**
     * Whether this section is active and visible for merchandising/product
     * display.
     */
    is_active: boolean;

    /**
     * Business workflow status for the section (e.g., 'normal', 'archived',
     * 'pending').
     */
    business_status: string;

    /** Display sort order within the channel. */
    sort_order: number & tags.Type<"int32">;

    /** Timestamp for section creation. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last section update. */
    updated_at: string & tags.Format<"date-time">;
  };
}
