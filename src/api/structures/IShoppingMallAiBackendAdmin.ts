import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Full detail admin account object.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendAdmin = {
  /** Admin unique identifier. */
  id: string & tags.Format<"uuid">;

  /** Admin username (unique). */
  username: string;

  /** Real name. */
  name: string;

  /** Business e-mail address. */
  email: string;

  /** Contact phone (nullable). */
  phone_number?: string | null;

  /** Account enabled/disabled. */
  is_active: boolean;

  /** Last login timestamp. */
  last_login_at?: (string & tags.Format<"date-time">) | null;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp (nullable). */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendAdmin {
  /**
   * DTO for admin account creation, matching shopping_mall_ai_backend_admins
   * table. Email, username must be unique across all admins. Password must be
   * hashed prior to use.
   */
  export type ICreate = {
    /** Unique admin username for authentication. */
    username: string;

    /**
     * Hash of the administrator's authentication password. NEVER accept
     * plain password here.
     */
    password_hash: string;

    /** Real name of the admin for audit/evidence/traceability. */
    name: string;

    /** Unique business email address for the admin. */
    email: string & tags.Format<"email">;

    /** Optional admin contact phone for 2FA or notification. */
    phone_number?: string | null;

    /** Whether the administrator account is currently enabled. */
    is_active: boolean;
  };

  /**
   * Response type for admin authentication, registration, or refresh.
   * Contains admin profile and JWT tokens.
   */
  export type IAuthorized = {
    /** The authenticated admin account details. */
    admin: IShoppingMallAiBackendAdmin;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** DTO for admin login submission. */
  export type ILogin = {
    /** The admin username for login (must be unique). */
    username: string;

    /** Raw password to be checked against hash (NOT stored as cleartext). */
    password: string;
  };

  /** DTO for admin token refresh operation. */
  export type IRefresh = {
    /** Existing refresh token to be exchanged for new access/refresh token. */
    refresh_token: string;
  };

  /** DTO for searching/filtering admins in list view. */
  export type IRequest = {
    /** Pagination: page number (default 1). */
    page?: number;

    /** Pagination: limit per page. */
    limit?: number;

    /** Filter: partial match of username. */
    username?: string;

    /** Filter: partial match of administrator's name. */
    name?: string;

    /** Filter: admin active status. */
    is_active?: boolean;

    /** Filter: created after this ISO date. */
    created_at_from?: string & tags.Format<"date-time">;

    /** Filter: created before this ISO date. */
    created_at_to?: string & tags.Format<"date-time">;

    /** Sort by this field. */
    sort_by?: string;

    /** Sort direction. */
    sort_dir?: "asc" | "desc";
  };

  /** Summary view of an administrator for list display. */
  export type ISummary = {
    /** Admin id (UUID). */
    id: string & tags.Format<"uuid">;

    /** Admin's unique username. */
    username: string;

    /** Admin's real name. */
    name: string;

    /** Business e-mail. */
    email: string;

    /** Account activation status. */
    is_active: boolean;

    /** Last login (nullable). */
    last_login_at?: (string & tags.Format<"date-time">) | null;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp. */
    updated_at: string & tags.Format<"date-time">;
  };

  /** DTO for updating admin properties. */
  export type IUpdate = {
    /** Change admin name (optional). */
    name?: string;

    /** Change admin e-mail (optional). */
    email?: string;

    /** Change contact phone (nullable). */
    phone_number?: string | null;

    /** Change account status (optional). */
    is_active?: boolean;
  };
}
