import { tags } from "typia";

/**
 * Payment gateway configuration record. Represents a third-party payment
 * provider or internal routing system for the aiCommerce platform. Reflects the
 * ai_commerce_payment_gateways table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommercePaymentGateway = {
  /**
   * System-generated unique identifier (UUID). Primary Key for
   * ai_commerce_payment_gateways.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Business code used for payment gateway integration (e.g., 'INICIS',
   * 'KCP', 'PAYPAL'). Must be unique. Required for creation.
   */
  gateway_code: string;

  /**
   * Human-readable name of the payment gateway (e.g., 'Inicis', 'Korean Card
   * Processor').
   */
  display_name: string;

  /**
   * Configured or external API endpoint (URI/base URL) for payment
   * integration and callbacks.
   */
  api_endpoint: string;

  /** Indicates if the gateway is enabled for use (true/false). */
  is_active: boolean;

  /**
   * Comma-separated list of ISO currency codes the gateway supports (e.g.,
   * 'KRW,USD,JPY').
   */
  supported_currencies?: string | null | undefined;

  /**
   * Timestamp of when the payment gateway record was created. ISO 8601
   * format.
   */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for most recent record update. ISO 8601 format. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp indicating when the payment gateway config was logically
   * deleted (soft delete). Null if active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommercePaymentGateway {
  /**
   * Filter and pagination options for listing/searching payment gateway
   * configurations.
   */
  export type IRequest = {
    /**
     * Business code for the payment gateway. Used for filtering.
     * Corresponds to the 'gateway_code' in ai_commerce_payment_gateways.
     */
    gateway_code?: string | undefined;

    /**
     * Display name of the payment gateway. Used in filter/search.
     * Corresponds to 'display_name'.
     */
    display_name?: string | undefined;

    /**
     * Filtering by whether the gateway is enabled (true) or disabled
     * (false).
     */
    is_active?: boolean | undefined;

    /**
     * Filter for gateways supporting a given currency. Typical values:
     * 'USD', 'KRW', 'JPY', etc.
     */
    supported_currency?: string | undefined;

    /** Sort field for the payment gateway list. */
    sort?:
      | "gateway_code"
      | "display_name"
      | "created_at"
      | "updated_at"
      | undefined;

    /** Sort order: ascending or descending. */
    order?: "asc" | "desc" | undefined;

    /** Page number for retrieval. Starts at 1. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Creation DTO for a payment gateway configuration. Input requirements are
   * covered by unique and NOT NULL constraints in
   * ai_commerce_payment_gateways table documentation.
   */
  export type ICreate = {
    /**
     * Unique business code for the payment gateway (e.g., 'INICIS', 'KCP').
     * Value must be unique and immutable. Required.
     */
    gateway_code: string;

    /** Display name for the payment gateway. Required. */
    display_name: string;

    /** Base URI or endpoint for gateway API integration. Required. */
    api_endpoint: string;

    /** Whether the gateway is active/enabled when created. Required. */
    is_active: boolean;

    /**
     * Comma-separated list of currency codes this gateway supports, per
     * ISO. Optional.
     */
    supported_currencies?: string | null | undefined;
  };

  /**
   * Update DTO for a payment gateway configuration. Partial updates of
   * modifiable fields. The gateway_code (unique code) cannot be modified
   * after creation.
   */
  export type IUpdate = {
    /** New display name for payment gateway (optional). */
    display_name?: string | undefined;

    /** New API endpoint (URI) for payment gateway (optional). */
    api_endpoint?: string | undefined;

    /** Set enabled status for payment gateway. */
    is_active?: boolean | undefined;

    /** Comma-separated updated list of supported currencies. Optional. */
    supported_currencies?: string | null | undefined;
  };
}
