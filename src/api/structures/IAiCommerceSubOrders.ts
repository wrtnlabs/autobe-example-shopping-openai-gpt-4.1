import { tags } from "typia";

/**
 * Sub-order entity representing a fulfillment segment (per seller, channel, or
 * fulfillment method) of a parent order. Supports split shipment, multi-seller,
 * and advanced fulfillment workflows. Corresponds to ai_commerce_sub_orders in
 * the Prisma ERD. All fields are mapped and documented per schema, with type,
 * purpose, and business context. Contains core operational, financial, and
 * logistical data for order segmentation and audit.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSubOrders = {
  /**
   * Unique identifier for the sub-order. Uniquely distinguishes each
   * sub-order in the database. Referenced as ai_commerce_sub_orders.id in the
   * schema.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Parent order's unique identifier. Links to the ai_commerce_orders.id
   * field. Crucial for associating this sub-order to the correct parent
   * order, as per Prisma and ERD specification.
   */
  order_id: string & tags.Format<"uuid">;

  /**
   * Unique identifier of the seller fulfilling the sub-order. References
   * ai_commerce_seller.id. Ensures proper assignment and tracking of seller
   * responsibilities.
   */
  seller_id: string & tags.Format<"uuid">;

  /**
   * Unique business code for this sub-order, derived from order code and a
   * segment. Enforced as unique in ai_commerce_sub_orders and utilized for
   * business workflows, fulfillment, and audits. Must follow
   * platform-established scheme.
   */
  suborder_code: string;

  /**
   * Current status for this sub-order (e.g., payment_pending, shipped,
   * delivered, completed, cancelled). Business logic depends on this field
   * for order management throughout the platform.
   */
  status: string;

  /**
   * Method used for fulfillment of this segment (e.g., courier, pickup,
   * express). Can be null if not assigned, as per schema.
   */
  shipping_method?: string | null | undefined;

  /**
   * Tracking reference for logistics, as per ai_commerce_sub_orders. May be
   * null if not yet assigned.
   */
  tracking_number?: string | null | undefined;

  /**
   * Total price allocable to this sub-order segment. Vital for split/partial
   * order support and analytics. Sourced from
   * ai_commerce_sub_orders.total_price.
   */
  total_price: number;

  /**
   * Timestamp of creation for this sub-order record. References
   * ai_commerce_sub_orders.created_at. Preserved for audit and compliance.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last updating of this sub-order. Used for synchronization
   * and concurrency tracking. Sourced from updated_at field in schema.
   */
  updated_at: string & tags.Format<"date-time">;

  /** When the sub-order was soft-deleted, if applicable. Null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSubOrders {
  /**
   * Object for updating one or more fields on an existing sub-order
   * (ai_commerce_sub_orders). Only allowed properties, e.g., status or
   * shipping/tracking, can be updated per workflow and compliance rules.
   */
  export type IUpdate = {
    /** Update sub-order status (e.g., 'shipped', 'delivered', etc.). */
    status?: string | undefined;

    /** Update to shipping method for this sub-order (nullable). */
    shipping_method?: string | null | undefined;

    /** Update or add tracking number for this sub-order (nullable). */
    tracking_number?: string | null | undefined;

    /** Update the total price on sub-order, if permitted by business policy. */
    total_price?: number | undefined;
  };
}
