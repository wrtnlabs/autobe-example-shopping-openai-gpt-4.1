import { tags } from "typia";

/**
 * Primary business entity for a product inquiry. Fields include UUIDs for
 * inquiry, author, and referenced product, inquiry content, answer (if
 * present), status, and visibility. Includes timestamps and supports soft
 * delete via deleted_at.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceInquiry = {
  /** Unique identifier for inquiry, generated as UUID. */
  id: string & tags.Format<"uuid">;

  /** UUID of the buyer/author who submitted the inquiry. */
  author_id: string & tags.Format<"uuid">;

  /** UUID of the product this inquiry references. */
  product_id: string & tags.Format<"uuid">;

  /** Content of the inquiry, as submitted by user. */
  question: string;

  /** Answer/content provided by seller or admin; null if not yet answered. */
  answer?: string | null | undefined;

  /** Scope/visibility of the inquiry, e.g., 'public','private', etc. */
  visibility: string;

  /** Workflow or moderation status (open/answered/moderating/deleted). */
  status: string;

  /** Timestamp when the inquiry was created (RFC 3339/ISO 8601 format). */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the inquiry was last updated, if at all (RFC 3339/ISO 8601
   * format).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * If the inquiry has been deleted (soft delete), the deleted_at timestamp;
   * else, null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceInquiry {
  /**
   * Query parameters for search/filter/pagination of inquiries; supports
   * search by product, author, keywords, status, visibility, and
   * pagination/sorting.
   */
  export type IRequest = {
    /** Search text applied to the question/answer fields. */
    keyword?: string | undefined;

    /** Filter by product UUID. */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter inquiries by author/buyer UUID. */
    author_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Status filter for inquiries (e.g.,
     * 'open','answered','moderating','deleted').
     */
    status?: string | undefined;

    /** Visibility/scope filter for queries ('public', 'private', etc.). */
    visibility?: string | undefined;

    /** Pagination: page number (starts at 1) */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination: number of items per page */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Sorting: field name to order by, e.g., 'created_at'. */
    sort_field?: string | undefined;

    /** Sorting direction; allowed values 'asc' or 'desc'. */
    sort_direction?: "asc" | "desc" | undefined;
  };

  /**
   * DTO for creating a new product inquiry. Requires product_id (UUID) and
   * question string; optional visibility scope.
   */
  export type ICreate = {
    /** Product to inquire about; required UUID. */
    product_id: string & tags.Format<"uuid">;

    /** Question content for the inquiry. */
    question: string;

    /** Scope/visibility for the inquiry (e.g., 'public','private'). */
    visibility?: string | undefined;
  };

  /**
   * Updateable fields for a product inquiry. No direct update fields were
   * specified in the derived schema for this component. Implement update
   * objects with explicit property enumeration based on the business/prisma
   * requirements.
   */
  export type IUpdate = {};

  /**
   * Summary record of a product inquiry, used for list results or previews in
   * account/inquiry dashboards. Contains basic inquiry state, author,
   * product, lifecycle, and timestamps.
   */
  export type ISummary = {
    /** UUID for the product inquiry, primary key from ai_commerce_inquiries. */
    id: string & tags.Format<"uuid">;

    /**
     * UUID of the user who created the inquiry, referencing a buyer (or
     * sometimes seller for system Q&A).
     */
    author_id: string & tags.Format<"uuid">;

    /**
     * UUID of the product this inquiry references. Foreign key to
     * ai_commerce_products.id.
     */
    product_id: string & tags.Format<"uuid">;

    /**
     * Main body of the inquiry as submitted by the buyer. Full text,
     * usually pre-moderation or filtered for status=published.
     */
    question: string;

    /**
     * Access level: commonly one of 'public', 'private', or 'restricted'.
     * Controls who may view the inquiry.
     */
    visibility: string;

    /**
     * Inquiry lifecycle status, such as 'open', 'answered', 'moderated',
     * 'deleted'. Follows ai_commerce_inquiries.status business logic.
     */
    status: string;

    /** ISO 8601 timestamp for inquiry creation. */
    created_at: string & tags.Format<"date-time">;

    /** ISO 8601 timestamp for the most recent update to this inquiry. */
    updated_at: string & tags.Format<"date-time">;
  };
}
