import { tags } from "typia";

/**
 * Full persistent record for a category template as designed in
 * ai_commerce_category_templates.
 *
 * This schema corresponds exactly to the table's columns in Prisma and
 * describes reusable blueprints for category tree structures in AI Commerce.
 * Includes all audit/compliance fields with strong business documentation for
 * each property.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCategoryTemplate = {
  /**
   * Unique identifier for the category template (UUID primary key). As
   * specified in the Prisma schema, this uniquely distinguishes each
   * template.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique template code for reference and import/export operations, e.g.,
   * 'ELECTRONICS_DEFAULT'. Must be unique within the table.
   */
  code: string;

  /**
   * Human-readable name of the template, used in UI and management operations
   * (e.g., 'Electronics Default', 'Fashion Segments').
   */
  name: string;

  /**
   * Serialized configuration data representing the category tree structure,
   * typically as a JSON blob. This field allows rapid onboarding or migration
   * between environments.
   */
  template_data: string;

  /**
   * True if this template is the system default for new category setups. Used
   * as a business flag for template selection.
   */
  is_default: boolean;

  /**
   * Operational workflow or approval status of the template, e.g., 'active',
   * 'archived', 'pending'.
   */
  business_status: string;

  /**
   * Timestamp for when the template was created, in ISO 8601 date-time
   * format. Required for audit and regulatory purposes.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last updated timestamp for this template, in ISO 8601 date-time format.
   * Required for synchronization, audit, and troubleshooting.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete for logical removal; null if active. Populated when the
   * template is retired or flagged for compliance, retained for
   * historical/audit reasons per business rules.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceCategoryTemplate {
  /**
   * Filtering, search, and pagination parameters for category template list
   * endpoints; all fields optional, suitable for PATCH/POST request
   * filtering.
   */
  export type IRequest = {
    /** Keyword/name/code search among templates */
    search?: string | undefined;

    /** Filter only default templates or exclude them */
    is_default?: boolean | undefined;

    /** Filter by template approval/workflow status */
    business_status?: string | undefined;

    /** Sort field for list, e.g., 'created_at' */
    sort_by?: string | undefined;

    /** Pagination: page number */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Records per page */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request schema for creating a new category template.
   *
   * Represents the input form for admins to create a new reusable template,
   * as per the ai_commerce_category_templates model documentation. All
   * required properties are strictly enforced. Optional 'is_default' may be
   * omitted (system can default to false if not given).
   */
  export type ICreate = {
    /**
     * Unique code for the new category template. Must not conflict with
     * existing template codes.
     */
    code: string;

    /** Human-readable template name for display and selection. */
    name: string;

    /**
     * Serialized JSON string that defines the full category tree. Must
     * conform to system data format, typically validated for business
     * requirements at creation.
     */
    template_data: string;

    /**
     * If true, this template will be set as default for new
     * channel/category setups. Only one template per business context can
     * be 'default'.
     */
    is_default?: boolean | undefined;

    /**
     * Business workflow status for the template, e.g., 'active', 'pending',
     * or custom admin settings.
     */
    business_status: string;
  };

  /**
   * Update type for PATCH/PUT operations on category templates; all fields
   * optional (Partial).
   */
  export type IUpdate = {
    /** Change template display name */
    name?: string | undefined;

    /** Update the template serialized config */
    template_data?: string | undefined;

    /** Set/unset default template */
    is_default?: boolean | undefined;

    /** Update workflow status */
    business_status?: string | undefined;
  };

  /**
   * Summary view of a reusable category template, showing core metadata for
   * quick UI selection or reporting; does not include full configuration
   * data.
   */
  export type ISummary = {
    /** Unique identifier for the category template. */
    id: string & tags.Format<"uuid">;

    /** Unique category template code (e.g., 'FASHION_DEFAULT'). */
    code: string;

    /** Human-friendly name for the template. */
    name: string;

    /**
     * Indicates if this template is the default for category
     * onboarding/creation flows.
     */
    is_default: boolean;

    /** Current workflow/approval status for the template. */
    business_status: string;

    /** Creation timestamp for audit/evidence use. */
    created_at: string & tags.Format<"date-time">;

    /** Last update time for version control. */
    updated_at: string & tags.Format<"date-time">;
  };
}
