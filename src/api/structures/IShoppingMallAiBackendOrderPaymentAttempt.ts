import { tags } from "typia";

/**
 * Detailed information for each attempt made at processing an order payment.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendOrderPaymentAttempt = {
  /** Primary key of the payment attempt record. */
  id: string & tags.Format<"uuid">;

  /** UUID for the related order payment. */
  shopping_mall_ai_backend_order_payment_id: string & tags.Format<"uuid">;

  /**
   * Result state of this payment attempt (e.g., 'pending', 'success', 'fail',
   * 'retry', etc).
   */
  attempt_state: string;

  /** Failure reason if attempt failed. Null if successful or not applicable. */
  error_message?: string | null;

  /** External or gateway provider code for the attempt, if applicable. */
  provider_code?: string | null;

  /** When this attempt was initiated. */
  requested_at: string & tags.Format<"date-time">;

  /** When this attempt was completed, if so. */
  completed_at?: (string & tags.Format<"date-time">) | null;

  /** System creation timestamp of payment attempt record. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAiBackendOrderPaymentAttempt {
  /** Request search/filter parameters for payment attempts. */
  export type IRequest = {
    /** UUID of the order payment record being queried for attempts. */
    order_payment_id?: string & tags.Format<"uuid">;

    /**
     * State/status to filter attempts by (e.g., 'pending', 'success',
     * 'fail').
     */
    attempt_state?: string;

    /** External payment provider code to filter. */
    provider_code?: string;

    /** Filter for attempts after this datetime. */
    from?: string & tags.Format<"date-time">;

    /** Filter for attempts before this datetime. */
    to?: string & tags.Format<"date-time">;

    /** Page of results. */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Page size, records per page. */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Sort order by attempt field(s). */
    sort?: string;
  };
}
