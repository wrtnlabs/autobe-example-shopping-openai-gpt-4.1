import { tags } from "typia";

/**
 * Schema for an entity-attachment link (shopping_mall_entity_attachment_links).
 * Represents the relationship between a file attachment and a business entity
 * (product, order, review, etc.) for evidence, audit, compliance, and UI
 * display purposes. Refer to shopping_mall_entity_attachment_links Prisma
 * table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallEntityAttachmentLink = {
  /** Unique identifier for this entity-attachment link. */
  id: string & tags.Format<"uuid">;

  /** Attachment UUID (PK) – link to the file in shopping_mall_attachments. */
  shopping_mall_attachment_id: string & tags.Format<"uuid">;

  /**
   * String discriminator for the attached business entity type (e.g.,
   * 'product', 'order').
   */
  entity_type: string;

  /** UUID ID of the attached entity (business object) referenced. */
  entity_id: string & tags.Format<"uuid">;

  /**
   * User who performed/authorized the link. Supports audit trail, permission,
   * and accountability.
   */
  linked_by_user_id: string & tags.Format<"uuid">;

  /**
   * Business/contextual purpose of the attachment, e.g., 'evidence',
   * 'thumbnail', 'document' (nullable, optional).
   */
  purpose?: string | undefined;

  /**
   * Comma-separated string of roles/group codes allowed to access this
   * attachment link (nullable for public).
   */
  visible_to_roles?: string | undefined;

  /** Timestamp when the link was created (ISO UTC format). */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp/logical deletion for link (null if active, otherwise soft
   * deleted).
   */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IShoppingMallEntityAttachmentLink {
  /**
   * Search, pagination and filtering criteria for retrieving
   * entity-attachment links. Used for PATCH/list operations on
   * entity-attachment associations in the shopping mall platform. Supports
   * advanced querying by entity type, entity id, attachment id, purpose,
   * permission scope, role, and creation/deletion state. Refer to
   * shopping_mall_entity_attachment_links Prisma table.
   */
  export type IRequest = {
    /**
     * String discriminator describing entity type for this link. E.g.,
     * 'product', 'order', 'review', 'board_post' etc. Used for filtering
     * links to a particular business object kind.
     */
    entity_type?: string | undefined;

    /**
     * UUID identifier for the business entity being filtered. When
     * specified, limits results to a particular instance of the given
     * entity type.
     */
    entity_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * UUID identifier for the linked file attachment. Used for filtering
     * for links referencing a particular file.
     */
    attachment_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Purpose context for the link (e.g., 'evidence', 'thumbnail',
     * 'document'). Allows searching for attachments by their usage or
     * business meaning.
     */
    purpose?: string | undefined;

    /**
     * Comma-separated string of roles/groups that can view/access the
     * attachment. E.g., 'admin,seller,customer'. Used to filter visible
     * links by role.
     */
    visible_to_roles?: string | undefined;

    /** Requested page number for pagination. Defaults to 1 if not specified. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of rows per page for pagination; default and maximum subject
     * to business policy, typically 25-100.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Field name for sort ordering; defaults to created_at descending, may
     * support other business fields.
     */
    sort?: string | undefined;

    /**
     * Indicates whether to return all, only active, or only logically
     * deleted records. Values: 'all', 'active', 'deleted'.
     */
    deleted_state?: "all" | "active" | "deleted" | undefined;
  };

  /**
   * Schema for creating a new entity-attachment link
   * (shopping_mall_entity_attachment_links). Used for associating an uploaded
   * attachment with a business entity. See
   * shopping_mall_entity_attachment_links Prisma table. Required for
   * POST/create operations.
   */
  export type ICreate = {
    /** Attachment file's UUID to link. */
    shopping_mall_attachment_id: string & tags.Format<"uuid">;

    /**
     * String discriminator designating business entity type (e.g., product,
     * order, review).
     */
    entity_type: string;

    /** UUID identifier for the entity being linked. */
    entity_id: string & tags.Format<"uuid">;

    /** User ID performing the link for audit/permission context. */
    linked_by_user_id: string & tags.Format<"uuid">;

    /**
     * Business purpose for the file link (e.g., evidence, thumbnail,
     * document). Optional – nullable.
     */
    purpose?: string | undefined;

    /**
     * Comma-separated string list of business roles allowed to access the
     * link (e.g., 'admin,seller'). Null for public/unrestricted.
     */
    visible_to_roles?: string | undefined;
  };

  /**
   * Update payload for an entity-attachment link
   * (shopping_mall_entity_attachment_links table).
   *
   * Permits updating the business purpose (usage context) or the roles/groups
   * permitted to access the attachment link. Used for remapping file context
   * (evidence, UI role), or controlling access/granting visibility to
   * specified business roles.
   *
   * Omitting all fields means no changes. This object is interpreted as
   * 'partial update' (patch).
   */
  export type IUpdate = {
    /**
     * Describes the business context or usage of this attachment link
     * (e.g., 'evidence', 'thumbnail', 'document').
     *
     * Defines how the attachment is intended to be used in relation to the
     * linked business entity, such as a product, order, review, or post.
     * Changing the purpose may impact access, notifications, or evidence
     * linkage depending on business logic.
     */
    purpose?: string | undefined;

    /**
     * Who may access this attachment link (role list). String
     * (comma/semicolon-separated) or null for public.
     */
    visible_to_roles?: string | null | undefined;
  };
}
