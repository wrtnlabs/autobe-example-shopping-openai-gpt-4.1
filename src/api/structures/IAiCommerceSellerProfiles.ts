import { tags } from "typia";

/**
 * A seller's public and private profile information for AI commerce, including
 * display name, branding, approval status, and profile metadata. Links to the
 * primary user and optionally to a default store. Editable by sellers/admins
 * with audit trail.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSellerProfiles = {
  /** Primary key. Unique identifier for the seller profile. */
  id: string & tags.Format<"uuid">;

  /**
   * User's unique identifier (referenced from
   * ai_commerce_user_authentications.id).
   */
  user_id: string & tags.Format<"uuid">;

  /** Name shown on storefronts and analytics for this seller. */
  display_name: string;

  /**
   * JSON snapshot of seller's business description, branding info, and
   * regulatory disclosures for compliance.
   */
  profile_metadata?: string | null | undefined;

  /** Approval/workflow status (e.g., active, pending, suspended, terminated). */
  approval_status: string;

  /** Reason for suspension/termination as determined by platform/admin. */
  suspension_reason?: string | null | undefined;

  /** Profile creation timestamp (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Profile last update time (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for this profile (null if active). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSellerProfiles {
  /**
   * Search/filter request for seller profiles in ai_commerce_seller_profiles
   * table (backoffice/admin/business analytics interface).
   *
   * Filters by user ID, display name, approval status, date buckets, and
   * supports basic pagination as per business requirements.
   */
  export type IRequest = {
    /**
     * Optional, filter to specific user ID
     * (ai_commerce_user_authentications.id).
     */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional, search display names (exact or partial, per business
     * logic).
     */
    display_name?: string | undefined;

    /**
     * Optional, filter by workflow status (pending, active, suspended,
     * terminated, etc.).
     */
    approval_status?: string | undefined;

    /** Optional, start date filter for record creation (ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Optional, end date filter for record creation (ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional, page number for paginated results (defaults as per system
     * policy).
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional, max number of results per page (policy-defined restraints
     * apply).
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request schema for creating a new seller profile in
   * ai_commerce_seller_profiles. Follows Prisma constraints and business
   * rules.
   */
  export type ICreate = {
    /** User's unique identifier to whom the seller profile is assigned. */
    user_id: string & tags.Format<"uuid">;

    /**
     * Display name for the seller, required, shown on storefronts,
     * analytics, and audit.
     */
    display_name: string;

    /**
     * JSON object describing business details, branding, disclosures.
     * Optional.
     */
    profile_metadata?: string | null | undefined;

    /**
     * Initial approval or workflow state (e.g., 'pending', 'active',
     * 'suspended').
     */
    approval_status: string;

    /** Suspend/termination reason. Usually empty at creation. */
    suspension_reason?: string | null | undefined;
  };

  /**
   * Request schema for updating an existing seller profile in
   * ai_commerce_seller_profiles. Supports partial updates.
   */
  export type IUpdate = {
    /** Updated display name for seller profile. */
    display_name?: string | undefined;

    /** Updated branding/business metadata. JSON string or null. */
    profile_metadata?: string | null | undefined;

    /**
     * Updated approval or workflow status for the profile (e.g., 'active',
     * 'suspended'). Optional for partial update.
     */
    approval_status?: string | undefined;

    /**
     * Reason for suspension/termination, set by admin; otherwise may be
     * omitted.
     */
    suspension_reason?: string | null | undefined;
  };
}
