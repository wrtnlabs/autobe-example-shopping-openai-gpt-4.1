import { tags } from "typia";

/**
 * Detailed product record for view and database logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendProduct = {
  /** Product unique identifier. */
  id: string & tags.Format<"uuid">;

  /** Product display title. */
  title: string;

  /** SEO/product slug (unique in channel+seller scope). */
  slug: string;

  /** Detailed product description (nullable). */
  description?: string | null;

  /** Product category/type. */
  product_type: string;

  /** Business status (e.g., active, draft). */
  business_status: string;

  /** Minimum orderable quantity. */
  min_order_quantity: number;

  /** Maximum orderable quantity. */
  max_order_quantity: number;

  /** Tax code reference. */
  tax_code: string;

  /** Sorting priority for list. */
  sort_priority: number;

  /** Product creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last updated timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp (nullable). */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendProduct {
  /** Request DTO for searching/filtering products (list view). */
  export type IRequest = {
    /** Pagination: page number. */
    page?: number;

    /** Pagination: items per page. */
    limit?: number;

    /** Search: keyword in product title. */
    title?: string;

    /** Filter: product type. */
    product_type?: string;

    /** Filter: business/commercial status. */
    business_status?: string;

    /** Filter: tax code. */
    tax_code?: string;

    /** Sort by field. */
    sort_by?: string;

    /** Sort direction. */
    sort_dir?: "asc" | "desc";
  };

  /**
   * Request type for creating a new product entity based on the shopping mall
   * backend's business rules and schema. Required fields are documented as
   * based on the Prisma schema. Optional description field may be omitted if
   * not available.
   */
  export type ICreate = {
    /** Product title (unique per seller/channel) */
    title: string;

    /** Unique, SEO-friendly product slug (URL fragment) */
    slug: string;

    /** Long-form product description (may be markdown or html); optional */
    description?: string | null;

    /** Required: product type code (e.g., 'physical', 'digital', etc) */
    product_type: string;

    /**
     * Required: business status initial state (e.g., 'draft', 'active',
     * 'paused')
     */
    business_status: string;

    /** Minimum orderable quantity */
    min_order_quantity: number;

    /** Maximum orderable quantity per order */
    max_order_quantity: number;

    /** Tax code or category identifier */
    tax_code: string;

    /** Display sorting priority in product listings */
    sort_priority: number;
  };

  /**
   * Update type for partially modifying product entity attributes. All fields
   * are optional, enabling partial update per business/prisma rules. Fields
   * not set will not change.
   */
  export type IUpdate = {
    /** Product title (unique per seller/channel) */
    title?: string;

    /** Unique, SEO-friendly product slug (URL fragment) */
    slug?: string;

    /** Long-form product description (may be markdown or html); optional */
    description?: string | null;

    /** Required: product type code (e.g., 'physical', 'digital', etc) */
    product_type?: string;

    /**
     * Required: business status initial state (e.g., 'draft', 'active',
     * 'paused')
     */
    business_status?: string;

    /** Minimum orderable quantity */
    min_order_quantity?: number;

    /** Maximum orderable quantity per order */
    max_order_quantity?: number;

    /** Tax code or category identifier */
    tax_code?: string;

    /** Display sorting priority in product listings */
    sort_priority?: number;
  };

  /**
   * Summary view of a product, for use in catalog browsing, search results,
   * and admin datagrids. Columns included are for display lists, table
   * pagers, and search performance UX. Omitted fields are reserved for
   * detail/deep APIs or product edit forms.
   */
  export type ISummary = {
    /** Unique ID of the product (UUID PK). */
    id: string & tags.Format<"uuid">;

    /** Product display title for customer-facing and admin lists. */
    title: string;

    /**
     * SEO and navigation-friendly product slug (unique, for
     * marketing/links).
     */
    slug: string;

    /** Type code for product (physical, digital, service, etc). */
    product_type: string;

    /** Current lifecycle status (draft, active, paused, restricted, etc). */
    business_status: string;

    /** Applicable compliance or business tax code. */
    tax_code: string;

    /**
     * Minimum orderable quantity per policy (for B2B/wholesale/retail
     * limits).
     */
    min_order_quantity: number & tags.Type<"int32">;

    /** Maximum allowed per-transaction order quantity. */
    max_order_quantity: number & tags.Type<"int32">;

    /** Product creation timestamp (ISO 8601). */
    created_at: string & tags.Format<"date-time">;

    /** Last business update to product metadata (ISO 8601). */
    updated_at: string & tags.Format<"date-time">;
  };
}
