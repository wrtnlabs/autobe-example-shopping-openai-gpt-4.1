import { tags } from "typia";

/**
 * Full details of a review for a purchased product (ai_commerce_reviews table).
 * Corresponds to review, buyer, rating, body, seller response, visibility,
 * status, and audit fields. All fields specified in DB schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceReview = {
  /** Unique identifier of the review (UUID, PK, ai_commerce_reviews.id). */
  id: string & tags.Format<"uuid">;

  /** Author of the review (buyer) (UUID, FK ai_commerce_buyer.id). */
  author_id: string & tags.Format<"uuid">;

  /**
   * Unique order item identifier the review attaches to (UUID, FK
   * ai_commerce_order_items.id).
   */
  order_item_id: string & tags.Format<"uuid">;

  /** Numeric review score (e.g., 1-5). */
  rating: number & tags.Type<"int32">;

  /** Free-text review content. */
  body: string;

  /** Seller's reply/response. Nullable/optional. */
  seller_response?: string | undefined;

  /** Public/private/etc. Controls who can see the review. */
  visibility: string;

  /** Moderation/publication status (e.g., published/suspended/deleted). */
  status: string;

  /** Created timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last updated timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. Optional, present if review is deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IAiCommerceReview {
  /**
   * Review search/list filter DTO for paginated endpoints. Accepts search
   * text, paging, status, and filter fields. Never includes
   * forbidden/internal fields. Used only for input filtering.
   */
  export type IRequest = {
    /** Page number for pagination; optional. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Max records per page. Use as per platform default (e.g., 20/50/100). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Filter by associated order item, if specified. */
    order_item_id?: (string & tags.Format<"uuid">) | undefined;

    /** Review status filter. */
    status?:
      | "draft"
      | "published"
      | "moderating"
      | "suspended"
      | "deleted"
      | undefined;

    /** Search for reviews by author. Only permitted with proper privilege. */
    author_id?: (string & tags.Format<"uuid">) | undefined;

    /** Keyword or full-text search across review bodies. */
    search?: string | undefined;
  };

  /**
   * Request payload to create a new review, referencing order item, numeric
   * rating, review content, and visibility settings. Must comply with
   * DB/business constraints on uniqueness, eligibility, and text content.
   */
  export type ICreate = {
    /**
     * UUID of the completed order item for which the buyer is writing the
     * review.
     */
    order_item_id: string & tags.Format<"uuid">;

    /** Numeric review score—typically 1-5 integer value. */
    rating: number & tags.Type<"int32">;

    /** The main review text (required, up to schema max length). */
    body: string;

    /**
     * Visibility for the review ('public', 'private', etc., see business
     * rules).
     */
    visibility: string;
  };

  /**
   * Review update DTO for PUT/PATCH requests. All fields optional; only those
   * provided are changed. Excludes id, author_id, order_item_id, and
   * system-generated fields. Complies with security and ownership controls.
   */
  export type IUpdate = {
    /**
     * Updated numeric review score, if altering. Optional, always validated
     * if provided.
     */
    rating?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<5>)
      | undefined;

    /** Updated content/body for the review, if changed. */
    body?: string | undefined;

    /** Updated visibility setting if desired. */
    visibility?: "public" | "private" | undefined;

    /**
     * Update of status - e.g., move from draft to published, request
     * moderation, suspension, etc.
     */
    status?: "published" | "draft" | "moderating" | "suspended" | undefined;

    /** Optional seller reply - only permitted for sellers/admins. */
    seller_response?: string | undefined;
  };

  /**
   * Summary card of a review entry. Used for listing user/customer reviews,
   * allows display of author, item/reference, rating, status and timestamps.
   * Does not contain seller responses or comment threads.
   */
  export type ISummary = {
    /** UUID for the review record, from ai_commerce_reviews. */
    id: string & tags.Format<"uuid">;

    /**
     * UUID of the review author (the buyer who placed the order and is
     * leaving feedback).
     */
    author_id: string & tags.Format<"uuid">;

    /**
     * UUID of the order item being reviewed. Linked to
     * ai_commerce_order_items.id, ensuring one review per purchased item.
     */
    order_item_id: string & tags.Format<"uuid">;

    /**
     * Numeric review rating (e.g., 1-5 stars). Field is integer or float
     * depending on platform policy, always present.
     */
    rating: number;

    /**
     * Text content of the review—the user's feedback for the product and
     * order item.
     */
    body: string;

    /**
     * Review status, such as 'published', 'moderated', 'deleted', etc.
     * Follows status values allowed in ai_commerce_reviews.
     */
    status: string;

    /** Creation timestamp (ISO 8601 date-time) of the review. */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update (edit/moderation) timestamp (ISO 8601 date-time) of the
     * review.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
