import { tags } from "typia";

import { EOrderReturnStatus } from "./EOrderReturnStatus";

/**
 * Represents a return request for an order item, including all status,
 * evidence, and business context. Aligned with
 * shopping_mall_ai_backend_order_returns schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendOrderReturn = {
  /**
   * Unique identifier of the order return record. Corresponds to id field in
   * shopping_mall_ai_backend_order_returns table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The UUID of the associated order in shopping_mall_ai_backend_orders
   * related to this return event.
   */
  shopping_mall_ai_backend_order_id: string & tags.Format<"uuid">;

  /** The UUID of the returned item's order record. */
  shopping_mall_ai_backend_order_item_id: string & tags.Format<"uuid">;

  /** Business reason provided by the customer for requesting the return. */
  return_reason: string;

  /**
   * Current status in the return process, such as requested, approved,
   * rejected, completed.
   */
  status: string;

  /** Timestamp when the return request was submitted. */
  requested_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this return was processed (approved/rejected). Nullable
   * when pending.
   */
  processed_at?: (string & tags.Format<"date-time">) | null;

  /** Return process completion timestamp. Nullable until finalized. */
  completed_at?: (string & tags.Format<"date-time">) | null;

  /** System record creation timestamp for business/audit evidence. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft-delete timestamp. Set if logically deleted, otherwise null. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendOrderReturn {
  /**
   * Filter options and pagination for searching order returns (see
   * EOrderReturnStatus for workflows).
   */
  export type IRequest = {
    /** Target page number for pagination. */
    page?: number;

    /** Page size (records per page). */
    limit?: number;

    /** Filter returns by workflow status. */
    status?: EOrderReturnStatus;

    /** Lower bound for return date/time query. */
    date_start?: string & tags.Format<"date-time">;

    /** Upper bound for return date/time query. */
    date_end?: string & tags.Format<"date-time">;
  };

  /**
   * Admin/staff update for return event: status change, rationale correction,
   * and completion.
   */
  export type IUpdate = {
    /** Business rationale for updating return. */
    return_reason?: string;

    /** Updated status for workflow transition. */
    status?: EOrderReturnStatus;

    /** Mark as completed/finished (date-time or null). */
    completed_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Summary return record for order-management table and business overviews.
   * Omits internal evidence and audit fields.
   */
  export type ISummary = {
    /** UUID identifier of this order return record. */
    id: string & tags.Format<"uuid">;

    /** UUID of the parent order associated with this return. */
    order_id: string & tags.Format<"uuid">;

    /** UUID for the particular item in the order returned. */
    item_id: string & tags.Format<"uuid">;

    /** Short business/literal reason for customer-requested return. */
    return_reason: string;

    /** Workflow status of the return (see EOrderReturnStatus enum). */
    status: EOrderReturnStatus;

    /** Timestamp when the return was initially requested. */
    requested_at: string & tags.Format<"date-time">;

    /** Nullable: time the return process was finished. */
    completed_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request body for initiating a new order return. Client only enters
   * business rationale for return; all evidence/audit set by system.
   */
  export type ICreate = {
    /** UUID of the parent order initiating a return. */
    order_id: string & tags.Format<"uuid">;

    /** UUID of the specific order item being returned. */
    item_id: string & tags.Format<"uuid">;

    /** Reason entered by the customer for requesting return. */
    return_reason: string;
  };
}
