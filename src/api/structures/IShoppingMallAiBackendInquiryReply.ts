import { tags } from "typia";

/**
 * Full detail representation of an inquiry reply. Contains all primary audit
 * fields and business context from the database. Used for drill-down, reply
 * viewing, or moderation. Mirrors the inquiry reply table in the schema and
 * documents all business/evidence state properties.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendInquiryReply = {
  /** Unique reply identifier. */
  id: string & tags.Format<"uuid">;

  /** Inquiry for which this reply was written. */
  inquiry_id: string & tags.Format<"uuid">;

  /**
   * If this is a reply to another reply, the parent. Nullable for top-level
   * replies.
   */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /** Role/actor type who authored the reply. */
  author_type: "customer" | "seller" | "admin";

  /** UUID of customer if author_type==customer. */
  customer_id?: (string & tags.Format<"uuid">) | null;

  /** UUID of seller if author_type==seller. */
  seller_id?: (string & tags.Format<"uuid">) | null;

  /** Reply message content. */
  body: string;

  /** Whether the reply is private/secret. */
  private: boolean;

  /** Time of reply creation (UTC, ISO8601). */
  created_at: string & tags.Format<"date-time">;

  /** Time of last modification (UTC, ISO8601). */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp of soft deletion, null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendInquiryReply {
  /**
   * Request for searching replies to an inquiry. All fields optional, for use
   * in advanced filtering/pagination.
   */
  export type IRequest = {
    /** Page for reply pagination. */
    page?: (number & tags.Type<"int32">) | null;

    /** Max items per page. */
    limit?: (number & tags.Type<"int32">) | null;

    /** Sorting keys/rules for reply list. */
    sort?: string;

    /** Additional filter logic as appropriate. */
    filter?: {};

    /** Filter by author (customer/seller/admin/system). */
    author_type?: string;

    /** Created_at min boundary. */
    created_from?: string;

    /** Created_at max boundary. */
    created_to?: string;
  };

  /**
   * A summary view of an inquiry reply for paged lists. Exposes
   * evidence/audit fields and basic author/timestamps for a reply to an
   * inquiry, but omits full relational/nested objects for performance. Used
   * in paginated reply threads, dashboards, or inbox views. All fields mirror
   * the inquiry reply table columns but are typically a subset/reflection for
   * list rendering.
   */
  export type ISummary = {
    /** Unique identifier for this inquiry reply. */
    id: string & tags.Format<"uuid">;

    /** The inquiry this reply references. */
    inquiry_id: string & tags.Format<"uuid">;

    /** Parent reply's ID if this is a nested thread. Nullable. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** Type of author who wrote this reply (customer, seller, admin). */
    author_type: "customer" | "seller" | "admin";

    /** If authored by a customer, this is their UUID. Nullable. */
    customer_id?: (string & tags.Format<"uuid">) | null;

    /** If authored by a seller, this is their UUID. Nullable. */
    seller_id?: (string & tags.Format<"uuid">) | null;

    /** The content of the reply. */
    body: string;

    /** Whether the reply is private (not visible to all). */
    private: boolean;

    /** Reply creation time (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /** Last modification time (ISO8601). */
    updated_at: string & tags.Format<"date-time">;

    /** Timestamp this reply was (soft) deleted, else null. */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request body for creating a new inquiry reply. Contains required and
   * optional business fields, all input must follow security and evidence
   * rules. Never accepts author id (inferred from login context). Optional
   * parent_id allows reply nesting. Only input fields are shown here.
   */
  export type ICreate = {
    /** Unique identifier of inquiry being replied to. */
    inquiry_id: string & tags.Format<"uuid">;

    /** Optional: parent reply id for nesting/threaded reply (nullable). */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** Main message content of the reply (required). */
    body: string;

    /** Whether the reply is private or should be visible to all. */
    private: boolean;
  };

  /**
   * Request body for updating an inquiry reply. All properties are optional;
   * only present fields are updated. No updatable relation fields
   * (inquiry_id, author, etc).
   */
  export type IUpdate = {
    /** Revised reply message content (optional). */
    body?: string;

    /** Updated privacy flag (optional). */
    private?: boolean;
  };
}
