import { tags } from "typia";

/**
 * Full DTO for a product inquiry answer, strictly reflecting fields defined on
 * shopping_mall_inquiry_answers. Nullable/optional fields are included as per
 * schema definition.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallInquiryAnswer = {
  /** Primary key for the answer. */
  id: string & tags.Format<"uuid">;

  /** Foreign key reference to the inquiry this answer addresses. */
  shopping_mall_product_inquiry_id: string & tags.Format<"uuid">;

  /** Reference to the seller if the answer is authored by a seller. Nullable. */
  shopping_mall_seller_id?: (string & tags.Format<"uuid">) | undefined;

  /** Reference to the admin if answer is authored by an admin. Nullable. */
  shopping_mall_admin_id?: (string & tags.Format<"uuid">) | undefined;

  /** Main answer content body. Required. */
  body: string;

  /** Moderation status (pending, approved, etc.). */
  moderation_status: string;

  /** True if this is the official/accepted answer for the inquiry. */
  official_answer: boolean;

  /**
   * Datetime when the concerned user (usually inquiry author) was notified of
   * the answer. Nullable.
   */
  notified_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Answer creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp for this answer. */
  updated_at: string & tags.Format<"date-time">;

  /** Datetime when answer was soft-deleted. Nullable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallInquiryAnswer {
  /**
   * Request DTO for searching/paginating answers to a product inquiry.
   * Supports filters for pagination, answer author role, moderation status,
   * or official answer. No required properties; all filters are optional.
   */
  export type IRequest = {
    /**
     * Page number for pagination. Optional; defaults to first page if not
     * specified.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of records to return per page. Optional; default as per
     * platform standard.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Filter by answer author's role: 'seller' or 'admin'. Optional. */
    authorType?: string | undefined;

    /**
     * Filter answers by their moderation state (e.g., pending, approved).
     * Optional, field as per schema.
     */
    moderation_status?: string | undefined;

    /**
     * Filter to official answers only (true), user or informal answers
     * (false), or all (unset). Optional.
     */
    official_answer?: boolean | undefined;
  };

  /**
   * DTO for creating a new inquiry answer for a specified product inquiry.
   * The answer body is always required, official_answer and moderation_status
   * are optional per business role and moderation configuration.
   */
  export type ICreate = {
    /** Answer body text (markdown/HTML). Required. */
    body: string;

    /**
     * True if this is the official/primary answer. Optional; defaults per
     * business logic if not supplied.
     */
    official_answer?: boolean | undefined;

    /**
     * Initial moderation state for the answer (e.g., 'pending',
     * 'approved'). Optional; auto-set for most users but available in
     * admin/seller flows.
     */
    moderation_status?: string | undefined;
  };

  /**
   * Request DTO for updating a product inquiry answer. Maps to
   * shopping_mall_inquiry_answers. Supports updating the body, moderation
   * state, moderation reason, and the official answer flag. All fields are
   * validated upon update and audit-snapshotted for compliance.
   */
  export type IUpdate = {
    /**
     * The main content of the answer to the product inquiry. Supports
     * Markdown or HTML formatting as adopted by the platform. This property
     * holds the full, potentially multi-paragraph answer text provided by a
     * seller or admin. Subject to platform formatting and moderation
     * rules.
     */
    body: string;

    /**
     * Indicates the moderation workflow status for this answer (e.g.,
     * 'pending', 'approved', 'denied'). Determines if the answer is
     * published, under review, or hidden. Rope-based workflows may enforce
     * status value enums external to DB schema.
     */
    moderation_status?: string | undefined;

    /**
     * Describes the reason/context for the current moderation_status. May
     * be used to record why an answer was rejected, edited, or escalated.
     * Allows null for unmoderated or approved content.
     */
    moderation_reason?: string | null | undefined;

    /**
     * Flag indicating whether this answer is marked as the official
     * response for the inquiry. Only allowed for seller/admin roles and may
     * be used in display or workflow logic (e.g., 'Is this the
     * authoritative answer?').
     */
    official_answer?: boolean | undefined;
  };
}
