import { tags } from "typia";

/**
 * Favorite address mapping entity, representing a customer's favorited delivery
 * address. Mirrors the shopping_mall_ai_backend_favorite_addresses schema. Used
 * to display or manage favorites in user dashboards and for notification or
 * checkout efficiency. Includes a business evidence snapshot for audit and
 * notification.
 *
 * - Id: Unique identifier (UUID) of the favorite address entry.
 * - Shopping_mall_ai_backend_favorite_id: UUID of the parent favorite entity.
 * - Shopping_mall_ai_backend_customer_id: UUID of the customer owner.
 * - Address_snapshot: Optional. JSON/text snapshot of the address details at the
 *   time it was favorited. Used for evidence and as backup in case address
 *   changes later.
 * - Created_at: ISO8601 datetime string of creation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendFavoriteAddress = {
  /** Unique identifier (UUID) for favorite address. */
  id: string & tags.Format<"uuid">;

  /** UUID of parent favorite entity/folder/group. */
  shopping_mall_ai_backend_favorite_id: string & tags.Format<"uuid">;

  /** UUID of the customer who owns this favorite. */
  shopping_mall_ai_backend_customer_id: string & tags.Format<"uuid">;

  /**
   * Serialized snapshot of address details at time of favoriting. Used for
   * evidence and rollback.
   */
  address_snapshot?: string | null;

  /** ISO 8601 creation datetime of favorite address. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAiBackendFavoriteAddress {
  /**
   * Request object for searching/paginating a customer's favorited addresses
   * in a favorite group. Adds optional filterable fields for UI/UX scenarios.
   * All fields optional for flexible queries.
   */
  export type IRequest = {
    /** Page number for pagination (1-based). */
    page?: number &
      tags.Type<"int32"> &
      tags.Minimum<1> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Page size limit. */
    limit?: number &
      tags.Type<"int32"> &
      tags.Minimum<1> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Sort order string (e.g., 'created_at:desc'). */
    sort?: string;

    /** Free text search for address snapshot fields. */
    search?: string;
  };

  /**
   * Summary entry for one favorited address, for paginated results. Returns
   * only high-level fields appropriate for brief list views, like address
   * preview and favorited date. Used for displaying favorites folders, list
   * UIs, etc.
   */
  export type ISummary = {
    /** Fav address unique identifier. */
    id: string & tags.Format<"uuid">;

    /** Minimal/preview string snapshot of the favorited address. */
    address_snapshot?: string | null;

    /** Favorited date/time (ISO8601). */
    created_at: string & tags.Format<"date-time">;
  };

  /**
   * Payload to create a new favorited address. Maps only to explicit
   * favorite-folder/customer relationship, and (optionally) the current
   * snapshot of address details for evidence. Used on 'add to favorites' flow
   * in profile or checkout UI.
   */
  export type ICreate = {
    /** UUID of parent favorite/folder to assign this address to. */
    shopping_mall_ai_backend_favorite_id: string & tags.Format<"uuid">;

    /** UUID of customer performing the favorite action. */
    shopping_mall_ai_backend_customer_id: string & tags.Format<"uuid">;

    /** Current address snapshot at time of favoriting. */
    address_snapshot?: string | null;
  };
}
