import { tags } from "typia";

/**
 * Represents a hierarchical product catalog category. Includes channel
 * reference, code, name, display order, hierarchical parent, status, audit, and
 * deletion markers. Used throughout merchandising, filtering, and discovery
 * logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCategory = {
  /** Primary key. Unique identifier for the category. */
  id: string & tags.Format<"uuid">;

  /** FK to ai_commerce_channels.id. Channel to which this category belongs. */
  ai_commerce_channel_id: string & tags.Format<"uuid">;

  /** Parent category for hierarchy. Null for root categories. */
  parent_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Unique category code per channel, used for internal mapping and
   * merchandising logic. Channel-scoped uniqueness enforced by schema.
   */
  code: string;

  /** Display name for the category (e.g., 'Accessories'). */
  name: string;

  /** Hierarchy depth level (0 for root/top-level). */
  level: number & tags.Type<"int32">;

  /** Order within siblings for display purposes. */
  sort_order: number & tags.Type<"int32">;

  /** Indicates whether the category is active/visible in the channel. */
  is_active: boolean;

  /** Current business or workflow status. */
  business_status: string;

  /** Timestamp when the category was created (ISO8601 in UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the category was last updated (ISO8601 in UTC). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. Null if category is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceCategory {
  /**
   * Filtering, search, and pagination query parameters for listing
   * categories. All fields optional by design.
   */
  export type IRequest = {
    /** Partial/full text search for category name/code filtering */
    search?: string | undefined;

    /** Filter for only active/inactive categories. */
    is_active?: boolean | undefined;

    /** Filter by business/workflow status */
    business_status?: string | undefined;

    /** Parent category filter */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Limit/filter by maximum category depth returned */
    depth?: (number & tags.Type<"int32">) | undefined;

    /** Sort key for category list, e.g., 'sort_order', 'name' */
    sort_by?: string | undefined;

    /** Page number for pagination */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Maximum records per page */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Create DTO for new category row in ai_commerce_categories. All required
   * fields must be present and valid per database constraints.
   */
  export type ICreate = {
    /**
     * Channel for which the category is being created. Foreign key to
     * ai_commerce_channels.id. Required and must reference a valid,
     * existing channel.
     */
    ai_commerce_channel_id: string & tags.Format<"uuid">;

    /** Parent category for hierarchy. Null for root categories. */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Unique, required category code within channel. Used for category
     * identification, mapping, and system logic.
     */
    code: string;

    /**
     * Display name for this category. Required and must be unique within
     * parent context.
     */
    name: string;

    /**
     * Hierarchy depth (root=0, child >0). Required and validated by
     * business logic.
     */
    level: number & tags.Type<"int32">;

    /** Display order among sibling categories (ascending). */
    sort_order: number & tags.Type<"int32">;

    /** Indicates if the category is currently active/visible. */
    is_active: boolean;

    /**
     * Initial workflow or business status for the category (e.g., 'active',
     * 'pending', 'archived').
     */
    business_status: string;

    /** Creation timestamp for the category (ISO8601 UTC format). */
    created_at: string & tags.Format<"date-time">;

    /**
     * Initialization timestamp for category modification (ISO8601 UTC
     * format).
     */
    updated_at: string & tags.Format<"date-time">;
  };

  /**
   * Request type for updating category metadata or structure in
   * ai_commerce_categories. All fields optional, following business logic on
   * allowed edits and tree integrity.
   */
  export type IUpdate = {
    /** Change the display name for this category */
    name?: string | undefined;

    /** Update hierarchy level, e.g., during tree restructuring (rare) */
    level?: (number & tags.Type<"int32">) | undefined;

    /** New display order among siblings. */
    sort_order?: (number & tags.Type<"int32">) | undefined;

    /** Modify activation status */
    is_active?: boolean | undefined;

    /** Update workflow/business status */
    business_status?: string | undefined;

    /** Change parent category (for reorganization) */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Summary of a product category as used in list displays or hierarchy
   * navigation. Includes only the core identifying and organizational fields
   * needed for browsing, filtering, or selection.
   */
  export type ISummary = {
    /** Unique identifier for this category (ai_commerce_categories PK). */
    id: string & tags.Format<"uuid">;

    /** Unique category code for internal usage per channel. */
    code: string;

    /** Display name of the category (e.g., 'Accessories'). */
    name: string;

    /** Depth level within the category hierarchy (0=top/root). */
    level: number & tags.Type<"int32">;

    /**
     * Whether the category is currently active/available for product
     * assignment and discovery.
     */
    is_active: boolean;

    /**
     * Operational workflow/status for the category (e.g., 'active',
     * 'archived').
     */
    business_status: string;

    /** Sort/display order within its siblings. */
    sort_order: number & tags.Type<"int32">;

    /** Optional FK to parent category; null for root categories. */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Timestamp for category creation. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last modification. */
    updated_at: string & tags.Format<"date-time">;
  };
}
