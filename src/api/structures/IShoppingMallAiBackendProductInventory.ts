import { tags } from "typia";

/**
 * Represents an inventory entry associated with a specific product. Used for
 * stock management, fulfillment, business analytics, and AI-driven inventory
 * forecasting. Closely aligned with the
 * `shopping_mall_ai_backend_product_inventories` table in the schema.
 *
 * Contains supply, reserved, status, and audit metadata for inventory tracking,
 * reconciliation, and compliance workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendProductInventory = {
  /** Unique identifier (UUID) for this inventory record. */
  id: string;

  /**
   * Foreign key for referenced product. Indicates which catalog product this
   * inventory record manages (UUID).
   */
  shopping_mall_ai_backend_products_id: string;

  /**
   * The number of available units in this inventory record. Represents total
   * stock minus committed orders. Always a non-negative integer.
   */
  available_quantity: number & tags.Type<"int32">;

  /**
   * Count of units that have been reserved for pending orders, returns, or
   * incidents. Used to block double selling and implement accurate inventory
   * logic.
   */
  reserved_quantity: number & tags.Type<"int32">;

  /**
   * Timestamp when this inventory record was last modified, adjusted, or
   * otherwise changed. Important for audit and stock reconciliation.
   */
  last_update_at: string & tags.Format<"date-time">;

  /**
   * Status string indicating current inventory disposition. May be
   * business-enumerated status values (e.g., 'in_stock', 'out_of_stock',
   * 'reserved', 'discontinued').
   */
  inventory_status: string;
};
export namespace IShoppingMallAiBackendProductInventory {
  /**
   * Request query for paginating/filtering product inventory records.
   * Supports fulfillment checks, stock reporting, and business-analytics
   * filtering by inventory status or other business attributes.
   */
  export type IRequest = {
    /**
     * Optional filter to return only inventories matching a status (e.g.,
     * 'in_stock', 'reserved').
     */
    inventory_status?: string | null;

    /** Page number for paginated results. */
    page?: (number & tags.Type<"int32">) | null;

    /** Maximum page size for result set (often 20, 50, or 100). */
    limit?: (number & tags.Type<"int32">) | null;

    /**
     * Optional field to determine the order (e.g., 'last_update_at',
     * 'available_quantity').
     */
    order_by?: string | null;

    /** Direction for sorting results (ascending or descending). */
    sort?: "asc" | "desc" | null;
  };

  /**
   * Request payload for creating a product inventory record. Represents all
   * business fields from the Prisma model for available and reserved
   * quantities, status, and timestamp.
   */
  export type ICreate = {
    /**
     * Number of items available for sale in this inventory record. Must be
     * non-negative.
     */
    available_quantity: number & tags.Type<"int32">;

    /**
     * Quantity currently reserved (not available for new orders). Must be
     * non-negative.
     */
    reserved_quantity: number & tags.Type<"int32">;

    /** DateTime when inventory was last updated (ISO 8601, required). */
    last_update_at: string & tags.Format<"date-time">;

    /**
     * Current inventory status (e.g., in_stock, out_of_stock, reserved,
     * discontinued). Must match allowed status values per business policy.
     */
    inventory_status: string;
  };

  /**
   * Request payload for updating a product inventory record. All fields
   * optional for patch/update. Represents all mutable business fields for the
   * inventory entity as per the Prisma schema.
   */
  export type IUpdate = {
    /**
     * Number of items available for sale in this inventory record. Must be
     * non-negative.
     */
    available_quantity?: number & tags.Type<"int32">;

    /**
     * Quantity currently reserved (not available for new orders). Must be
     * non-negative.
     */
    reserved_quantity?: number & tags.Type<"int32">;

    /** DateTime when inventory was last updated (ISO 8601). */
    last_update_at?: string & tags.Format<"date-time">;

    /**
     * Current inventory status (e.g., in_stock, out_of_stock, reserved,
     * discontinued). Must match allowed status values per business policy.
     */
    inventory_status?: string;
  };
}
