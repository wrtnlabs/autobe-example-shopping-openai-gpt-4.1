import { tags } from "typia";

/**
 * Each row represents a unique SKU (stock keeping unit) defined by a
 * combination of option values for a product. Critical for inventory and order
 * management but not user-managed directly. Maps directly to
 * shopping_mall_product_variants Prisma table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallProductVariant = {
  /** Primary key. */
  id: string & tags.Format<"uuid">;

  /**
   * Parent product this variant belongs to. References
   * shopping_mall_products.id
   */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /** Internal SKU code/identifier unique within product. */
  sku_code: string;

  /** Bar code or EAN/UPC for the variant (optional). */
  bar_code?: string | null | undefined;

  /**
   * Deterministic hash of selected option values for this variant (enables
   * fast lookup and uniqueness enforcement).
   */
  option_values_hash: string;

  /** Sales price of this variant/SKU. */
  price: number;

  /**
   * Current inventory quantity (redundant with inventory events, but used for
   * listing performance).
   */
  stock_quantity: number & tags.Type<"int32">;

  /** Weight for shipping calculations. Required for delivery use-cases. */
  weight: number;

  /** Variant creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp, null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallProductVariant {
  /**
   * Product Variant list/search paging and filter. Used to retrieve product
   * variant (SKU) records according to business rule and operational query.
   * Optional filter and pagination fields are present, but all are optional
   * (except possibly page/limit in system); response is a paginated array.
   */
  export type IRequest = {
    /** Page number for pagination. Optional; if omitted, defaults to 1. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * How many records per page. Optional; default should be reasonable for
     * the context (e.g., 20 or 50).
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort ordering preference for the product variant list. Possible
     * values: 'created_at', 'price', 'stock_quantity', etc. Optional.
     */
    sort?: string | undefined;

    /** Sort direction for ordering (ascending or descending). Optional. */
    sortOrder?: "asc" | "desc" | undefined;

    /**
     * SKU code to search for or filter on. Allows partial/fuzzy matching by
     * underlying business logic. Optional.
     */
    sku_code?: string | undefined;

    /** Minimum price to filter products by. Optional. */
    priceMin?: number | undefined;

    /** Maximum price to filter products by. Optional. */
    priceMax?: number | undefined;

    /** Minimum stock quantity to filter on. Optional. */
    stockMin?: (number & tags.Type<"int32">) | undefined;

    /** Maximum stock quantity to filter on. Optional. */
    stockMax?: (number & tags.Type<"int32">) | undefined;

    /**
     * ISO8601 date filter: only variants created AFTER this date/time.
     * Optional.
     */
    createdAfter?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO8601 date filter: only variants created BEFORE this date/time.
     * Optional.
     */
    createdBefore?: (string & tags.Format<"date-time">) | undefined;

    /** Include soft-deleted (logically erased) variants in search. Optional. */
    deleted?: boolean | undefined;
  };

  /**
   * Create DTO for product variant. Used to register a new SKU (option
   * combination) for a product. Matches fields in
   * shopping_mall_product_variants except for system fields (id, timestamps,
   * deleted_at, etc.), which are generated by the system/backoffice. DO NOT
   * include fields not present in the Prisma schema for this table
   * (especially system- and context-managed fields).
   */
  export type ICreate = {
    /**
     * Parent product ID that this variant will be added to (required;
     * references shopping_mall_products).
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Unique SKU code/identifier for the variant. Required, must be unique
     * within product.
     */
    sku_code: string;

    /** Bar code/EAN/UPC (optional; null if not supplied). */
    bar_code?: string | null | undefined;

    /**
     * Hash representing the selected option values for the variant.
     * Required; ensures combination uniqueness and fast lookup.
     */
    option_values_hash: string;

    /** Sales price for this SKU. Required. */
    price: number;

    /** Initial inventory quantity for this SKU (must be >= 0). Required. */
    stock_quantity: number & tags.Type<"int32">;

    /**
     * Weight for shipping calculations (required for delivery logic).
     * Required.
     */
    weight: number;
  };

  /**
   * Update DTO for product variant. Used for PATCH/PUT operations to modify
   * one or more updatable fields on the variant SKU. All fields optional;
   * only those to be changed are submitted. System-managed fields (id,
   * created_at, updated_at, deleted_at, shopping_mall_product_id) MUST NOT be
   * included in this DTO. Only fields present in the Prisma schema for this
   * table may be included.
   */
  export type IUpdate = {
    /**
     * Unique SKU code/identifier for the variant (optional on update; only
     * supplied if changing SKU code).
     */
    sku_code?: string | undefined;

    /**
     * Bar code/EAN/UPC (optional; may be set to null to clear bar code
     * value).
     */
    bar_code?: string | null | undefined;

    /**
     * Hash representing the selected option values (optional on update;
     * required if changing option arrangement for the variant).
     */
    option_values_hash?: string | undefined;

    /** Sales price for this SKU (optional for update). */
    price?: number | undefined;

    /** Updated inventory quantity for this SKU (must remain >= 0). Optional. */
    stock_quantity?: (number & tags.Type<"int32">) | undefined;

    /** Weight for shipping calculations. Optional update. */
    weight?: number | undefined;
  };

  /**
   * Summary details for a product variant (SKU) in the shopping mall catalog.
   * Represents key business and display properties for use in product lists,
   * order preparation, inventory review, and analytics. Based on the
   * shopping_mall_product_variants Prisma schema with security filtering to
   * prevent sensitive/irrelevant fields exposure. Suitable for collection
   * views where full detail is not required but SKU identification and key
   * pricing/inventory fields are necessary.
   *
   * This definition enforces mapping to real database fields only,
   * referencing variant identification, SKU/business code(s), core pricing
   * and stock info, and weight for logistical calculations. For list views,
   * excludes large text, historical details, and full audit traces unless
   * specially required.
   *
   * Descriptions reference the Prisma model for each property, ensuring data
   * consistency and audit compliance across inventory, order, and catalog
   * modules.
   */
  export type ISummary = {
    /**
     * Primary Key. Unique identifier for the variant record as defined in
     * shopping_mall_product_variants.id. Used for referencing within
     * product detail, cart, order, and analytics.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Internal SKU code/identifier unique within product. Used for
     * business, inventory, and catalog identification. Mirrors
     * shopping_mall_product_variants.sku_code.
     */
    sku_code: string;

    /**
     * Bar code or EAN/UPC for the variant (optional). May be null for
     * custom/private-label SKUs. Matches
     * shopping_mall_product_variants.bar_code.
     */
    bar_code?: string | null | undefined;

    /**
     * Deterministic hash of selected option values for this variant,
     * enabling fast lookup and uniqueness enforcement (business context:
     * option mapping, SKU uniqueness). Mirrors
     * shopping_mall_product_variants.option_values_hash.
     */
    option_values_hash: string;

    /**
     * Sales price for the specific SKU/variant as a floating point value
     * (decimal/DoublePrecision). Corresponds to
     * shopping_mall_product_variants.price. Used for order line totals,
     * catalog listings, and price comparison modules.
     */
    price: number;

    /**
     * Current inventory quantity as stored in
     * shopping_mall_product_variants.stock_quantity. Used for cart
     * enablement, validation, and catalog business logic. NOT authoritative
     * for full audit/reconciliation; snapshot historical records live
     * elsewhere.
     */
    stock_quantity: number & tags.Type<"int32">;

    /**
     * Weight used for shipping calculations, per
     * shopping_mall_product_variants.weight. Required for fulfillment,
     * shipping, and logistics calculations. Always present.
     */
    weight: number;

    /**
     * Variant creation timestamp according to Prisma schema
     * (shopping_mall_product_variants.created_at). Always reflects UTC
     * ISO-8601 date string; used for inventory analytics and catalog
     * workflows.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update timestamp for the variant, as per
     * shopping_mall_product_variants.updated_at. In UTC ISO-8601 for
     * synchronization and business event analysis.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
