import { tags } from "typia";

/**
 * A delivery/shipping event associated with an order. Tracks shipment state,
 * carrier, tracking, evidence, and timing. Follows the
 * shopping_mall_ai_backend_order_deliveries schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendOrderDelivery = {
  /**
   * Unique identifier (UUID) for this delivery record, as per the
   * shopping_mall_ai_backend_order_deliveries model.
   */
  id: string & tags.Format<"uuid">;

  /** UUID of the parent order to which this delivery record belongs. */
  shopping_mall_ai_backend_order_id: string & tags.Format<"uuid">;

  /**
   * Business logic status for the delivery (e.g. 'ready', 'in_progress',
   * 'complete', 'failed', 'returned', etc.).
   */
  delivery_status: string;

  /**
   * Name or code of the logistics partner (carrier) handling the shipment.
   * Optional, may be null if not shipped or assigned.
   */
  logistics_provider?: string | null;

  /**
   * Carrier-assigned tracking number (if present), used for status updates
   * and public tracking. Optional, may be null before shipment.
   */
  tracking_number?: string | null;

  /**
   * Datetime the package was shipped/dispatched, if available. Null if not
   * yet shipped.
   */
  shipped_at?: (string & tags.Format<"date-time">) | null;

  /**
   * Datetime the package was delivered by the carrier, if delivered. Null if
   * not yet delivered.
   */
  delivered_at?: (string & tags.Format<"date-time">) | null;

  /**
   * Free-text field for shipping notes, instructions, or business context.
   * Optional.
   */
  delivery_notes?: string | null;

  /**
   * Record creation timestamp; immutable and generated by the system on
   * insertion.
   */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp; refreshed on all updates. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp; null if record is active, non-null if logically
   * deleted for audit/evidence.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendOrderDelivery {
  /**
   * Filter and pagination parameters for searching order deliveries,
   * supporting by status, provider, tracking code, and time windows. All
   * fields are optional.
   */
  export type IRequest = {
    /**
     * Order status filter. Accepts order status codes or descriptions to
     * filter associated deliveries. Optional.
     */
    orderStatus?: string;

    /**
     * Tracking number filter. Can be a full or partial carrier-provided
     * tracking code to find deliveries. Optional.
     */
    trackingNumber?: string;

    /**
     * Delivery status filter. Filter by current delivery business status,
     * e.g., 'ready', 'in_progress', 'complete', 'failed', 'returned', etc.
     * Optional.
     */
    deliveryStatus?: string;

    /**
     * Logistics provider filter. Search deliveries by the partner/carrier
     * handling the shipment. Optional.
     */
    provider?: string;

    /**
     * Start date (inclusive) for filtering deliveries by shipped_at or
     * created_at. ISO 8601 format. Optional.
     */
    startDate?: string & tags.Format<"date-time">;

    /**
     * End date (inclusive) for filtering deliveries by shipped_at or
     * created_at. ISO 8601 format. Optional.
     */
    endDate?: string & tags.Format<"date-time">;

    /**
     * Page number for pagination, starting from 1. Default is 1 if
     * unspecified.
     */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Page size for pagination. Default is system default if not provided. */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * Sort by a delivery field (created_at, delivered_at, status, etc.).
     * Optional.
     */
    sortBy?: string;

    /** Sort order direction ('asc' or 'desc'). Optional. */
    sortDirection?: "asc" | "desc";
  };

  /**
   * Fields which can be updated for an order delivery record. All properties
   * optional; only set those which are being changed.
   */
  export type IUpdate = {
    /**
     * Updated delivery status, e.g. 'shipped', 'in_progress', 'delivered',
     * or other business values as per delivery workflow.
     */
    delivery_status?: string;

    /** Updated logistics provider name or code. */
    logistics_provider?: string;

    /** New tracking number for the shipment (carrier-assigned). */
    tracking_number?: string;

    /** Timestamp when the shipment was dispatched. */
    shipped_at?: string & tags.Format<"date-time">;

    /** Timestamp for when delivery was confirmed completed by carrier. */
    delivered_at?: string & tags.Format<"date-time">;

    /**
     * Updated business notes, information, or instructions about this
     * shipment.
     */
    delivery_notes?: string;
  };
}
