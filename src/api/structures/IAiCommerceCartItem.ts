import { tags } from "typia";

import { IAiCommerceCartItemOption } from "./IAiCommerceCartItemOption";

/**
 * Represents a cart item (ai_commerce_cart_items table row) in a shopping cart,
 * including optional variant, options, quantity, pricing, and modification
 * timestamps. Soft deletion is reflected via deleted_at. Option combinations
 * are listed in options.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCartItem = {
  /** Unique cart item ID. */
  id: string & tags.Format<"uuid">;

  /** Parent cart UUID. */
  cart_id: string & tags.Format<"uuid">;

  /** Product this item refers to (UUID). */
  product_id: string & tags.Format<"uuid">;

  /** Optional SKU/variant (UUID). */
  variant_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Quantity for this item. */
  quantity: number & tags.Type<"int32"> & tags.Minimum<1>;

  /** Unit price at time of item addition (for compliance/snapshot). */
  unit_price: number;

  /**
   * Total price for this cart item (quantity × unit price, at time of
   * update).
   */
  item_total: number;

  /** ISO8601 timestamp when item added to cart. */
  added_at: string & tags.Format<"date-time">;

  /** ISO8601 timestamp of last modification. */
  updated_at: string & tags.Format<"date-time">;

  /** If item is soft-deleted, deletion timestamp; else null. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Option name/value pairs selected for this cart item (may be empty array
   * or omitted if not used).
   */
  options?: IAiCommerceCartItemOption[] | null | undefined;
};
export namespace IAiCommerceCartItem {
  /**
   * Filter/search/pagination object for listing items in a cart. All fields
   * are optional and only used when supplied.
   */
  export type IRequest = {
    /** Filter cart items by product ID (UUID). */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter cart items by variant ID (UUID). */
    variant_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by item-specific status (e.g., 'active', 'deleted'). */
    status?: string | undefined;

    /** Minimum item quantity for range filtering. */
    min_quantity?: number | undefined;

    /** Maximum item quantity for range filtering. */
    max_quantity?: number | undefined;

    /** Filter for items added after this ISO8601 datetime. */
    added_after?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for items added before this ISO8601 datetime. */
    added_before?: (string & tags.Format<"date-time">) | undefined;

    /** Field to sort by (e.g., 'added_at', 'quantity'). */
    sort_by?: string | undefined;

    /** Sort direction ('asc' or 'desc'). */
    sort_direction?: "asc" | "desc" | undefined;

    /** Page number for pagination (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of items per page for pagination. */
    page_size?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Request structure for creating a cart item. Product ID and quantity are
   * required; variant_id and options are optional. Options are key/value
   * array for item configuration.
   */
  export type ICreate = {
    /** Add this product to the cart (UUID). */
    product_id: string & tags.Format<"uuid">;

    /** Variant/SKU (UUID) to add; nullable if product has no options. */
    variant_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Number of units to add. Must be >= 1. */
    quantity: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * Selected options (option_name/option_value pairs). Optional; include
     * only if item has options to select.
     */
    options?: IAiCommerceCartItemOption[] | null | undefined;
  };

  /**
   * Update one or more fields of a cart item: change quantity, select new
   * variant, or modify the current option array. All fields optional.
   */
  export type IUpdate = {
    /** Update to this variant/SKU if changing option selection. */
    variant_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Change quantity for this cart item (must be >=1 or business-specified
     * minimum).
     */
    quantity?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Full set of options to replace current option selection. Optional. */
    options?: IAiCommerceCartItemOption[] | null | undefined;
  };

  /**
   * Summary information for a cart item within a buyer's cart. Includes
   * product reference, pricing, quantity, variant summary, and timestamps.
   *
   * Derived from ai_commerce_cart_items (with reference to
   * ai_commerce_products for display fields). This summary type is used when
   * listing cart items in overview contexts—such as in
   * IPageIAiCommerceCartItem.ISummary—for both front-end user cart and
   * backend analytics/reporting functions. Relationships to product name and
   * variant details are denormalized here for performance and user
   * experience.
   *
   * All identifiers are UUIDs; timestamps follow ISO 8601 format. The summary
   * always provides enough information for display and basic computation, but
   * does not include full object graphs (see IAiCommerceCartItem for detail
   * views).
   *
   * See ai_commerce_cart_items schema and related product/variant
   * documentation for precise source fields.
   */
  export type ISummary = {
    /**
     * Unique identifier for the cart item. Corresponds to
     * ai_commerce_cart_items.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the product associated with this item.
     * Corresponds to ai_commerce_cart_items.product_id.
     */
    product_id: string & tags.Format<"uuid">;

    /**
     * The display name of the product as of the current cart state. Used
     * for quick summary in cart UI or exports.
     */
    product_name: string;

    /**
     * Variant SKU ID associated with this cart item, if any. From
     * ai_commerce_cart_items.variant_id. May be null if not applicable.
     */
    variant_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Short human-readable summary of option selections (e.g., "Size: M /
     * Color: Red"). Derived from variant or explicit item options.
     */
    option_summary?: string | null | undefined;

    /** Number of units selected for this item in the cart. */
    quantity: number & tags.Type<"int32">;

    /**
     * Unit price at time of addition to cart (as snapshot for pricing
     * stability).
     */
    unit_price: number;

    /**
     * Total price for this line item (quantity * unit_price), at last
     * update.
     */
    item_total: number;

    /**
     * Current logical status of the item—such as 'active', 'deleted', or
     * 'merged'—for UI/business logic partitioning.
     */
    status: string;

    /** Timestamp when item was first added to the cart. */
    added_at: string & tags.Format<"date-time">;

    /** Timestamp of the last update for this cart item. */
    updated_at: string & tags.Format<"date-time">;
  };
}
