import { tags } from "typia";

/**
 * A mapping entity associating a product with a category. Represents a link
 * between a product and a business category, enabling navigation, filtering,
 * and analytics. Used for catalog management in the shopping mall backend. Each
 * mapping ensures a product can belong to multiple categories as defined in the
 * business logic. See Prisma model
 * shopping_mall_ai_backend_product_category_mappings.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendProductCategoryMapping = {
  /**
   * Unique identifier for the product-category mapping. Corresponds to the PK
   * in the shopping_mall_ai_backend_product_category_mappings table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The unique identifier of the product associated with this mapping.
   * Foreign key referencing shopping_mall_ai_backend_products.id.
   */
  shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

  /**
   * The unique identifier of the product category associated with this
   * mapping. Foreign key referencing
   * shopping_mall_ai_backend_product_categories.id.
   */
  shopping_mall_ai_backend_product_categories_id: string & tags.Format<"uuid">;

  /**
   * The ISO 8601 timestamp when the product was assigned to the category.
   * Used for historical evidence and compliance.
   */
  assigned_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAiBackendProductCategoryMapping {
  /** Request schema for searching product-to-category mappings. */
  export type IRequest = {
    /** Filter by product UUID linked to this mapping. */
    shopping_mall_ai_backend_products_id?: string;

    /** Filter by category UUID for category mapping search. */
    shopping_mall_ai_backend_product_categories_id?: string;

    /** Page number (1-based). */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Records per page (default: 100, max: 1000). */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<1000>;

    /** Optional field name for sorting (default: assigned_at). */
    sort?: string;

    /** Sort order direction. */
    order?: "asc" | "desc";
  };

  /**
   * Request payload for creating a new product-category mapping. Used in POST
   * operations to establish a business linkage between a product and a
   * category. All fields must be supplied. Field names match the Prisma
   * schema.
   */
  export type ICreate = {
    /**
     * The unique identifier of the product to assign to a category. Must
     * match an existing product id.
     */
    shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

    /**
     * The unique identifier of the category to which the product will be
     * assigned. Must match an existing category id.
     */
    shopping_mall_ai_backend_product_categories_id: string &
      tags.Format<"uuid">;

    /**
     * The ISO 8601 timestamp for when the mapping is created. Should
     * reflect evidence of when the mapping takes effect; set by business
     * logic at creation.
     */
    assigned_at: string & tags.Format<"date-time">;
  };

  /**
   * Payload for updating an existing product-category mapping. Allows
   * changing either the associated product, category, or assignment
   * timestamp. Use only for business logic requiring migration or correction
   * of existing mappings.
   */
  export type IUpdate = {
    /**
     * Optional updated product id for this mapping. If present, reassigns
     * the mapping to a new product.
     */
    shopping_mall_ai_backend_products_id?: string & tags.Format<"uuid">;

    /**
     * Optional updated category id for this mapping. If present, reassigns
     * the mapping to a new category.
     */
    shopping_mall_ai_backend_product_categories_id?: string &
      tags.Format<"uuid">;

    /**
     * Optional updated assignment datetime for evidence update or audit
     * correction.
     */
    assigned_at?: string & tags.Format<"date-time">;
  };

  /**
   * Summary of a product-category mapping, suitable for listing/search
   * purposes. Includes only key identifiers and assigned_at for efficiency in
   * admin dashboards.
   */
  export type ISummary = {
    /** Unique identifier for the product-category mapping. */
    id: string & tags.Format<"uuid">;

    /** ID of the assigned product. */
    shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

    /** ID of the assigned category. */
    shopping_mall_ai_backend_product_categories_id: string &
      tags.Format<"uuid">;

    /** Datetime the mapping was created. */
    assigned_at: string & tags.Format<"date-time">;
  };
}
