import { tags } from "typia";

/**
 * Entity representing a specific coupon issued to a user/account, as recorded
 * in ai_commerce_coupon_issues. Includes redemption, expiry, and campaign
 * linkage for analytics and business rule enforcement. Soft delete retained for
 * privacy and audit evidence as per compliance requirements.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCouponIssue = {
  /**
   * Primary key for issued coupon record. Uniquely identifies the coupon-user
   * assignment in the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to master coupon for this issuance, using system-wide coupon
   * uuid (foreign key).
   */
  coupon_id: string & tags.Format<"uuid">;

  /**
   * Target account/user to whom this coupon was issued. Reference UUID to
   * ai_commerce_buyer or similar.
   */
  issued_to: string & tags.Format<"uuid">;

  /**
   * Issued coupon status: 'issued', 'redeemed', 'expired', 'revoked', etc.
   * Statuses drive business workflows and reporting compliance.
   */
  status: string;

  /**
   * Timestamp of coupon issue (ISO 8601 format). Set at assignment and used
   * for lifecycle tracking.
   */
  issued_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this coupon issue will expire (ISO 8601). Driven by parent
   * coupon's valid_until, campaign, or override.
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when coupon was redeemed, if ever (ISO 8601). Null if never
   * redeemed, set automatically upon successful usage.
   */
  redeemed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Reference campaign or batch ID for campaign-wide issuance tracking and
   * analytics aggregation. Optional.
   */
  batch_reference?: string | null | undefined;

  /**
   * Record creation time for issued coupon (ISO 8601), used for admin review
   * and compliance analytics.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update to the coupon issue entity. Provides temporal trace for audit
   * or re-issue/withdrawal flows.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp (nullable), set if issue is logically removed for
   * compliance. Null if active or never deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceCouponIssue {
  /**
   * DTO for searching or filtering issued coupons
   * (ai_commerce_coupon_issues), supporting advanced analytics, campaign
   * reporting, and user-specific incentives. Includes pagination fields to
   * allow scalable retrieval in admin or dashboard interfaces.
   */
  export type IRequest = {
    /**
     * (Optional) Reference to the parent coupon. Filtering all issues by a
     * particular campaign/coupon, using uuid format.
     */
    coupon_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Target user/account to whom the coupon was issued. Used
     * for searching records per user in summary analytics and support
     * workflows.
     */
    issued_to?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Current issue status: 'issued', 'redeemed', 'expired',
     * 'revoked', etc. Multiple statuses are filterable to support campaign,
     * support, or analytics views.
     */
    status?: string | undefined;

    /**
     * (Optional) Start of issuance date/time window (ISO 8601). Used to
     * filter records issued after this instant.
     */
    issued_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) End of issuance date/time window (ISO 8601). Used to
     * filter coupon issues up to this time.
     */
    issued_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Start of redemption time window. Used for analytics and
     * review of coupon usage cadence.
     */
    redeemed_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** (Optional) End of redemption time window for analytics. */
    redeemed_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Start of coupon issue expiry range. Enables cleanup of
     * expiring coupons or user reminder logic.
     */
    expires_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) End of coupon expiry window. For analytics filters and
     * reporting.
     */
    expires_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Reference to campaign batch/campaign identifier for bulk
     * issue tracking. Used in advanced marketing and compliance queries.
     */
    batch_reference?: string | undefined;

    /**
     * (Optional) Pagination: page number to retrieve. Defaults to 1 if not
     * provided.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * (Optional) Pagination: number of results per page. Configurable by
     * admin and defaults to system or API policy value.
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request body for issuing a new coupon to a user. Must provide coupon_id
   * and user_id. Optional: expires_at, description.
   */
  export type ICreate = {
    /**
     * Unique identifier of the master coupon that is being issued to the
     * user. This must match an existing row in ai_commerce_coupons.
     */
    coupon_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier of the recipient user account (buyer or seller as
     * eligible).
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Expiration timestamp for the issued coupon (ISO 8601). Null for no
     * explicit expiry.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional brief detail or campaign note for analytics or compliance.
     * Null if unused.
     */
    description?: string | null | undefined;
  };

  /**
   * Request body for updating issued coupon fields: status, expiry, or note.
   * All fields optional.
   */
  export type IUpdate = {
    /**
     * New status for the coupon issue. Example values: 'issued',
     * 'redeemed', 'expired', 'revoked'.
     */
    status?: string | undefined;

    /**
     * Update the expiration timestamp for this coupon issue. ISO 8601
     * format or null.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Update the optional description, campaign note, or compliance
     * context. Null if clearing.
     */
    description?: string | null | undefined;
  };

  /**
   * Summary DTO for issued coupons to a user/account, used for searches and
   * listing. Contains identifiers and current status.
   */
  export type ISummary = {
    /** Primary key */
    id: string & tags.Format<"uuid">;

    /** Reference to coupon master */
    coupon_id: string & tags.Format<"uuid">;

    /** FK reference to issued user/account (buyer, seller, etc.) */
    issued_to: string & tags.Format<"uuid">;

    /** Issued coupon status (issued, redeemed, expired, revoked). */
    status: string;

    /** Timestamp of coupon issue. */
    issued_at: string & tags.Format<"date-time">;

    /** Expiration for individual issue record. */
    expires_at: string & tags.Format<"date-time">;

    /** When this issued coupon was redeemed (if used). */
    redeemed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Batch/campaign or unique series identifier if issued as part of a
     * campaign.
     */
    batch_reference?: string | null | undefined;

    /** Record creation time. */
    created_at: string & tags.Format<"date-time">;

    /** Record update time. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft delete timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
