import { tags } from "typia";

/**
 * Represents a row in the shipment-item batch table
 * (shopping_mall_shipment_items).
 *
 * Defines which order item is shipped in the current batch, how many units, and
 * preserves essential audit information. Used for traceability and evidence in
 * split/multi-shipment scenarios in the shopping mall platform.
 *
 * All references are by UUID to ensure robust cross-entity linkage. Creation
 * and update timestamps are required to support audit trail and evidence
 * compliance in fulfillment and customer support workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallShipmentItem = {
  /**
   * Unique identifier for this shipment item entry (PK,
   * shopping_mall_shipment_items.id).
   */
  id: string & tags.Format<"uuid">;

  /** ID of the parent shipment batch (shopping_mall_shipments.id). */
  shopping_mall_shipment_id: string & tags.Format<"uuid">;

  /** ID of the associated order item (shopping_mall_order_items.id). */
  shopping_mall_order_item_id: string & tags.Format<"uuid">;

  /** Number of units of the order item shipped in this batch. Must be >= 1. */
  shipped_quantity: number & tags.Type<"int32">;

  /**
   * Timestamp when the shipment item record was created (ISO 8601, system
   * UTC).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for the last update to this record (audit and evidence
   * compliance, ISO 8601).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallShipmentItem {
  /**
   * Request DTO for searching, filtering, and paginating shipment items
   * linked to a shipment batch.
   *
   * Allows filtering by parent order item, product, or (if modeled) shipment
   * item status. Provides page/limit for pagination, supporting high-volume
   * batch fulfillment and audit UIs.
   *
   * Fields must map directly to filterable fields in
   * shopping_mall_shipment_items or its relationships. Used by advanced
   * fulfillment dashboards, admin audit tools, or seller shipment item query
   * screens.
   */
  export type IRequest = {
    /** Page number for pagination. Must be >= 1; default is 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of records to return per page. Default: 20, Max: 100. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Filter by the unique order item (shopping_mall_order_items.id)
     * related to this shipment item.
     */
    order_item_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional filter for all items for a given product
     * (shopping_mall_products.id).
     */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Filter by status or business state for shipment items, if
     * such state is tracked (e.g., only active/unshipped).
     */
    status?: string | undefined;
  };

  /**
   * DTO for creating a new shipment item attached to a shipment batch.
   *
   * Requires the order item reference and the shipped quantity (>= 1, must
   * not exceed open fulfillment for this order item). References
   * shopping_mall_shipment_items schema fields.
   *
   * Used by sellers/admins to register which order item/ bundle/sku is
   * fulfilled in a particular shipment, how many units are shipped, and to
   * enable downstream delivery tracking, evidence, and inventory logic.
   *
   * Business validation enforces that the target order item exists, is
   * eligible for shipment, and has sufficient quantity remaining for the
   * given shipped_quantity.
   */
  export type ICreate = {
    /** ID of the order item (shopping_mall_order_items.id) to be shipped. */
    shopping_mall_order_item_id: string & tags.Format<"uuid">;

    /**
     * Number of units to mark as shipped in this shipment batch. Must be >=
     * 1. Must not exceed remaining unshipped quantity on the order item.
     */
    shipped_quantity: number & tags.Type<"int32"> & tags.Minimum<1>;
  };

  /**
   * Update object for a shipment item in an order shipment batch. Represents
   * changes to the number of units shipped for an order item in a specific
   * shipment as part of order fulfillment. Only 'shipped_quantity' (the
   * quantity shipped in this item-batch) is updatable; all IDs are immutable
   * for audit trail and compliance. Used by logistics workflows for
   * correcting fulfillment errors or handling batch/split shipments. All
   * updates are snapshotted for evidence and audit, and are only allowed for
   * shipment items not marked as shipped/delivered. This object must match
   * the shopping_mall_shipment_items schema and only contain updatable
   * fields.
   */
  export type IUpdate = {
    /**
     * The updated quantity of this order item included in the shipment
     * batch. Must be a non-negative integer and not exceed the remaining
     * quantity available for shipment from the order item. Use this to
     * update shipment counts in partial, batch, or correction scenarios.
     * Required for any update to the shipment item. If set to zero,
     * indicates removal of all quantities from this shipment batch.
     */
    shipped_quantity: number & tags.Type<"int32">;
  };
}
