import { tags } from "typia";

/**
 * Represents a reusable section template for merchandising or business channel
 * setup. Follows the structure of ai_commerce_section_templates with detailed
 * configuration and audit fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSectionTemplate = {
  /** UUID of the section template. */
  id: string & tags.Format<"uuid">;

  /** Unique code for the section template. */
  code: string;

  /** Human-readable name of the section template. */
  name: string;

  /** Serialized configuration data (e.g., JSON) for the section template. */
  template_data: string;

  /** Indicates if this section template is the default. */
  is_default: boolean;

  /** Current business or workflow status for the section template. */
  business_status: string;

  /** Timestamp when the section template was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to the section template. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp of soft deletion if applicable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSectionTemplate {
  /**
   * Filtering/search/pagination parameters for list/search of section
   * templates. All properties optional.
   */
  export type IRequest = {
    /** Keyword/full-text search through template code/name */
    search?: string | undefined;

    /** Filter results to (non-)default templates */
    is_default?: boolean | undefined;

    /** Filter by workflow/status */
    business_status?: string | undefined;

    /** Sort key for returned results */
    sort_by?: string | undefined;

    /** Pagination page */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size for returned records */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request type for creating a new section template. Matches required
   * columns in ai_commerce_section_templates and enforces uniqueness for
   * code.
   */
  export type ICreate = {
    /**
     * Unique code for identifying the section template. Must be unique
     * system-wide.
     */
    code: string;

    /** Human-readable name for this section template. */
    name: string;

    /**
     * Serialized configuration or rules of the template (typically JSON or
     * similar).
     */
    template_data: string;

    /**
     * Whether this template is the system default for rapid section
     * creation.
     */
    is_default: boolean;

    /** Business/workflow status (active, archived, under_review, etc.). */
    business_status: string;
  };

  /**
   * Update type for modifying section template fields. All fields optional
   * (Partial), for PATCH/PUT update API.
   */
  export type IUpdate = {
    /** Update display name for this template */
    name?: string | undefined;

    /** Update configuration JSON blob */
    template_data?: string | undefined;

    /** Set/unset as default template. */
    is_default?: boolean | undefined;

    /** Override business workflow/status value */
    business_status?: string | undefined;
  };

  /**
   * Summary data for a channel section template, presenting key
   * configuration/management info for selection or analytics dashboards.
   */
  export type ISummary = {
    /**
     * Unique identifier for the section template (PK in
     * ai_commerce_section_templates).
     */
    id: string & tags.Format<"uuid">;

    /** Template unique code for reference and API usage. */
    code: string;

    /**
     * Human-readable display name for the template (e.g., 'Electronics
     * Default').
     */
    name: string;

    /**
     * True if this template is set as system default for rapid section
     * creation.
     */
    is_default: boolean;

    /** Business workflow or operational status (e.g., 'active', 'archived'). */
    business_status: string;

    /** Timestamp for template creation. */
    created_at: string & tags.Format<"date-time">;

    /** Last modification timestamp for audit/tracking. */
    updated_at: string & tags.Format<"date-time">;
  };
}
