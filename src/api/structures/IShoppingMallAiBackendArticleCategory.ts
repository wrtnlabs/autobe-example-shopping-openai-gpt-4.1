import { tags } from "typia";

/**
 * Article category record, as defined by
 * shopping_mall_ai_backend_article_categories table. Includes all standard
 * business fields, parent/child relationships, audit trail timestamps, and
 * logical deletion evidence. Refer to ERD and business documentation for full
 * context.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendArticleCategory = {
  /**
   * Unique identifier for the article category. Corresponds to id in the
   * Prisma model.
   */
  id: string & tags.Format<"uuid">;

  /** Parent category's uuid or null if top-level. Mirrors parent_id in schema. */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /** UUID of the channel this category belongs to. Required. */
  channel_id: string & tags.Format<"uuid">;

  /** Business/category name. Must be unique within a channel. */
  name: string;

  /** Optional long-form description for the category. */
  description?: string | null;

  /** Display or sorting order for navigation in the channel. Required. */
  order: number & tags.Type<"int32">;

  /** ISO 8601 timestamp of category creation. */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp of last update. */
  updated_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp of logical (soft) deletion, or null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendArticleCategory {
  /** Search/filter definition for retrieving article categories. */
  export type IRequest = {
    /** Page number for pagination. */
    page?: number & tags.Type<"int32">;

    /** Number of results per page. */
    limit?: number & tags.Type<"int32">;

    /** Sort order or name of sort field. */
    sort?: string;

    /** Filter/control by parent category id for hierarchy filtering. */
    parent_id?: string & tags.Format<"uuid">;

    /** Filter by channel id. */
    channel_id?: string & tags.Format<"uuid">;

    /** Filter by keywords or partial name matching. */
    q?: string;
  };

  /**
   * Request body DTO for creating a new article category in the backend.
   * Ensures required hierarchical, channel, and naming context are provided,
   * enforcing business constraints around uniqueness and navigation
   * appearance.
   */
  export type ICreate = {
    /**
     * Optional parent category id for hierarchy structure. Null or omitted
     * for top-level.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** UUID of the channel/category tree this category belongs to. Required. */
    channel_id: string & tags.Format<"uuid">;

    /** The category name. Must be unique within channel context. */
    name: string;

    /**
     * Optional description to explain the purpose or content of the
     * category.
     */
    description?: string | null;

    /** Order for display or navigation. */
    order: number & tags.Type<"int32">;
  };

  /**
   * Request body DTO for updating an existing article category. Only provided
   * fields are patched. All optional for partial edit. Renaming must not
   * conflict with siblings; order/parent can be updated for reorganizing the
   * taxonomy.
   */
  export type IUpdate = {
    /** (Optional) Change the category's parent. Null to make top-level. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * (Optional) New name for the category. Must remain unique within a
     * channel.
     */
    name?: string;

    /** (Optional) Category description for detail/edit flows. */
    description?: string | null;

    /** (Optional) Change navigation/display order. */
    order?: number & tags.Type<"int32">;
  };

  /**
   * Summary view of article category entity, pared down for list/pagination
   * performance. Only business- and navigation-relevant fields included;
   * detailed relationships and descriptions omitted.
   */
  export type ISummary = {
    /** UUID of the article category (primary key). */
    id: string & tags.Format<"uuid">;

    /** UUID of the associated channel for navigation/context. */
    channel_id: string & tags.Format<"uuid">;

    /** Business display name of the article category. */
    name: string;

    /** Display order for sort/navigation in business UI. */
    order: number & tags.Type<"int32">;

    /** ISO 8601 timestamp of soft deletion, or null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };
}
