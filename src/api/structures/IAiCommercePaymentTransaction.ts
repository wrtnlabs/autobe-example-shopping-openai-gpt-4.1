import { tags } from "typia";

/**
 * A record representing a payment gateway transaction, mapped to
 * ai_commerce_payment_transactions. Includes references to parent payment,
 * payment method, and gateway, plus status, amount, timestamps, and raw gateway
 * data (for compliance/evidence).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommercePaymentTransaction = {
  /**
   * Unique identifier of the payment transaction. References
   * ai_commerce_payment_transactions.id.
   */
  id: string & tags.Format<"uuid">;

  /** Associated payment's ID. References ai_commerce_payments.id. */
  payment_id: string & tags.Format<"uuid">;

  /**
   * Payment method used (e.g., credit card, deposit). References
   * ai_commerce_payment_methods.id.
   */
  method_id: string & tags.Format<"uuid">;

  /**
   * Payment gateway used for the transaction. References
   * ai_commerce_payment_gateways.id.
   */
  gateway_id: string & tags.Format<"uuid">;

  /** Unique business/gateway reference code for this transaction. */
  transaction_reference: string;

  /**
   * Current status of the payment transaction (e.g., 'pending', 'completed',
   * 'failed', 'refunded').
   */
  status: string;

  /**
   * Transaction amount (must be positive, typically the amount to be settled
   * or refunded).
   */
  amount: number;

  /** Standard ISO 4217 currency code (e.g., 'USD', 'KRW'). */
  currency_code: string;

  /** Timestamp when the payment request was issued. */
  requested_at: string & tags.Format<"date-time">;

  /** Timestamp when payment was completed (nullable if not settled). */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Raw gateway payload/response data for compliance/audit (may be null). */
  gateway_payload?: string | null | undefined;

  /** Timestamp when this payment transaction record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to this payment transaction. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this payment transaction was deleted (soft delete,
   * nullable).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommercePaymentTransaction {
  /**
   * Search, filter, and pagination input DTO for payment transaction listing
   * in ai_commerce_payment_transactions. Optional query parameters for all
   * fields, with full pagination and sorting supported. Used for
   * admin/finance log and payment analytics/reporting workloads.
   */
  export type IRequest = {
    /**
     * Unique transaction reference code for the payment transaction. Used
     * for filtering/search.
     */
    transaction_reference?: string | undefined;

    /**
     * System-assigned UUID for the related payment event. Filtering on
     * payment linkage.
     */
    payment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Transaction status (e.g., 'pending', 'completed', 'failed'). */
    status?: string | undefined;

    /** UUID of associated payment method (ai_commerce_payment_methods.id). */
    method_id?: (string & tags.Format<"uuid">) | undefined;

    /** UUID of the payment gateway (ai_commerce_payment_gateways.id). */
    gateway_id?: (string & tags.Format<"uuid">) | undefined;

    /** Minimum request date/time for filtering (inclusive, ISO 8601). */
    requested_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Maximum request date/time for filtering (inclusive, ISO 8601). */
    requested_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Lower bound for transaction amount. */
    amount_min?: number | undefined;

    /** Upper bound for transaction amount. */
    amount_max?: number | undefined;

    /** Currency code filter (ISO 4217 standard; e.g., 'USD', 'KRW'). */
    currency_code?: string | undefined;

    /** Page number (starts at 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Records per page (pagination limit). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sort field for ordering the result set. */
    sort?: "requested_at" | "amount" | "status" | undefined;

    /** Sort order: 'asc' or 'desc'. */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Input required to create a payment transaction record in
   * ai_commerce_payment_transactions. Used during gateway settlement and
   * includes payment, gateway, method, unique reference, status, amount, and
   * request time.
   */
  export type ICreate = {
    /** References ai_commerce_payments.id; payment entity being settled. */
    payment_id: string & tags.Format<"uuid">;

    /**
     * References ai_commerce_payment_methods.id; method chosen (credit
     * card, deposit, etc).
     */
    method_id: string & tags.Format<"uuid">;

    /** References ai_commerce_payment_gateways.id. */
    gateway_id: string & tags.Format<"uuid">;

    /**
     * Gateway/business reference for this transaction (must be globally
     * unique).
     */
    transaction_reference: string;

    /** Initial status of transaction (e.g., 'pending', 'issued'). */
    status: string;

    /** Monetary amount requested/charged in this transaction. */
    amount: number;

    /** ISO 4217 currency code (e.g., 'KRW', 'USD'). */
    currency_code: string;

    /** When the payment request was issued to the gateway/be. */
    requested_at: string & tags.Format<"date-time">;

    /** Raw initial gateway API response/payload (for audit). */
    gateway_payload?: string | null | undefined;
  };

  /**
   * Fields allowed for updating a payment transaction record in
   * ai_commerce_payment_transactions. Typical use: updating status,
   * completion time, gateway data, and always update updated_at timestamp.
   */
  export type IUpdate = {
    /**
     * Updated payment transaction status (e.g., 'completed', 'failed',
     * 'refunded', etc).
     */
    status?: string | undefined;

    /**
     * Timestamp of final transaction completion (null if not yet
     * completed/settled).
     */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Updated/response data from payment gateway during
     * reconciliation/error handling/audit. May be null.
     */
    gateway_payload?: string | null | undefined;

    /** Timestamp of update event (required). */
    updated_at: string & tags.Format<"date-time">;
  };
}
