import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Full seller business account entity. Follows the
 * shopping_mall_ai_backend_sellers schema. Used for onboarding, verification,
 * onboarding, operational management, and compliance reviews.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendSeller = {
  /** Seller's primary key (UUID). */
  id: string & tags.Format<"uuid">;

  /** Business/notification email address. Must be unique. */
  email: string;

  /**
   * Unique business entity registration/verification number. Used for legal
   * verification and linkage to official records.
   */
  business_registration_number: string;

  /** Seller's business legal name, as registered with authorities. */
  name: string;

  /**
   * If set true, this seller completed verification/KYC/business review
   * (onboarding).
   */
  is_verified: boolean;

  /**
   * True when the seller is enabled to operate (login, manage
   * products/orders).
   */
  is_active: boolean;

  /** Account registration timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Most recent update (profile, contact, or business info). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * When the seller account was logically deleted (withdrawal/closure). Null
   * if not withdrawn.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendSeller {
  /**
   * Request body for seller account creation (registration flow). Maps to
   * shopping_mall_ai_backend_sellers required fields. Password is typically
   * managed via approval or separate onboarding; not included here.
   */
  export type ICreate = {
    /** Seller's business email, unique per account. (Prisma: 'email') */
    email: string & tags.Format<"email">;

    /**
     * Legal business registration number required for seller onboarding.
     * (Prisma: 'business_registration_number')
     */
    business_registration_number: string;

    /** Legal business name of the seller entity. (Prisma: 'name') */
    name: string;
  };

  /** Request body for seller login. */
  export type ILogin = {
    /**
     * Seller's registration email for login. Unique per business
     * registration.
     */
    email: string & tags.Format<"email">;

    /** Plain password to be validated against hash on login flow. */
    password: string & tags.Format<"password">;
  };

  /** Request body for seller token refresh. */
  export type IRefresh = {
    /** Seller's JWT refresh token for session renewal. */
    refresh_token: string;
  };

  /** Response type. Seller authentication payload, includes JWT and profile. */
  export type IAuthorized = {
    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /** Seller profile information (shopping_mall_ai_backend_sellers entity). */
    seller: IShoppingMallAiBackendSeller.ISeller;
  };

  /**
   * Seller profile and compliance entity as per
   * shopping_mall_ai_backend_sellers.
   */
  export type ISeller = {
    /** Unique seller identifier, UUID (PK). (Prisma: 'id') */
    id: string & tags.Format<"uuid">;

    /** Registered seller business email. (Prisma: 'email') */
    email: string & tags.Format<"email">;

    /**
     * Seller's legal business registration number (unique, regional/country
     * standard). (Prisma: 'business_registration_number')
     */
    business_registration_number: string;

    /** Legal business name of this seller. (Prisma: 'name') */
    name: string;

    /**
     * Whether seller account is currently active (able to access platform).
     * (Prisma: 'is_active')
     */
    is_active: boolean;

    /**
     * Whether seller's identity and business registration were successfully
     * verified. (Prisma: 'is_verified')
     */
    is_verified: boolean;

    /**
     * When the seller account was registered with the system. (Prisma:
     * 'created_at')
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of last update to seller main record. (Prisma:
     * 'updated_at')
     */
    updated_at: string & tags.Format<"date-time">;

    /** Timestamp for business/account withdrawal (soft delete), or null. */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Search/filter request for finding sellers. Allows advanced criteria to
   * narrow result set for compliance, onboarding, or operational review.
   */
  export type IRequest = {
    /** Pagination page (optional). */
    page?: (number & tags.Type<"int32">) | null;

    /** Max results per page (optional). */
    limit?: (number & tags.Type<"int32">) | null;

    /** Search by seller email address (optional). */
    email?: string | null;

    /** Search by business registration number (optional). */
    business_registration_number?: string | null;

    /** Search by seller legal/business name (optional). */
    name?: string | null;

    /** Filter by verification status (optional). */
    is_verified?: boolean | null;

    /** Filter by active/inactive status (optional). */
    is_active?: boolean | null;

    /** Start date for created_at filter (optional). */
    created_at_from?: (string & tags.Format<"date-time">) | null;

    /** End date for created_at filter (optional). */
    created_at_to?: (string & tags.Format<"date-time">) | null;

    /** Start date for updated_at filter (optional). */
    updated_at_from?: (string & tags.Format<"date-time">) | null;

    /** End date for updated_at filter (optional). */
    updated_at_to?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Data structure for updating an existing seller record. Only specific
   * fields are mutable. This structure is for admin backoffice use to
   * maintain accurate onboarding, compliance, and operational status for
   * seller entities.
   */
  export type IUpdate = {
    /**
     * The primary business email address for the seller. Must be unique.
     * Used for login, notifications, and compliance reference. Updatable
     * only by admins for accuracy and regulatory compliance.
     */
    email?: string;

    /**
     * The seller's registered business identifier. This value is required
     * for compliance with tax, legal, and onboarding policies. Must remain
     * unique in the system.
     */
    business_registration_number?: string;

    /**
     * Legal or business-facing name of the seller. Appears on dashboards
     * and for legal evidence.
     */
    name?: string;

    /**
     * Flag for whether business verification (KYC/KYB) is complete and
     * approved. Only updatable by admin to prevent fraudulent
     * verification.
     */
    is_verified?: boolean;

    /**
     * Flag to control whether the seller is currently able to operate in
     * the system. Suspension and reactivation are managed here.
     */
    is_active?: boolean;

    /**
     * Timestamp of the most recent update to the seller record. Set by
     * system.
     */
    updated_at?: string & tags.Format<"date-time">;
  };

  /**
   * Summary record for seller admin/search listing. Contains identifying
   * business fields, onboarding state, and minimal evidence fields for
   * compliance or onboarding dashboards.
   */
  export type ISummary = {
    /** Unique identifier for the seller (UUID PK). */
    id: string & tags.Format<"uuid">;

    /** Main business email address for the seller. */
    email: string & tags.Format<"email">;

    /** Legal registration number (unique, verified at onboarding). */
    business_registration_number: string;

    /** Business legal name of seller. */
    name: string;

    /** Current enabled/disabled state of the seller account. */
    is_active: boolean;

    /** Verification state (approved for commerce/business workflows). */
    is_verified: boolean;
  };
}
