import { tags } from "typia";

/**
 * Full detail for an individual financial incident record, including all
 * context, relations, business/rule attributes, and audit evidence. Used for
 * support, regulatory, or compliance reviews.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendFinancialIncident = {
  /** Incident record ID. */
  id: string & tags.Format<"uuid">;

  /** If related to deposit ledger, the reference. Nullable. */
  shopping_mall_ai_backend_deposit_id?: (string & tags.Format<"uuid">) | null;

  /** If related to mileage ledger, the reference. */
  shopping_mall_ai_backend_mileage_id?: (string & tags.Format<"uuid">) | null;

  /** If involves coin ledger, the reference. */
  shopping_mall_ai_backend_coin_id?: (string & tags.Format<"uuid">) | null;

  /** If incident relates to customer, this field holds their ID. */
  shopping_mall_ai_backend_customer_id?: (string & tags.Format<"uuid">) | null;

  /** If incident relates to seller, their ID. */
  shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

  /**
   * Incident code string (enum in codebook, e.g.: fraud, compliance_audit,
   * withdrawal_dispute, etc).
   */
  incident_type: string;

  /**
   * Business/processing status (enum: open, closed, resolved, reversing,
   * etc.).
   */
  status: string;

  /** Narrative or machine context for the incident (text). */
  details: string;

  /**
   * Reference code for linking this incident to an external system or
   * legal/compliance event; nullable.
   */
  external_reference?: string | null;

  /** Creation timestamp (ISO8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Resolution time or null if unresolved. */
  resolved_at?: (string & tags.Format<"date-time">) | null;

  /** Time incident was soft-deleted, or null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendFinancialIncident {
  /**
   * Request search/filter parameters for paginated financial incident
   * queries. Allows admins and compliance teams to filter and paginate across
   * financial event records on deposits, mileage, coins, customers, sellers,
   * or incidents. Provides for time windows and result ordering for
   * business/forensic review. All fields optional to allow flexible
   * searching. Omit fields for open-ended queries.
   */
  export type IRequest = {
    /** Financial incident ID (optional). */
    id?: string & tags.Format<"uuid">;

    /** Restrict search to incidents for this depositRecord (optional). */
    shopping_mall_ai_backend_deposit_id?: string & tags.Format<"uuid">;

    /** Incident on this mileage ledger only. */
    shopping_mall_ai_backend_mileage_id?: string & tags.Format<"uuid">;

    /** Incident involving this coin ledger only. */
    shopping_mall_ai_backend_coin_id?: string & tags.Format<"uuid">;

    /** Incident only for this customer (optional). */
    shopping_mall_ai_backend_customer_id?: string & tags.Format<"uuid">;

    /** Incident only for this seller (optional). */
    shopping_mall_ai_backend_seller_id?: string & tags.Format<"uuid">;

    /** String filter for incident business type (see codebook enumeration). */
    incident_type?: string;

    /** Business/processing status filter. */
    status?: string;

    /** Text filter for context (optional, full-text search). */
    details?: string;

    /** Filter for creation timestamps on/after this (optional). */
    created_at_from?: string & tags.Format<"date-time">;

    /** Favorites added before this datetime. */
    created_at_to?: string & tags.Format<"date-time">;

    /** Window for incidents resolved after this (optional). */
    resolved_at_from?: string & tags.Format<"date-time">;

    /** Window for incident resolution before this (optional). */
    resolved_at_to?: string & tags.Format<"date-time">;

    /** Pagination: page number (1-based index). */
    page?: number & tags.Type<"int32">;

    /** Pagination: max rows per page. */
    limit?: number & tags.Type<"int32">;

    /** Field to order sorting by (e.g., created_at, status). */
    order_by?: string;

    /** Ascending or descending sort. */
    direction?: "asc" | "desc";
  };

  /**
   * Summary view for a financial incident record, omitting full details for
   * list efficiency. Used in pages, dashboards, or search screens. Evidence
   * fields present; only fields required for identification, state, and
   * review included.
   */
  export type ISummary = {
    /** Incident record ID. */
    id: string & tags.Format<"uuid">;

    /** Incident type code (see codebook for enum). */
    incident_type: string;

    /** Current business/system status (see codebook for enum). */
    status: string;

    /** Original creation time. */
    created_at: string & tags.Format<"date-time">;

    /** Resolution time or null if unresolved. */
    resolved_at?: (string & tags.Format<"date-time">) | null;

    /** External reference code, if any. */
    external_reference?: string | null;
  };
}
