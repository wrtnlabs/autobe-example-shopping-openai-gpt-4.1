import { tags } from "typia";

/**
 * Full order entity in shopping mall AI backend, capturing all
 * business/settlement fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendOrder = {
  /** Globally unique order ID in the system. */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the customer (shopping_mall_ai_backend_customers) who placed the
   * order.
   */
  shopping_mall_ai_backend_customer_id: string & tags.Format<"uuid">;

  /**
   * ID of the channel (shopping_mall_ai_backend_channels) through which order
   * was placed.
   */
  shopping_mall_ai_backend_channel_id: string & tags.Format<"uuid">;

  /**
   * ID of the seller responsible for the order, if any. Nullable for
   * non-seller-linked orders or composite orders.
   */
  shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

  /** Human/business-visible code for order tracking and lookup. */
  code: string;

  /**
   * Current business status of the order, e.g., 'pending', 'paid', 'shipped',
   * etc.
   */
  status: string;

  /** Total billed charge for this order, used for settlement, analysis, etc. */
  total_amount: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /** Order currency (ISO 4217 code), e.g. 'USD', 'KRW'. */
  currency: string;

  /** Order date/time (placed by customer). */
  ordered_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when order was business-confirmed by inventory/payment. Null if
   * not confirmed.
   */
  confirmed_at?: (string & tags.Format<"date-time">) | null;

  /** Timestamp if/when the order was cancelled by customer/operator. */
  cancelled_at?: (string & tags.Format<"date-time">) | null;

  /** Completion/closure time. Null if order not yet fulfilled/finalized. */
  closed_at?: (string & tags.Format<"date-time">) | null;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last update to any order business data. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for audit/evidence. Null if order is not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendOrder {
  /**
   * Summary DTO for orders, used for order list UIs. Contains the key fields
   * needed for high-level list display.
   */
  export type ISummary = {
    /** Order's unique business identifier (UUID). */
    id: string & tags.Format<"uuid">;

    /**
     * Business-visible order code or reference number. Used for order
     * tracking.
     */
    code: string;

    /**
     * Current status code of the order, e.g., 'pending', 'confirmed',
     * 'delivered'.
     */
    status: string;

    /**
     * Total (final) charged amount for the order including discounts, in
     * the specified currency.
     */
    total_amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** Order currency (ISO 4217), e.g., 'KRW', 'USD'. */
    currency: string;

    /** Timestamp when the order was placed by the customer. */
    ordered_at: string & tags.Format<"date-time">;

    /** Closing time of the order, or null if not yet closed. */
    closed_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request envelope for order list/search endpoints. Includes pagination,
   * sort, and optional filter criteria.
   */
  export type IRequest = {
    /**
     * Requested page number for paginated search. Null for default (first
     * page).
     */
    page?: (number & tags.Type<"int32">) | null;

    /** Max records per page, pagination. Null for system default. */
    limit?: (number & tags.Type<"int32">) | null;

    /** Sort field or order instruction. Null for default sorting. */
    sort?: string | null;

    /**
     * Optional filter criteria for advanced order search: channel, seller,
     * order status, currency, datetime range, amount range.
     */
    filter?: {
      /** Restrict orders to a specific channel, if supplied. */
      channel_id?: string & tags.Format<"uuid">;

      /** Restrict orders to a specific seller, if supplied. */
      seller_id?: string & tags.Format<"uuid">;

      /** Status code or filter for orders. */
      status?: string;

      /** Currency code to filter. */
      currency?: string;

      /** Start time filter for order placement time. */
      ordered_at_from?: string & tags.Format<"date-time">;

      /** End time filter for order placement time. */
      ordered_at_to?: string & tags.Format<"date-time">;

      /** Filter for orders with total amount >= this. */
      total_amount_min?: number;

      /** Filter for orders with total amount <= this. */
      total_amount_max?: number;
    };
  };

  /**
   * Request DTO for creating a new order in shopping mall AI backend.
   * Includes required business context, totals, and session data.
   */
  export type ICreate = {
    /** Customer UUID making the order. */
    shopping_mall_ai_backend_customer_id: string & tags.Format<"uuid">;

    /** Channel UUID for the order session/context. */
    shopping_mall_ai_backend_channel_id: string & tags.Format<"uuid">;

    /**
     * Seller UUID if single-seller order, otherwise null for marketplace or
     * multi-seller checkouts.
     */
    shopping_mall_ai_backend_seller_id?: (string & tags.Format<"uuid">) | null;

    /** Business-visible order code/number, unique per channel. */
    code: string;

    /** Initial order status for new order, e.g., 'pending', 'created'. */
    status: string;

    /** Final order charge for settlement, used for payments and reports. */
    total_amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** ISO 4217 code for monetary currency. */
    currency: string;

    /** Datetime of order placement/reception. */
    ordered_at: string & tags.Format<"date-time">;

    /** Datetime if immediately business-confirmed, or null if not. */
    confirmed_at?: (string & tags.Format<"date-time">) | null;

    /** Datetime if immediately cancelled, or null. */
    cancelled_at?: (string & tags.Format<"date-time">) | null;

    /** Datetime for completed/closed order status, or null. */
    closed_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Update allowable business fields of an order, as per status and workflow
   * compliance. All fields in this object are optional. Only permitted for
   * orders in states not finalized (not delivered/closed/cancelled).
   * Ownership and permission checks must be respected.
   */
  export type IUpdate = {
    /**
     * The current business status of the order. Updates must comply with
     * valid transitions (e.g., 'pending' â†’ 'confirmed') as defined by
     * platform business policy.
     */
    status?: string;

    /**
     * Optional notes or instructions to modify delivery or fulfillment, as
     * per business process.
     */
    delivery_notes?: string;

    /** Update for the recipient/contact name on this order. */
    contact_name?: string;

    /**
     * Update for the recipient's phone number associated with this order,
     * for notifications or delivery communication.
     */
    contact_phone?: string;

    /** Update for the full delivery address for this order. */
    delivery_address?: string;

    /**
     * Optional update to customer's note or instructions for the order.
     * Used for after-sale.
     */
    customer_note?: string;

    /**
     * For admin/seller only, update note on the order, such as hold,
     * review, or internal memo.
     */
    seller_note?: string;

    /** Timestamp of this update action for evidence/audit. */
    updated_at?: string & tags.Format<"date-time">;
  };
}
