import { tags } from "typia";

/**
 * Configuration of a single alert trigger associated with a product favorite.
 *
 * Represents a user's personalized alert settings for a given favorited product
 * (eg, notify on price drop, restock, answer posted, etc). Triggers
 * notification logic upon matching business events in backend or by scheduled
 * analytics jobs. Audit and notification flows rely on this entity for event
 * routing and evidence.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceFavoritesAlert = {
  /**
   * Unique identifier for the product favorite alert record. This value is
   * generated by the database and referenced in notification logic, audit
   * logs, and user-action event trails.
   */
  id: string & tags.Format<"uuid">;

  /**
   * References the specific favorited product
   * (ai_commerce_favorites_products.id) to which this alert trigger is
   * attached. Used for joining alert configurations with the user's favorites
   * list and as the context for notifications.
   */
  favorite_id: string & tags.Format<"uuid">;

  /**
   * Type of alert trigger for this favorite product (e.g., 'price_drop',
   * 'restocked', 'answer_posted'). Used to determine what event will cause
   * notification to be triggered for the user on this favorite. Business
   * logic enforces that each favorite can only have one active alert of each
   * type.
   */
  alert_type: string;

  /**
   * Boolean toggle indicating whether alerting for this trigger is currently
   * active for this favorite. If false, notifications for the associated
   * event are suppressed.
   */
  is_enabled: boolean;

  /**
   * Timestamp in ISO 8601 format for when this alert was last triggered. Null
   * if the alert has never fired. Used for audit trails and delivering
   * context to the user regarding notification recency.
   */
  last_triggered_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceFavoritesAlert {
  /**
   * Request DTO for updating the enabled status of an existing alert trigger
   * configuration for a favorited product. Allows user or platform logic to
   * enable or disable alert delivery per favorite/trigger type.
   */
  export type IUpdate = {
    /**
     * Administrative or user-set toggle for enabling/disabling this alert
     * trigger on the favorite. Omitted if no change.
     */
    is_enabled?: boolean | undefined;
  };

  /** Payload to batch update multiple alert configs for a favorite. */
  export type IUpdateRequest = {
    /** Array of alert updates to apply for a favorite */
    updates: IAiCommerceFavoritesAlert.IUpdate[];
  };

  /** Response object for listing all alert triggers for a favorite resource. */
  export type IList = {
    /** Current list of configured alert triggers for this favorite */
    alerts: IAiCommerceFavoritesAlert[];
  };

  /**
   * Request DTO for creating a new alert trigger configuration for a
   * favorited product.
   *
   * Used by the authenticated user to establish a new notification or alert
   * for a business event associated with their favorited product (eg, price
   * drop, restock). Business logic validates type, ownership, and uniqueness
   * per favorite/alert_type tuple.
   */
  export type ICreate = {
    /**
     * Type of alert trigger for this favorite product. Examples:
     * 'price_drop', 'restocked', 'answer_posted'. Must match
     * business-accepted alert type definitions for configuration.
     * Required.
     */
    alert_type: string;

    /**
     * Whether or not the alert trigger should be immediately active for the
     * favorite. Defaults to true in most business contexts, but can be
     * explicitly set false for pre-configuration or delayed enable.
     */
    is_enabled: boolean;
  };
}
