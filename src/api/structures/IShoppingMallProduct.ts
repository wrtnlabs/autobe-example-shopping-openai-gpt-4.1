import { tags } from "typia";

/**
 * Comprehensive product entity corresponding to shopping_mall_products;
 * includes all base DB fields for business/product logic, audit, and
 * compliance. Designed for use in read responses, detail pages, and business
 * workflows. Field mappings and descriptions are strictly per Prisma schema.
 * NEVER include properties not in the base schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallProduct = {
  /** Primary Key for product. */
  id: string & tags.Format<"uuid">;

  /** Seller who owns the product (shopping_mall_sellers.id). */
  shopping_mall_seller_id: string & tags.Format<"uuid">;

  /** Channel where the product is listed (shopping_mall_channels.id). */
  shopping_mall_channel_id: string & tags.Format<"uuid">;

  /** Section where product is grouped (shopping_mall_sections.id). */
  shopping_mall_section_id: string & tags.Format<"uuid">;

  /**
   * Primary category for filtering & search
   * (shopping_mall_channel_categories.id).
   */
  shopping_mall_category_id: string & tags.Format<"uuid">;

  /** Business-facing, unique product code per seller/channel. */
  code: string;

  /** Product display name for customers and search. */
  name: string;

  /** Product status (e.g., Draft, Active, Paused, Discontinued, Deleted). */
  status: string;

  /**
   * Business workflow state (e.g., Approval, Pending Activation, Blocked,
   * Suspended, etc).
   */
  business_status: string;

  /** Product creation timestamp (ISO 8601 formatted). */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp (ISO 8601 formatted). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp (nullable; ISO 8601). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallProduct {
  /**
   * Filtering, searching, and pagination parameters for retrieving a list of
   * products. Every property is optional for maximum flexibility; combine as
   * needed for advanced queries.
   */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum number of records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Default<20> & tags.Minimum<1>)
      | undefined;

    /**
     * Field to sort the products by (e.g., name, created_at, updated_at,
     * price).
     */
    sort_by?: string | undefined;

    /** Sort order direction. Can be 'asc' or 'desc'. */
    sort_order?: "asc" | "desc" | undefined;

    /** Full-text search filter on product name/code/description. */
    search?: string | undefined;

    /**
     * Filter for products belonging to a specific channel
     * (shopping_mall_channels.id).
     */
    channel_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for products under a specific section
     * (shopping_mall_sections.id).
     */
    section_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for products belonging to a specific category
     * (shopping_mall_channel_categories.id).
     */
    category_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for products owned by a particular seller
     * (shopping_mall_sellers.id).
     */
    seller_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Current status of the product (e.g., Draft, Active, Paused,
     * Discontinued, Deleted). See Products schema for allowed values.
     */
    status?: string | undefined;

    /**
     * Business workflow state (e.g., Approval, Pending Activation, Blocked,
     * Suspended, etc).
     */
    business_status?: string | undefined;

    /** Filter for products with an exact business/product code. */
    code?: string | undefined;

    /** Filter for product(s) by display name (full or partial). */
    name?: string | undefined;

    /** Filter products created after this date/time (ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter products created before this date/time (ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter products updated after this date/time (ISO 8601). */
    updated_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter products updated before this date/time (ISO 8601). */
    updated_at_to?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Data required to register a new product; maps only to properties present
   * in shopping_mall_products table. System fields like id, created_at,
   * updated_at, deleted_at are NOT accepted as input (generated by system).
   * No business logic fields not defined in prisma schema are allowed.
   */
  export type ICreate = {
    /** Seller who owns the product (shopping_mall_sellers.id). */
    shopping_mall_seller_id: string & tags.Format<"uuid">;

    /** Channel where the product is registered (shopping_mall_channels.id). */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /** Section to associate the product (shopping_mall_sections.id). */
    shopping_mall_section_id: string & tags.Format<"uuid">;

    /**
     * Primary category for product classification
     * (shopping_mall_channel_categories.id).
     */
    shopping_mall_category_id: string & tags.Format<"uuid">;

    /** Business-unique product code per seller/channel. */
    code: string;

    /** Product display name. */
    name: string;

    /** Product status (Draft, Active, Paused, Discontinued, Deleted). */
    status: string;

    /**
     * Workflow state (Approval, Pending Activation, Blocked, Suspended,
     * etc).
     */
    business_status: string;
  };

  /**
   * Fields permitted for product update; maps only to updatable columns in
   * shopping_mall_products. All fields optional; id/shopping_mall_seller_id,
   * created_at, updated_at, deleted_at are not configurable by client. Do not
   * accept system-generated or non-DB-backed fields.
   */
  export type IUpdate = {
    /** Channel ID to update (shopping_mall_channels.id). */
    shopping_mall_channel_id?: (string & tags.Format<"uuid">) | undefined;

    /** Section ID to update (shopping_mall_sections.id). */
    shopping_mall_section_id?: (string & tags.Format<"uuid">) | undefined;

    /** Category ID to update (shopping_mall_channel_categories.id). */
    shopping_mall_category_id?: (string & tags.Format<"uuid">) | undefined;

    /** Update of business-facing product code. */
    code?: string | undefined;

    /** Product display name to update. */
    name?: string | undefined;

    /**
     * Update status for product (Draft, Active, Paused, Discontinued,
     * Deleted).
     */
    status?: string | undefined;

    /** Update business/workflow state. */
    business_status?: string | undefined;
  };

  /**
   * Summary for product list display. Based on Prisma schema
   * shopping_mall_products. Contains essential identity, owner, and display
   * information for catalog UIs.
   */
  export type ISummary = {
    /**
     * Primary Key. Product unique identifier. Prisma:
     * shopping_mall_products.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * Seller who owns product. Prisma:
     * shopping_mall_products.shopping_mall_seller_id
     */
    shopping_mall_seller_id: string & tags.Format<"uuid">;

    /**
     * Channel where the product is listed. Prisma:
     * shopping_mall_products.shopping_mall_channel_id
     */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /**
     * Business-facing, unique product code per seller/channel. Prisma:
     * shopping_mall_products.code
     */
    code: string;

    /** Product display name. Prisma: shopping_mall_products.name */
    name: string;

    /**
     * Product status (e.g., Draft, Active, Paused, Discontinued, Deleted).
     * Prisma: shopping_mall_products.status
     */
    status: string;

    /** Product creation timestamp. Prisma: created_at */
    created_at: string & tags.Format<"date-time">;
  };
}
