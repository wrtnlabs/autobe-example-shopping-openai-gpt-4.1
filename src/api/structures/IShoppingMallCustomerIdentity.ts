import { tags } from "typia";

/**
 * Customer identity verification record (KYC) entity. Maps to a single record
 * in shopping_mall_customer_identities, capturing all business fields,
 * verification data, and audit metadata according to DB schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCustomerIdentity = {
  /**
   * Unique identifier for the customer identity record. Matches
   * shopping_mall_customer_identities.id. Required for read/update
   * operations.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key to the customer owning this identity record. Referenced from
   * shopping_mall_customers.id. Required for linkage and business context.
   */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /**
   * Type of identity: government_id, passport, driver's_license,
   * resident_number, and more as required by regional compliance. Must match
   * allowable types in the shopping_mall_customer_identities schema. See
   * documentation for values and constraints.
   */
  identity_type: string;

  /**
   * Hashed or encrypted value of the identifier, as stored for privacy and
   * KYC. Typically never exposed raw to usersâ€”used in compliance, regulated
   * validation flows, and audit.
   * (shopping_mall_customer_identities.identity_value in schema).
   */
  identity_value: string;

  /**
   * The authority or source who issued this identity document. Optional in
   * compliance with regional norms (e.g., government, issuer agency). See
   * shopping_mall_customer_identities.issuer. Nullable as per schema.
   */
  issuer?: string | undefined;

  /**
   * Date/time when the identity or ID/proof was issued by the authority.
   * Optional. Must be valid ISO8601 timestamp if present; nullable if not
   * known. See shopping_mall_customer_identities.issue_date.
   */
  issue_date?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when this identity record was conclusively verified, either by
   * staff or automated model. Optional. Valid ISO8601, nullable.
   * shopping_mall_customer_identities.verified_at.
   */
  verified_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Current verification status of this identity: pending, verified,
   * rejected, expired, etc. Must match values defined in
   * shopping_mall_customer_identities.status. Used for workflow gating,
   * business logic, and compliance.
   */
  status: string;

  /**
   * Record creation timestamp in UTC ISO8601 format. Set at creation;
   * immutable. Schema column: shopping_mall_customer_identities.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last modification timestamp (auto-update); updated on changes to
   * this record. UTC ISO8601. Schema column:
   * shopping_mall_customer_identities.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallCustomerIdentity {
  /**
   * Advanced search and filter parameters for listing customer identity
   * verification records (KYC). All fields are optional and can be combined
   * for complex filter conditions.
   */
  export type IRequest = {
    /**
     * Filter by identity type (e.g., government_id, passport,
     * driver's_license, resident_number). Must match types from the
     * database. Optional for filtering. Reference:
     * shopping_mall_customer_identities.identity_type.
     */
    identity_type?: string | undefined;

    /**
     * Filter by identity verification status (e.g., pending, verified,
     * rejected, expired). Matches allowed values in the
     * shopping_mall_customer_identities schema. Optional for filtering.
     */
    status?: string | undefined;

    /**
     * Filter results by issuer (e.g., government agency, authority, or
     * business unit that issued the ID). Optional.
     * shopping_mall_customer_identities.issuer.
     */
    issuer?: string | undefined;

    /**
     * Start of date range filter for verified_at timestamp. Returns
     * identities verified on or after this ISO8601 timestamp. Optional.
     */
    verified_at_start?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End of date range filter for verified_at timestamp. Returns
     * identities verified on or before this ISO8601 timestamp. Optional.
     */
    verified_at_end?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. Optional. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of results per page for pagination. Optional. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Update payload for editing an existing customer identity (KYC) record.
   * All fields except status are optional in request. References
   * shopping_mall_customer_identities Prisma column documentation.
   */
  export type IUpdate = {
    /**
     * Type of identity to update (e.g., government_id, passport,
     * driver's_license, resident_number). Must match allowed values.
     * Reference: shopping_mall_customer_identities.identity_type.
     */
    identity_type?: string | undefined;

    /**
     * Hashed or encrypted identity value for privacy. Updates this
     * identifier in compliance situations. Reference:
     * shopping_mall_customer_identities.identity_value.
     */
    identity_value?: string | undefined;

    /**
     * Updated issuing authority for this identity (optional). Reference:
     * shopping_mall_customer_identities.issuer. Nullable.
     */
    issuer?: string | undefined;

    /**
     * Change or set the identity's issue date (optional); requires ISO8601
     * if set, nullable if omitted. Reference:
     * shopping_mall_customer_identities.issue_date.
     */
    issue_date?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Set or clear the verified_at timestamp (when identity was confirmed).
     * ISO8601, nullable. Reference:
     * shopping_mall_customer_identities.verified_at.
     */
    verified_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Update the current verification status: pending, verified, rejected,
     * expired, etc. Reference: shopping_mall_customer_identities.status.
     */
    status: string;
  };

  /**
   * Summary DTO for a customer identity (KYC). Used in search/filter list and
   * evidence UIs. References the shopping_mall_customer_identities schema,
   * while suppressing any actual PII (identity_value, sensitive hashes) for
   * compliance and privacy.
   */
  export type ISummary = {
    /**
     * Unique identifier of the customer identity record. UUID format;
     * references primary key in shopping_mall_customer_identities.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Reference ID of the customer (shopping_mall_customers.id) for whom
     * this identity applies.
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /**
     * Declared type of identity: e.g., 'government_id', 'passport',
     * 'driver's_license', 'resident_number', etc. Used for validation and
     * auditing.
     */
    identity_type: string;

    /**
     * KYC/identity verification status: options may include 'pending',
     * 'verified', 'rejected', 'expired', etc. Used for workflow and
     * customer onboarding policies.
     */
    status: string;

    /**
     * Issuing authority, such as a governmental or regulatory body. May be
     * null if not recorded per jurisdiction.
     */
    issuer?: string | null | undefined;

    /**
     * Date of issuance for the identity document (nullable). ISO 8601
     * format if present.
     */
    issue_date?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Datetime at which the identity was confirmed as valid. Null if
     * pending/unverified; ISO 8601 format if set.
     */
    verified_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Creation timestamp (UTC ISO-8601) of the identity record. */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last modification (auto-update) timestamp (ISO-8601) for the identity
     * record.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
