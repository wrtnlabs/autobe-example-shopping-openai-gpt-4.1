import { tags } from "typia";

/**
 * Detail object for a single product bundle (SKU variant), with all relevant
 * fields for business, inventory, and compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendProductBundle = {
  /** Bundle unique ID (required). */
  id: string & tags.Format<"uuid">;

  /** Parent product ID (required). */
  shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

  /** Display name for the bundle (required). */
  bundle_name: string;

  /** Unique SKU code (required). */
  sku_code: string;

  /** Bundle price. */
  price: number;

  /** Inventory management policy. */
  inventory_policy: string;

  /** Whether the bundle is for sale/available. */
  is_active: boolean;

  /** Creation datetime. */
  created_at: string & tags.Format<"date-time">;

  /** Modification timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp or null. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendProductBundle {
  /**
   * Request object for searching/filtering product bundles (variants) for a
   * specific product, with support for pagination and search.
   */
  export type IRequest = {
    /** Parent product ID to filter bundles (required). */
    productId: string & tags.Format<"uuid">;

    /** Optional free search parameter (bundle name, SKU, etc). */
    search?: string;

    /** Page number for results. */
    page?: number & tags.Type<"int32">;

    /** Records per page (default: 20 or similar). */
    limit?: number & tags.Type<"int32">;

    /** Sort order direction for results (by created_at or sort params). */
    sort_order?: "asc" | "desc";
  };

  /**
   * Summary of a product bundle (SKU variant) used in lists or pagination.
   * Contains essential business and audit fields.
   */
  export type ISummary = {
    /** Bundle unique ID (SKU variant). */
    id: string & tags.Format<"uuid">;

    /** Parent product ID. */
    shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

    /** Display name for the bundle. */
    bundle_name: string;

    /** Unique SKU code for the bundle (must be unique globally). */
    sku_code: string;

    /** Bundle price (may override product base price). */
    price: number;

    /** Inventory management policy for bundle. */
    inventory_policy: string;

    /** Whether this bundle is available for sale. */
    is_active: boolean;

    /** Creation timestamp (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp (ISO8601). */
    updated_at: string & tags.Format<"date-time">;

    /** Soft delete timestamp or null if not deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Creation DTO for a new product bundle/SKU variant, including inventory
   * policy and status (required).
   */
  export type ICreate = {
    /** Product ID to which this bundle/variant belongs. */
    shopping_mall_ai_backend_products_id: string & tags.Format<"uuid">;

    /** Name for the bundle (e.g., 'Red XL'). */
    bundle_name: string;

    /** Unique code/SKU for this bundle. Must be globally unique. */
    sku_code: string;

    /** Variant price for this bundle (required). */
    price: number;

    /** How inventory is handled (track, ignore, inherit, etc). */
    inventory_policy: string;

    /** Whether the bundle is active upon creation. */
    is_active: boolean;
  };

  /**
   * Update input for a product bundle (SKU variant) entity. Allows updating
   * bundle name, SKU code, price, inventory policy, and activation status.
   * Fields are all optional and can be supplied individually for partial
   * updates as per PATCH or bulk update business requirements.
   */
  export type IUpdate = {
    /** Display name for this bundle/variant combination. */
    bundle_name?: string;

    /** Unique code representing this bundle/SKU. */
    sku_code?: string;

    /** Price for this bundle (may override product base price). */
    price?: number;

    /** Inventory control logic for this bundle (e.g., track, ignore). */
    inventory_policy?: string;

    /** Whether this bundle is available for sale. */
    is_active?: boolean;
  };
}
