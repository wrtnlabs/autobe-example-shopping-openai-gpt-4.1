import { tags } from "typia";

/**
 * Order payment record representing a payment transaction linked to an order.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendOrderPayment = {
  /** Primary key of the payment record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the related order. */
  shopping_mall_ai_backend_order_id: string & tags.Format<"uuid">;

  /** Payment method, such as 'card', 'bank_transfer', 'coupon', etc. */
  payment_method: string;

  /** Total payment amount. */
  amount: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /** Currency code (ISO 4217, e.g., USD, EUR, KRW). */
  currency: string;

  /** Current payment status, e.g., 'pending', 'succeeded', 'failed', etc. */
  status: string;

  /** Optional reference for external payment processor. */
  external_reference?: string | null;

  /** Timestamp payment was requested. */
  requested_at: string & tags.Format<"date-time">;

  /** When payment was completed (if succeeded). */
  completed_at?: (string & tags.Format<"date-time">) | null;

  /** When payment failed (if failed). */
  failed_at?: (string & tags.Format<"date-time">) | null;

  /** When payment was cancelled, if cancelled. */
  cancelled_at?: (string & tags.Format<"date-time">) | null;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Most recent update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendOrderPayment {
  /** Search and filter criteria for paginated payment query. */
  export type IRequest = {
    /** Order UUID to filter payments by. */
    order_id?: string;

    /** Payment method to filter, e.g., 'card', 'bank_transfer', etc. */
    payment_method?: string;

    /**
     * Payment status to filter on, e.g., 'pending', 'succeeded', 'failed',
     * etc.
     */
    status?: string;

    /** External payment provider code/reference to filter. */
    external_reference?: string;

    /** Start of request time filter. */
    requested_after?: string & tags.Format<"date-time">;

    /** End of request time filter. */
    requested_before?: string & tags.Format<"date-time">;

    /** Page number. */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Number of records per page. */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Sort order (e.g., 'requested_at:desc'). */
    sort?: string;
  };

  /** Request body for creating an order payment entry. */
  export type ICreate = {
    /** UUID for the order being paid for. */
    shopping_mall_ai_backend_order_id: string & tags.Format<"uuid">;

    /** Payment method used for the new payment record. */
    payment_method: string;

    /** Total payment amount for the record. */
    amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** Currency code (ISO 4217, e.g., USD). */
    currency: string;

    /** Optional external payment gateway reference for this payment. */
    external_reference?: string | null;
  };

  /** Update fields for an existing order payment. */
  export type IUpdate = {
    /** If provided, updates the payment method. */
    payment_method?: string;

    /** If provided, updates the payment amount. */
    amount?: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** If provided, updates the payment currency. */
    currency?: string;

    /** New status for the payment (e.g., after success, fail, refund, etc). */
    status?: string;

    /** If provided, updates the external payment reference. */
    external_reference?: string | null;

    /** If set, marks the payment as completed at this time. */
    completed_at?: (string & tags.Format<"date-time">) | null;

    /** If set, marks the payment as failed at this time. */
    failed_at?: (string & tags.Format<"date-time">) | null;

    /** If set, marks the payment as cancelled at this time. */
    cancelled_at?: (string & tags.Format<"date-time">) | null;
  };
}
