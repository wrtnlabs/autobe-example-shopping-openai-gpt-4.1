import { tags } from "typia";

/**
 * A cart item within a shopping cart, representing a product or variant, with
 * quantity and snapshot option data, as defined in shopping_mall_cart_items
 * Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCartItem = {
  /** Primary Key. Unique identifier for the cart item. */
  id: string & tags.Format<"uuid">;

  /** Parent cart id (foreign key to shopping_mall_carts). */
  shopping_mall_cart_id: string & tags.Format<"uuid">;

  /** Associated product id. */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /**
   * Selected variant ID (nullable), reference to
   * shopping_mall_product_variants.
   */
  shopping_mall_product_variant_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /** Quantity selected for this item. */
  quantity: number & tags.Type<"int32">;

  /** Serialized snapshot of selected options for evidence/audit. */
  option_snapshot: string;

  /** Cart item creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp for historical tracking. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCartItem {
  /**
   * DTO for advanced querying, filtering, and pagination of items within a
   * cart. Used to allow business logic to retrieve subsets of cart items by
   * filter, segment, or page view. Does not directly reflect DB schema;
   * enables advanced RESTful API list semantics.
   */
  export type IRequest = {
    /** Filter cart items by specific product ID. */
    shopping_mall_product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter by specific product variant ID if present (nullable for base
     * product items).
     */
    shopping_mall_product_variant_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** If set, only cart items created after this time are returned. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** If set, only cart items created before this time are returned. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Maximum number of items to return per page (pagination limit). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Page number for pagination (starts at 1). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Order by field (e.g., 'created_at DESC', 'quantity ASC'). Backend
     * validates allowed values.
     */
    sort?: string | undefined;
  };

  /**
   * Fields required to create a new shopping cart item; must reference
   * product, quantity, and snapshot. Variant is nullable and optional. Maps
   * to shopping_mall_cart_items (creation variant).
   */
  export type ICreate = {
    /** Target product id to be added to cart. */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /** Selected product variant id. Nullable if not using variant. */
    shopping_mall_product_variant_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Requested quantity for cart item. */
    quantity: number & tags.Type<"int32">;

    /** Snapshot of selected options at time of cart addition. */
    option_snapshot: string;
  };

  /**
   * Fields for updating an existing cart item; all optional fields,
   * supporting partial modification. Typically, only quantity, variant, or
   * option snapshot will be updated.
   */
  export type IUpdate = {
    /** New product variant id if changing variant. Nullable. */
    shopping_mall_product_variant_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Update to the requested quantity. */
    quantity?: (number & tags.Type<"int32">) | undefined;

    /**
     * Updated JSON snapshot of selected options (for evidence, after
     * option/variant change).
     */
    option_snapshot?: string | undefined;
  };
}
