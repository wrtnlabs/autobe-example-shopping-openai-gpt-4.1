import { tags } from "typia";

/**
 * Schema representing a product record in ai_commerce_products, reflecting all
 * business, pricing, inventory, and status fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceProduct = {
  /** Unique identifier of the product. */
  id: string & tags.Format<"uuid">;

  /** Seller's unique identifier. */
  seller_id: string & tags.Format<"uuid">;

  /** Store unique identifier where product is listed. */
  store_id: string & tags.Format<"uuid">;

  /** Business/SKU code for this product, unique in the system. */
  product_code: string;

  /** Product display name. */
  name: string;

  /** Product long-form description/content. */
  description: string;

  /** Product lifecycle/status (e.g., active, draft, suspended, discontinued). */
  status: string;

  /**
   * Operational/business workflow status (e.g., pending_approval,
   * compliance_hold).
   */
  business_status: string;

  /** The current price of the product. */
  current_price: number;

  /** Current inventory stock count for product. */
  inventory_quantity: number & tags.Type<"int32">;

  /** Timestamp for product creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last product update. */
  updated_at: string & tags.Format<"date-time">;

  /** If soft deleted, timestamp of deletion; null otherwise. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceProduct {
  /**
   * Schema for product search/listing requests, supporting advanced
   * filtering, pagination, and sorting.
   */
  export type IRequest = {
    /** (optional) Filter products by name (supports partial match). */
    name?: string | undefined;

    /**
     * (optional) Filter by product listing status (e.g., 'active', 'draft',
     * 'paused').
     */
    status?: string | undefined;

    /** (optional) Restrict to products belonging to this seller. */
    seller_id?: (string & tags.Format<"uuid">) | undefined;

    /** (optional) Restrict to products at this store. */
    store_id?: (string & tags.Format<"uuid">) | undefined;

    /** (optional) Restrict to products in this category. */
    category_id?: (string & tags.Format<"uuid">) | undefined;

    /** (optional) Minimum product price for price range filtering. */
    min_price?: number | undefined;

    /** (optional) Maximum product price for price range filtering. */
    max_price?: number | undefined;

    /** (optional) Page number for pagination, defaults to 1. */
    page?:
      | (number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>)
      | undefined;

    /** (optional) Page size for pagination, defaults to 20. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Default<20> & tags.Minimum<1>)
      | undefined;

    /**
     * (optional) Field by which to sort (e.g., 'name', 'price',
     * 'created_at').
     */
    sort_by?: string | undefined;

    /** (optional) Sorting direction, 'asc' or 'desc'. */
    sort_order?: "asc" | "desc" | undefined;
  };

  /**
   * Schema for creating a new ai_commerce_products record. All fields are
   * required on creation per the business and regulatory logic.
   */
  export type ICreate = {
    /** The unique seller ID who owns the product. */
    seller_id: string & tags.Format<"uuid">;

    /** Unique store identifier for context. */
    store_id: string & tags.Format<"uuid">;

    /** Unique SKU/business code for the product. */
    product_code: string;

    /** Product name, mandatory. */
    name: string;

    /** Product description, long-text. */
    description: string;

    /** Product workflow status (e.g., draft, active, paused, etc). */
    status: string;

    /**
     * Operational business status at creation (e.g., pending_approval,
     * compliance_hold).
     */
    business_status: string;

    /** Initial/current price for product. */
    current_price: number;

    /** Starting inventory/stock level. */
    inventory_quantity: number & tags.Type<"int32">;
  };

  /**
   * Update DTO for editing product business fields (all optional). Allows
   * partial updates of inventory, price, workflow status, assignment, and
   * other modifiable attributes, as supported by the ai_commerce_products
   * table. No ownership or creation fields may be updated.
   */
  export type IUpdate = {
    /** Update the business SKU/product code. Must be unique globally. */
    product_code?: string | undefined;

    /** Update product name/display label (localization handled externally). */
    name?: string | undefined;

    /** Update business/marketing description. */
    description?: string | undefined;

    /**
     * Update product listing/publish status (e.g., 'active', 'paused',
     * 'draft').
     */
    status?: string | undefined;

    /**
     * Update workflow or moderation status string (e.g.,
     * 'pending_approval').
     */
    business_status?: string | undefined;

    /** Update current display price (minimum = 0; enforced externally). */
    current_price?: number | undefined;

    /** Update the top-level inventory count (not variant-specific). */
    inventory_quantity?: (number & tags.Type<"int32">) | undefined;

    /**
     * Update target store this product belongs to. Must match
     * ai_commerce_stores.id.
     */
    store_id?: (string & tags.Format<"uuid">) | undefined;

    /** Mark product as soft-deleted (timestamp) or restore (null). */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Update modified timestamp (ISO8601 string with timezone). Optional;
     * usually set by backend.
     */
    updated_at?: string | undefined;
  };

  /**
   * Summary view of key product information for listings, catalog management,
   * and analytics.
   *
   * Lists essential product facts for performance, compliance, and business
   * display scenarios.
   */
  export type ISummary = {
    /**
     * Unique identifier for the product (primary key @id in
     * ai_commerce_products).
     */
    id: string & tags.Format<"uuid">;

    /** Product SKU or business code (must be globally unique). */
    product_code: string;

    /** Display name/title of the product. */
    name: string;

    /**
     * Product listing status (draft, active, paused, suspended,
     * discontinued, deleted).
     */
    status: string;

    /** Current display price for this product. */
    current_price: number;

    /** Available inventory at the product level (not variant specific). */
    inventory_quantity: number & tags.Type<"int32">;

    /** Timestamp for product creation. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp of the last product update. */
    updated_at: string & tags.Format<"date-time">;
  };
}
