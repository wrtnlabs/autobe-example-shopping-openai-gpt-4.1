import { tags } from "typia";

/**
 * Detailed board entity for bulletin/Q&A/review system.
 *
 * Represents all business, audit, and configuration fields for a bulletin board
 * used by customers, sellers, admins for posts, inquiries, or reviews. Board
 * configuration and role/visibility logic are enforced using the fields above.
 * Most fields correspond directly to DB columns in shopping_mall_boards table;
 * see schema for exact details.
 *
 * ID, channel reference, title, visibility, moderation_required,
 * created/updated timestamps are always required. Fields like section ID, board
 * description, expiry setting, or deletion status may be null or omitted
 * depending on board type and business configuration.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallBoard = {
  /**
   * Board primary key (UUID).
   *
   * This is the system-unique identifier for the board entity.
   */
  id: string & tags.Format<"uuid">;

  /** Reference to the parent channel (shopping_mall_channels.id). */
  shopping_mall_channel_id: string & tags.Format<"uuid">;

  /**
   * Reference to the parent mall section (shopping_mall_sections.id), if
   * present for section-specific boards.
   */
  shopping_mall_section_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Board display name/title, visible to all roles. */
  title: string;

  /**
   * Optional explanation or purpose of the board, typically
   * Markdown-supported.
   */
  description?: string | null | undefined;

  /**
   * Board visibility scope. Allowed values: public, private,
   * channel-restricted, section-restricted.
   *
   * This field controls read access enforcement for the board. Should match
   * the enum options in the DB schema.
   */
  visibility: string;

  /**
   * Whether all posts on this board require moderation prior to publication.
   *
   * If true, new posts will be set to a pending moderation state.
   */
  moderation_required: boolean;

  /**
   * The number of days until posts are auto-archived/expire from user view.
   * Null if no expiry is set.
   */
  post_expiry_days?: (number & tags.Type<"int32">) | null | undefined;

  /** Timestamp (ISO 8601) when the board entity was created. */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) of the board's most recent update, including
   * configuration/visibility/relationship changes.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp (null if board is currently active). During a
   * soft-delete, the record is retained for audit/evidence.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallBoard {
  /**
   * Advanced filtering, search, and pagination DTO for board list endpoints.
   *
   * Allows complex search scenarios, partial matching, and flexible
   * pagination of board entities in the modular mall backend. See property
   * description for field format and business logic. All fields are optional;
   * defaults will be handled in controller/provider logic.
   */
  export type IRequest = {
    /**
     * Filter boards by channel ID. Used to return only boards belonging to
     * the specified channel.
     */
    shopping_mall_channel_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Filter boards by section ID. Returns only boards belonging to this
     * section, if supplied.
     */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Board visibility filter. Use values defined in the visibility enum
     * (e.g., public, private, channel-restricted, section-restricted).
     */
    visibility?: string | null | undefined;

    /**
     * If true, only boards requiring moderation of all posts are returned.
     * If false, returns boards that do not require moderation.
     */
    moderation_required?: boolean | null | undefined;

    /**
     * Filter boards by (partial) title match. Supports case-insensitive
     * search and typically used with 'ILIKE' or fulltext queries.
     */
    title?: string | null | undefined;

    /**
     * Filter boards by description field, supporting partial search for
     * documentation, explainers, or functional area.
     */
    description?: string | null | undefined;

    /**
     * Return boards created at or after this datetime (ISO 8601 format).
     * Temporal filter supporting advanced search workflows.
     */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Return boards created at or before this datetime. Use with
     * created_from for date range export/search.
     */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter logic for logically deleted boards. If true, only soft-deleted
     * boards returned (deleted_at not null). If false or omitted, only
     * active boards are returned.
     */
    deleted?: boolean | null | undefined;

    /**
     * Page number for pagination (1-based index). If not provided or null,
     * defaults to 1.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Maximum number of items per page (default 20, max 100). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /**
     * Sorting field (e.g., name, created_at, display_order). Enum values
     * depend on board schema; must match an indexed column.
     */
    sort_by?: string | null | undefined;

    /** Sorting order (ascending/descending). Can only be 'asc' or 'desc'. */
    sort_order?: "asc" | "desc" | null | undefined;
  };

  /**
   * DTO for creating a new board entity.
   *
   * Enforces required fields for placement (channel_id), display (title),
   * role/access (visibility), and default moderation policy. Section ID,
   * board description, and post expiry window are optional. See schema and
   * business documentation for logic on enum values and expected
   * combinations.
   *
   * Compliance: only admins or authorized users can create new boards. Unique
   * constraints (channel-section-title) enforced at DB level. Created/updated
   * timestamps are managed at persistence time; not included here.
   */
  export type ICreate = {
    /**
     * Channel ID for board placement (shopping_mall_channels.id). Required
     * for all board creation.
     */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /**
     * Section ID for this board (shopping_mall_sections.id). Optional. For
     * section-level boards, supply this field.
     */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Board display name/title, unique within channel/section as per DB
     * constraint.
     */
    title: string;

    /**
     * Optional board description or documentation. Markdown or plain text
     * supported.
     */
    description?: string | null | undefined;

    /**
     * Board visibility setting. Acceptable enum values: public, private,
     * channel-restricted, section-restricted.
     *
     * Controls default read access after creation. Role/controller logic
     * must enforce policy.
     */
    visibility: string;

    /**
     * Flag indicating if all posts to this board require moderation before
     * being shown publicly.
     *
     * If true, all create post requests will go into pending moderation
     * queue.
     */
    moderation_required: boolean;

    /**
     * Optional setting for board-level post expiry/auto-archival (in days).
     * Null or absent for no expiry.
     */
    post_expiry_days?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Update DTO for bulletin board configuration.
   *
   * Allows editing of board display, moderation policy, visibility rules, and
   * post expiry logic. Used by administrators to maintain and reconfigure
   * boards according to business or compliance needs.
   */
  export type IUpdate = {
    /**
     * Display title of the bulletin board.
     *
     * Used for end-user and administration UIs. Must be unique per channel.
     * Titles enable users to understand a boardâ€™s purpose and context
     * immediately during navigation.
     */
    title?: string | undefined;

    /**
     * Business description and Markdown-supported detailed documentation of
     * the board's operation and target audience.
     *
     * Intended for admins when editing or auditing board configuration.
     * Explains the business rules, target posting use-cases, and policy
     * details.
     */
    description?: string | undefined;

    /**
     * Defines who may access/read/write the board. Typical values include:
     * public, private, channel, section, registered-users.
     */
    visibility?: string | undefined;

    /**
     * If true, posts in this board require moderator/admin approval before
     * publication.
     *
     * Enables stricter content controls for boards with legal/compliance or
     * brand sensitivity.
     */
    moderation_required?: boolean | undefined;

    /**
     * Retention policy for posts in this board, in days (if any).
     *
     * Value is null for unlimited. When set, posts after expiry are
     * archived or hidden based on business logic.
     */
    post_expiry_days?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary DTO for a bulletin board (shopping_mall_boards table). Used in
   * listing pages, search/filter UIs, or audit exports. Contains visible
   * attributes for overview and navigation, with necessary business and audit
   * fields.
   */
  export type ISummary = {
    /**
     * Unique identifier for the board (shopping_mall_boards.id). Used for
     * navigation and audit referencing.
     */
    id: string & tags.Format<"uuid">;

    /**
     * UUID of the channel to which this board belongs. Direct linkage to
     * shopping_mall_channels and used for channel-specific filtering or
     * hierarchy.
     */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /**
     * Section UUID (or null) if the board is not section-scoped. Links to
     * shopping_mall_sections for advanced filtering or hierarchy/browsing.
     */
    shopping_mall_section_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Display name/title of the board as shown in the UI and navigation. */
    title: string;

    /**
     * Board description as rich text or Markdown. Nullable per schema for
     * flexibility.
     */
    description?: string | null | undefined;

    /**
     * Visibility of the board: 'public', 'private', 'channel-restricted',
     * or 'section-restricted'. Enum per business/content policy.
     */
    visibility: string;

    /**
     * Indicates if posts require moderation before publication. Used for UI
     * and workflow logic.
     */
    moderation_required: boolean;

    /**
     * Integer (nullable) defining if/when posts on the board are
     * auto-archived/expire. Null for indefinitely persistent boards. Used
     * by automated clean-up and aging features.
     */
    post_expiry_days?: (number & tags.Type<"int32">) | null | undefined;

    /** Creation datetime for board audit/history (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /** Datetime of last update (ISO8601). */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Datetime of soft-delete for the board (ISO8601/null). Used to filter
     * out inactive/removed boards in listings.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
