import { tags } from "typia";

/**
 * User connection/session record. Tracks login/logout/IP/device metadata for
 * business, compliance, security, and analytics scenarios. Corresponds to
 * shopping_mall_user_connections table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallUserConnection = {
  /** Primary Key. Unique identifier for the user connection/session record. */
  id: string & tags.Format<"uuid">;

  /**
   * Associated actor's id; refers to customer, seller, or admin depending on
   * session context. Foreign reference tracked at application logic level.
   */
  actor_id: string & tags.Format<"uuid">;

  /** Actor type (customer, seller, admin); string discriminator for role. */
  actor_type: string;

  /** Channel context for this connection (UUID). */
  channel_id: string & tags.Format<"uuid">;

  /** Remote IP address of the session (IPv4/IPv6 literal). */
  ip_address: string;

  /**
   * User agent string of browser/app/device; records client agent for
   * session/event. May be null for non-standard agents.
   */
  user_agent?: string | null | undefined;

  /** Datetime of login/session establishment (ISO-8601 UTC). */
  login_at: string & tags.Format<"date-time">;

  /** Datetime of logout/session end if known; null if session is current/open. */
  logout_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Auth context meta (e.g., how login was performed: password, OAuth, role,
   * device/2FA).
   */
  auth_context: string;

  /** Record creation timestamp (UTC ISO-8601). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallUserConnection {
  /**
   * DTO used for advanced search and filtering of user connection/session
   * records (shopping_mall_user_connections). Allows complex queries for
   * session retrieval, audit, and analytics.
   */
  export type IRequest = {
    /**
     * (Optional) Filter: actor's unique ID (customer, seller, or admin
     * UUID). Enables search for sessions by specific actor.
     */
    actor_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * (Optional) Filter: actor type (customer, seller, admin). Limits
     * session search to a specific user type.
     */
    actor_type?: string | null | undefined;

    /**
     * (Optional) Filter: channel context (UUID) for which the
     * connection/session occurred.
     */
    channel_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * (Optional) Filter: IP address. Returns sessions by IP address match
     * (supports analytics, fraud investigation).
     */
    ip_address?: string | null | undefined;

    /** (Optional) Filter: User agent string (browser/app info). */
    user_agent?: string | null | undefined;

    /** (Optional) Filter: lower bound of login date/time window (ISO8601). */
    login_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** (Optional) Filter: upper bound of login date/time window (ISO8601). */
    login_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** (Optional) Filter: lower bound of logout date/time window (ISO8601). */
    logout_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** (Optional) Filter: upper bound of logout date/time window (ISO8601). */
    logout_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * (Optional) Filter: authentication context (e.g., password,
     * OAuth/google/apple, device).
     */
    auth_context?: string | null | undefined;

    /** (Optional) Pagination: page number (1-based). */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** (Optional) Pagination: number of records to return per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Payload for updating a user connection/session record
   * (shopping_mall_user_connections table). Allows amendment or annotation of
   * metadata for compliance, device labeling, risk scoring, or session
   * context tracking. Only properties explicitly defined in the schema can be
   * updated.
   */
  export type IUpdate = {
    /**
     * User agent string (browser/app/device info) for the connection
     * session. Optional, and set for device risk analytics and session
     * management. May be updated for annotation, compliance, or security
     * review purposes.
     */
    user_agent?: string | null | undefined;

    /**
     * Authentication context: how this connection was authenticated. E.g.,
     * 'password', 'oauth/google', 'role:customer', 'device/2fa'. Updatable
     * for audit trail, risk management, or to support explanation of
     * session review. Should match the method by which the user established
     * the session.
     */
    auth_context?: string | undefined;
  };

  /**
   * Summary for user session/connection. Based on
   * shopping_mall_user_connections. Used in paginated audit logs or device
   * session listings.
   */
  export type ISummary = {
    /**
     * Primary Key. Connections table unique ID. Prisma:
     * shopping_mall_user_connections.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * Associated actor's id; refers to customer, seller, or admin. Prisma:
     * shopping_mall_user_connections.actor_id
     */
    actor_id: string & tags.Format<"uuid">;

    /**
     * Discriminator: 'customer', 'seller', 'admin'. Prisma:
     * shopping_mall_user_connections.actor_type
     */
    actor_type: string;

    /**
     * Channel context for this connection. Prisma:
     * shopping_mall_user_connections.channel_id
     */
    channel_id: string & tags.Format<"uuid">;

    /** Remote IP address. Prisma: shopping_mall_user_connections.ip_address */
    ip_address: string;

    /**
     * Datetime of login/session establishment. Prisma:
     * shopping_mall_user_connections.login_at
     */
    login_at: string & tags.Format<"date-time">;

    /**
     * Nullable. Logout/session end time. Prisma:
     * shopping_mall_user_connections.logout_at
     */
    logout_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
