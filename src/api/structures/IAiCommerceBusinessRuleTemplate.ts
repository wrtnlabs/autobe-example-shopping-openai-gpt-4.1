import { tags } from "typia";

/**
 * Persistent entity for system business rule templates.
 *
 * Represents a complete business rule template as persisted in
 * ai_commerce_business_rule_templates. Critical to platform
 * automation/approval/migration. All attributes strictly conform to business
 * schema requirements and system documentation for auditability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceBusinessRuleTemplate = {
  /**
   * Unique identifier for the business rule template (UUID), mapped from
   * ai_commerce_business_rule_templates.id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business rule template code for reference, automation, and
   * migration.
   */
  code: string;

  /** Template display name, used in selection and admin dialogs. */
  name: string;

  /**
   * Semantic version number (whole integer) for tracking rule template
   * revisions across business and compliance cycles.
   */
  version: number & tags.Type<"int32">;

  /**
   * Serialized business rule or configuration data. Must conform to the
   * platform's rule DSL, JSON, or YAML conventions.
   */
  template_data: string;

  /**
   * Current workflow/business status ('active', 'retired', 'archived', etc.),
   * critical for automation and admin workflow.
   */
  business_status: string;

  /** When this template was first authored (ISO 8601 date-time string). */
  created_at: string & tags.Format<"date-time">;

  /**
   * Most recent business/technical update to the template (ISO 8601 date-time
   * string).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp, or null if active. All deleted templates are
   * retained for evidence, migration, and compliance per system rules.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceBusinessRuleTemplate {
  /**
   * Parameters for list/search of business rule template records, supporting
   * advanced search, filter and paging; all optional.
   */
  export type IRequest = {
    /** Full-text/keyword search through code/name data fields */
    search?: string | undefined;

    /** Filter by workflow/approval status */
    business_status?: string | undefined;

    /** Field to sort search results, such as 'updated_at' */
    sort_by?: string | undefined;

    /** Pagination start page */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Records returned per page */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary metadata for a business rule template. Useful for list/admin UIs
   * and audit dashboards; covers core identification, workflow status, and
   * audit fields only.
   */
  export type ISummary = {
    /** Unique identifier of the business rule template. */
    id: string & tags.Format<"uuid">;

    /** Code identifying this rule template for API or management references. */
    code: string;

    /** Human-readable name of the rule template. */
    name: string;

    /** Version number for audit/version control purposes. */
    version: number & tags.Type<"int32">;

    /**
     * Workflow status for the rule template (e.g., 'active', 'retired',
     * 'pending').
     */
    business_status: string;

    /** When the rule template was created. */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp for evidence/versioning. */
    updated_at: string & tags.Format<"date-time">;
  };

  /**
   * Update type for modifying rule template; all fields optional for
   * PATCH/PUT.
   */
  export type IUpdate = {
    /** Change template display name */
    name?: string | undefined;

    /** Update rule configuration data */
    template_data?: string | undefined;

    /** New version/iteration number to increment rule */
    version?: (number & tags.Type<"int32">) | undefined;

    /** Update workflow/approval state */
    business_status?: string | undefined;
  };
}
