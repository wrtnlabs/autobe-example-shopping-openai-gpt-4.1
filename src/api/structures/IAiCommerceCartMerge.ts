import { tags } from "typia";

/**
 * Schema for ai_commerce_cart_merges record, capturing merge event evidence,
 * actors, and reason.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCartMerge = {
  /** Primary key for cart merge record. */
  id: string & tags.Format<"uuid">;

  /** Reference to the source cart (merged from). */
  source_cart_id: string & tags.Format<"uuid">;

  /** Reference to the target cart (merged to; this survives post-merge). */
  target_cart_id: string & tags.Format<"uuid">;

  /** Buyer or admin who initiated the cart merge. Nullable if automated. */
  actor_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Business code, e.g. 'login_merge', 'device_switch', attached as
   * justification for the merge.
   */
  reason: string;

  /**
   * Timestamp the cart merge operation took place (ISO 8601 format, UTC
   * timezone).
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IAiCommerceCartMerge {
  /**
   * Search, sorting, and pagination parameters for querying
   * ai_commerce_cart_merges records. All fields are optional.
   */
  export type IRequest = {
    /** (Optional) ID of the source cart (merged from). */
    source_cart_id?: (string & tags.Format<"uuid">) | undefined;

    /** (Optional) ID of the target cart (merged to). */
    target_cart_id?: (string & tags.Format<"uuid">) | undefined;

    /** (Optional) Buyer (user) or admin who initiated the merge. */
    actor_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Business reason for the merge filtering/search, e.g.
     * 'login_merge', 'device_switch'.
     */
    reason?: string | undefined;

    /**
     * (Optional) Start date for searching merge records (inclusive). ISO
     * 8601 format.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) End date for searching merge records (inclusive). ISO 8601
     * format.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** (Optional) Page number for pagination (starting from 1). */
    page?:
      | (number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>)
      | undefined;

    /** (Optional) Records per page for pagination (max 100). */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;

    /**
     * (Optional) Which field to sort result by. Only 'created_at'
     * supported.
     */
    sort?: "created_at" | undefined;

    /** (Optional) Sort order for pagination. Accepts 'asc' or 'desc'. */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Payload to create a new ai_commerce_cart_merges record with references,
   * reason, and audit actor.
   */
  export type ICreate = {
    /** ID of the cart being merged FROM (discarded after merge). Required. */
    source_cart_id: string & tags.Format<"uuid">;

    /** ID of the cart being merged TO (receives merged contents). Required. */
    target_cart_id: string & tags.Format<"uuid">;

    /**
     * (Optional) Buyer or admin who performed the merge. Nullable if
     * system/automated.
     */
    actor_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Required reason code for merge, e.g. 'login_merge', 'device_switch',
     * 'admin_action'. Required.
     */
    reason: string;
  };

  /**
   * Payload to update annotatable (business note, flags) fields for a cart
   * merge. Immutable historic fields such as actor, cart IDs, and reason MAY
   * NOT be updated. Only non-core, auxiliary business fields are permitted
   * for modification. Designed for admin/audit curation.
   */
  export type IUpdate = {
    /**
     * Optional business notes or internal remarks related to the cart
     * merge.
     */
    business_notes?: string | undefined;

    /**
     * Optional investigation flag for alerting, escalation, or advanced
     * audit processes.
     */
    investigation_flag?: boolean | undefined;
  };

  /**
   * Summary view of a cart merge event for use in paginated listings,
   * analytics, or admin search results. Contains only essential identifying
   * and event information.
   */
  export type ISummary = {
    /** Primary key for the cart merge event (UUID). */
    id: string & tags.Format<"uuid">;

    /** Source cart being merged from (discarded after merge). */
    source_cart_id: string & tags.Format<"uuid">;

    /** Target cart which receives contents and persists. */
    target_cart_id: string & tags.Format<"uuid">;

    /**
     * Business code or reason for the merge, such as 'login_merge',
     * 'device_switch', or similar event type.
     */
    reason: string;

    /** Timestamp of merge event (ISO8601 UTC). */
    created_at: string & tags.Format<"date-time">;
  };
}
