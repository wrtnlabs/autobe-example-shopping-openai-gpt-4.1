import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Buyer type (public context for response/session). Only includes business-safe
 * fields for client or frontend session state. No hashes, credentials, or
 * sensitive backend attributes. Usage: IAuthorized response.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceBuyer = {
  /**
   * Unique database identifier for buyer. Corresponds to
   * ai_commerce_buyer.id. For public/response use only.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Buyer's registered email address (business/public). Used for
   * notifications, receipt, and identity confirmation. Only shown in safe
   * contexts; never reveal hash or sensitive credential info.
   */
  email: string & tags.Format<"email">;

  /** Discriminator for role type. Always 'buyer' for this entity/context. */
  role: "buyer";
};
export namespace IAiCommerceBuyer {
  /**
   * Authorization response for buyer authentication operations
   * (login/join/refresh). Contains buyer id, JWT tokens (access/refresh), and
   * minimal buyer context for session setup. Corresponds to OpenAPI response
   * for buyer auth endpoints. Follows security best practice by including
   * only non-sensitive information.
   */
  export type IAuthorized = {
    /**
     * The unique identifier of the buyer account, matching
     * ai_commerce_buyer.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Buyer's registered email address (business/public). Used for
     * notifications, receipt, and identity confirmation. Only shown in safe
     * contexts; never reveal hash or sensitive credential info.
     */
    email: string & tags.Format<"email">;

    /** Discriminator for role type. Always 'buyer' for this entity/context. */
    role: "buyer";

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /**
     * Non-sensitive buyer context for session setup, suitable for frontend
     * or downstream use. Only public/user-facing fields are included.
     */
    buyer?: IAiCommerceBuyer | undefined;
  };
}
