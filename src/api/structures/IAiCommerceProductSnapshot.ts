import { tags } from "typia";

/**
 * Immutable, append-only snapshot of product state for audit, compliance, or
 * rollback. Matches ai_commerce_product_snapshots schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceProductSnapshot = {
  /** Unique identifier for the product snapshot. */
  id: string & tags.Format<"uuid">;

  /** UUID of the parent product whose state was snapshotted. */
  product_id: string & tags.Format<"uuid">;

  /**
   * Event that triggered the snapshot (such as 'create', 'update',
   * 'price_change', etc.).
   */
  event_type: string;

  /** ID of the user/admin who triggered the snapshot event. */
  actor_id: string & tags.Format<"uuid">;

  /** Serialized JSON snapshot of the full product state at this point in time. */
  snapshot_json: string;

  /** Timestamp when this snapshot was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IAiCommerceProductSnapshot {
  /**
   * Search and pagination query for fetching product snapshots
   * (ai_commerce_product_snapshots). Use filters and pagination to locate
   * desired records.
   */
  export type IRequest = {
    /** Product ID to filter snapshots. Optional. */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter by event type (e.g., 'create', 'update', 'compliance_review').
     * Optional.
     */
    event_type?: string | undefined;

    /**
     * Filter snapshots by the actor (user/admin) who triggered the event.
     * Optional.
     */
    actor_id?: (string & tags.Format<"uuid">) | undefined;

    /** Page number for pagination. Optional. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of entries per page for pagination. Optional. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };
}
