import { tags } from "typia";

/**
 * Represents a single structured content entry (description, spec, etc.) for a
 * product as defined by ai_commerce_product_contents. Used for full detail
 * display, editing, or UI navigation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceProductContent = {
  /**
   * Unique identifier of the product content record from
   * ai_commerce_product_contents.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the product this content is associated with. References
   * ai_commerce_products.id.
   */
  product_id: string & tags.Format<"uuid">;

  /**
   * Type of product content, e.g., 'description', 'detail', 'spec', 'how_to',
   * as defined in the business logic or UIs. Must not exceed schema limits.
   */
  content_type: string;

  /**
   * Format of the content, e.g., 'markdown', 'html', 'plain_text' as
   * supported by schema. Must be consistent with input.
   */
  format: string;

  /**
   * Optional locale code (BCP 47, e.g., en-US, ko-KR) for localization. Null
   * or omitted for the product's default language.
   */
  locale?: string | null | undefined;

  /**
   * Text or rich content to be displayed for this product section. Must not
   * exceed content length limits imposed by schema or UI.
   */
  content_body: string;

  /**
   * Integer for ordering this content within the product. Used to sequence
   * blocks in UI or detail pages.
   */
  display_order: number & tags.Type<"int32">;
};
export namespace IAiCommerceProductContent {
  /**
   * Request query body for searching, filtering, and paginating product
   * content records. Follows IAiCommerceProductContent.IRequest TypeScript
   * namespace.
   */
  export type IRequest = {
    /**
     * UUID of the product to filter content for. References
     * ai_commerce_products.id. Optional in admin/global queries.
     */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter content records to a specific content_type (e.g.,
     * 'description', 'spec'). Optional.
     */
    content_type?: string | undefined;

    /**
     * Filter by content format, such as 'markdown', 'html', 'plain_text'.
     * Optional.
     */
    format?: string | undefined;

    /**
     * Restrict to a specific locale/BCP 47 tag (e.g., 'en-US'). Optional;
     * if omitted, returns all locales.
     */
    locale?: string | undefined;

    /**
     * Full-text search string to filter content body or meta fields.
     * Optional.
     */
    search?: string | undefined;

    /**
     * Page index for pagination result set. Optional; default varies by
     * implementation.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records to return per page. Optional; default
     * varies by implementation.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Field name to sort results by (e.g., 'display_order',
     * 'content_type'). Optional.
     */
    sortBy?: string | undefined;

    /**
     * Sort direction for ordering (ascending or descending). Only 'asc' or
     * 'desc' allowed. Optional; default is implementation-defined.
     */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * DTO for creating a new product content record. Used for POST
   * /products/{productId}/contents. Only the properties listed here may be
   * used when creating new content records.
   */
  export type ICreate = {
    /**
     * Type of content block for the product (e.g., 'description', 'detail',
     * 'spec', 'instruction', etc.). Must follow the available content types
     * defined in the business logic or configuration. See
     * ai_commerce_product_contents.content_type for reference.
     */
    content_type: string;

    /**
     * Format for this content block (e.g., 'html', 'markdown',
     * 'plain_text'). See ai_commerce_product_contents.format.
     */
    format: string;

    /**
     * Language/region code for this content, such as 'en-US', 'ko-KR', etc.
     * May be null for default.
     */
    locale?: string | null | undefined;

    /**
     * The actual content data. Maximum 10,000 characters. See
     * ai_commerce_product_contents.content_body.
     */
    content_body: string;

    /**
     * Order (ascending) for display of this content among contents for the
     * same product. See ai_commerce_product_contents.display_order.
     */
    display_order: number & tags.Type<"int32">;
  };

  /**
   * DTO for updating a product content record. Used for PUT
   * /products/{productId}/contents/{contentId}. All properties are optional
   * and may be sent for partial updates.
   */
  export type IUpdate = {
    /** Type of content block for the product (see create DTO). */
    content_type?: string | undefined;

    /** Format for this content block (see create DTO). */
    format?: string | undefined;

    /** Language/region code or null to default. */
    locale?: string | null | undefined;

    /** The updated content data. Up to 10,000 characters. */
    content_body?: string | undefined;

    /** New display order value. */
    display_order?: (number & tags.Type<"int32">) | undefined;
  };
}
