import { tags } from "typia";

/**
 * Full business and audit representation for a bulletin board post.
 *
 * Contains all required fields for business logic, moderation, evidence, and
 * relationship context (product, order, thread). Used for full detail render,
 * moderation, and analytics in board/post UIs. This type is directly mapped to
 * DB and all update/create operations must use properties from the Prisma
 * schema only.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallBoardPost = {
  /**
   * Primary key for the board post.
   *
   * Unique UUID identifier for referencing board posts from business logic,
   * reply threading, and moderation workflows.
   */
  id: string & tags.Format<"uuid">;

  /** Relation to owning board. References 'shopping_mall_boards.id'. */
  shopping_mall_board_id: string & tags.Format<"uuid">;

  /**
   * If the post author is a customer, this field links to their customer ID.
   * Nullable if another role created the post.
   */
  shopping_mall_customer_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * If the post author is a seller, references their seller ID. Nullable if
   * another role created the post.
   */
  shopping_mall_seller_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * If the post was authored by an admin, contains the admin's ID. Nullable
   * for non-admin posts.
   */
  shopping_mall_admin_id?: (string & tags.Format<"uuid">) | undefined;

  /** Parent post for reply/threading. Null for root thread; set for replies. */
  shopping_mall_parent_post_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * If linked to a specific product (e.g., review, Q&A), reference its
   * product ID.
   */
  shopping_mall_product_id?: (string & tags.Format<"uuid">) | undefined;

  /** If related to a specific order, holds the order's ID (nullable). */
  shopping_mall_order_id?: (string & tags.Format<"uuid">) | undefined;

  /** Post or thread title as seen in UIs or advanced business search. */
  title?: string | undefined;

  /**
   * Main content of the post. Markdown or HTML supported according to
   * business rules. Full content is provided here for display/moderation.
   */
  body: string;

  /** Depth in reply/thread structure (0=main post, 1=first-level reply, etc.). */
  reply_level: number & tags.Type<"int32">;

  /**
   * If true, this post is an official answer by a seller or admin (e.g.,
   * product Q&A, moderation response).
   */
  is_official_answer: boolean;

  /**
   * Defines access rules; can be values like public, private,
   * registered-only, depending on business needs.
   */
  visibility: string;

  /**
   * Current moderation review state (e.g., pending, approved, denied, flagged
   * for review).
   */
  moderation_status: string;

  /**
   * If moderation_status is not 'approved', detail for reviewer decision or
   * business context.
   */
  moderation_reason?: string | undefined;

  /** Post creation timestamp in ISO 8601 format. */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update time for the post. Used for displaying edit state or
   * analytics.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for logical deletion (null if not deleted). When set, post is
   * soft-deleted; still retained for audit/evidence purposes.
   */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IShoppingMallBoardPost {
  /**
   * Advanced search/filter/query/request schema for board posts. Used to
   * paginate/filter/sort board posts in a listing API for moderation,
   * analytics, or business UI.
   *
   * Allows searching by author, content, reply depth, role, created window,
   * moderation status/visibility, and other advanced business rules.
   * Extensible for future business requirements.
   */
  export type IRequest = {
    /** The page number for pagination. Defaults to 1 if not provided. */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * How many posts per page to return. Defaults to system or board-level
     * default.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort order for post listing (e.g. created_at desc, reply_level asc,
     * etc).
     */
    sort?: string | undefined;

    /**
     * Advanced search or role-specific filter; may include moderation
     * status, author type, text search, or status.
     */
    filter?: string | undefined;

    /**
     * Filter posts by reply depth (0 = root thread, 1 = reply, 2+ nested
     * replies).
     */
    reply_level?: (number & tags.Type<"int32">) | undefined;

    /**
     * If set, filters posts to those created by a particular author type
     * (customer, seller, admin) according to the Actors event model.
     */
    author_type?: string | undefined;

    /**
     * Show only posts with a matching moderation state (e.g., approved,
     * denied, pending).
     */
    moderation_status?: string | undefined;

    /**
     * Show only posts matching a certain visibility classification. E.g.,
     * public, private to owner, etc.
     */
    visibility?: string | undefined;

    /** Restrict search to posts created after this ISO 8601 datetime. */
    created_after?: (string & tags.Format<"date-time">) | undefined;

    /** Restrict search to posts created before this ISO 8601 datetime. */
    created_before?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional search by post title (supports substring or similarity
     * search).
     */
    title?: string | undefined;

    /**
     * Optional search by post body/content (supports substring or
     * similarity search).
     */
    body?: string | undefined;
  };

  /**
   * Request DTO for creating a bulletin board post.
   *
   * Used in create (POST) operations, this schema sets required and optional
   * fields for posts on boardsâ€”thread, reply, moderation, and content
   * business rules enforced per schema and business requirements. Field
   * presence matches board configuration and system moderation policies.
   */
  export type ICreate = {
    /**
     * Target board's ID for this post. Required to anchor the post to a
     * bulletin board, supporting business and moderation context.
     */
    shopping_mall_board_id: string & tags.Format<"uuid">;

    /**
     * If this post is a reply, point to the parent post's ID. Null for root
     * threads or main topics.
     */
    shopping_mall_parent_post_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Title of the post/thread for advanced navigation and search. No title
     * is required for minor replies.
     */
    title?: string | undefined;

    /**
     * Main post content. Required for creation, Markdown or HTML syntax
     * permitted as per board settings.
     */
    body: string;

    /**
     * If true, marks this as an official answer (e.g., for Q&A boards,
     * moderation posts, admin/seller responses). Requires correct role for
     * submission.
     */
    is_official_answer: boolean;

    /**
     * Posting visibility (public, private, registered-only). Settable
     * according to user role and board configuration.
     */
    visibility: string;

    /**
     * Initial moderation state. Typically: pending, approved, or depends on
     * board moderation policy. Submission as 'pending' triggers moderation
     * flow, while 'approved' goes live immediately. Valid values are
     * subject to business configuration and role permissions.
     */
    moderation_status: string;

    /**
     * Optional initial moderation reason for posts being submitted into
     * moderation (e.g., moderation comment, submission rationale).
     */
    moderation_reason?: string | undefined;

    /**
     * If post links explicitly to a product (for Q&A, review, etc.),
     * reference product's ID.
     */
    shopping_mall_product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * If this post is associated with a specific order, set order ID
     * (nullable for non-order posts).
     */
    shopping_mall_order_id?: (string & tags.Format<"uuid">) | undefined;
  };

  /**
   * Update DTO for shopping mall board posts. Permits editing of body, title,
   * visibility, moderation status, and moderation reason. Title and
   * moderation_reason are nullable; body is required. Properties reflect
   * modifiable fields only per schema, and status options must follow
   * controlled values as required by moderation workflow/business logic.
   * Designed for multi-role editing (customer, seller, admin) with role- and
   * board-based field restrictions applied by provider logic.
   */
  export type IUpdate = {
    /**
     * Post or article title. Editable. Null means no title or not provided.
     * Must reflect actual business meaning per board context.
     */
    title?: string | null | undefined;

    /**
     * Main content body of the board post, supporting Markdown or HTML.
     * Business rules may apply for required/optional content, maximum
     * length, and permitted formats. Required for update; must follow
     * policy described in schema.
     */
    body: string;

    /**
     * Visibility of the post. Permitted values depend on board
     * configuration; e.g., 'public', 'registered-users', 'private', etc.
     * Defines which platform users may see the post.
     */
    visibility?: string | undefined;

    /**
     * Moderation workflow status. Controlled vocabulary such as 'pending',
     * 'approved', 'denied', etc. Platform rules may restrict which statuses
     * can be set on update. Use values from underlying Prisma
     * schema/business logic.
     */
    moderation_status?: string | undefined;

    /**
     * Optional explanation for moderation state. Provides context for
     * rejection, limitation, or feedback. Free-form string, null if not
     * applicable or not set.
     */
    moderation_reason?: string | null | undefined;
  };

  /**
   * Summary DTO for a bulletin board post (shopping_mall_board_posts).
   * Suitable for paginated/threaded lists or search, giving UI and audit
   * essentials. Contains trimmed content and navigational data for
   * overviews.
   */
  export type ISummary = {
    /**
     * Unique identifier of the board post, mapped to
     * shopping_mall_board_posts.id.
     */
    id: string & tags.Format<"uuid">;

    /** UUID of the parent board. */
    shopping_mall_board_id: string & tags.Format<"uuid">;

    /** Optional post title (may be null). Used in overviews or navigation. */
    title?: string | null | undefined;

    /**
     * Shortened version of the post body for list/summary views. Typically
     * truncated or generated from the main body for display in search/list
     * UIs.
     */
    body_summary?: string | undefined;

    /**
     * Threading level: 0 for starter/root post, increasing for each reply
     * depth. Used for UI indenting/nest visualization.
     */
    reply_level: number & tags.Type<"int32">;

    /**
     * True if this post is an official answer (by admin/seller). Important
     * for product Q&A work flows.
     */
    is_official_answer: boolean;

    /**
     * Access control: 'public', 'registered-users', 'private', etc. Enum
     * per board/policy.
     */
    visibility: string;

    /**
     * Current moderation state: 'pending', 'approved', 'denied', etc. Enum
     * from workflow.
     */
    moderation_status: string;

    /** Post creation datetime (ISO8601, UTC) for sorting and audit. */
    created_at: string & tags.Format<"date-time">;

    /** Last modification datetime for compliance and history (ISO8601, UTC). */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft-delete timestamp: indicates logical removal for evidence
     * retention. Null if active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
