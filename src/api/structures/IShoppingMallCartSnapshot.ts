import { tags } from "typia";

/**
 * Historical snapshot of a shopping cart instance for audit, compliance, and
 * evidence retention. Stores point-in-time state of cart with all items and
 * data before/after key changes, checkout, or deletion. Used for legal
 * compliance, rollback, and dispute scenarios. Corresponds to
 * shopping_mall_cart_snapshots table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCartSnapshot = {
  /** Primary Key. Unique snapshot identifier for cart snapshot records. */
  id: string & tags.Format<"uuid">;

  /** Source cart instance {@link shopping_mall_carts.id}. */
  shopping_mall_cart_id: string & tags.Format<"uuid">;

  /** Immutable serialized JSON of the cart structure at snapshot time. */
  snapshot_data: string;

  /** Snapshot creation timestamp (UTC ISO-8601). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallCartSnapshot {
  /**
   * Request DTO for searching/paginating shopping_mall_cart_snapshots.
   * Enables snapshot history analysis for a cart; allows filtering by date,
   * page, and limit.
   */
  export type IRequest = {
    /** Page number for paging snapshots. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Records per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Filter: only show snapshots created after this timestamp. */
    created_after?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: only show snapshots created before this timestamp. */
    created_before?: (string & tags.Format<"date-time">) | undefined;
  };
}
