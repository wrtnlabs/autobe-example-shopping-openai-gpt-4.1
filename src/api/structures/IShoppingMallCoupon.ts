import { tags } from "typia";

/**
 * Main coupon entity for shopping mall discount/coupon definition. Maps all
 * properties to Prisma schema shopping_mall_coupons. Used in coupon creation,
 * update, detail, and summary endpoints. Sensitive and PII fields are not
 * present. Each property is referenced from Prisma with business domain
 * context.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCoupon = {
  /** Primary Key. Coupon unique identifier. */
  id: string & tags.Format<"uuid">;

  /**
   * Associated campaign's unique identifier, or null if none (see campaign
   * linkage).
   */
  shopping_mall_coupon_campaign_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /** Unique coupon code or template (for single/bulk issuance). */
  code: string;

  /** Coupon title/label, user-facing. */
  title: string;

  /** Coupon description (terms, usage, etc). May be null. */
  description?: string | null | undefined;

  /** Type of coupon (public, private, one-time, seller, etc). */
  coupon_type: string;

  /** Discount logic: 'amount', 'percentage', 'free_shipping', etc. */
  discount_type: string;

  /** Discount value (amount/percentage depending on discount_type). */
  discount_value: number;

  /** Minimum eligible order amount for coupon use. */
  min_order_amount?: number | null | undefined;

  /** Maximum discount (for capped percentage types). */
  max_discount_amount?: number | null | undefined;

  /** Whether coupon can be stacked with others. */
  stackable: boolean;

  /** If true, coupon is exclusive (cannot be combined). */
  exclusive: boolean;

  /** Total usage cap for this coupon (nullable for unlimited). */
  usage_limit_total?: (number & tags.Type<"int32">) | null | undefined;

  /** Per-user usage cap for this coupon (nullable for unlimited). */
  usage_limit_per_user?: (number & tags.Type<"int32">) | null | undefined;

  /** Total issuances allowed for this coupon. */
  issuance_limit_total?: (number & tags.Type<"int32">) | null | undefined;

  /** Running total of times coupon issued. */
  issued_count: number & tags.Type<"int32">;

  /** Running total of times coupon used. */
  used_count: number & tags.Type<"int32">;

  /** Coupon activation/start time. Nullable if not yet issued. */
  issued_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Coupon expiration/end time. */
  expires_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Workflow status (e.g., 'draft', 'active', 'paused', 'expired',
   * 'deleted').
   */
  business_status: string;

  /** Coupon creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Coupon last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Logical deletion timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCoupon {
  /**
   * DTO for searching and filtering coupons in the shopping mall platform.
   * Used in listing, pagination, admin/seller dashboards for advanced
   * filtering. Include only existing fields in principal model. All fields
   * optional for flexible query.
   */
  export type IRequest = {
    /** Coupon code for exact or partial match search. */
    code?: string | undefined;

    /** Type of coupon to filter (e.g., 'public', 'private', 'one-time'). */
    coupon_type?: string | undefined;

    /**
     * Type of discount the coupon provides (e.g., 'amount', 'percentage',
     * 'free_shipping').
     */
    discount_type?: string | undefined;

    /**
     * Workflow/business status filter for coupon (e.g., 'active', 'draft',
     * 'paused', 'expired').
     */
    business_status?: string | undefined;

    /** Filter by coupon title (full/partial match). */
    title?: string | undefined;

    /**
     * ISO8601 date-time filter for coupons issued after this timestamp
     * (inclusive).
     */
    issued_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO8601 date-time filter for coupons issued before this timestamp
     * (inclusive).
     */
    issued_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO8601 date-time filter for coupons expiring after this timestamp
     * (inclusive).
     */
    expires_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO8601 date-time filter for coupons expiring before this timestamp
     * (inclusive).
     */
    expires_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Search for stackable (true) or exclusive (false) coupons. */
    stackable?: boolean | undefined;

    /** Search for exclusive coupons (true) or stackable ones (false). */
    exclusive?: boolean | undefined;

    /** Find coupons with a minimum total usage cap. */
    usage_limit_total_min?: (number & tags.Type<"int32">) | undefined;

    /** Find coupons with a maximum total usage cap. */
    usage_limit_total_max?: (number & tags.Type<"int32">) | undefined;

    /** Filter to coupons with a minimum per-user usage cap. */
    usage_limit_per_user_min?: (number & tags.Type<"int32">) | undefined;

    /** Filter to coupons with a maximum per-user usage cap. */
    usage_limit_per_user_max?: (number & tags.Type<"int32">) | undefined;

    /** Find coupons with at least this many issued. */
    issued_count_min?: (number & tags.Type<"int32">) | undefined;

    /** Find coupons with at most this many issued. */
    issued_count_max?: (number & tags.Type<"int32">) | undefined;

    /** Find coupons with at least this many usages. */
    used_count_min?: (number & tags.Type<"int32">) | undefined;

    /** Find coupons with at most this many usages. */
    used_count_max?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort field (e.g., 'issued_at', 'expires_at', 'issued_count',
     * 'used_count').
     */
    sort?: string | undefined;

    /** Sort direction: ascending or descending. */
    order?: "asc" | "desc" | undefined;

    /** Pagination: one-based page number. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: number of results per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * DTO for creating new coupon definitions. Only fields allowed on creation
   * from the Prisma schema included. ID, counts, timestamps, and
   * system-managed fields are omitted. Coupon code, title, type,
   * discount_type, discount_value, stackable, exclusive, and eligible limits
   * must be set/validated by business logic. Used by POST coupon endpoints.
   */
  export type ICreate = {
    /** Associated campaign's UUID, if assigning to campaign (nullable). */
    shopping_mall_coupon_campaign_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Unique coupon code or template for issuance. */
    code: string;

    /** Coupon title/label. */
    title: string;

    /** Business-side description text. Optional. */
    description?: string | null | undefined;

    /** Type of coupon (public, private, one-time, seller, etc). */
    coupon_type: string;

    /** Discount logic for coupon ('amount', 'percentage', etc). */
    discount_type: string;

    /** Discount value (amount or percentage depending on type). */
    discount_value: number;

    /** Minimum eligible order amount for coupon use. */
    min_order_amount?: number | null | undefined;

    /** Maximum discount amount (for capped percentage coupons). */
    max_discount_amount?: number | null | undefined;

    /** May this coupon be used with others? */
    stackable: boolean;

    /** If true, this coupon cannot be combined with others. */
    exclusive: boolean;

    /** Total usage/cap for this coupon (nullable for unlimited). */
    usage_limit_total?: (number & tags.Type<"int32">) | null | undefined;

    /** Usage cap per user (nullable for unlimited). */
    usage_limit_per_user?: (number & tags.Type<"int32">) | null | undefined;

    /** Issuance cap for this coupon (null for unlimited). */
    issuance_limit_total?: (number & tags.Type<"int32">) | null | undefined;

    /** Coupon activation/start time (null if immediately active). */
    issued_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Coupon expiration/end time. */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Coupon business status at creation ('draft', 'active', etc). */
    business_status: string;
  };

  /**
   * DTO to update a coupon definition in the system. Must reference only
   * fields present in shopping_mall_coupons, supporting business rules for
   * coupon logic, stackability, eligibility, issuance, and usage. Partial
   * updates allowed, all modifications are audited and preserved for
   * compliance.
   */
  export type IUpdate = {
    /**
     * Optional FK to a coupon campaign (UUID). If null, this coupon is
     * stand-alone.
     *
     * This identifies the parent campaign of this coupon for event-based,
     * seasonal, or segment-based business logic.
     */
    shopping_mall_coupon_campaign_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /**
     * Coupon code (unique). Used for manual entry, promotional insert, or
     * bulk distribution. Must be unique system-wide.
     */
    code: string;

    /**
     * Display title for the coupon, shown in list views and promotional
     * materials. Immutable once issued to maintain evidence.
     */
    title: string;

    /**
     * Long description, terms, and detail for user communication and
     * compliance.
     */
    description?: string | null | undefined;

    /**
     * Type of coupon: public, private, one-time, or other business
     * segmentation. Business enum with allowable values defined by
     * campaign/marketing logic.
     */
    coupon_type: string;

    /**
     * Discount logic type. Allowed values include 'amount', 'percentage',
     * 'free_shipping', etc. Only supported logics per business rules are
     * permitted.
     */
    discount_type: string;

    /**
     * For 'amount' or 'percentage' types, the actual discount. For
     * 'amount', this is monetary (not negative). For 'percentage', should
     * be from 0-100.
     */
    discount_value: number;

    /**
     * Minimum order amount eligible for coupon application. Null means no
     * minimum enforced.
     */
    min_order_amount?: number | null | undefined;

    /**
     * Maximum discount that can be applied if 'discount_type' is
     * 'percentage' or where cap is required.
     */
    max_discount_amount?: number | null | undefined;

    /**
     * If true, coupon can be combined with other stackable coupons (per
     * business logic).
     */
    stackable: boolean;

    /**
     * Coupon is mutually exclusive — if true, cannot be combined with any
     * other coupon in same order/application.
     */
    exclusive: boolean;

    /**
     * Total number of times this coupon can be used across the entire
     * lifecycle (public limit).
     */
    usage_limit_total?: (number & tags.Type<"int32">) | null | undefined;

    /** How many times an individual user can redeem this coupon. */
    usage_limit_per_user?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Total number of distinct issuances permitted for this coupon
     * (bulk/one-time logic).
     */
    issuance_limit_total?: (number & tags.Type<"int32">) | null | undefined;

    /** Datetime when coupon becomes valid for use/issuance (UTC ISO8601). */
    issued_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Coupon hard expiration. After this time, the coupon cannot be
     * redeemed. Null means open-ended.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Coupon lifecycle business status: draft, active, paused, expired,
     * deleted, etc. Allowed transitions per workflow.
     */
    business_status: string;
  };

  /**
   * Summary view of a shopping mall coupon. Used for listing/search in admin,
   * seller, or analytics UI.
   *
   * Includes only key identifying, business, and application control fields.
   * Excludes full configuration, analytics, and deep targeting data. Fields
   * are derived strictly from the shopping_mall_coupons schema. Used
   * primarily in IPage<IShoppingMallCoupon.ISummary> pagination responses.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier of the coupon in the database.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique coupon code or template (for single/bulk issuance).
     *
     * Business rule: uniqueness enforced per DB, used for end user
     * redemption, analytics, and traceability.
     */
    code: string;

    /**
     * Coupon title or label displayed to users.
     *
     * Intended for UI/UX and business reporting.
     */
    title: string;

    /**
     * Type of coupon.
     *
     * Must be one of: public, private, one-time, etc. Business-layer
     * determines enum values, often for privilege assignment or flow
     * segmentation. Used to organize coupons for analytics, issuance, and
     * application logic.
     */
    coupon_type: string;

    /**
     * How the coupon computes its benefit (amount, percentage,
     * free_shipping, ...). Business enum; enforced by application logic.
     */
    discount_type: string;

    /**
     * Discount value (interpreted as amount or % by discount_type). Must be
     * a positive number for monetary/percentage value. Business validation
     * applies.
     */
    discount_value: number;

    /** Boolean indicating whether coupon can be stacked with others. */
    stackable: boolean;

    /**
     * Flag indicating if the coupon is exclusive (cannot be combined with
     * any other coupon/benefit in a single order).
     */
    exclusive: boolean;

    /**
     * Datetime when the coupon was activated/first issued.
     *
     * May be null if coupon is not yet issued (draft/prepared state).
     */
    issued_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Expiration datetime for the coupon. Nullable - may be null for
     * permanent or system-cancelled coupons.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * How many times this coupon has been used across all recipients. Used
     * for business analytics, dashboarding, and application logic.
     */
    used_count: number & tags.Type<"int32">;
  };
}
