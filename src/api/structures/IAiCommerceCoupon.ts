import { tags } from "typia";

/**
 * Coupon entity representing discount, promotional, or incentive metadata, as
 * defined in the ai_commerce_coupons table.
 *
 * Maps to campaigns, issues, and redemptions, and includes status management,
 * conditions/rules, and audit fields. Reflects business and regulatory
 * requirements for digital incentives, compliance, and legal evidence.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCoupon = {
  /**
   * Primary Key. Unique coupon identifier in the system. Referenced by coupon
   * issues and redemption events.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Globally unique code or token for the coupon. Used for reference,
   * validation, and user-facing application. Must be unique across all
   * coupons. Typically set as an alphanumeric string matching platform or
   * business conventions.
   */
  coupon_code: string;

  /**
   * Type of coupon (amount, percent, shipping, etc). Business-rule driven
   * string value compliant with platform coupon policies. Used to determine
   * application logic, eligibility, and presentation.
   */
  type: string;

  /**
   * Coupon validity start date/time, following ISO 8601 extended format.
   * Indicates when the coupon becomes eligible for use. Enforced upstream and
   * referenced during user coupon application and validation.
   */
  valid_from: string & tags.Format<"date-time">;

  /**
   * Coupon expiry date/time, following ISO 8601 extended format. Indicates
   * the last moment the coupon may be used for redemption. Business logic
   * disables or retires coupons at this timestamp.
   */
  valid_until: string & tags.Format<"date-time">;

  /**
   * Issuer (admin or seller) user ID. May be null if system-issued or pooled
   * coupon. References administrative or business actor responsible for
   * coupon creation and campaign management.
   */
  issued_by?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Total number of times this coupon can be used. Optional field that, if
   * null, defaults to unlimited or business policy limit. Enforced at
   * redemption time to clamp overall usage platform-wide.
   */
  max_uses?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * JSON/YAML/Rule description of applicable entities or logic associated
   * with this coupon. Controls campaign, user group, product/category, or
   * other business eligibility. May be null for globally applicable simple
   * coupons.
   */
  conditions?: string | null | undefined;

  /**
   * Current business status of the coupon: 'active', 'expired', 'revoked'.
   * Drives visibility, eligibility, and admin dashboard metrics. Updated
   * according to campaign, usage, or business process automation.
   */
  status: string;

  /**
   * Coupon creation timestamp (ISO 8601). Set once upon definition of the
   * coupon for visibility, audit, and analytics.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last update to this coupon entity (ISO 8601). Used for admin
   * audits and campaign analytics.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete field (nullable). Indicates when the coupon was retired from
   * the platform for audit/evidence compliance. Null if coupon is active or
   * not deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceCoupon {
  /**
   * Request DTO for filtering/searching coupons in admin analytics or
   * reporting tool. Flexible for business useâ€”many fields optional.
   */
  export type IRequest = {
    /**
     * Filter by coupon code (exact match or partial, depending on backend
     * logic). Optional.
     */
    coupon_code?: string | undefined;

    /** Coupon status, such as 'active', 'expired', or 'revoked'. Optional. */
    status?: string | undefined;

    /**
     * Coupon type if filtering, e.g., 'percent', 'amount', 'shipping'.
     * Optional.
     */
    type?: string | undefined;

    /** Lower bound for coupon validity period start (ISO 8601). */
    validFrom?: (string & tags.Format<"date-time">) | undefined;

    /** Upper bound for coupon validity period end (ISO 8601). */
    validUntil?: (string & tags.Format<"date-time">) | undefined;

    /** Admin/seller who issued this coupon. */
    issuedBy?: string | undefined;

    /** Pagination page number. Optional. */
    page?:
      | (number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>)
      | undefined;

    /** Number of records per page. Optional. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;

    /** Field for sorting results. Optional. */
    sortBy?: string | undefined;

    /** Sort order: ascending ('asc') or descending ('desc'). Optional. */
    sortOrder?: "asc" | "desc" | undefined;
  };

  /**
   * DTO for coupon creation (POST). Used when registering new discount or
   * incentive campaigns, enforcing all required fields to meet compliance and
   * business rules.
   */
  export type ICreate = {
    /**
     * Globally unique code or token for the coupon to create. Must be
     * unique across all coupons. Used for user-facing reference and
     * platform processing.
     */
    coupon_code: string;

    /**
     * Type of coupon: amount, percent, shipping, etc. Drives business logic
     * for redemption and display.
     */
    type: string;

    /**
     * Start date/time for coupon validity (ISO 8601 format). The coupon
     * becomes active from this instant.
     */
    valid_from: string & tags.Format<"date-time">;

    /**
     * End date/time for coupon usage (ISO 8601 format). Coupon is invalid
     * after this point.
     */
    valid_until: string & tags.Format<"date-time">;

    /**
     * Issuer (admin or seller) for tracking provenance and campaign
     * analytics. May be null if system-issued.
     */
    issued_by?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Limit on the number of uses for this coupon. Optional: null means
     * unlimited, otherwise a non-negative integer.
     */
    max_uses?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Serialized business rule/eligibility configuration (JSON, YAML, or
     * DSL) for limiting coupon application scope. May be null or empty for
     * unrestricted/global coupons.
     */
    conditions?: string | null | undefined;

    /**
     * Initial status for the coupon: 'active', 'pending', 'archived', or
     * other as per business rule. Used to control campaign lifecycle and
     * user visibility.
     */
    status: string;
  };

  /**
   * DTO for coupon updates (PUT). Supports all mutable fields, used in
   * campaign corrections, admin overrides, or lifecycle transitions. All
   * fields are optional to allow for partial PATCH-like updates. Must
   * validate business constraints on current state and update eligibility.
   */
  export type IUpdate = {
    /**
     * Type of coupon for update: amount, percent, shipping, etc. Optional
     * except when changing redemption logic.
     */
    type?: string | undefined;

    /**
     * (Optional) New validity start date/time (ISO 8601). Applies when
     * changing campaign schedules or activating a dormant coupon.
     */
    valid_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Revised expiry date/time (ISO 8601). Changes accepted if
     * campaign date is moving forward/back.
     */
    valid_until?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Issuer ID update (uuid string or null). Optional, reflects campaign
     * ownership or admin override.
     */
    issued_by?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * New total usage limit for the coupon (optional). Must be increased
     * generally, but not reduced below current usage counts for integrity.
     */
    max_uses?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * (Optional) New serialized business rules for eligibility/restriction.
     * May be null to unset or update campaign coverage.
     */
    conditions?: string | null | undefined;

    /**
     * Update status for the coupon: active, archived, expired, or revoked.
     * Optional. Used to manage campaign lifecycle and platform analytics.
     */
    status?: string | undefined;
  };

  /**
   * Summary DTO for coupon entities used in paging and list responses.
   * Reflects major business attributes needed for UI listings and
   * management.
   */
  export type ISummary = {
    /** Primary key: coupon id */
    id: string & tags.Format<"uuid">;

    /** Globally unique code or token for coupon. */
    coupon_code: string;

    /** Type of coupon (amount, percent, shipping, etc). */
    type: string;

    /** Coupon validity start date/time. */
    valid_from: string & tags.Format<"date-time">;

    /** Coupon expiry date/time. */
    valid_until: string & tags.Format<"date-time">;

    /** Issuer (admin or seller). */
    issued_by?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Total number of times this coupon can be used on the platform (global
     * limit).
     */
    max_uses?: (number & tags.Type<"int32">) | null | undefined;

    /** Business rule conditions; JSON, YAML, or rules. */
    conditions?: string | null | undefined;

    /** Current status (active, expired, revoked, etc). */
    status: string;

    /** Created timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Updated timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft delete (retirement) if staged out of circulation. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
