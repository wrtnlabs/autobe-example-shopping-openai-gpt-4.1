import { tags } from "typia";

/**
 * Represents a shopping cart entity managed per customer and channel/section.
 * Used to persist a shopping session and manage transition from guest to
 * member, as described by the shopping_mall_carts Prisma model. Contains core
 * cart metadata, ownership, linkage, status, and audit fields. Does not
 * directly contain the cart items.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallCart = {
  /** Primary Key. Unique identifier of this cart instance (UUID). */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged customer's {@link shopping_mall_customers.id}. The unique user
   * owning this shopping cart.
   */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /**
   * Associated sales channel {@link shopping_mall_channels.id}. Denotes which
   * business channel/storefront this cart is for.
   */
  shopping_mall_channel_id: string & tags.Format<"uuid">;

  /**
   * Associated section within channel {@link shopping_mall_sections.id}.
   * Logical grouping or shop/location this cart is tied to.
   */
  shopping_mall_section_id: string & tags.Format<"uuid">;

  /**
   * The source of the cart (guest, member, migrated, etc.). Used to
   * distinguish how this cart was initiated.
   */
  source: string;

  /**
   * Status of the cart (active, expired, checked_out, deleted). Business
   * value managed by the application.
   */
  status: string;

  /** Expiration timestamp for automatic cart archival (ISO8601/UTC). Nullable. */
  expires_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Creation timestamp of this cart (ISO8601/UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp of this cart (ISO8601/UTC). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for audit/evidence compliance (nullable, only
   * present if cart is deleted).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallCart {
  /**
   * Request body for listing or searching shopping cart entities. Used for
   * paginated/admin/customer cart search with filters on customer, status,
   * channel, section, time range, source, and pagination/sorting controls.
   * All filter fields are optional; using none retrieves own carts/page 1.
   * Date parameters use ISO 8601 (UTC, RFC 3339 format).
   */
  export type IRequest = {
    /**
     * (Optional) Filter carts to those belonging to a specific customer
     * (shopping_mall_customers.id). Used in admin/support scenarios; users
     * see their own carts by default.
     */
    customerId?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Filter by the sales channel in which the cart was created
     * (shopping_mall_channels.id).
     */
    shopping_mall_channel_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Only return carts from this specific section
     * (shopping_mall_sections.id).
     */
    shopping_mall_section_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Filter by cart status. Accepts only values as defined in
     * the cart status enum.
     */
    status?: "active" | "expired" | "checked_out" | "deleted" | undefined;

    /**
     * (Optional) Restrict to carts created as guest, as a member, or
     * migrated. Controls segmentation and session logic.
     */
    source?: "guest" | "member" | "migrated" | undefined;

    /**
     * (Optional) Return carts created on or after this UTC timestamp (ISO
     * 8601).
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Only return carts created on or before this timestamp (ISO
     * 8601, UTC).
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** (Optional) Return carts expiring on or after this timestamp. */
    expires_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Only include carts expiring on or before this UTC
     * timestamp.
     */
    expires_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Sorting field; one of 'created_at', 'updated_at', or 'expires_at'.
     * Default is 'created_at'.
     */
    sort?: "created_at" | "updated_at" | "expires_at" | undefined;

    /**
     * Sort direction; 'asc' for ascending, 'desc' for descending. Default
     * is 'desc'.
     */
    order?: "asc" | "desc" | undefined;

    /** Pagination: which page of results to fetch (1-based). Default is 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of records per page (default system config or specified by
     * client), usually 20/50.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;
  };

  /**
   * DTO for creating a new shopping cart. Requires assignment to channel,
   * section, and customer (if authenticated). No status field is set by the
   * client; initial status defaults to system value (e.g., active). Follows
   * the shopping_mall_carts schema for creation operations.
   */
  export type ICreate = {
    /**
     * ID of the customer to whom the cart is assigned (required for member
     * carts).
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /** Channel/storefront the cart is created for. */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /** Section ID within the channel/grouping this cart is assigned to. */
    shopping_mall_section_id: string & tags.Format<"uuid">;

    /**
     * Source of the cart (guest, member, migration, etc). See system
     * business rules for valid string values.
     */
    source: string;
  };

  /**
   * DTO for updating existing shopping cart metadata. All fields are optional
   * and only those provided will be changed. Prisma model:
   * shopping_mall_carts.
   */
  export type IUpdate = {
    /** New channel/storefront context for moving the cart (optional). */
    shopping_mall_channel_id?: (string & tags.Format<"uuid">) | undefined;

    /** New section/group context for the cart (optional). */
    shopping_mall_section_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Updated source context for the cart (optional; business audits may
     * use this for migration or batch correction).
     */
    source?: string | undefined;

    /**
     * Updated status for workflow operations. Only controlled values per
     * business logic are accepted by the backend (e.g., active, expired,
     * checked_out, deleted).
     */
    status?: string | undefined;

    /**
     * Expiration time for the cart (nullable, may be reset by batch or
     * admin update).
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary DTO for a shopping cart entry as defined in the
   * shopping_mall_carts Prisma schema. Used to display user or admin lists of
   * shopping carts for dashboard, analytics, and session management. Excludes
   * heavy or confidential business details; shows only identity, status,
   * customer linkage, and cart context for high-performance admin/UX
   * dashboards. Fields reflect only those present in the DB schema—never
   * inferred or extended. Complies with all privacy and audit requirements
   * across session and cart flows.
   *
   * Each property is associated with a column in shopping_mall_carts,
   * ensuring full traceability of cart CRUD operations and enabling
   * compliance with audit, evidence, and regulatory policy in commerce
   * domains. Timestamp fields shown in UTC ISO-8601 date-time string format.
   * No business-internal or sensitive data is included.
   */
  export type ISummary = {
    /**
     * Primary Key. Unique identifier for the cart (shopping_mall_carts.id).
     * Required for all API resource operations, editing, and evidence
     * trace.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Belonged customer's ID (shopping_mall_customers.id)—the cart
     * owner/account. Ensures correct attribution in UX, analytics, and
     * session merge/business workflows.
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /**
     * Associated sales channel's ID (shopping_mall_channels.id). Permits
     * scoping of cart for multi-store/channel management and compliance.
     */
    shopping_mall_channel_id: string & tags.Format<"uuid">;

    /**
     * Associated section within channel (shopping_mall_sections.id) for
     * logic across channel/sections. Used for navigation, search, and
     * analytics.
     */
    shopping_mall_section_id: string & tags.Format<"uuid">;

    /**
     * Source of the cart (guest, member, migrated, etc). Mirrors
     * shopping_mall_carts.source. Used for analytics, tracking
     * session/business origin.
     */
    source: string;

    /**
     * Status of the cart (active, expired, checked_out, deleted) as defined
     * in shopping_mall_carts.status. Used to drive business flows and
     * cart-to-order validation.
     */
    status: string;

    /**
     * Expiration timestamp for automatic cart archival or business/session
     * expiry window. Null if auto-expire not set, otherwise a UTC ISO-8601
     * date-time. Matches shopping_mall_carts.expires_at.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Timestamp of cart creation, per shopping_mall_carts.created_at, in
     * UTC ISO-8601. For session/business analytics.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of most recent update to the cart (add/remove item, merge,
     * etc.), stored as UTC ISO-8601. Sourced from
     * shopping_mall_carts.updated_at.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
