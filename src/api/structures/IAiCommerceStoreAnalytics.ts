import { tags } from "typia";

/**
 * DTO for a single analytics period (bucket) for a store in aiCommerce,
 * including all key KPIs, performance, and extensible analytics data.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceStoreAnalytics = {
  /** Primary key for the store analytics row. */
  id: string & tags.Format<"uuid">;

  /** Store's unique identifier (UUID) linked to this analytics bucket. */
  store_id: string & tags.Format<"uuid">;

  /**
   * Date or time period start represented by this analytics record (e.g., for
   * daily/weekly/monthly analytics).
   */
  date_bucket: string & tags.Format<"date-time">;

  /**
   * Total sales revenue for the store for this analytics bucket (floating
   * point, usually in platform currency).
   */
  sales_volume: number;

  /**
   * Number of orders generated in this store during this period (integer
   * count).
   */
  orders_count: number & tags.Type<"int32">;

  /**
   * Number of unique visitors to the store during this period (integer
   * count).
   */
  visitors_count: number & tags.Type<"int32">;

  /** Conversion rate for the period (typically a float in [0, 1] interval). */
  conversion_rate: number;

  /**
   * (Optional) Additional analytics, campaign data, or denormalized metrics
   * as JSON string. For extensibility and non-standard analytics fields.
   */
  analytics_json?: string | null | undefined;

  /** Timestamp (ISO 8601) when this analytics record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for the last update to this analytics record (ISO 8601 format). */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAiCommerceStoreAnalytics {
  /**
   * Request DTO for searching/paginating store analytics records. Used for
   * dashboards and advanced queries.
   */
  export type IRequest = {
    /** (Optional) Filter analytics records to a specific store by its UUID. */
    store_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Return analytics records from this date (inclusive). ISO
     * 8601 datetime format.
     */
    date_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Return analytics records up to this date (inclusive). ISO
     * 8601 datetime format.
     */
    date_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Minimum conversion rate filter. Returns records with
     * conversion_rate greater than or equal to this value.
     */
    min_conversion_rate?: number | undefined;

    /**
     * (Optional) Maximum conversion rate filter. Returns records with
     * conversion_rate less than or equal to this value.
     */
    max_conversion_rate?: number | undefined;

    /**
     * (Optional) Sorting expression for results (e.g., 'date_bucket:desc',
     * 'sales_volume:asc').
     */
    sort?: string | undefined;

    /**
     * (Optional) Result page number. Paged results start from 1. Used with
     * limit for pagination.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /** (Optional) Number of records per page. Used for pagination control. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary analytics object for a store, providing key business KPIs for a
   * defined period. Used in reporting, performance dashboards, and analytics
   * comparisons. Each property directly references the
   * ai_commerce_store_analytics database commentary.
   */
  export type ISummary = {
    /**
     * Primary key referencing the store analytics row
     * (ai_commerce_store_analytics.id).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Store identifier to which these analytics apply
     * (ai_commerce_store_analytics.store_id, FK).
     */
    store_id: string & tags.Format<"uuid">;

    /**
     * Analytics bucket window start timestamp (e.g., day/week/month,
     * ai_commerce_store_analytics.date_bucket).
     */
    date_bucket: string & tags.Format<"date-time">;

    /**
     * Sum of total revenue or sales for the bucketed period
     * (ai_commerce_store_analytics.sales_volume).
     */
    sales_volume: number;

    /**
     * Count of fulfilled orders in the analytics window
     * (ai_commerce_store_analytics.orders_count).
     */
    orders_count: number & tags.Type<"int32">;

    /**
     * Unique visitor count for the time period
     * (ai_commerce_store_analytics.visitors_count).
     */
    visitors_count: number & tags.Type<"int32">;

    /**
     * Conversion rate (0 to 1.0) capturing order ratio to visitors
     * (ai_commerce_store_analytics.conversion_rate).
     */
    conversion_rate: number;
  };
}
