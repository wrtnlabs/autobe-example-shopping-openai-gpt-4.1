import { tags } from "typia";

/**
 * Represents a shipment batch associated with an order. Corresponds to a
 * physical or logical fulfillment event in the mall platform. Handles
 * multi-seller/split fulfillment, status tracking, carrier/integration meta,
 * and audit fields. Soft deletion is enforced for compliance. Maps directly to
 * shopping_mall_shipments table. For additional detail, see
 * shopping_mall_shipment_items (not in this object).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallShipment = {
  /**
   * Primary key for the shipment batch record. Uniquely identifies a shipment
   * transaction in the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the main order (shopping_mall_orders.id) this shipment is
   * fulfilling. Connects shipment batch to business order context.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * The seller responsible for fulfillment of this shipment batch. Used for
   * multi-seller/split-shipment support.
   */
  shopping_mall_seller_id: string & tags.Format<"uuid">;

  /**
   * System or business-unique shipment code for batch tracking, potentially
   * mapped to external logistics or carrier tracking codes. Non-null.
   */
  shipment_code: string;

  /**
   * External carrier's shipment tracking number. Set if provided by
   * third-party logistics/fulfillment integration. Nullable.
   */
  external_tracking_number?: string | undefined;

  /**
   * Status of shipment batch. Example values: pending, shipped, delivered,
   * returned, cancelled, etc. Status rules are governed by business process;
   * see schema documentation.
   */
  status: string;

  /**
   * Carrier/service used for this shipment batch. Nullable; set if logistics
   * partner is assigned.
   */
  carrier?: string | undefined;

  /**
   * Datetime when the shipment batch was requested for fulfillment
   * (nullable).
   */
  requested_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Datetime when goods were shipped (nullable, set when shipment is
   * outbound).
   */
  shipped_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Datetime when shipment was delivered (nullable, set on completed
   * delivery).
   */
  delivered_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp (ISO 8601/UTC) when shipment record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp (ISO 8601/UTC) when shipment record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Indicates logical deletion for compliance/audit, or null if still active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallShipment {
  /**
   * Search, filter, and pagination parameters for retrieving shopping mall
   * shipments. Used in shipment list endpoints. Optional fields provide
   * flexibility for targeted queries. Field semantics are bound to the
   * shopping_mall_shipments schema.
   */
  export type IRequest = {
    /**
     * Page number for paginated search (optional). If not provided,
     * defaults to first page.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Limit of records per page for pagination. If not specified, the
     * system default is applied.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Filter for shipment records by shipment status (pending, shipped,
     * delivered, etc). Status values are as defined by business
     * requirements and the shopping_mall_shipments.status column. Optional.
     * If excluded, all statuses are included.
     */
    status?: string | undefined;

    /**
     * Shipment code or tracking number filter. Enables search for a
     * specific shipment batch by its business-unique identifier. Optional.
     */
    shipment_code?: string | undefined;

    /**
     * Seller responsible for the shipment. Used to filter for shipments
     * managed by a particular seller. Optional.
     */
    shopping_mall_seller_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Start of the creation date range for filtering (inclusive). Only
     * returns shipments created at or after this time. ISO 8601 UTC format.
     * Optional.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End of the creation date range for filtering (inclusive). Only
     * returns shipments created at or before this time. ISO 8601 UTC
     * format. Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Creation schema for a new shipment batch within an order. Used to
   * establish fulfillment, logistics, and carrier metadata at shipment
   * registration. May be referenced by subsequent shipment item creation.
   * Only allows fields that exist in shopping_mall_shipments schema and are
   * writable at creation. Audit fields and update meta are managed by the
   * backend system. See shopping_mall_shipments documentation.
   */
  export type ICreate = {
    /**
     * Foreign key referencing the parent order (shopping_mall_orders.id)
     * for which this shipment batch is being created. Required.
     */
    shopping_mall_order_id: string & tags.Format<"uuid">;

    /**
     * Foreign key referencing the seller responsible for this shipment
     * batch (shopping_mall_sellers.id). Determines fulfillment and
     * operational permissions. Required.
     */
    shopping_mall_seller_id: string & tags.Format<"uuid">;

    /**
     * Business-unique code identifying this shipment batch. Used for
     * internal and external tracking.
     */
    shipment_code: string;

    /**
     * External carrier's shipment/tracking number (optional, set only if
     * integrating with outside logistics/carrier APIs). Nullable.
     */
    external_tracking_number?: string | undefined;

    /**
     * Carrier/logistics provider information (optional; null or blank for
     * self-fulfillment, string value for external partner).
     */
    carrier?: string | undefined;

    /** Initial fulfillment requested datetime (nullable). */
    requested_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Initial status of this shipment batch (e.g., 'pending', 'requested').
     * Used to indicate start of shipment workflow. Status must align to
     * business logic as per shopping_mall_shipments.status. Required.
     */
    status: string;
  };

  /**
   * DTO for updating an existing shipment batch/session.
   *
   * Allows updating carrier/tracking info, status, and fulfillment-related
   * fields. Only fields that exist in shopping_mall_shipments schema may be
   * set. Fields not provided will not be changed. Used by authorized
   * sellers/admins to manage shipment status during the order lifecycle.
   *
   * Timestamps are nullable and may be set/cleared per fulfillment rules. All
   * updates are snapshotted for audit per compliance. Business logic may
   * restrict transitions/status depending on current state (e.g. can't mark
   * as delivered before shipped, etc).
   *
   * Does NOT permit changing shipment id, order foreign key, or seller id
   * after shipment is created.
   */
  export type IUpdate = {
    /**
     * Parent order ID this shipment belongs to. References
     * shopping_mall_orders.id.
     */
    shopping_mall_order_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Seller responsible for this shipment batch
     * (shopping_mall_sellers.id).
     */
    shopping_mall_seller_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Unique shipment code for tracking. Used for logistics and fulfillment
     * reference.
     */
    shipment_code?: string | undefined;

    /**
     * Tracking number as provided by the external logistics/courier. May be
     * null if not assigned yet.
     */
    external_tracking_number?: string | undefined;

    /**
     * Shipment status (e.g., pending, shipped, delivered, returned,
     * cancelled, etc). Must match status business rules and enum set used
     * in system.
     */
    status?: string | undefined;

    /** Carrier/logistics provider name if present. Nullable. */
    carrier?: string | undefined;

    /**
     * Datetime the shipment was requested/allocated. Nullable - can be set
     * or cleared.
     */
    requested_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Datetime when goods were turned over to carrier. Nullable. */
    shipped_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Time when delivery was confirmed by tracking system or recipient.
     * Nullable.
     */
    delivered_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary DTO for a shipment batch associated with a shopping mall order.
   * Used for list/page rendering, this type reflects key shipment
   * business/meta status for operational and analytics UI. Each property is
   * mapped to a specific column in shopping_mall_shipments, reflecting the
   * schema's business/audit requirements. All business and audit fields
   * required for shipment paging/summaries are included. Full details are in
   * the IShoppingMallShipment DTO.
   */
  export type ISummary = {
    /**
     * Unique identifier for this shipment batch. Maps to
     * shopping_mall_shipments.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Parent order ID. Maps to
     * shopping_mall_shipments.shopping_mall_order_id.
     */
    order_id: string & tags.Format<"uuid">;

    /**
     * UUID of seller responsible for fulfillment. From
     * shopping_mall_shipments.shopping_mall_seller_id.
     */
    seller_id: string & tags.Format<"uuid">;

    /**
     * Unique business/tracking code for the shipment
     * (shopping_mall_shipments.shipment_code).
     */
    shipment_code: string;

    /**
     * External carrier's shipment tracking number, if available; nullable
     * field from shopping_mall_shipments.external_tracking_number.
     */
    external_tracking_number?: string | null | undefined;

    /**
     * Shipment status, e.g., 'pending', 'shipped', 'delivered', 'returned',
     * 'cancelled', per shopping_mall_shipments.status.
     */
    status: string;

    /**
     * Carrier/logistics provider reference, nullable, from
     * shopping_mall_shipments.carrier.
     */
    carrier?: string | null | undefined;

    /**
     * Timestamp for shipment prep initiation, from
     * shopping_mall_shipments.requested_at.
     */
    requested_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Time goods were handed over to carrier, nullable,
     * shopping_mall_shipments.shipped_at.
     */
    shipped_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Delivery confirmation timestamp, nullable,
     * shopping_mall_shipments.delivered_at.
     */
    delivered_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Row creation datetime for audit, from
     * shopping_mall_shipments.created_at.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update time of shipment meta, from
     * shopping_mall_shipments.updated_at.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft-deletion timestamp for compliance/audit, nullable,
     * shopping_mall_shipments.deleted_at.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
