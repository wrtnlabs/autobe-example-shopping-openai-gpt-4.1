import { tags } from "typia";

/**
 * Complete entity profile for shopping mall channel (shopping_mall_channels
 * table).
 *
 * Matches all defined fields in the Prisma schema for shopping mall channels,
 * including primary key, business code, display name, description, and system
 * audit fields for creation, updates, and logical deletion. This structure
 * guarantees forward and backward compatibility for admin, operations, and
 * audit APIs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallChannel = {
  /**
   * Primary Key.
   *
   * UUID uniquely identifying the shopping mall channel entity, e.g.,
   * 'f5cd735a-935f-4d1d-801e-24854bb4b4e0'.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business code for the channel (e.g., 'main', 'korea', 'brandX').
   * Used for routing, logical partitioning, and channel-specific business
   * rule scoping. Must be unique within the database.
   */
  code: string;

  /**
   * Human-readable channel name or business label. Used for admin UI display,
   * configuration, and external communications referencing this channel.
   */
  name: string;

  /**
   * General description and business context of the channel. Optional;
   * supports Markdown or rich text. Used to provide background for
   * administrators and business logic.
   */
  description?: string | null | undefined;

  /**
   * Channel creation time in timezone-aware ISO 8601 format (e.g.,
   * '2024-03-01T09:00:00.000Z'). Reflects initial registration timestamp;
   * read-only.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update time of the channel info. Always in timezone-aware ISO 8601
   * format. Reflects latest metadata update as of write.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Channel deletion time if this entity is soft deleted, according to system
   * compliance and audit rules. Null if the channel is not deleted. Used for
   * logical delete and audit trails.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallChannel {
  /**
   * Search and filter request DTO for shopping mall channels.
   *
   * Encapsulates all supported filtering, search, and pagination options as
   * used in PATCH /shoppingMall/admin/channels. Optional fields allow
   * flexible querying of shopping mall channels for admin and backoffice UI.
   */
  export type IRequest = {
    /**
     * Page number for the paginated shopping mall channel search results.
     * Optional; defaults to 1. Used for backend pagination and UI
     * navigation.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Limit of records per page for pagination. Optional; defaults to a
     * system or API maximum according to business policy.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Free-text search query for filtering shopping mall channels.
     * Typically applied to code, name, or description fields using
     * 'contains' or regex matching.
     */
    search?: string | undefined;

    /**
     * Filter by channel's unique business code. If specified, restricts
     * results to channels matching this code exactly.
     */
    code?: string | undefined;

    /**
     * Filter by human-readable name of the channel. Performs partial or
     * case-insensitive matching to allow UI-driven search.
     */
    name?: string | undefined;

    /**
     * Filter by channel description. Supports advanced/query searching
     * within the description text.
     */
    description?: string | undefined;
  };

  /**
   * DTO for creating a new shopping mall channel (POST
   * /shoppingMall/admin/channels).
   *
   * Contains required and optional fields for registering a new channel in
   * the system; directly maps to the Prisma shopping_mall_channels model.
   * Audit fields such as id, created_at, etc. are system-generated and
   * excluded from the create payload.
   */
  export type ICreate = {
    /**
     * Business-unique code for the new channel (e.g. 'main', 'brandX').
     * Must be unique across all records and will be used for API routing,
     * business logic scoping, and UI display. Required.
     */
    code: string;

    /**
     * Display/business name for the channel. Human-readable and required
     * for all new channel creation. Used in admin UI and communications.
     */
    name: string;

    /**
     * Optional business context, rationale, or Markdown-formatted info,
     * shown in admin panels. Not required; can be provided for richer
     * channel documentation.
     */
    description?: string | null | undefined;
  };

  /**
   * DTO for updating an existing shopping mall channel entity (PUT
   * /shoppingMall/admin/channels/{channelId}).
   *
   * Allows partial or full updates to mutable channel fields (code, name,
   * description). Audit/system fields (created_at, updated_at, deleted_at,
   * id) are excluded from client-supplied input and managed by the backend
   * layer. Enforces data integrity and audit traceability.
   */
  export type IUpdate = {
    /**
     * If provided, replaces the existing business code of the channel. Must
     * remain unique within the database and be non-nullable. Used for API
     * routing, channel logic, and business context.
     */
    code?: string | undefined;

    /**
     * Updates the display/business name for the channel. Used for UI
     * display, admin changes, and business logic.
     */
    name?: string | undefined;

    /**
     * Updates or clears the channel's richtext/markdown description. Null
     * clears the current description.
     */
    description?: string | null | undefined;
  };

  /**
   * Summary DTO providing key public-facing, searchable fields for shopping
   * mall channel listing UI or administrative dashboards.
   *
   * Linked to shopping_mall_channels table. Includes code, name, description
   * (nullable), and audit timestamps, omitting heavy relational data. Used
   * for list/search result rows.
   */
  export type ISummary = {
    /** Primary Key. Unique identifier for the channel (UUID). */
    id: string & tags.Format<"uuid">;

    /**
     * Unique business code for the channel (e.g., 'main', 'korea',
     * 'brandX'). Used for API routing and business rule scoping.
     */
    code: string;

    /** Human-readable name of the channel for business UI and communication. */
    name: string;

    /** General description and business context of the channel (nullable). */
    description?: string | null | undefined;

    /** Channel creation time (ISO 8601). */
    created_at: string & tags.Format<"date-time">;

    /** Last update time of the channel info (ISO 8601). */
    updated_at: string & tags.Format<"date-time">;

    /** Channel deletion time (soft delete, nullable, ISO 8601). */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
