import { tags } from "typia";

/**
 * Defines a tag record attached to a product. Represents a keyword, label, or
 * classification used for product search, SEO enhancement, recommendation, and
 * campaign logic. Each tag is uniquely assigned to a product and plays a key
 * role in product discoverability, grouping, and analytics. Sensitive security
 * fields and internal meta are omitted; structure is fully aligned with the
 * shopping_mall_product_tags Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallProductTag = {
  /**
   * Primary key of the product tag record. Uniquely identifies each tag entry
   * for a product. Required for any tag-based CRUD or batch operation.
   */
  id: string & tags.Format<"uuid">;

  /**
   * References the unique product entity (from shopping_mall_products table)
   * to which the tag is assigned. Used in API operations for validation and
   * lookup.
   */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /**
   * Assigned tag value or keyword for this product. Used for search,
   * recommendation, and filtering in catalog and external integrations. Must
   * be a valid tag string as per platform policy.
   */
  tag: string;
};
export namespace IShoppingMallProductTag {
  /**
   * Query and filtering parameters for listing, searching, and paginating
   * tags attached to a specific product. Used in tag management/list
   * endpoints, allowing clients to retrieve tags based on product, partial
   * tag match, or paging requirements. All properties correspond to search
   * parameter expectations in enterprise commerce systems.
   */
  export type IRequest = {
    /**
     * Unique identifier (UUID) of the product whose tags are to be
     * retrieved. This property enables advanced search and filtering of
     * product tags based on the associated product entity. Must reference
     * an existing product in the catalog.
     */
    productId: string & tags.Format<"uuid">;

    /**
     * Exact or partial tag value to filter product tags. Case-insensitive
     * and supports fuzzy or keyword search depending on system
     * implementation. Used for searching tags assigned to the product for
     * SEO, recommendation, or campaign logic.
     */
    tag?: string | undefined;

    /**
     * The index of the results page for pagination (1-based). Determines
     * which subset of tag results is returned, enabling efficient batch/tag
     * list processing.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of results to return per page. Used for controlling
     * response size during pagination in tag searches.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort direction or field for ordering results, such as 'created_at',
     * 'tag', or compound values per business/UI need.
     */
    sort?: string | undefined;
  };

  /**
   * Payload for creating a new tag attached to a specific product. Used in
   * product tag creation endpoints. Both properties must conform to the
   * reference and value constraints of the shopping_mall_product_tags schema.
   * Unique constraint enforced on the combination of product and tag.
   */
  export type ICreate = {
    /**
     * References the product (from shopping_mall_products) to which this
     * tag will be attached. Required for every tag creation operation.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Tag value/keyword assigned to the product for search, recommendation,
     * or campaign logic. Must follow naming/length constraints in system
     * policy.
     */
    tag: string;
  };

  /**
   * Payload for updating an existing tag for a specific product. Used in tag
   * update endpoints for correcting typographical errors, normalizing values,
   * or supporting campaign/SEO policy updates. Only the tag string is
   * updatable; product reference is immutable for audit and referential
   * integrity.
   */
  export type IUpdate = {
    /**
     * Updated tag value for this product. Must adhere to naming
     * conventions, and be unique for the given product. Used to correct,
     * normalize, or re-label tags for product discoverability and
     * analytics.
     */
    tag: string;
  };

  /**
   * Summary details for a product tag within a shopping mall catalog context.
   * Used to support search, recommendation, analytics, and curation
   * workflows. Based on the shopping_mall_product_tags Prisma schema,
   * ensuring data is only drawn from defined business fields. Synthetic for
   * API list display and analyticsâ€”does not duplicate resource-heavy or
   * irrelevant details (e.g., tagging audit history, tag analytics).
   *
   * Each property aligns to a specific column in shopping_mall_product_tags,
   * with uniqueness enforced at the (product, tag) level for list workflows.
   * Descriptions are distilled from the schema for compliance and
   * extensibility.
   */
  export type ISummary = {
    /**
     * Primary Key. Unique identifier for the tag entry per
     * shopping_mall_product_tags.id. Required for reference, editing,
     * analytics, and batch workflows.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Tag/keyword string assigned to the product. Must match
     * shopping_mall_product_tags.tag and adhere to any defined business or
     * SEO restrictions. Used for search, AI, and analytics.
     */
    tag: string;
  };
}
