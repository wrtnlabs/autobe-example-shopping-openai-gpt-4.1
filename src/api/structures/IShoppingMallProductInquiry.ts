import { tags } from "typia";

/**
 * A complete product inquiry record as presented to API consumers. Maps to a
 * row in the shopping_mall_product_inquiries table and exposes all
 * business-relevant fields (questionary content, author references, privacy,
 * moderation state, timestamps, etc). Used for detail retrieval (GET by id),
 * response after create, update, or batch-access endpoints.
 *
 * Includes all explicit column/documentation fields in the source schema with
 * English descriptions. Strictly NO additional properties may be used.
 * Relationships (author, product reference, etc.) are represented by native
 * fields or loaded separately according to DTO design.
 *
 * See schema for explicit field constraints and audit/compliance requirements.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallProductInquiry = {
  /** Unique identifier (UUID, @db.Uuid) for the inquiry record. */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key reference to the associated product this inquiry concerns,
   * mapping to shopping_mall_products.id. Required and non-null.
   */
  shopping_mall_product_id: string & tags.Format<"uuid">;

  /**
   * Foreign key reference to the customer who authored the inquiry (if
   * applicable). Null if the author is a seller or not known.
   */
  shopping_mall_customer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Foreign key reference to a seller if the inquiry is seller-authored. Null
   * if not authored by seller.
   */
  shopping_mall_seller_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional short summary/title for the inquiry. May be provided for
   * business/marketing, but not required.
   */
  title?: string | null | undefined;

  /**
   * Full content body of the inquiry. Required. Supports user-facing
   * formatting (plain or Markdown as per schema/business policy).
   */
  body: string;

  /**
   * True if inquiry is marked as private (visible only to author, relevant
   * seller/admin, and business logic). Otherwise, visible per board/product
   * rules.
   */
  is_private: boolean;

  /** True if an official answer exists for this inquiry. Otherwise, false. */
  answered: boolean;

  /**
   * Indicates moderation workflow state (e.g., 'pending', 'approved',
   * 'rejected', etc.), according to business rules.
   */
  moderation_status: string;

  /** UTC timestamp when the inquiry was created. */
  created_at: string & tags.Format<"date-time">;

  /** UTC timestamp when the inquiry was last modified. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Set if the inquiry has been logically deleted (soft delete). Otherwise,
   * null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallProductInquiry {
  /**
   * Paging and filtering schema for searching product inquiries (Q&A) for a
   * specific product. Represents list/search request body for PATCH
   * /products/{productId}/inquiries, aligned with
   * 'shopping_mall_product_inquiries' and supporting advanced filtering,
   * sort, and pagination features. Used by listing, analytics, UI, and batch
   * moderation. Each field is presented in detail and documented in English
   * as per schema-driven policy.
   *
   * Refer to the Prisma schema and requirement analysis for supported filters
   * and their meaning.
   */
  export type IRequest = {
    /**
     * Page number (1-based) for pagination. Optional, defaults to 1 if
     * omitted.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of results per page for pagination efficiency.
     * Optional, business rules may set a sensible upper bound (e.g., 100).
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * If true, filters to only answered inquiries. If false, returns only
     * unanswered inquiries. If unspecified, no filter on answer status.
     */
    answered?: boolean | null | undefined;

    /**
     * Whether to return only private inquiries (true), only public (false),
     * or both (if omitted). Defaults to all if unspecified.
     */
    is_private?: boolean | null | undefined;

    /**
     * Filter inquiries by moderation status. Must match allowed values in
     * business rules such as 'pending', 'approved', 'rejected'.
     */
    moderation_status?: string | undefined;

    /**
     * Filter inquiries by role of author ('customer' or 'seller'). Must
     * match allowed values from schema specification.
     */
    author_type?: string | undefined;

    /**
     * ISO8601 date string. Only include inquiries created at or after this
     * datetime.
     */
    created_from?: string | undefined;

    /**
     * ISO8601 date string. Only include inquiries created before or at this
     * datetime.
     */
    created_to?: string | undefined;

    /**
     * Full-text search string for inquiry content, title, or relevant
     * user-visible fields.
     */
    search?: string | undefined;

    /**
     * Sorting field (e.g., 'created_at', 'answered', etc.) according to
     * business rules, schema, and UI needs.
     */
    sort_by?: string | undefined;

    /**
     * Sort order, one of 'asc' or 'desc'. Defaults to 'desc' if not
     * specified.
     */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Schema for request body when creating a new product inquiry for a
   * specific product (shopping_mall_product_inquiries). Captures all
   * business-relevant input fields including inquiry content, privacy flag,
   * and optional title. Author fields (customer, seller) are implicitly
   * derived from authentication context and must NOT be provided by API
   * clients. On create, the system enforces all validation and defaulting
   * rules from the schema, including audit snapshot and compliance meta.
   *
   * Strictly prohibit submission of extra/non-schema fields. All properties
   * are described in English, following Prisma DB documentation for columns.
   *
   * See shopping_mall_product_inquiries schema for required/optional logic
   * and audit requirements.
   */
  export type ICreate = {
    /**
     * The primary content of the inquiry being created. Required. Supports
     * Markdown or plaintext. Must comply with input constraints (length,
     * allowed markup, business/PII policy).
     */
    body: string;

    /**
     * Optional summary or headline for the inquiry. Can be used for
     * display, sorting, or search as per business need. May be omitted or
     * set to null.
     */
    title?: string | null | undefined;

    /**
     * True to create inquiry marked as private (hidden from public users
     * except author and relevant staff); false for public inquiries per
     * product/board policy.
     */
    is_private: boolean;
  };

  /**
   * DTO for updating an existing product inquiry record, as described in the
   * shopping_mall_product_inquiries Prisma schema. Fields are generally
   * optional except 'body', which is always required for content updates.
   * Handles title, body, privacy (is_private), and moderation status as
   * allowed by business logic. Do not include fields not described in the
   * schema.
   */
  export type IUpdate = {
    /**
     * Inquiry summary/title. Editable. Optional per schema, may provide
     * short headline for the inquiry.
     */
    title?: string | undefined;

    /**
     * Full inquiry content (markdown or text). This is editable by the
     * inquiry's author or appropriate admin roles. Required for any
     * update.
     */
    body: string;

    /**
     * If true, restricts inquiry visibility to only author, seller, and
     * admin. Affects privacy and compliance enforcement. Editable during
     * update.
     */
    is_private?: boolean | undefined;

    /**
     * Moderation state of the inquiry (pending, approved, etc.). Should
     * only be set by moderators or admins. For most users, not editable.
     * Optional but may be included for escalation or admin workflows.
     */
    moderation_status?: string | undefined;

    /**
     * True when an answer is posted. Only system/seller/admins set this;
     * not user-editable except in moderation/admin actions. Optional, but
     * may be provided in moderation update.
     */
    answered?: boolean | undefined;
  };

  /**
   * Summary object for a product inquiry in the shopping mall system. Used in
   * paginated query/listing and contains all properties required to display
   * Q&A board previews in product detail UI grids.
   *
   * References the shopping_mall_product_inquiries table. Omits edit/reply
   * thread, internal moderation logs, and detailed reply meta. Includes only
   * fields appropriate for display in summary context for product and inquiry
   * boards.
   */
  export type ISummary = {
    /**
     * Primary key of the product inquiry. This is the unique UUID
     * identifier of the inquiry and must be globally unique within the
     * system.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Product's unique ID (UUID) that this inquiry is attached to.
     *
     * References shopping_mall_products.id.
     */
    shopping_mall_product_id: string & tags.Format<"uuid">;

    /**
     * Inquiry summary/title. This is an optional short text headline
     * provided by the inquirer and may be null for minimal input
     * scenarios.
     */
    title?: string | null | undefined;

    /**
     * Full inquiry content/text as written by the customer or seller. This
     * field is required and contains the actual Q&A message (not
     * system-generated).
     */
    body: string;

    /**
     * Visibility restriction. Set to true if the inquiry is private
     * (visible only to the author, seller, and admins); false for public
     * inquiries.
     */
    is_private: boolean;

    /**
     * True if this inquiry has been officially answered (by seller or
     * admin), otherwise false. Business logic for determining answered
     * state is enforced server-side.
     */
    answered: boolean;

    /**
     * Moderation workflow status string. This will be set to values like
     * 'pending', 'approved', 'rejected', etc. depending on moderation
     * process in place.
     */
    moderation_status: string;

    /** Datetime the inquiry was created (ISO 8601 UTC, required). */
    created_at: string & tags.Format<"date-time">;
  };
}
