import { tags } from "typia";

/**
 * Represents a shopping cart template (ai_commerce_cart_templates) enabling
 * users or admins to create pre-filled carts for marketing or rapid checkout.
 * Contains metadata for creator, association to store, naming, description,
 * active/archival status, and timestamped audit trail fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceCartTemplate = {
  /** Unique cart template ID, system-generated UUID. */
  id: string & tags.Format<"uuid">;

  /** UUID of the admin/seller/creator user of the template. */
  creator_id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the store this cart template belongs to, or null
   * for global use.
   */
  store_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Name/label for the cart template (required, unique per creator). */
  template_name: string;

  /**
   * Optional business/UX description or marketing note for the template, or
   * null.
   */
  description?: string | null | undefined;

  /** Whether the template is currently active and available for use. */
  active: boolean;

  /** Template creation timestamp (ISO8601, required). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of the template's last update. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when template was soft deleted/logically removed, null if still
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceCartTemplate {
  /**
   * Advanced search and filter payload for cart template
   * (ai_commerce_cart_templates) searching. Controls which templates are
   * retrieved for listing, dashboard, or analytics. Used for filtering by
   * creator, store, template name, active flag, creation date, sorting, and
   * paging.
   */
  export type IRequest = {
    /** Searcher can filter by creator's id (admin/seller). Optional. */
    creator_id?: (string & tags.Format<"uuid">) | undefined;

    /** Limit templates returned to a specific store id. Optional. */
    store_id?: (string & tags.Format<"uuid">) | undefined;

    /** Search or match templates by (partial) name. Optional. */
    template_name?: string | undefined;

    /** Limit to only active (or inactive) templates. */
    active?: boolean | undefined;

    /**
     * Filter for templates created at or after this timestamp (ISO8601
     * datetime). Optional.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter for templates created at or before this timestamp (ISO8601
     * datetime). Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Sort key, one of the template entity's field names. */
    sort_by?: string | undefined;

    /** Sort order, either 'asc' (ascending) or 'desc' (descending). */
    sort_order?: "asc" | "desc" | undefined;

    /** Page number for result paging (minimum 1). Required. */
    page: number & tags.Type<"int32">;

    /** Maximum number of templates to return per page. Required. */
    limit: number & tags.Type<"int32">;
  };

  /**
   * Payload for creating a cart template, including all required business
   * fields and metadata. Follows the ai_commerce_cart_templates schema.
   */
  export type ICreate = {
    /**
     * Reference to the admin or seller user who created the cart template.
     * Required. UUID format.
     */
    creator_id: string & tags.Format<"uuid">;

    /**
     * (Optional) Store ID to which the template is associated, if
     * store-specific.
     */
    store_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Business name of the cart template. Must be unique per creator.
     * Required.
     */
    template_name: string;

    /**
     * (Optional) Long-form description of the cart template's business
     * purpose. May be null.
     */
    description?: string | null | undefined;

    /** Whether this template is active/available for use. Required. */
    active: boolean;
  };

  /**
   * Fields for updating a cart template, according to
   * ai_commerce_cart_templates schema. All fields are optional, so partial
   * updates/subset allowed.
   */
  export type IUpdate = {
    /**
     * (Optional) New business name for the cart template. Must be unique
     * per creator.
     */
    template_name?: string | undefined;

    /** (Optional) Business description for the template. */
    description?: string | null | undefined;

    /** (Optional) Store ID the template is now associated with. */
    store_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** (Optional) Flag indicating if the template remains active and usable. */
    active?: boolean | undefined;
  };

  /**
   * Summary view of a cart template for use in paginated lists or overviews.
   * Contains only essential identification and descriptive information (not
   * the full configuration info).
   */
  export type ISummary = {
    /** Unique identifier for the cart template (UUID). */
    id: string & tags.Format<"uuid">;

    /** Business name of the cart template, for list views. */
    template_name: string;

    /**
     * Long-form description of the cart template's business purpose, if
     * set.
     */
    description?: string | null | undefined;

    /** Indicates if the template is currently available for use. */
    active: boolean;
  };
}
