import { tags } from "typia";

/**
 * Order snapshot record. Represents the full state of an order as captured in
 * shopping_mall_order_snapshots at a particular business event or system
 * mutation (creation, update, cancellation, status change, etc).
 *
 * Fields provide complete evidentiary context for audit, dispute, and recovery,
 * storing all relevant order details as a serialized object. Each snapshot is
 * immutable; the full order entity can be reconstructed at the given moment in
 * system history.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallOrderSnapshot = {
  /**
   * Unique identifier of the order snapshot record. Maps to the 'id' field of
   * shopping_mall_order_snapshots.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique identifier (UUID) of the shopping mall order this snapshot refers
   * to.
   */
  shopping_mall_order_id: string & tags.Format<"uuid">;

  /**
   * Immutable serialized (JSON or structured string) record of the order at
   * snapshot moment, including all business fields and related
   * items/payments. Used for audit, rollback, or compliance recovery.
   */
  snapshot_data: string;

  /**
   * Timestamp (ISO 8601) when the snapshot was created. Indicates the
   * point-in-time version of the order entity.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallOrderSnapshot {
  /**
   * Request search/filter parameters for listing order snapshots. Used for
   * advanced audit, compliance, evidence, or rollback operations in the
   * shopping_mall_order_snapshots table. All fields are optional; if not
   * provided, the list will include all accessible snapshots with system
   * defaults for pagination.
   *
   * Pagination is server controlled; clients can set 'limit' and 'page'
   * fields to navigate results. Snapshots are typically ordered from newest
   * to oldest by created_at.
   */
  export type IRequest = {
    /** Query for a specific snapshot by its unique ID (optional). */
    order_snapshot_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * ISO 8601 timestamp representing the start of the creation time
     * filter. Only snapshots created after or at this time are included
     * (optional).
     */
    created_at_start?: (string & tags.Format<"date-time">) | undefined;

    /**
     * ISO 8601 timestamp representing the end of the creation time filter.
     * Only snapshots created before or at this time are included
     * (optional).
     */
    created_at_end?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. Starts at 1. Default is 1. Optional. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page. Default is 20, maximum is 100. Optional. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };
}
