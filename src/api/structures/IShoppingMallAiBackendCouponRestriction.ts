import { tags } from "typia";

/**
 * A business logic restriction attached to a coupon, limiting its scope. May
 * restrict by product, section, category, user, weekday, holiday, etc.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendCouponRestriction = {
  /** Unique identifier for this coupon restriction entry. */
  id: string & tags.Format<"uuid">;

  /** UUID of the coupon this restriction is associated with. */
  shopping_mall_ai_backend_coupon_id: string & tags.Format<"uuid">;

  /** If restriction applies to a product, its UUID (optional). */
  shopping_mall_ai_backend_product_id?: (string & tags.Format<"uuid">) | null;

  /** If restriction applies to a channel section, its UUID (optional). */
  shopping_mall_ai_backend_channel_section_id?:
    | (string & tags.Format<"uuid">)
    | null;

  /** If restriction applies to a channel category, its UUID (optional). */
  shopping_mall_ai_backend_channel_category_id?:
    | (string & tags.Format<"uuid">)
    | null;

  /** If restriction applies to a customer, their UUID (optional). */
  shopping_mall_ai_backend_customer_id?: (string & tags.Format<"uuid">) | null;

  /** Restriction enforcement start timestamp. Nullable. */
  start_time?: (string & tags.Format<"date-time">) | null;

  /** Restriction enforcement end timestamp. Nullable. */
  end_time?: (string & tags.Format<"date-time">) | null;

  /** Bitmask for restriction by weekday. Optional. */
  weekday_bitmask?: (number & tags.Type<"int32">) | null;

  /** If true, restriction applies on holidays. Nullable. */
  is_holiday_restricted?: boolean | null;

  /** Business code for this restriction's reason. */
  reason_code?: string | null;

  /** When the restriction record was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAiBackendCouponRestriction {
  /**
   * Request type for searching coupon restrictions. Allows advanced
   * filtering, pagination, and sorting.
   */
  export type IRequest = {
    /** UUID of the parent coupon to filter restrictions by. */
    coupon_id?: string & tags.Format<"uuid">;

    /** UUID of the restricted product. Filter. */
    product_id?: (string & tags.Format<"uuid">) | null;

    /** UUID of the channel section this restriction targets. Filter. */
    channel_section_id?: (string & tags.Format<"uuid">) | null;

    /** UUID of the channel category this restriction targets. Filter. */
    channel_category_id?: (string & tags.Format<"uuid">) | null;

    /** UUID of the restricted customer. Filter. */
    customer_id?: (string & tags.Format<"uuid">) | null;

    /** Start of filtered range for restriction's start time. */
    start_time_from?: (string & tags.Format<"date-time">) | null;

    /** End of filtered range for restriction's start time. */
    start_time_to?: (string & tags.Format<"date-time">) | null;

    /** Start of filtered range for restriction's end time. */
    end_time_from?: (string & tags.Format<"date-time">) | null;

    /** End of filtered range for restriction's end time. */
    end_time_to?: (string & tags.Format<"date-time">) | null;

    /** Bitmask filter for specific restricted days of week (optional). */
    weekday_bitmask?: (number & tags.Type<"int32">) | null;

    /** True if filtering for restrictions enforced on holidays. */
    is_holiday_restricted?: boolean | null;

    /** Business code of restriction. Filter. */
    reason_code?: string | null;

    /** Page number for pagination (1-based). */
    page?: number & tags.Type<"int32"> & tags.Default<1> & tags.Minimum<1>;

    /** Records per page. */
    limit?: number &
      tags.Type<"int32"> &
      tags.Default<100> &
      tags.Minimum<1> &
      tags.Maximum<500>;

    /** Field to sort results by. */
    orderBy?: "created_at" | "start_time" | "end_time";

    /** Sort direction. */
    direction?: "asc" | "desc";
  };

  /** Parameters for creating a coupon restriction. */
  export type ICreate = {
    /** Coupon ID to which this restriction is applied (required). */
    shopping_mall_ai_backend_coupon_id: string & tags.Format<"uuid">;

    /** Product UUID if restriction is product-specific. */
    shopping_mall_ai_backend_product_id?: (string & tags.Format<"uuid">) | null;

    /** Channel section if restriction applies at section level. */
    shopping_mall_ai_backend_channel_section_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Channel category, if restriction is by category. */
    shopping_mall_ai_backend_channel_category_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Customer ID, if user restriction. */
    shopping_mall_ai_backend_customer_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Restriction enforcement start datetime. Optional. */
    start_time?: (string & tags.Format<"date-time">) | null;

    /** Restriction enforcement end datetime. Optional. */
    end_time?: (string & tags.Format<"date-time">) | null;

    /** Bitmask to restrict on certain days. Optional. */
    weekday_bitmask?: (number & tags.Type<"int32">) | null;

    /**
     * Restriction on holidays (if true, also applies during holidays).
     * Optional.
     */
    is_holiday_restricted?: boolean | null;

    /** Reason business code for audit/evidence. Optional. */
    reason_code?: string | null;
  };

  /** Parameters for updating a coupon restriction. All fields optional. */
  export type IUpdate = {
    /** Coupon ID to which this restriction is applied. */
    shopping_mall_ai_backend_coupon_id?: string & tags.Format<"uuid">;

    /** Product UUID if restriction is product-specific. */
    shopping_mall_ai_backend_product_id?: (string & tags.Format<"uuid">) | null;

    /** Channel section if restriction applies at section level. */
    shopping_mall_ai_backend_channel_section_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Channel category, if restriction is by category. */
    shopping_mall_ai_backend_channel_category_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Customer ID, if user restriction. */
    shopping_mall_ai_backend_customer_id?:
      | (string & tags.Format<"uuid">)
      | null;

    /** Restriction enforcement start datetime. Optional. */
    start_time?: (string & tags.Format<"date-time">) | null;

    /** Restriction enforcement end datetime. Optional. */
    end_time?: (string & tags.Format<"date-time">) | null;

    /** Bitmask to restrict on certain days. Optional. */
    weekday_bitmask?: (number & tags.Type<"int32">) | null;

    /**
     * Restriction on holidays (if true, also applies during holidays).
     * Optional.
     */
    is_holiday_restricted?: boolean | null;

    /** Reason business code for audit/evidence. Optional. */
    reason_code?: string | null;
  };
}
