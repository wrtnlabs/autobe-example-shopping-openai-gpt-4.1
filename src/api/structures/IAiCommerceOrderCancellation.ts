import { tags } from "typia";

/**
 * An order cancellation entity representing a request to cancel an order or
 * item. Directly maps to ai_commerce_order_cancellations in the DB schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceOrderCancellation = {
  /** Unique ID of this cancellation record (UUID). */
  id: string;

  /** Parent order ID this cancellation is related to. */
  order_id: string;

  /** Actor ID who initiated the cancellation (buyer/seller/admin). */
  actor_id: string;

  /** Unique business or reference code for this cancellation. */
  cancellation_code: string;

  /** Optional reason/comment from the user for requesting cancellation. */
  reason?: string | undefined;

  /**
   * Workflow/process status: 'requested', 'processing', 'approved', 'denied',
   * 'completed'.
   */
  status: string;

  /** Timestamp for when cancellation was requested (ISO date-time). */
  requested_at: string;

  /** Timestamp for when cancellation was approved/confirmed (may be null). */
  approved_at?: string | null | undefined;

  /** When cancellation was finalized/closed (may be null if open). */
  finalized_at?: string | null | undefined;
};
export namespace IAiCommerceOrderCancellation {
  /**
   * Request filter for searching order cancellation events. Use to retrieve
   * cancellation records across orders with advanced querying.
   */
  export type IRequest = {
    /** List of status values to filter on (e.g. ["requested", "approved"]). */
    status?: string[] | undefined;

    /** List of actor IDs (who requested the cancellation) to filter on. */
    actor_ids?: string[] | undefined;

    /** Start time (inclusive) for the requested_at field, ISO date-time. */
    requested_start?: string | undefined;

    /** End time (inclusive) for the requested_at field, ISO date-time. */
    requested_end?: string | undefined;

    /** Optional search term for cancellation reason or code. */
    search?: string | undefined;

    /** Pagination: page number (1-based). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: page size/limit. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sorting field (e.g. "requested_at", "status"). */
    sort_by?: string | undefined;

    /** Sorting direction: "asc" or "desc". */
    sort_dir?: string | undefined;
  };

  /** Creation payload for submitting an order cancellation request. */
  export type ICreate = {
    /**
     * Internal or user-facing reason/comment for the cancellation. Required
     * for audit/compliance.
     */
    reason: string;

    /**
     * List of order item IDs (if partial cancellation; omit for full order
     * cancellation).
     */
    item_ids?: string[] | undefined;

    /**
     * Optionally specify initial status (rare); typically defaults to
     * 'requested' in business logic.
     */
    status?: string | undefined;

    /**
     * Optional: Freeform business context, escalation source, or resolution
     * link. Not persisted unless supported by API.
     */
    business_context?: string | undefined;
  };

  /**
   * Update payload for an order cancellation entity. Used for status
   * transitions, business note updates, or reason clarification.
   */
  export type IUpdate = {
    /**
     * New status for the cancellation ('approved', 'denied', 'completed',
     * etc). See business rules.
     */
    status?: string | undefined;

    /**
     * Update or append to the cancellation reason (e.g., for escalation or
     * audit trail).
     */
    reason?: string | undefined;

    /**
     * Optionally update/clarify the business context for this cancellation
     * entry.
     */
    business_context?: string | undefined;
  };
}
