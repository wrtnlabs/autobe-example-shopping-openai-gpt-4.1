import { tags } from "typia";

/**
 * Single row from ai_commerce_search_histories, representing a user (or guest)
 * search submission and analytic context. Provides details for analytics,
 * personalization, or compliance review.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSearchHistory = {
  /** Unique identifier of the search history record. */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of buyer/user submitting the search. May be null for anonymous
   * search.
   */
  ai_commerce_buyer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Text of the search input by user. */
  query_string: string;

  /**
   * JSON-encoded (string) representing the filters used for this search
   * event, or null if none.
   */
  filters_applied?: string | null | undefined;

  /** Total number of results returned from the search event. */
  result_count: number & tags.Type<"int32">;

  /** ISO 8601 date-time string for search event. */
  search_timestamp: string & tags.Format<"date-time">;

  /**
   * Locale string for the search context (e.g., 'en-US', 'ko-KR'), or null if
   * not specified.
   */
  locale?: string | null | undefined;
};
export namespace IAiCommerceSearchHistory {
  /**
   * Filter/search and pagination type for aiCommerce user search history log
   * listing.
   *
   * Provides advanced search capability for querying historical search
   * entries by query, timestamp, buyer, and locale. Supports pagination for
   * UI/analytics workloads.
   */
  export type IRequest = {
    /** Search keyword or phrase to filter search histories by query text. */
    query_string?: string | undefined;

    /**
     * Lower bound (inclusive) for search timestamp. ISO 8601 date-time
     * string.
     */
    search_timestamp_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound (inclusive) for search timestamp. ISO 8601 date-time
     * string.
     */
    search_timestamp_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * UUID of buyer/user for whom to filter search histories. Omit or null
     * for all users.
     */
    ai_commerce_buyer_id?: (string & tags.Format<"uuid">) | undefined;

    /** Locale filter for historical queries (e.g., "ko-KR"). */
    locale?: string | undefined;

    /** Page number (1-based). Optional. Default: 1 if omitted. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page. Optional. Default: 20 if omitted. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };
}
