import { tags } from "typia";

/**
 * A seller onboarding application as recorded in ai_commerce_seller_onboarding.
 * Each record covers the full business and compliance lifecycle, uniquely
 * identified by id and user_id. Onboarding may progress through multiple
 * statuses and carry flexible application/evidence data.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceSellerOnboarding = {
  /** Unique business UUID for the onboarding application record. */
  id: string & tags.Format<"uuid">;

  /**
   * UUID (pk) of the user in ai_commerce_user_authentications applying for
   * seller onboarding.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * UUID of the store being created/linked by this onboarding, if present.
   *
   * This field is nullable; onboarding may not have an associated store until
   * the process is complete.
   */
  store_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * JSON-encoded string containing all onboarding application data,
   * disclosures, and uploaded evidence documents.
   *
   * Serves as a flexible blob field supporting arbitrary business input,
   * documents, and compliance evidence.
   */
  application_data: string;

  /**
   * Workflow status of the onboarding case (e.g., draft, submitted,
   * reviewing, approved, rejected, escalated).
   *
   * Required by the business process to track where the onboarding stands.
   */
  onboarding_status: string;

  /**
   * Current onboarding stage (e.g., identity_verification,
   * business_submission, bank_verification).
   *
   * Nullable; present only when staging is implemented for tracking user
   * progress.
   */
  current_stage?: string | undefined;

  /**
   * Business or admin notes for compliance findings, workflow observations,
   * or review outcomes. May be null.
   */
  notes?: string | undefined;

  /**
   * Timestamp indicating when this onboarding record was created.
   *
   * UTC time, ISO8601 format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp indicating the last update to the onboarding record.
   *
   * UTC time, ISO8601 format.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete field for logical removal. Null if onboarding is
   * active/present; otherwise a UTC ISO8601 timestamp for when onboarding is
   * deleted (retained for compliance/audit).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceSellerOnboarding {
  /**
   * Request for paginated search or filtering of seller onboarding
   * applications in ai_commerce_seller_onboarding table.
   *
   * All fields are optional; any combination may be provided to tune list
   * results.
   */
  export type IRequest = {
    /**
     * Optional. Filter onboarding cases by their status (e.g., draft,
     * submitted, reviewing, approved, rejected, escalated).
     *
     * If provided, limits results to seller onboarding records with the
     * specified workflow state.
     */
    onboarding_status?: string | undefined;

    /**
     * Optional. Include records created after this time (ISO8601
     * timestamp).
     *
     * Useful for filtering applications submitted in a certain period.
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional. Include records created before this time (ISO8601
     * timestamp).
     *
     * Paired with created_at_from, allows querying by date range.
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional. Restrict listing to a particular user (onboarding
     * applicant's user_id).
     *
     * If present, only records belonging to this user are returned.
     */
    user_id?: string | undefined;

    /**
     * Optional. Filter applications associated with a given store ID.
     *
     * Restricts results to onboarding cases for this store, typically for
     * administrative review.
     */
    store_id?: string | undefined;

    /**
     * Optional. Full-text search filter for application_data or associated
     * metadata.
     *
     * Clients may use this to search for key terms or identifiers in
     * application data blobs.
     */
    search?: string | undefined;

    /**
     * Pagination: page number to return (starts at 1).
     *
     * Defaults to 1 if omitted.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Pagination: maximum records per page.
     *
     * Typical defaults are platform-configured values (such as 20, 50,
     * 100).
     */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request body for creation of a new seller onboarding application. When
   * onboarding is created, at minimum user_id, application_data and
   * onboarding_status must be provided. Optional store_id, current_stage, and
   * notes may be added if relevant at creation time.
   */
  export type ICreate = {
    /** UUID of the applicant in ai_commerce_user_authentications. Required. */
    user_id: string & tags.Format<"uuid">;

    /**
     * Optional. Store ID to associate if created in onboarding (may be
     * null/unknown at creation time).
     */
    store_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Required. JSON-encoded application data and supporting evidence (see
     * schema comment).
     *
     * Must be a string serializing arbitrary-structure application forms,
     * uploads, and compliance artifacts.
     */
    application_data: string;

    /**
     * Required. Business workflow status at creation (e.g., 'draft',
     * 'submitted', or 'under_review').
     */
    onboarding_status: string;

    /**
     * Business progress stage label (if supported by workflow; e.g., KYC
     * review, document submission, compliance hold).
     *
     * Not required for all flows, but may be present for audits or
     * analytics.
     */
    current_stage?: string | undefined;

    /** Optional business or admin note at creation. */
    notes?: string | undefined;
  };

  /**
   * Request payload for updating an existing seller onboarding case. Any
   * number of these fields may be provided for partial or full update. Fields
   * not provided are left unchanged.
   */
  export type IUpdate = {
    /**
     * Optional. Updated JSON-encoded application data, used for state
     * amendment, document upload, or business evidence refresh.
     */
    application_data?: string | undefined;

    /**
     * Optional. Business workflow state change (e.g., promotion to
     * 'reviewing', escalation, or rejection).
     *
     * Update must comply with legal and business process rules.
     */
    onboarding_status?: string | undefined;

    /**
     * Optional. Updated onboarding progress stage to reflect advancement or
     * rollback in stages.
     */
    current_stage?: string | undefined;

    /**
     * Optional. Updated admin/business notes for review, compliance, or
     * onboarding assistance.
     */
    notes?: string | undefined;

    /**
     * Optional. Set/modify the store entity linked by this onboarding (if
     * approved or business logic requires).
     */
    store_id?: (string & tags.Format<"uuid">) | undefined;
  };

  /**
   * Summary view of seller onboarding application, omitting large text fields
   * such as application_data and notes, focusing on workflow status,
   * progress, and core linkages. Used in admin portals and onboarding task
   * overviews. Field assignments and types are governed strictly by the
   * ai_commerce_seller_onboarding table commentary and constraints.
   */
  export type ISummary = {
    /**
     * Primary key for the onboarding application
     * (ai_commerce_seller_onboarding.id).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Foreign key referencing the applicant's authentication account
     * (ai_commerce_user_authentications.id).
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Optional reference to the related store record
     * (ai_commerce_stores.id) if established during onboarding.
     */
    store_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Current onboarding workflow status, e.g., 'draft', 'submitted',
     * 'reviewing', 'approved', 'rejected', 'escalated' (see
     * ai_commerce_seller_onboarding.onboarding_status).
     */
    onboarding_status: string;

    /**
     * Indicates the present workflow stage, such as
     * 'identity_verification', 'business_submission', etc. Null if not yet
     * advanced (from ai_commerce_seller_onboarding.current_stage).
     */
    current_stage?: string | null | undefined;

    /**
     * Onboarding application creation timestamp
     * (ai_commerce_seller_onboarding.created_at, ISO8601).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update timestamp for the onboarding record
     * (ai_commerce_seller_onboarding.updated_at, ISO8601).
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft delete timestamp for logical removal of the onboarding record
     * (ai_commerce_seller_onboarding.deleted_at, ISO8601). Null if active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
