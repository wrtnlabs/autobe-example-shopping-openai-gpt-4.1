import { tags } from "typia";

/**
 * Fraud/abuse audit event record. Immutable evidence and analytics for
 * compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommercePaymentFraudEvent = {
  /** Unique identifier for the fraud event. */
  id: string;

  /** Business/analytics event code indicating the type of fraud detected. */
  event_code: string;

  /** Type of affected entity (payment, coupon, deposit, mileage, transaction). */
  entity_type: string;

  /** Primary key of the affected entity. */
  entity_id: string;

  /**
   * Fraud investigation status: detected, under_review, confirmed, or
   * dismissed.
   */
  status: string;

  /** Human readable free-form description of the event. */
  description?: string | undefined;

  /** Timestamp the fraud event was detected (ISO 8601). */
  detected_at: string & tags.Format<"date-time">;

  /** Timestamp the event was reviewed/resolved/audited (ISO 8601). */
  reviewed_at?: (string & tags.Format<"date-time">) | undefined;

  /** Fraud record creation timestamp (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Fraud record last updated timestamp (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp for soft deletion of the fraud event record. Null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IAiCommercePaymentFraudEvent {
  /**
   * Filtering, search, and pagination params for querying fraud event
   * history.
   */
  export type IRequest = {
    /** Fraud event code: MULTI_REDEMPTION, ABUSE, EXTERNAL_INCIDENT, etc. */
    event_code?: string | undefined;

    /** Affected entity type: payment, coupon, deposit, mileage, transaction. */
    entity_type?: string | undefined;

    /**
     * Fraud investigation status (detected, under_review, confirmed,
     * dismissed).
     */
    status?: string | undefined;

    /** Start timestamp ISO 8601 for detection event filtering. */
    detected_at_start?: (string & tags.Format<"date-time">) | undefined;

    /** End timestamp ISO 8601 for detection event filtering. */
    detected_at_end?: (string & tags.Format<"date-time">) | undefined;

    /** Free-text description search. */
    description?: string | undefined;

    /** Page number for pagination (default 1). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Results per page (default 20-50). */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Sort by detected_at field (asc/desc). */
    sort?: "asc" | "desc" | undefined;
  };

  /**
   * Create a new fraud event log entry. All fields required except
   * description, which may be omitted/null. Used by admins and compliance to
   * register detected fraud events.
   */
  export type ICreate = {
    /**
     * Fraud event code (e.g. MULTI_REDEMPTION, ABUSE, EXTERNAL_INCIDENT) -
     * case sensitive.
     */
    event_code: string;

    /**
     * Entity type for fraud link (payment, coupon, deposit, mileage,
     * transaction).
     */
    entity_type: string;

    /** UUID string referring to entity within entity_type. */
    entity_id: string;

    /**
     * Fraud event investigation status (detected, under_review, confirmed,
     * dismissed), etc.
     */
    status: string;

    /**
     * Human-readable description/reason/context for audit or compliance.
     * May be omitted or null.
     */
    description?: string | null | undefined;

    /** ISO 8601 date/time when this event was detected/created. */
    detected_at: string & tags.Format<"date-time">;
  };

  /**
   * Update an existing fraud event. All fields optional. Use null for
   * detected_at or reviewed_at to clear them, string for date otherwise. Not
   * all properties need changing; only supply those being updated.
   */
  export type IUpdate = {
    /** Fraud event code update (optional). */
    event_code?: string | undefined;

    /** Entity type for fraud link (optional). */
    entity_type?: string | undefined;

    /** UUID string referring to entity within entity_type (optional). */
    entity_id?: string | undefined;

    /** Fraud event status update (optional). */
    status?: string | undefined;

    /** Update fraud event human-description (optional) */
    description?: string | null | undefined;

    /** Detection time (ISO8601, optional if not changing). */
    detected_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** When this event was last reviewed/updated (optional, may be null). */
    reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
