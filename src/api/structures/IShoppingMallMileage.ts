import { tags } from "typia";

/**
 * Entity representing a user's mileage (loyalty/point system) account in the
 * shopping mall. Each mileage record tracks point balance, status (active,
 * expired, frozen), expiration details, and audit metadata. All fields map 1:1
 * to the schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallMileage = {
  /** Primary key. Unique identifier for the mileage account record. */
  id: string & tags.Format<"uuid">;

  /** The customer UUID this mileage account belongs to. */
  shopping_mall_customer_id: string & tags.Format<"uuid">;

  /**
   * Current usable mileage/point balance. Non-negative value representing
   * available loyalty points.
   */
  balance: number;

  /**
   * Account status (active, expired, frozen). Indicates current ability to
   * accrue or spend mileage.
   */
  status: string;

  /**
   * Datetime when all current mileage expires if not renewed or spent. Used
   * for campaign/bonus mileages with deadlines.
   */
  expired_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp when the mileage account was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last update to the mileage account. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp; null if active. If present, this account is
   * considered logically removed and excluded from active use.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IShoppingMallMileage {
  /**
   * Request DTO for filtering and paginating the list of mileage (loyalty
   * point) accounts in the shopping mall system. Used by admins for analytics
   * and compliance. Only the fields listed in the schema may be used for
   * search.
   */
  export type IRequest = {
    /** Account status (active, expired, frozen). */
    status?: string | undefined;

    /**
     * Filter for minimum balance to retrieve accounts with at least this
     * amount.
     */
    min_balance?: number | undefined;

    /**
     * Filter for maximum balance to retrieve accounts with no more than
     * this value.
     */
    max_balance?: number | undefined;

    /** Return accounts expiring before this ISO-8601 timestamp. */
    expired_before?: (string & tags.Format<"date-time">) | undefined;

    /** Return accounts expiring after this ISO-8601 timestamp. */
    expired_after?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter results to mileage accounts associated with this customer
     * UUID.
     */
    customer_id?: (string & tags.Format<"uuid">) | undefined;

    /** Pagination: page number to retrieve. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination: number of items per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Payload schema for creating a new mileage (loyalty/point) account entity.
   * Used by admins for onboarding or campaign launches. Only the listed
   * fields are valid for creation.
   */
  export type ICreate = {
    /**
     * The UUID of the customer this new mileage account will be attached
     * to.
     */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /** Initial mileage/point balance. Must be a non-negative number. */
    balance: number;

    /**
     * Initial account status for the mileage account (e.g., 'active',
     * 'expired', 'frozen').
     */
    status: string;

    /**
     * Optional expiration date for the account balance or campaign mileage,
     * as ISO-8601 timestamp. Null for no expiration.
     */
    expired_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Object schema for updating a mileage (loyalty/point system) account
   * record in the shopping_mall_mileages table. Includes fields for status,
   * balance, and expiry, supporting role-based field mutability according to
   * business rules (see description). All properties must match their
   * definitions in the underlying Prisma schema; any omitted field will not
   * be updated unless explicitly set to null for nullable types. Audit
   * logging is expected for all changes.
   */
  export type IUpdate = {
    /**
     * Current usable mileage/point balance (system currency units or
     * points, depending on configuration). Non-negative value representing
     * available loyalty points. When updating, must not decrement below
     * zero. Only administrators can directly set balance except where
     * business logic allows user adjustment (e.g., points redemption order
     * flows).
     */
    balance?: number | undefined;

    /**
     * Account status (active, expired, frozen, etc.). Indicates current
     * ability to accrue or spend mileage. Possible values may be defined by
     * business rules/enum mapping. Examples: 'active', 'expired', 'frozen'.
     * Only mutable by administrators or customer in specific business cases
     * (e.g., self-initiated withdrawal).
     */
    status?: string | undefined;

    /**
     * Datetime when all current mileage expires if not renewed or spent. If
     * null, no expiration is set. Must be an ISO 8601 string when present.
     */
    expired_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Soft-delete timestamp; null if active. Updated by business
     * soft-delete flows or administrative erasure for compliance.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary DTO for a customer's mileage (loyalty point) account. Used in
   * paginated or index listings for admin, support, or analytics flows.
   * Aligned to shopping_mall_mileages schema.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique mileage account identifier for the customer.
     */
    id: string & tags.Format<"uuid">;

    /** FK reference to the customer account which owns this mileage. */
    shopping_mall_customer_id: string & tags.Format<"uuid">;

    /**
     * Current usable mileage/point balance. Non-negative value representing
     * available loyalty points.
     */
    balance: number;

    /** Status of the point account (active, expired, frozen). */
    status: string;

    /**
     * Datetime when all current mileage expires if not renewed or spent.
     * May be null for system-default, no expiry, or non-expiring bonus.
     * Used for campaign logic.
     */
    expired_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when mileage account was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last update to the mileage account. */
    updated_at: string & tags.Format<"date-time">;
  };
}
