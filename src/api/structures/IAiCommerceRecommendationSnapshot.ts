import { tags } from "typia";

/**
 * Single row from ai_commerce_recommendation_snapshots. Encapsulates a
 * point-in-time log of recommendations issued to a user, with full context, for
 * compliance, analytics, or responsible-AI auditing.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceRecommendationSnapshot = {
  /** Unique identifier of the recommendation snapshot event (uuid). */
  id: string & tags.Format<"uuid">;

  /** UUID of the buyer/user who received the recommendations. */
  ai_commerce_buyer_id: string & tags.Format<"uuid">;

  /** Timestamp (ISO 8601 format) indicating when the snapshot event occurred. */
  snapshot_timestamp: string & tags.Format<"date-time">;

  /**
   * JSON-serialized recommendations list (typically an array/object
   * stringified for audit/compliance).
   */
  recommendations_data: string;

  /**
   * JSON-encoded string with recommendation context (may include session,
   * search data, or event triggers; nullable).
   */
  context_data?: string | null | undefined;
};
export namespace IAiCommerceRecommendationSnapshot {
  /**
   * Request query DTO for searching/paginating recommendation snapshot logs.
   * Allows advanced analytics filtering by buyer, snapshot timestamp, and
   * paging.
   */
  export type IRequest = {
    /** UUID of the buyer to filter recommendation snapshots (optional). */
    ai_commerce_buyer_id?: (string & tags.Format<"uuid">) | undefined;

    /** Lower bound of snapshot timestamp (inclusive, ISO8601). */
    snapshot_timestamp_from?: (string & tags.Format<"date-time">) | undefined;

    /** Upper bound of snapshot timestamp (inclusive, ISO8601). */
    snapshot_timestamp_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination (1-based). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page for pagination. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };
}
