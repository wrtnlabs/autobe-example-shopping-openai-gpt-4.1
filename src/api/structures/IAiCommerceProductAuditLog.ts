import { tags } from "typia";

/**
 * Product audit log entity, immutable entry for capturing historical
 * edit/compliance/evidence for a product, as per ai_commerce_product_audit_logs
 * table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceProductAuditLog = {
  /** Primary key of the product audit log entry. */
  id: string;

  /** Product identifier this audit log entry is associated with. */
  product_id: string;

  /**
   * Event/action performed (create, update, compliance_review, price_change,
   * content_edit, etc.).
   */
  event_type: string;

  /** ID of the actor (user/admin/system) who performed the audit action. */
  actor_id: string;

  /** JSON stringified state before the action (null for create events). */
  before_json?: string | null | undefined;

  /** JSON stringified state after the action (null for deletes). */
  after_json?: string | null | undefined;

  /** Timestamp when the audit log was created (ISO 8601). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IAiCommerceProductAuditLog {
  /**
   * Request and filter parameters for searching product audit logs
   * (ai_commerce_product_audit_logs). Supports pagination and common
   * filtering.
   */
  export type IRequest = {
    /** Product ID to filter audit logs. Optional. */
    product_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of event logged (e.g., 'create', 'update', 'compliance_review').
     * Optional.
     */
    event_type?: string | undefined;

    /** Filter audit events performed by a particular user/admin. Optional. */
    actor_id?: (string & tags.Format<"uuid">) | undefined;

    /** Pagination page number. Optional. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination page size. Optional. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };
}
