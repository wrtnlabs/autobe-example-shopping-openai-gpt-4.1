import { tags } from "typia";

import { IAiCommerceOrderItem } from "./IAiCommerceOrderItem";

/**
 * Full order entity as persisted in ai_commerce_orders, minus related entities.
 * Used in both response DTOs and for storage/Aggregate logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceOrder = {
  /** Order's primary key UUID. */
  id: string & tags.Format<"uuid">;

  /** UUID for the buyer who placed the order. */
  buyer_id: string & tags.Format<"uuid">;

  /** UUID of the channel from which the order was created. */
  channel_id: string & tags.Format<"uuid">;

  /**
   * Unique business/tracking code for display and integrations (e.g.,
   * 'ORD-20250001').
   */
  order_code: string;

  /**
   * Required current order status (created, payment_pending, shipped,
   * delivered, cancelled, closed, etc).
   */
  status: string;

  /**
   * Optional workflow context field for advanced automation or custom
   * business rules.
   */
  business_status?: string | null | undefined;

  /** Total price for the order, locked in at time of checkout. */
  total_price: number;

  /** Amount paid toward total order cost (may be partial until fully paid). */
  paid_amount: number;

  /** ISO currency code for the order (e.g., 'USD', 'KRW'). */
  currency: string;

  /**
   * Foreign key referencing the snapshot of the shipping/billing address at
   * order time.
   */
  address_snapshot_id: string & tags.Format<"uuid">;

  /** Order creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of the most recent update to the order. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete (logical removal); set if the order is deleted for
   * compliance.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAiCommerceOrder {
  /**
   * Filtering and pagination payload for advanced order search/listing. For
   * use by admin or dashboard interfaces; supports all major order query
   * dimensions, pagination, and sorting.
   */
  export type IRequest = {
    /** Search by full or partial order code. */
    order_code?: string | undefined;

    /** Filter orders by associated buyer's UUID. */
    buyer_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by source channel UUID. */
    channel_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Order status filter (created, payment_pending, shipped, delivered,
     * cancelled, closed, etc).
     */
    status?: string | undefined;

    /** Workflow or business-specific status field for advanced filtering. */
    business_status?: string | undefined;

    /**
     * Start date (inclusive) for filtering orders by creation time (ISO
     * date).
     */
    from_date?: (string & tags.Format<"date">) | undefined;

    /**
     * End date (inclusive) for filtering orders by creation time (ISO
     * date).
     */
    to_date?: (string & tags.Format<"date">) | undefined;

    /** Minimum total order amount for price-based query filter. */
    min_total_price?: number | undefined;

    /** Maximum total order amount for price-based query filter. */
    max_total_price?: number | undefined;

    /** Page number for pagination (default 1). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Records per page for pagination (default 20, max 100). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Field to sort by (created_at, status, order_code, total_price, etc). */
    sort_by?: string | undefined;

    /** Sort direction: 'asc' or 'desc' (default 'desc'). */
    sort_dir?: "asc" | "desc" | undefined;
  };

  /**
   * Order creation payload. See ai_commerce_orders schema for mapping to DB.
   * Required fields mapped to business rules, with nested order item
   * creation.
   */
  export type ICreate = {
    /**
     * Unique identifier for the buyer placing the order. Must reference an
     * existing ai_commerce_buyer.id.
     */
    buyer_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier for the sales channel where the order is placed.
     * Must reference an existing ai_commerce_channels.id.
     */
    channel_id: string & tags.Format<"uuid">;

    /**
     * Unique business/tracking code for the order. Human-readable, e.g.,
     * 'ORD-20250001'.
     */
    order_code: string;

    /** Initial order status, e.g., 'created', 'payment_pending'. */
    status: string;

    /** Total price for the order at checkout. Locked at payment. */
    total_price: number;

    /** ISO currency code (e.g., 'KRW', 'USD'). */
    currency: string;

    /**
     * Reference to the address snapshot
     * (ai_commerce_user_address_snapshots.id) used for this order.
     */
    address_snapshot_id: string & tags.Format<"uuid">;

    /**
     * Line items for this order. Each entry must conform to
     * IAiCommerceOrderItem.ICreate specification.
     */
    ai_commerce_order_items: IAiCommerceOrderItem.ICreate[];
  };

  /**
   * Update fields for an order as supported by allowed business transitions.
   * Optional fields only; partial update pattern.
   */
  export type IUpdate = {
    /** New or updated workflow status for order. */
    business_status?: string | undefined;

    /**
     * (Optional) Update delivery address snapshot for formats supporting
     * address changes pre-fulfillment.
     */
    address_snapshot_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional, admin-only) Update cumulative paid amount, typically in
     * conjunction with payment events.
     */
    paid_amount?: number | undefined;

    /** (Optional) New order status, e.g., 'shipped', 'delivered'. */
    status?: string | undefined;

    /** Optional business note, escalation reason or support field. */
    note?: string | undefined;
  };

  /**
   * Summary information for an orderâ€”buyer/channel linkage, code, status,
   * amounts, and lifecycle timestamps.
   *
   * Drawn from ai_commerce_orders, these fields enable dashboards, lists,
   * analytics, and high-level user/business reporting. All values adhere to
   * type/format constraints as specified by the underlying schema.
   * Relationships not expanded in this summary type (see IAICommerceOrder for
   * detail views).
   */
  export type ISummary = {
    /** Order UUID (ai_commerce_orders.id). */
    id: string & tags.Format<"uuid">;

    /** Buyer UUID who placed the order (ai_commerce_orders.buyer_id). */
    buyer_id: string & tags.Format<"uuid">;

    /**
     * Sales channel UUID the order belongs to
     * (ai_commerce_orders.channel_id).
     */
    channel_id: string & tags.Format<"uuid">;

    /** Human/business readable order code (e.g., ORD-20250001). */
    order_code: string;

    /**
     * Current order status (e.g., 'created', 'payment_pending', 'shipped',
     * 'delivered').
     */
    status: string;

    /** Total price amount for the order as recorded on checkout. */
    total_price: number;

    /**
     * Cumulative paid amount at time of summary
     * (ai_commerce_orders.paid_amount).
     */
    paid_amount: number;

    /** ISO currency code for payment/settlement (e.g., 'USD', 'KRW'). */
    currency: string;

    /**
     * Timestamp for when the order was created
     * (ai_commerce_orders.created_at).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for last update to order state
     * (ai_commerce_orders.updated_at).
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
