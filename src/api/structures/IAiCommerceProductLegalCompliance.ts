import { tags } from "typia";

/**
 * Legal/compliance metadata record for a product. Based on the
 * ai_commerce_product_legal_compliance table. Returned by GET operations
 * (public/readable) or as part of product detail. Many fields may be nullable
 * for non-compliance or old products. Refer to schema and description for
 * details.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAiCommerceProductLegalCompliance = {
  /** Unique identifier for this compliance row. UUID. */
  id: string;

  /**
   * Parent product's UUID. See
   * ai_commerce_product_legal_compliance.product_id.
   */
  product_id: string;

  /**
   * Jurisdiction (country/region) for this compliance entry. E.g., 'KR',
   * 'EU', 'US'.
   */
  compliance_region: string;

  /**
   * Comma-separated list of certification, approval, or regulatory numbers
   * for this product in the specified region. May be null for non-required.
   */
  certification_numbers?: string | null | undefined;

  /** Minimum age for purchase (may be null if not age-restricted). */
  restricted_age?: (number & tags.Type<"int32">) | null | undefined;

  /** True if product is hazardous/restricted/special handling. */
  hazard_flag: boolean;

  /**
   * Current compliance status: 'pending', 'approved', 'rejected', 'expired',
   * etc.
   */
  compliance_status: string;

  /** ISO-8601 date-time of last compliance review. Null if never reviewed. */
  last_reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Serialized JSON describing evidence or attachments for compliance. May be
   * null if no evidence present.
   */
  evidence_json?: string | null | undefined;
};
export namespace IAiCommerceProductLegalCompliance {
  /**
   * Upsert legal/compliance metadata for a product in a given region or
   * jurisdiction. This entity reflects the structure of
   * ai_commerce_product_legal_compliance and must be used only with actual
   * fields existing in the schema. Required fields: compliance_region (region
   * code), hazard_flag (bool), compliance_status (business status). Optional
   * fields: certification_numbers, restricted_age, last_reviewed_at,
   * evidence_json.
   */
  export type IUpdate = {
    /**
     * Jurisdiction code for which this compliance entry applies. Must match
     * a recognized jurisdiction string as defined by the business logic or
     * region mapping.
     */
    compliance_region: string;

    /**
     * Comma-separated list of certificate or approval numbers required for
     * the product's regulatory or compliance status in this region. May be
     * null if not applicable.
     */
    certification_numbers?: string | null | undefined;

    /**
     * Minimum age required for purchase/use under local law if applicable,
     * as per compliance check. Omit or set to null for unrestricted items.
     */
    restricted_age?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * True if the item is hazardous, restricted, or requires special
     * handling in this jurisdiction. False otherwise.
     */
    hazard_flag: boolean;

    /**
     * Current compliance workflow status for the product in this region.
     * Examples: 'pending', 'approved', 'rejected', 'expired'. Must match
     * one of the allowed domain status names.
     */
    compliance_status: string;

    /**
     * Timestamp of the last compliance check or regulatory review for this
     * product in this jurisdiction. Use ISO 8601 UTC format. May be null if
     * new or never reviewed.
     */
    last_reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * JSON-encoded evidence or attachments array (as stringified JSON) for
     * providing supporting compliance documentation, e.g., file IDs, review
     * context. May be null if no evidence attached.
     */
    evidence_json?: string | null | undefined;
  };
}
