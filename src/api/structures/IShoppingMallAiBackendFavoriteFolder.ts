import { tags } from "typia";

/**
 * A folder/group entity for organizing a user's favorites/bookmarks. Referenced
 * in shopping_mall_ai_backend_favorite_folders. Used for grouping, notification
 * management, and personalization.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendFavoriteFolder = {
  /**
   * Unique identifier of this favorite folder. Sourced from the
   * shopping_mall_ai_backend_favorite_folders table (field: id).
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the owning customer. Never exposed on creation, but is used for
   * ownership security. (shopping_mall_ai_backend_customer_id)
   */
  shopping_mall_ai_backend_customer_id: string & tags.Format<"uuid">;

  /** User-assigned folder name for organizational/grouping. (name) */
  name: string;

  /** Optional folder description for personal notes (nullable). */
  description?: string | null;

  /** Creation timestamp, UTC string (created_at). Set by system, read-only. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp, UTC string (updated_at). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Nullable timestamp for soft deletion. Logical delete for
   * evidence/business compliance (nullable).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IShoppingMallAiBackendFavoriteFolder {
  /** Search/paging/filter input for favorite folders. */
  export type IRequest = {
    /** Page number (1-indexed) for paginated list requests. Optional. */
    page?: (number & tags.Type<"int32">) | null;

    /**
     * Page size for pagination. Optional. Default may be applied by
     * backend.
     */
    limit?: (number & tags.Type<"int32">) | null;

    /** Partial search for folder name (case insensitive). */
    name?: string | null;

    /** Filter: Created after/on this UTC time. Optional. */
    created_from?: (string & tags.Format<"date-time">) | null;

    /** Filter: Created before/on this UTC time. Optional. */
    created_to?: (string & tags.Format<"date-time">) | null;

    /**
     * Sorting field. Optional. Must be one of: created_at, name,
     * updated_at.
     */
    sort?: "created_at" | "name" | "updated_at" | null;

    /** Sort order: asc or desc. Default descending. */
    order?: "asc" | "desc" | null;
  };

  /** Request body for creating a new favorite folder. Only name is required. */
  export type ICreate = {
    /** User-given name for new favorite folder. Must be unique per user. */
    name: string;

    /** Optional note for personal folder (nullable). */
    description?: string | null;
  };

  /** Fields for updating a favorite folder; all fields optional. */
  export type IUpdate = {
    /** Optionally update favorite folder display name. */
    name?: string;

    /** Optionally update folder description/null to clear. */
    description?: string | null;
  };

  /** Paginated summary view for a favorite folder. */
  export type ISummary = {
    /** UUID of the favorite folder (summary view). */
    id: string & tags.Format<"uuid">;

    /** Display name of the folder (summary). */
    name: string;

    /** Optional folder description (nullable, summary only). */
    description?: string | null;

    /** Creation time (summary, UTC). */
    created_at: string & tags.Format<"date-time">;

    /** Update time (summary, UTC). */
    updated_at: string & tags.Format<"date-time">;
  };
}
