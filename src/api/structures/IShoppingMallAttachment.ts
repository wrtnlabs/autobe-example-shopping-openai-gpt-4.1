import { tags } from "typia";

/**
 * Primary metadata object for a file attachment registered in the platform
 * (shopping_mall_attachments table). Encapsulates all file meta, access control
 * hints, business context, and audit timestamps. Underlies file references for
 * all business domains and access flows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAttachment = {
  /**
   * Unique identifier (UUID) for the file attachment record. Primary key for
   * all attachment references in the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Original or user-assigned file name including extension, presented for
   * display and legacy traceability. Typically has a max length of 256
   * characters.
   */
  filename: string;

  /**
   * File extension for the attachment (e.g., 'jpg', 'pdf'), typically
   * lowercase. Used for filtering, content negotiation, and UI rendering.
   */
  file_extension: string;

  /**
   * MIME type for the uploaded file (e.g., 'image/png', 'application/pdf').
   * Used for server-side rendering logic, evidence processing, and media
   * browser compatibility.
   */
  mime_type: string;

  /**
   * Size of the file in bytes. Used for client download estimates, quota
   * enforcement, and system monitoring.
   */
  size_bytes: number & tags.Type<"int32">;

  /**
   * Direct URL or CDN URI for secure download access. May reference S3, GCS,
   * or other file storage backends. Permissions are enforced via the
   * 'permission_scope' property.
   */
  server_url: string & tags.MaxLength<80000>;

  /**
   * If true, this attachment can be accessed via unauthenticated public
   * links; if false, requires access control enforcement. Used to serve media
   * in public-facing contexts.
   */
  public_accessible: boolean;

  /**
   * String tag describing what roles, domains, or business logic layers may
   * access this attachment. Values could include 'admin_only', 'seller',
   * 'customer', 'public', or domain-specific tags. Used to scope access
   * handlers in file delivery endpoints. Optional.
   */
  permission_scope?: string | undefined;

  /**
   * Describes the business use-case, process, or origin context for the
   * uploaded file (e.g. 'product', 'board_post', 'order', etc). Useful for
   * grouping, analytics, and compliance. Optional.
   */
  logical_source?: string | undefined;

  /**
   * MD5 (or other hash) for file integrity validation and de-duplication.
   * Uniqueness enforced at the DB level. Used for anti-tampering, evidence,
   * and S3 dedup.
   */
  hash_md5: string;

  /**
   * Human-readable note, description, or annotation for the file attachment.
   * Used in file managers, review tools, or audit logs. Optional.
   */
  description?: string | undefined;

  /**
   * Timestamp in ISO8601 when the attachment was registered/uploaded. Used
   * for audit trail and time-based evidence.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when metadata or file versioning was last updated. Used for
   * evidence chain, UI highlighting, and compliance.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the record was soft deleted (or null if not deleted). Used
   * for logical deletion pattern. Optional.
   */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IShoppingMallAttachment {
  /**
   * Search and filter criteria for attachment file listing
   * (shopping_mall_attachments). Used for paginated, filtered search of
   * uploaded files across all modules. All fields are optional and can be
   * freely combined for advanced queries.
   */
  export type IRequest = {
    /**
     * Filter attachments by the filename (case-insensitive, partial match
     * allowed). Used for filename searches in the attachment browser or
     * evidence module.
     */
    filename?: string | undefined;

    /**
     * Filter files by extension (e.g., 'jpg', 'pdf'). No dot prefix
     * required. Typically used to restrict results to certain upload
     * formats.
     */
    file_extension?: string | undefined;

    /**
     * Filter attachments based on MIME type (e.g., 'image/png',
     * 'application/pdf'). Enables searching for file types regardless of
     * extension.
     */
    mime_type?: string | undefined;

    /**
     * Filters attachments to those with a specific permission scope, such
     * as 'admin_only', 'seller', 'customer', 'public', as defined in system
     * configuration. Useful for permission audits or access listings.
     */
    permission_scope?: string | undefined;

    /**
     * Restricts results to files originating from a specific module or
     * business logic context (e.g., 'product', 'order', 'review',
     * 'board_post'). Enables module- or feature-specific evidence tracing
     * or content curation.
     */
    logical_source?: string | undefined;

    /** Filter attachments created at or after the given ISO8601 timestamp. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter attachments created at or before the given ISO8601 timestamp. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * If true, only return attachments that are soft deleted (deleted_at
     * not null); if false, return only active (not deleted) files.
     */
    deleted_at?: boolean | undefined;

    /** Page number for result pagination (starts at 1). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of results per page. Typical default is 20 or 50; must
     * not exceed 100.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Sort order as a string, with values such as 'created_at desc',
     * 'created_at asc', 'filename asc', etc. Must adhere to backend-allowed
     * sort columns/directions.
     */
    sort?: string | undefined;
  };

  /**
   * Payload for registering a new file attachment entry in the platform. Does
   * not allow for backdating evidenceâ€”timestamps are system-assigned. Only
   * meta fields required at upload step are included; permission,
   * logical_source, and description are optional for business/future
   * extensibility. File versioning, evidence, and downstream linkage are
   * handled separately.
   */
  export type ICreate = {
    /**
     * Original filename for the file upload, including extension. Used for
     * display, traceability, and legacy import.
     */
    filename: string;

    /**
     * File extension (e.g., 'jpg', 'pdf') for rapid filtering and display.
     * Should be provided explicitly if not inferrable from file upload.
     */
    file_extension: string;

    /**
     * MIME type (e.g., 'image/png', 'application/pdf') for server/logic
     * compatibility. Must match the file content type. Used for evidence
     * intake and content negotiation.
     */
    mime_type: string;

    /**
     * File size in bytes, used for quota enforcement, browser reporting,
     * and performance.
     */
    size_bytes: number & tags.Type<"int32">;

    /**
     * (Write-once at upload) The storage location or CDN URI for this
     * attachment. Must be a valid URI, either from the upload service or
     * file ingestion backend.
     */
    server_url: string & tags.MaxLength<80000>;

    /**
     * If true, the file is to be made available for public download without
     * authentication. Used for product images or public bulletin boards. If
     * false, permission enforcement applies.
     */
    public_accessible: boolean;

    /**
     * Business tag for domain/role-based permissions and access
     * restrictions. Typical values: 'admin_only', 'seller', 'customer',
     * 'public', or custom tags. Optional.
     */
    permission_scope?: string | undefined;

    /**
     * Describes which business domain, feature, or context is registering
     * this attachment for analytics or audit. Optional. E.g.,
     * 'product-image', 'order-receipt', 'legal-document', etc.
     */
    logical_source?: string | undefined;

    /**
     * Freeform note or context annotation for the file, presented in
     * admin/file-manager UI, not evidence chain. Optional.
     */
    description?: string | undefined;
  };

  /**
   * Payload for updating mutable metadata for an attachment entity
   * (shopping_mall_attachments table). Only defined fields in this DTO may be
   * updated; other system/identity/audit fields are immutable and excluded.
   */
  export type IUpdate = {
    /**
     * The user-supplied or system-updated filename for the attachment,
     * including extension.
     *
     * Updating this field changes the main display name shown to users for
     * this attachment, which can be important for download UX and system
     * evidence. It must match the file extension constraint where required
     * and adhere to business upload naming policies.
     *
     * Null or empty string is forbidden. Example: 'invoice_20241004.pdf'.
     */
    filename?: string | undefined;

    /**
     * The new or corrected file extension for the attachment, beginning
     * with a dot (e.g. '.pdf') and matching the format of the underlying
     * file content. This field is used to quickly determine file type for
     * download or UI display, and must accurately reflect the MIME type of
     * the content.
     *
     * Changing this value does not alter the file itself, only the
     * registry's knowledge or display of the type. Leave unchanged for
     * non-update. Example: '.jpg'.
     */
    file_extension?: string | undefined;

    /**
     * The new or corrected MIME type for this attachment.
     *
     * Standard IANA content-type, e.g. 'application/pdf', 'image/png',
     * 'text/html'. Used by downstream modules to handle, validate, or serve
     * the file appropriately. Must accurately describe the file content;
     * this field may not be changed for compliance-locked files or records
     * that are already deleted.
     */
    mime_type?: string | undefined;

    /**
     * Optional update to the access permission scope string for this
     * attachment. Examples: 'admin_only', 'customer', 'seller',
     * 'audit_only'.
     *
     * Determines who can download or view this attachment and may be used
     * by file serving systems to implement ACL/role-based controls on
     * download. May be null if intended for public/unrestricted access.
     */
    permission_scope?: string | undefined;

    /**
     * Optional update to the logical business source or origin module of
     * the attachment.
     *
     * E.g. 'product', 'board_post', 'order', 'review'. This assists with UI
     * context, analytics, and system lifecycle management. Leave null for
     * unchanged or if the original context does not require update.
     */
    logical_source?: string | undefined;

    /**
     * The updated description or human-readable context for this file
     * attachment. Updated to provide more business or evidence-relevant
     * information for admins, users, or compliance workflows. Optional.
     * Long values are allowed and may support Markdown or business
     * formatting rules. Non-null strings must adhere to platform maximum
     * length.
     */
    description?: string | undefined;
  };
}
