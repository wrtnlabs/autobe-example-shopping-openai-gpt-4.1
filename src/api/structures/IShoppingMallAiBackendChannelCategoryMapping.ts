import { tags } from "typia";

/**
 * Represents a concrete link between a navigation section and a category within
 * a channel. This mapping underpins navigation logic, product discovery
 * structures, and analytics reporting in omnichannel environments. Used
 * primarily in administrative operations for managing cross-section/category
 * relationships, with traceability for evidence, audit, and rollback. Only
 * direct reference fields and evidence/audit fields are included.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IShoppingMallAiBackendChannelCategoryMapping = {
  /**
   * Unique identifier for the mapping between a channel section and a channel
   * category. Maps directly to the primary key in the corresponding table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID reference to the channel section entity for this mapping. Indicates
   * from which section the mapping is created.
   */
  shopping_mall_ai_backend_channel_section_id: string & tags.Format<"uuid">;

  /**
   * UUID reference to the channel category entity for this mapping. Indicates
   * the navigation/analytics category being mapped to the section.
   */
  shopping_mall_ai_backend_channel_category_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the mapping record was created. Read-only evidence field
   * for audit and business history.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IShoppingMallAiBackendChannelCategoryMapping {
  /**
   * Search/filter object for paginated queries of channel-section to
   * channel-category mappings. Used in admin and analytics queries to
   * retrieve, audit, or manage the relationships between navigation sections
   * and defined categories. Includes support for pagination, sorting, and
   * context filtering for high-performance administration in large or
   * multichannel environments. All parameters are optional, and null values
   * revert to default system or API behavior. Intended for service and
   * backoffice interfaces for flexible navigation/category management.
   */
  export type IRequest = {
    /**
     * Optional page number for paginated queries. Used for scrolling
     * through large result sets. Null defaults to the first page.
     */
    page?: (number & tags.Type<"int32">) | null;

    /**
     * Optional page size for paginated queries. Limits the number of
     * results per response for performance and UI handling. Null uses
     * system default.
     */
    limit?: (number & tags.Type<"int32">) | null;

    /**
     * Optional sorting parameter for specifying result ordering (e.g., by
     * creation date, code, etc). Null implies default system order.
     */
    sort?: string | null;

    /**
     * Optional filter to restrict results to a specific channel category.
     * Null returns all mappings.
     */
    filter_category_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Optional filter to restrict results to a specific channel section.
     * Null returns all mappings.
     */
    filter_section_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Optional ISO date-time (RFC 3339) to filter mappings created after
     * this time for audit or business review. Null returns all creation
     * times.
     */
    created_from?: (string & tags.Format<"date-time">) | null;

    /**
     * Optional ISO date-time (RFC 3339) to filter mappings created before
     * this time for audit or business review. Null returns all creation
     * times.
     */
    created_to?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * Request body for creating a new mapping entry between a channel section
   * and a channel category. Both required UUIDs must be supplied and exist in
   * the relevant tables. Used for navigation configuration, analytics, and
   * cross-domain product discovery. Follows uniqueness and referential
   * integrity constraints in the application logic. No additional business or
   * audit metadata is included in create requests.
   */
  export type ICreate = {
    /**
     * UUID of the channel section for this mapping. All category mappings
     * must be associated with a specific navigation section.
     */
    shopping_mall_ai_backend_channel_section_id: string & tags.Format<"uuid">;

    /**
     * UUID of the channel category to be linked to the section. Ensures
     * only valid and existing categories are assignable to sections.
     */
    shopping_mall_ai_backend_channel_category_id: string & tags.Format<"uuid">;
  };

  /**
   * Represents a partial update to a channel section-category mapping (e.g.,
   * moving a mapping to a new section/category). All fields are optional;
   * only present properties are updated. Responsible for maintaining
   * referential and uniqueness constraints. Used by admin tools and service
   * endpoints for managing navigation/category relationships. Input must pass
   * business validation for assignability and relevance; audit fields are
   * managed by the system.
   */
  export type IUpdate = {
    /**
     * Optionally, the new channel section UUID for the mapping. Allows
     * re-assignment or correction in mapping relationships during admin
     * edits. Must refer to a valid section.
     */
    shopping_mall_ai_backend_channel_section_id?: string & tags.Format<"uuid">;

    /**
     * Optionally, the new channel category UUID for the mapping. Permits
     * changing or re-targeting mapped categories in business workflows.
     */
    shopping_mall_ai_backend_channel_category_id?: string & tags.Format<"uuid">;
  };
}
