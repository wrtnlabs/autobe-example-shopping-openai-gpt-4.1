/// Customer account information including all identity, authentication, and
/// business lifecycle attributes. Serves as the base entity for all
/// customer-centric commerce, holding references to profile, registration,
/// and current status data. Supports independent user management,
/// onboarding, and withdrawal requests. Linked to withdrawal and session
/// event models.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_customers {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Email address used for authentication and notifications. Must be unique
  /// per channel.
  email String
  
  /// Customer's verified mobile phone number. Used for primary contact and
  /// regulatory identity check.
  phone_number String
  
  /// Hash of customer's authentication password. Never stored in cleartext.
  password_hash String
  
  /// Full legal name of the customer as supplied or verified during onboarding.
  name String
  
  /// Customer's preferred display nickname. Displayed to sellers and in
  /// community features.
  nickname String?
  
  /// Whether the customer account is currently active and enabled for login.
  is_active Boolean
  
  /// Whether real-name and/or mobile number identity verification is completed.
  is_verified Boolean
  
  /// Timestamp of the customer's most recent valid login. Useful for activity
  /// tracking and account monitoring.
  last_login_at DateTime? @db.Timestamptz
  
  /// Timestamp when the customer account was created.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp when the customer account record was last updated.
  updated_at DateTime @db.Timestamptz
  
  /// Timestamp recording logical deletion (withdrawal or admin removal) for
  /// compliance.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  shopping_mall_ai_backend_customer_withdrawals shopping_mall_ai_backend_customer_withdrawals[]
  shopping_mall_ai_backend_customer_sessions shopping_mall_ai_backend_customer_sessions[]
  shopping_mall_ai_backend_customer_external_identities shopping_mall_ai_backend_customer_external_identities[]
  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]
  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]
  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]
  shopping_mall_ai_backend_coupon_issuances shopping_mall_ai_backend_coupon_issuances[]
  shopping_mall_ai_backend_coupon_usages shopping_mall_ai_backend_coupon_usages[]
  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]
  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]
  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?
  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]
  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?
  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]
  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?
  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]
  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]
  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]
  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]
  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]
  shopping_mall_ai_backend_favorites shopping_mall_ai_backend_favorites[]
  shopping_mall_ai_backend_favorite_addresses shopping_mall_ai_backend_favorite_addresses[]
  shopping_mall_ai_backend_favorite_folders shopping_mall_ai_backend_favorite_folders[]
  shopping_mall_ai_backend_article_comments shopping_mall_ai_backend_article_comments[]
  
  @@unique([email])
  @@unique([phone_number])
  @@index([created_at])
  @@index([is_active, is_verified])
  @@index([nickname(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Historical log of customer withdrawal and account deactivation events,
/// preserving evidence and regulatory compliance data. Each record acts as a
/// snapshot of the state and rationale when the customer initiated or
/// completed withdrawal.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_customer_withdrawals {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged customer's {@link shopping_mall_ai_backend_customers.id}.
  customer_id String @db.Uuid
  
  /// Customer provided reason for withdrawal or deactivation.
  reason String?
  
  /// Timestamp when withdrawal/deactivation was completed.
  withdrawn_at DateTime @db.Timestamptz
  
  /// Timestamp of record creation for evidence.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  
  @@index([customer_id])
}

/// Tracks all active or historical customer session records, used for
/// authentication, fraud investigation, and multi-device login support.
/// Manages session tokens, IP, device, and expiration for each authenticated
/// interaction.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_customer_sessions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged customer's {@link shopping_mall_ai_backend_customers.id}.
  customer_id String @db.Uuid
  
  /// Session's access token for API authentication.
  access_token String
  
  /// Token used to renew the session without re-authentication.
  refresh_token String?
  
  /// IP address from which the session originated.
  ip_address String
  
  /// Browser or device user agent string for context and fraud monitoring.
  user_agent String
  
  /// Session expiry datetime (based on system policy).
  expires_at DateTime @db.Timestamptz
  
  /// Session creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp of explicit session logout or forced termination.
  terminated_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  
  shopping_mall_ai_backend_carts shopping_mall_ai_backend_carts[]
  
  @@unique([access_token])
  @@index([customer_id])
  @@index([expires_at])
}

/// Links customer accounts to external identity providers such as
/// OAuth/Social logins. Enables SSO, mapping, and external account
/// management, ensuring business audit trail for all mappings.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_customer_external_identities {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged customer's {@link shopping_mall_ai_backend_customers.id}.
  customer_id String @db.Uuid
  
  /// External identity provider name (e.g., google, apple, naver, kakao).
  provider String
  
  /// Unique external key/id provided by the external provider for this
  /// customer.
  provider_key String
  
  /// Timestamp when this identity mapping was created.
  linked_at DateTime @db.Timestamptz
  
  /// Timestamp of last verified sign-in with this external provider.
  last_verified_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  customer shopping_mall_ai_backend_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_customer_external_identities__695ddaff")
  
  @@unique([provider, provider_key], map: "shopping_mall_ai_backend_customer_external_identities__7be59c46")
  @@index([customer_id], map: "shopping_mall_ai_backend_customer_external_identities__c0cd5f8c")
}

/// Seller (merchant) account entity, representing approved business users
/// authorized to register, sell, and fulfill orders. Stores identity
/// verification, business credentials, and current seller status.
/// Independent management, onboarding, and compliance attributes are
/// maintained per seller.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_sellers {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Seller's primary business email address used for registration and
  /// notifications. Unique per seller.
  email String
  
  /// Seller's registered business identifier (regional/country standard
  /// number).
  business_registration_number String
  
  /// Legal business name of seller (business entity).
  name String
  
  /// Whether seller identity/business verification is complete and approved.
  is_verified Boolean
  
  /// Whether seller account is currently active and able to operate.
  is_active Boolean
  
  /// Timestamp when the seller account was created.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp when the seller account was last updated.
  updated_at DateTime @db.Timestamptz
  
  /// Soft deletion timestamp (for closed or withdrawn sellers).
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  shopping_mall_ai_backend_seller_verifications shopping_mall_ai_backend_seller_verifications[]
  shopping_mall_ai_backend_seller_profiles shopping_mall_ai_backend_seller_profiles?
  shopping_mall_ai_backend_seller_settlements shopping_mall_ai_backend_seller_settlements?
  shopping_mall_ai_backend_orders shopping_mall_ai_backend_orders[]
  shopping_mall_ai_backend_coupons shopping_mall_ai_backend_coupons[]
  shopping_mall_ai_backend_deposits shopping_mall_ai_backend_deposits?
  shopping_mall_ai_backend_deposit_transactions shopping_mall_ai_backend_deposit_transactions[]
  shopping_mall_ai_backend_mileages shopping_mall_ai_backend_mileages?
  shopping_mall_ai_backend_mileage_transactions shopping_mall_ai_backend_mileage_transactions[]
  shopping_mall_ai_backend_coins shopping_mall_ai_backend_coins?
  shopping_mall_ai_backend_coin_transactions shopping_mall_ai_backend_coin_transactions[]
  shopping_mall_ai_backend_financial_incidents shopping_mall_ai_backend_financial_incidents[]
  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]
  shopping_mall_ai_backend_inquiry_replies shopping_mall_ai_backend_inquiry_replies[]
  
  @@unique([email])
  @@unique([business_registration_number], map: "shopping_mall_ai_backend_sellers_business_registration_330d2da3")
  @@index([created_at])
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Certification, KYB/KYC evidence and verification records related to
/// seller onboarding or periodic compliance checks. Each record links to a
/// seller and includes validation documents, scope, and approval outcomes.
/// Managed only as per business policy and immutable history.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_seller_verifications {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged seller's {@link shopping_mall_ai_backend_sellers.id}.
  seller_id String @db.Uuid
  
  /// Type of business verification (e.g., identity, business_license,
  /// bank_account, AML, KYC).
  verification_type String
  
  /// Current status (submitted, approved, rejected, expired, pending).
  /// Reflects compliance policy workflow.
  status String
  
  /// Secure URI to evidence document or file. Points to uploaded file or
  /// reference directory.
  document_uri String @db.VarChar(80000)
  
  /// Timestamp when verification document was submitted.
  submitted_at DateTime @db.Timestamptz
  
  /// Timestamp when verification was approved (if successful).
  verified_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)
  
  @@index([seller_id])
  @@index([status])
}

/// Additional seller/business profile details, linked 1:1 to sellers.
/// Includes optional and extended info, business contact, and public display
/// settings. Managed through seller profile UI or admin.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_seller_profiles {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged seller's {@link shopping_mall_ai_backend_sellers.id}.
  seller_id String @db.Uuid
  
  /// Seller's public display name/brand (may be different from legal name).
  display_name String?
  
  /// Primary contact phone for business operations.
  contact_phone String?
  
  /// Business or support contact email.
  contact_email String?
  
  /// Business registered address (for display or compliance use).
  address String?
  
  /// Self-description or introductory text for the seller shop page.
  description String?
  
  /// Timestamp when the profile was created.
  created_at DateTime @db.Timestamptz
  
  /// Profile update timestamp.
  updated_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)
  
  @@unique([seller_id])
  @@index([display_name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Records of settlement configuration and payout instructions for each
/// seller, used in financial processing and disbursement. Includes payout
/// method, bank details, and account/recipient info per seller. Supports
/// settlement changes and audit trail.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_seller_settlements {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged seller's {@link shopping_mall_ai_backend_sellers.id}.
  seller_id String @db.Uuid
  
  /// Bank or financial institution name for disbursement.
  bank_name String
  
  /// Account number for payout.
  bank_account_number String
  
  /// Name of the registered account holder for settlements.
  account_holder String
  
  /// Optional memo or note field for settlement purposes.
  remittance_memo String?
  
  /// Settlement configuration creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp of last update to settlement info.
  updated_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  seller shopping_mall_ai_backend_sellers @relation(fields: [seller_id], references: [id], onDelete: Cascade)
  
  @@unique([seller_id])
  @@index([bank_account_number], map: "shopping_mall_ai_backend_seller_settlements_bank_accou_3e3984c4")
}

/// Administrator account for platform operators, regulatory personnel, and
/// business rule enforcement. Each admin manages business policies, audits,
/// and incidents. Supports multi-factor auth, credential lifecycle, and
/// status management.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_admins {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Unique admin username or operator ID (must be unique).
  username String
  
  /// Hashed administrator password for auth, never stored as cleartext.
  password_hash String
  
  /// Administrator's real name for traceability.
  name String
  
  /// Administrator business email address (unique per admin).
  email String
  
  /// Verified contact for admin (SMS/phone notification, account recovery).
  phone_number String?
  
  /// Whether this admin account is currently enabled.
  is_active Boolean
  
  /// Time of last successful login. Used for audit trail and activity
  /// monitoring.
  last_login_at DateTime? @db.Timestamptz
  
  /// Timestamp of admin account creation.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp of last admin record update.
  updated_at DateTime @db.Timestamptz
  
  /// Soft deletion timestamp (retained for audit compliance).
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  shopping_mall_ai_backend_admin_audit_logs shopping_mall_ai_backend_admin_audit_logs[]
  shopping_mall_ai_backend_role_escalations shopping_mall_ai_backend_role_escalations[]
  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]
  shopping_mall_ai_backend_inquiry_abuse_reports shopping_mall_ai_backend_inquiry_abuse_reports[]
  shopping_mall_ai_backend_inquiry_moderation_events shopping_mall_ai_backend_inquiry_moderation_events[]
  shopping_mall_ai_backend_inquiry_faq_suggestions shopping_mall_ai_backend_inquiry_faq_suggestions[]
  shopping_mall_ai_backend_article_snapshots shopping_mall_ai_backend_article_snapshots[]
  shopping_mall_ai_backend_article_moderation_logs shopping_mall_ai_backend_article_moderation_logs[]
  
  @@unique([username])
  @@unique([email])
  @@index([created_at])
  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Business and system audit log of all privileged admin actions. Captures
/// admin reference, operation performed, rationale, and affected
/// target/count. Immutable record for compliance and forensic review by
/// regulators.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_admin_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Admin account's {@link shopping_mall_ai_backend_admins.id}.
  admin_id String @db.Uuid
  
  /// Type of privileged operation (e.g., approve_seller, suspend_user,
  /// modify_config, access_evidence).
  operation String
  
  /// Primary identifier of the entity affected by this operation (for audit
  /// linkage).
  target_id String @db.Uuid
  
  /// Type of entity affected (e.g., customer, seller, system, order, config).
  target_type String
  
  /// Detailed description or justification for the operation.
  description String?
  
  /// Timestamp when the audit log entry was created.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  admin shopping_mall_ai_backend_admins @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  
  @@index([admin_id])
  @@index([created_at])
  @@index([description(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Snapshot entity capturing user membership/seller/admin role change and
/// escalation events. Used for regulatory audit, approval workflows, and
/// business process replays. Each record describes role transition, outcome,
/// and rationale, with references to relevant user/admin.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_role_escalations {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// ID of the user whose role was escalated/deescalated (references customer,
  /// seller, or admin - cross-reference by context).
  user_id String @db.Uuid
  
  /// Administrator who approved/escalated role (references {@link
  /// shopping_mall_ai_backend_admins.id}).
  admin_id String? @db.Uuid
  
  /// Previous business role (e.g., customer, seller, admin, suspended, guest).
  from_role String
  
  /// Resulting business role after escalation/transition.
  to_role String
  
  /// Type of change (e.g., promotion, demotion, temporary, permanent,
  /// approval, rejection).
  escalation_type String
  
  /// Optional human-readable rationale or system justification for the
  /// escalation.
  reason String?
  
  /// Time the escalation event was recorded.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  user shopping_mall_ai_backend_customers @relation(fields: [user_id], references: [id], onDelete: Cascade)
  admin shopping_mall_ai_backend_admins? @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  @@index([admin_id])
}