/// Universal snapshot table capturing entity state at the time of a business
/// event (creation, modification, deletion, etc.). Provides immutable
/// evidence for any critical entity in the system (e.g., user, product,
/// order, review) as required by compliance and audit. Polymorphic
/// references to entity_type and entity_id support cross-domain usage. Used
/// for rollback, forensic analysis, audit queries, and regulatory/legal
/// requirements. Typically referenced by domain entities for evidence or
/// versioning.
///
/// @namespace Snapshots
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_entity_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Type of the referenced business entity (e.g., 'customer', 'product',
  /// 'order', etc.). Used for polymorphic association and traceability across
  /// domains.
  entity_type String
  
  /// ID of the referenced business entity. Combined with entity_type ensures
  /// universal coverage and uniqueness.
  entity_id String
  
  /// Reason for snapshot capture (e.g., creation, update, deletion, compliance
  /// event). Business event context, for audit/evidence trace.
  snapshot_reason String
  
  /// Actor performing/triggering the event. May reference user/admin/seller
  /// IDs or system processes. Provides regulatory traceability.
  snapshot_actor_id String?
  
  /// Serialized (e.g., JSON) representation of the captured entity state at
  /// snapshot time. Used for evidence and rollback.
  snapshot_data String
  
  /// Business event timestamp (when the snapshot was recorded). Distinct from
  /// created_at for system-level event ordering.
  event_time DateTime
  
  /// Entity creation timestamp (when this snapshot record itself was created).
  created_at DateTime
  
  /// Entity last update timestamp (if ever modified, e.g., for evidence chain
  /// correction or annotation).
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  @@unique([entity_type, entity_id, event_time], map: "shopping_mall_entity_snapshots_entity_type_entity_id_e_abe16a8e")
  @@index([entity_type, entity_id])
  @@index([snapshot_actor_id])
  @@index([event_time])
}

/// Cross-domain, general-purpose audit log table capturing all significant
/// business events or actions affecting any entity in the system. Tracks
/// event type, the affected entity (entity_type & entity_id), actor, result,
/// and supporting snapshot IDs as available. Supports compliance, business
/// rule tracing, security, and real-time monitoring.
///
/// @namespace Snapshots
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Type of the entity involved in the audit event (polymorphic, e.g.,
  /// 'order', 'product', 'customer').
  entity_type String
  
  /// ID of the entity involved in the audit event (polymorphic association).
  entity_id String
  
  /// Type/category of event (e.g., create, update, delete, login,
  /// permission_granted, error, workflow_transition, business_rule_eval,
  /// etc.). Used for filtering and security audit.
  event_type String
  
  /// User/admin/seller or system process that performed/triggered the event.
  /// Used for accountability and forensics.
  actor_id String?
  
  /// Optional reference to the associated snapshot (if relevant to this audit
  /// event or state change). May be null for system-level events.
  snapshot_id String?
  
  /// Result of the audited event (e.g., success, failure, denied, completed,
  /// partial, error code). Human/machine readable for business trace/audit.
  event_result String
  
  /// Detailed message or context (structured or free-form) about the event
  /// itself (e.g. error details, input parameters, automated reasoning).
  event_message String?
  
  /// When this audited event occurred (precise business event time).
  event_time DateTime
  
  /// Time when this audit log record was written (system timestamp).
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  @@index([entity_type, entity_id])
  @@index([actor_id])
  @@index([event_type])
  @@index([event_time])
}

/// Tracks and evidences logical deletion (soft delete) events for any
/// managed entity in the system. Provides regulatory auditability for
/// removal actions, including type of entity, entity ID, actor, reason, and
/// snapshot reference. Not user-facing; used for compliance, data retention
/// enforcement, and legal evidence chains.
///
/// @namespace Snapshots
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_deletion_events {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Type of entity affected by deletion (polymorphic, e.g., 'product',
  /// 'order', 'review').
  entity_type String
  
  /// ID of the entity deleted (polymorphic, uniquely identifies the record).
  entity_id String
  
  /// Actor (user/admin/system) who performed the delete operation. Audit chain
  /// support for regulatory evidence.
  deleted_by_id String?
  
  /// Business or system reason for deletion (e.g., user request, policy
  /// violation, auto-expiry, admin action). Critical for data retention/trace.
  deletion_reason String
  
  /// Reference to the snapshot capturing the entity state at or before
  /// deletion. Critical for evidence/audit.
  snapshot_id String?
  
  /// Timestamp of when entity was marked deleted (logical deletion). Serves
  /// compliance/audit needs.
  deleted_at DateTime
  
  /// Record creation time for the deletion event (system timestamp).
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  @@unique([entity_type, entity_id])
  @@index([deleted_by_id])
  @@index([deleted_at])
}