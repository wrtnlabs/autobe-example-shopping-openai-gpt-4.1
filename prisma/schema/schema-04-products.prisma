/// Main product entity representing a single item offered by a seller.
/// Contains all business data (sku, name, description, price, inventory,
/// lifecycle status) and references to seller, store, and channel. All
/// product creation, update, and deletion operations generate immutable
/// snapshots for audit trails and compliance. Supports variant, bundle,
/// compliance, content, and marketing relationships.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_products {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Seller owning this product ({@link ai_commerce_seller.id}).
  seller_id String
  
  /// Store this product belongs to ({@link ai_commerce_stores.id}).
  store_id String
  
  /// Unique product code for business and integration (SKU or external
  /// reference).
  product_code String
  
  /// Display name of product (localizable).
  name String
  
  /// Business/marketing description (multi-format, max length 2000).
  description String
  
  /// Product listing status: draft, active, paused, suspended, discontinued,
  /// deleted.
  status String
  
  /// Operational workflow status (moderation, pending_approval,
  /// compliance_hold, etc.).
  business_status String
  
  /// Current display price (may change; old value versioned in snapshot).
  current_price Float
  
  /// Current available stock for this product (top-level, not
  /// variant-specific).
  inventory_quantity Int
  
  /// Timestamp for product creation.
  created_at DateTime
  
  /// Timestamp for last product update.
  updated_at DateTime
  
  /// Soft delete (null if active).
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  seller ai_commerce_seller @relation(fields: [seller_id], references: [id], onDelete: Cascade)
  store ai_commerce_stores @relation(fields: [store_id], references: [id], onDelete: Cascade)
  
  ai_commerce_product_variants ai_commerce_product_variants[]
  ai_commerce_product_bundles ai_commerce_product_bundles[]
  ai_commerce_product_bundle_items ai_commerce_product_bundle_items[]
  ai_commerce_product_images ai_commerce_product_images[]
  ai_commerce_product_contents ai_commerce_product_contents[]
  ai_commerce_product_snapshots ai_commerce_product_snapshots[]
  ai_commerce_product_seo ai_commerce_product_seo?
  ai_commerce_product_category_bindings ai_commerce_product_category_bindings[]
  ai_commerce_product_section_bindings ai_commerce_product_section_bindings[]
  ai_commerce_product_legal_compliance ai_commerce_product_legal_compliance?
  ai_commerce_product_audit_logs ai_commerce_product_audit_logs[]
  ai_commerce_product_tags ai_commerce_product_tags[]
  ai_commerce_trending_products ai_commerce_trending_products?
  ai_commerce_highlighted_products ai_commerce_highlighted_products[]
  ai_commerce_cart_items ai_commerce_cart_items[]
  ai_commerce_inquiries ai_commerce_inquiries[]
  ai_commerce_favorites_products ai_commerce_favorites_products[]
  ai_commerce_favorites_product_snapshots ai_commerce_favorites_product_snapshots[]
  
  @@unique([product_code])
  @@index([seller_id, status])
  @@index([store_id])
}

/// Represents an option or variant SKU of the parent product (e.g.,
/// size/color/option permutation). Each variant has unique business fields:
/// option summary, sku_code, price (may be different from parent),
/// inventory, and status. Not independently searchable, managed via parent
/// product.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_variants {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Parent {@link ai_commerce_products.id} this variant belongs to.
  product_id String
  
  /// Unique code for this variant/SKU within the product.
  sku_code String
  
  /// Summary of option values (e.g., 'Size: M / Color: Red').
  option_summary String
  
  /// Variant-specific price (overrides product price if present).
  variant_price Float
  
  /// Stock for this variant/SKU.
  inventory_quantity Int
  
  /// Lifecycle/status (active, paused, discontinued).
  status String
  
  /// Timestamp for variant creation.
  created_at DateTime
  
  /// Timestamp for last variant update.
  updated_at DateTime
  
  /// Soft delete (null if active).
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  ai_commerce_product_bundle_items ai_commerce_product_bundle_items[]
  ai_commerce_cart_items ai_commerce_cart_items[]
  ai_commerce_order_items ai_commerce_order_items[]
  
  @@unique([sku_code])
  @@unique([product_id, option_summary])
  @@index([product_id, status])
}

/// Describes a composite product composed of multiple child
/// products/variants. Bundles are independently sold/published products,
/// with their own code, pricing, and status. Maintains bundle relationship
/// via bundle_items table. All bundle sales, pricing, and inventory must be
/// managed via parent and children variants.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_bundles {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product acting as the parent/bundle container ({@link
  /// ai_commerce_products.id}).
  parent_product_id String
  
  /// Unique code for the bundle product.
  bundle_code String
  
  /// Bundle display name.
  name String
  
  /// Bundle description/marketing details.
  description String?
  
  /// Bundle status (active, paused, discontinued, deleted).
  status String
  
  /// Current price for bundle (does not track individual items' prices).
  current_price Float
  
  /// Created timestamp.
  created_at DateTime
  
  /// Last updated timestamp.
  updated_at DateTime
  
  /// Soft delete (null if active).
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  parentProduct ai_commerce_products @relation(fields: [parent_product_id], references: [id], onDelete: Cascade)
  
  ai_commerce_product_bundle_items ai_commerce_product_bundle_items[]
  
  @@unique([bundle_code])
  @@index([parent_product_id])
}

/// Junction table linking ai_commerce_product_bundles and
/// ai_commerce_product_variants (or ai_commerce_products). Each entry
/// specifies child item type, quantity, required/optional, and
/// sequence/order within the bundle. Composite key ensures no duplicate
/// items, and supports bundle inventory validation and audit.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_bundle_items {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Bundle container ({@link ai_commerce_product_bundles.id}).
  bundle_id String
  
  /// Child product linked to bundle ({@link ai_commerce_products.id}).
  child_product_id String?
  
  /// Child variant SKU if specified ({@link ai_commerce_product_variants.id}).
  child_variant_id String?
  
  /// Type: product or variant.
  item_type String
  
  /// Number of this item in the bundle.
  quantity Int
  
  /// Whether this item is required for the bundle (vs. optional selection).
  required Boolean
  
  /// Display/business order within bundle items.
  sort_order Int
  
  //----
  // RELATIONS
  //----
  bundle ai_commerce_product_bundles @relation(fields: [bundle_id], references: [id], onDelete: Cascade)
  childProduct ai_commerce_products? @relation(fields: [child_product_id], references: [id], onDelete: Cascade)
  childVariant ai_commerce_product_variants? @relation(fields: [child_variant_id], references: [id], onDelete: Cascade)
  
  @@index([child_variant_id])
  
  @@unique([bundle_id, child_product_id, child_variant_id], map: "ai_commerce_product_bundle_items_bundle_id_child_produ_fc75e2a4")
  @@index([bundle_id])
  @@index([child_product_id])
}

/// List of image assets for each product (attachment subsystem manages
/// file). Each row links an image to a product, with display order and
/// indications for localization/multiversion handling. Public urls/files are
/// linked via attachments model (not stored here).
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_images {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product to which this image belongs ({@link ai_commerce_products.id}).
  product_id String
  
  /// Attachment subsystem ID for this image file ({@link
  /// ai_commerce_attachments.id}).
  attachment_id String
  
  /// Ordering of this image for product display (ascending).
  display_order Int
  
  /// Locale string or null for default.
  locale String?
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  attachment ai_commerce_attachments @relation(fields: [attachment_id], references: [id], onDelete: Cascade)
  
  @@index([attachment_id])
  
  @@unique([product_id, display_order])
  @@index([product_id])
}

/// Modular business/marketing content for each product (description, detail,
/// instruction, etc). Each entry has a display type, format, and potentially
/// localization context. Used for internationalization, SEO, and improved
/// merchandising.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_contents {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product to which this content belongs ({@link ai_commerce_products.id}).
  product_id String
  
  /// Type: description, detail, spec, how_to, etc.
  content_type String
  
  /// Content format: html, markdown, plain_text, etc.
  format String
  
  /// Locale: language/region code, or null for default.
  locale String?
  
  /// Content data, up to 10,000 characters.
  content_body String
  
  /// Display ordering among contents for the product.
  display_order Int
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id, content_type, locale])
  @@index([product_id])
}

/// Immutable, append-only historical record of the full state of a product
/// (and optionally its variants, price, and compliance) at each
/// modification, publish, or compliance event. Used for compliance,
/// rollback, and audit trails. Holds snapshot as a JSON blob and tracks the
/// actor, timestamp, and event.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product of this snapshot ({@link ai_commerce_products.id}).
  product_id String
  
  /// Event: create, update, price_change, compliance_review, version_publish,
  /// etc.
  event_type String
  
  /// User/admin ID triggering the snapshot event.
  actor_id String
  
  /// Complete denormalized JSON of product state at this snap.
  snapshot_json String
  
  /// Snapshot timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id, created_at, event_type], map: "ai_commerce_product_snapshots_product_id_created_at_ev_253b2340")
  @@index([product_id])
}

/// SEO and search metadata for a product, managed as a subsidiary. Includes
/// canonical url, SEO title, description, image, and keyword/tags. No
/// denormalized or calculated fields—pure metadata. Supports localization,
/// versioning, and independent publishing.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_seo {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product for this SEO entry ({@link ai_commerce_products.id}).
  product_id String
  
  /// SEO page title (localized or default).
  seo_title String?
  
  /// SEO meta description.
  seo_description String?
  
  /// Canonical/public url to the product.
  canonical_url String?
  
  /// Comma-separated keywords for search/full-text indexing.
  seo_keywords String?
  
  /// Image url for OpenGraph/social sharing.
  og_image_url String?
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id])
}

/// Junction table linking products to categories, supporting multi-channel
/// and multi-category assignments. Each binding links a product to one
/// category/context. Composite unique guarantees no duplicate binding.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_category_bindings {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product ({@link ai_commerce_products.id}).
  product_id String
  
  /// Category ({@link ai_commerce_categories.id}).
  category_id String
  
  /// When the binding was created.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  category ai_commerce_categories @relation(fields: [category_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id, category_id], map: "ai_commerce_product_category_bindings_product_id_categ_cfa4a646")
  @@index([category_id])
}

/// Binds a product to a merchandising/featured section in a channel (e.g.,
/// 'Flash Sale'). Multi-assignment allowed, composite key for uniqueness.
/// Serves as target for merchandising configuration or admin curation.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_section_bindings {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product ({@link ai_commerce_products.id}).
  product_id String
  
  /// Section ({@link ai_commerce_sections.id}).
  section_id String
  
  /// Product order within section.
  display_order Int
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  section ai_commerce_sections @relation(fields: [section_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id, section_id])
  @@index([section_id])
}

/// Legal, regulatory, and compliance fields for products (parent or
/// subsidiary for multi-jurisdictional). Contains required certifications,
/// restricted use, age and labeling flags, and status evidence for each
/// compliance review. Linked to corresponding product. Required for all
/// compliance jurisdiction snapshots.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_legal_compliance {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Product subject to compliance check ({@link ai_commerce_products.id}).
  product_id String
  
  /// Jurisdiction (country/region) for this compliance entry.
  compliance_region String
  
  /// Comma-separated list of certificate/approval numbers.
  certification_numbers String?
  
  /// Minimum age for purchase/use, if any.
  restricted_age Int?
  
  /// Whether item is hazardous/restricted/special handling.
  hazard_flag Boolean
  
  /// Current status: pending, approved, rejected, expired.
  compliance_status String
  
  /// Last regulatory check timestamp.
  last_reviewed_at DateTime?
  
  /// Extra evidence or attachments as JSON, e.g., file IDs, review context.
  evidence_json String?
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  @@unique([product_id])
  @@index([compliance_region])
}

/// Records all audit trail events for a product and its subcomponents.
/// Documents every creation, edit, compliance check, status/lifecycle
/// transition, and actor. Used for compliance and legal traceability. Each
/// action records before/after JSON, event type, timestamp, and
/// actor/context.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_product_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Target product ({@link ai_commerce_products.id}).
  product_id String
  
  /// Action performed: create, update, compliance_review, price_change,
  /// content_edit, etc.
  event_type String
  
  /// User/admin/automation performing audit action.
  actor_id String
  
  /// State before action (JSON); null for new creation.
  before_json String?
  
  /// State after action (JSON); null for deletion.
  after_json String?
  
  /// Action timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  @@index([product_id])
  @@index([actor_id])
  @@index([event_type])
}