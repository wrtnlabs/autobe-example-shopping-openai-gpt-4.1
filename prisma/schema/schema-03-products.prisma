/// Core product entity representing individual commerce items. Contains
/// business attributes such as title, slug, description, seller reference,
/// commerce status, minimum and maximum order amounts, product type, and
/// additional configurations. Every update to this entity must be
/// snapshotted to support audit and rollback. Linked via foreign keys to
/// seller entities, and by extensions to options, bundles, categories, tags,
/// and files. This table is essential for search, browse, and transaction
/// eligibility decisions.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_products {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Product title/name displayed to users, unique per seller and channel
  /// context.
  title String
  
  /// SEO-friendly product slug, unique per channel and seller context.
  slug String
  
  /// Detailed product description and content body.
  description String?
  
  /// Type of product (e.g., physical, digital, service). Guides fulfillment
  /// and inventory logic.
  product_type String
  
  /// Current commerce status (e.g., draft, active, paused, restricted,
  /// deleted). Drives order eligibility and visibility.
  business_status String
  
  /// Minimum orderable quantity for a valid purchase.
  min_order_quantity Int @db.Integer
  
  /// Maximum orderable quantity per transaction.
  max_order_quantity Int @db.Integer
  
  /// Applicable tax code category used for compliance and reporting.
  tax_code String
  
  /// Manual or computed sort priority for product listings.
  sort_priority Int @db.Integer
  
  /// UTC timestamp when product was created.
  created_at DateTime @db.Timestamptz
  
  /// UTC timestamp when product was last updated.
  updated_at DateTime @db.Timestamptz
  
  /// Timestamp when product was logically deleted. Null if not deleted.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  shopping_mall_ai_backend_product_options shopping_mall_ai_backend_product_options[]
  shopping_mall_ai_backend_product_bundles shopping_mall_ai_backend_product_bundles[]
  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]
  shopping_mall_ai_backend_product_files shopping_mall_ai_backend_product_files[]
  shopping_mall_ai_backend_product_snapshots shopping_mall_ai_backend_product_snapshots[]
  shopping_mall_ai_backend_product_inventories shopping_mall_ai_backend_product_inventories[]
  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]
  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]
  shopping_mall_ai_backend_inquiries shopping_mall_ai_backend_inquiries[]
  shopping_mall_ai_backend_favorite_products shopping_mall_ai_backend_favorite_products[]
  
  @@unique([slug])
  @@index([product_type])
  @@index([business_status])
  @@index([tax_code])
  @@index([title(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([description(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Product option groups (e.g., color, size) that define available choices
/// per product. Each option group belongs to a product, provides business
/// logic for required/optional/combination selection, and is versioned for
/// audit. Directly linked to units for physical SKUs or attributes. Managed
/// by sellers/admins in the product management flow.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_options {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Belonged product's {@link shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Label for option group (e.g., color, size).
  option_name String
  
  /// Whether option selection is required for order eligibility.
  required Boolean
  
  /// Display order of this option group among product options.
  sort_order Int @db.Integer
  
  /// Timestamp when this option group was created.
  created_at DateTime @db.Timestamptz
  
  /// Timestamp when this option group was last updated.
  updated_at DateTime @db.Timestamptz
  
  /// Soft deletion timestamp for this option group. Null if active.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_options_shopping_mall_dd9426d4")
  
  shopping_mall_ai_backend_product_option_units shopping_mall_ai_backend_product_option_units[]
  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]
  
  @@index([shopping_mall_ai_backend_products_id, option_name], map: "shopping_mall_ai_backend_product_options_shopping_mall_28facb02")
  @@index([option_name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Concrete selectable unit (e.g., Red, XL) within an option group for a
/// product. Each unit belongs to a product option, contains value and code
/// (for business rules/mapping), and has associated sort/display order. SKU
/// inventory is typically tracked at this or a bundled level. Used in
/// detailed order and inventory logic.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_option_units {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Option group {@link shopping_mall_ai_backend_product_options.id} this
  /// unit belongs to.
  shopping_mall_ai_backend_product_options_id String @db.Uuid
  
  /// Display value for this selectable unit (e.g., Red, XL).
  unit_value String
  
  /// Machine-readable code for business logic, analytics.
  unit_code String
  
  /// Display order for selectable units within option group.
  sort_order Int @db.Integer
  
  /// Creation timestamp of this unit.
  created_at DateTime @db.Timestamptz
  
  /// Last updated timestamp of this unit.
  updated_at DateTime @db.Timestamptz
  
  /// Soft deletion timestamp. Null if active.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  option shopping_mall_ai_backend_product_options @relation(fields: [shopping_mall_ai_backend_product_options_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_option_units_shopping_58c57132")
  
  @@unique([shopping_mall_ai_backend_product_options_id, unit_code], map: "shopping_mall_ai_backend_product_option_units_shopping_cca67ba1")
  @@index([unit_value(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Logical grouping of product option units, representing specific item
/// variants (e.g., [Red, Large] bundle = unique SKU). Bundles can be used
/// for package deals or unique SKUs with associated inventory/price. Each
/// bundle is mapped to option units, owned by the parent product.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_bundles {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Product owning the bundle. {@link shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Display name for this bundle/variant combination.
  bundle_name String
  
  /// Unique code representing this bundle/SKU.
  sku_code String
  
  /// Price for this bundle (could override product base price).
  price Float @db.DoublePrecision
  
  /// Inventory control logic (e.g., track, ignore, by parent config).
  inventory_policy String
  
  /// Whether this bundle is available for sale.
  is_active Boolean
  
  /// Bundle creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Last update timestamp for bundle.
  updated_at DateTime @db.Timestamptz
  
  /// Soft deaetion timestamp; null if active.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_bundles_shopping_mall_17aeb0c8")
  
  shopping_mall_ai_backend_order_items shopping_mall_ai_backend_order_items[]
  
  @@index([shopping_mall_ai_backend_products_id], map: "shopping_mall_ai_backend_product_bundles_shopping_mall_3e8ad624")
  
  @@unique([sku_code])
  @@index([bundle_name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Tag master for products. Tags provide user-searchable, vendor-assigned,
/// and/or AI-suggested semantic attributes for categorizing and filtering
/// products (e.g., 'eco-friendly', 'new arrival'). Tags can be mapped to
/// products many-to-many via relation tables or extensions.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_tags {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Business-visible tag (label/content) for product filtering/search.
  tag_name String
  
  /// Machine-assigned code for business logic, search optimization, and
  /// analytics.
  tag_code String
  
  /// Tag creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Last update timestamp.
  updated_at DateTime @db.Timestamptz
  
  /// Tag deletion timestamp; null if not deleted.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  @@unique([tag_code])
  @@index([tag_name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Product category master holds the hierarchical definition of product
/// categories (e.g., Electronics > Computers > Laptops). Used for
/// navigation, search, and data analytics. Every product can belong to
/// multiple categories via mapping table.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_categories {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Display name of this category.
  category_name String
  
  /// Unique code for machine lookup, search, analytics.
  category_code String
  
  /// Indicates parent category for category tree; null if top level.
  parent_id String? @db.Uuid
  
  /// Depth of this category in hierarchy (root = 0).
  category_depth Int @db.Integer
  
  /// Is category shown to users in navigation, search, etc.
  is_active Boolean
  
  /// Order among sibling categories for display.
  sort_order Int @db.Integer
  
  /// Category creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Last modified timestamp.
  updated_at DateTime @db.Timestamptz
  
  /// If deleted, deletion time, or null if active.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  shopping_mall_ai_backend_product_category_mappings shopping_mall_ai_backend_product_category_mappings[]
  
  @@unique([category_code])
  @@index([category_name(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Junction table mapping products to categories (many-to-many). Each row
/// represents one product-category association, used for navigation,
/// filtering, and analytics. Enforces unique (product_id, category_id)
/// constraint to prevent duplicates. Not managed independently from
/// products/categories.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_category_mappings {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Product reference. {@link shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Category reference. {@link shopping_mall_ai_backend_product_categories.id}
  shopping_mall_ai_backend_product_categories_id String @db.Uuid
  
  /// Timestamp when product-category mapping was created.
  assigned_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_category_mappings_sho_86d00f7d")
  category shopping_mall_ai_backend_product_categories @relation(fields: [shopping_mall_ai_backend_product_categories_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_category_mappings_sho_6e53f464")
  
  @@index([shopping_mall_ai_backend_product_categories_id], map: "shopping_mall_ai_backend_product_category_mappings_sho_1cde50dc")
  
  @@unique([shopping_mall_ai_backend_products_id, shopping_mall_ai_backend_product_categories_id], map: "shopping_mall_ai_backend_product_category_mappings_sho_ea3010bc")
}

/// Files and images attached to products for presentation (main image,
/// thumbnails, downloadable files). Stores metadata for display (file type,
/// uploader, order) and references file storage for content resolution.
/// Files may be managed by admins or sellers depending on product origin.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_files {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Referenced product. {@link shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Storage URI or CDN link for file/image.
  file_uri String @db.VarChar(80000)
  
  /// Content type (e.g. image/jpeg, application/pdf).
  file_type String
  
  /// Order among product files -- determines display priority.
  display_order Int @db.Integer
  
  /// Is this file the primary display image?
  is_primary Boolean
  
  /// Attachment creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// If deleted, timestamp; null if not deleted.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_files_shopping_mall_a_ffe1173e")
  
  @@index([shopping_mall_ai_backend_products_id], map: "shopping_mall_ai_backend_product_files_shopping_mall_a_bda2062a")
  
  @@unique([file_uri])
}

/// Immutable historical record for point-in-time product state. Each
/// snapshot references its original product and contains a full copy of all
/// relevant product fields and relations at creation time. Used for audit
/// compliance, evidence in disputes, and rollback. Snapshots are managed
/// only via versioning logic and are never updated after creation.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Product record this snapshot covers. {@link
  /// shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Sequence number or revision index for versioning.
  snapshot_index Int @db.Integer
  
  /// Serialized JSON or business object containing historical data for audit.
  snapshot_content String
  
  /// Business reason or trigger for snapshot (manual update, system,
  /// correction, rollback, etc.).
  snapshot_reason String
  
  /// Time when snapshot was created.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_snapshots_shopping_ma_f8ecd26d")
  
  shopping_mall_ai_backend_cart_items shopping_mall_ai_backend_cart_items[]
  
  @@index([shopping_mall_ai_backend_products_id], map: "shopping_mall_ai_backend_product_snapshots_shopping_ma_19402bd3")
}

/// Tracks stock level for products or bundles. Each record references a
/// product or bundle, shows available quantity, reserved quantity, and last
/// movement time. Provides base view for inventory tracking, order
/// commitment, and business analysis. May point to either product or bundle
/// as needed by business logic (union handled at application tier). Not
/// independently managed by end users.
///
/// @namespace Products
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_product_inventories {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Product this inventory is linked to. {@link
  /// shopping_mall_ai_backend_products.id}
  shopping_mall_ai_backend_products_id String @db.Uuid
  
  /// Units available for sale (not reserved/committed).
  available_quantity Int @db.Integer
  
  /// Committed units pending order completion.
  reserved_quantity Int @db.Integer
  
  /// Time of the most recent stock movement (in/out/adjust).
  last_update_at DateTime @db.Timestamptz
  
  /// Business status of inventory (e.g., in_stock, out_of_stock, reserved,
  /// discontinued).
  inventory_status String
  
  //----
  // RELATIONS
  //----
  product shopping_mall_ai_backend_products @relation(fields: [shopping_mall_ai_backend_products_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_product_inventories_shopping__36cf87fd")
  
  @@index([shopping_mall_ai_backend_products_id], map: "shopping_mall_ai_backend_product_inventories_shopping__3d59e671")
  
  @@index([inventory_status], map: "shopping_mall_ai_backend_product_inventories_inventory_ba6fac3b")
}