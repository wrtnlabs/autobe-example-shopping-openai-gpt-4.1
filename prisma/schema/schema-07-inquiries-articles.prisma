/// Forum/board structure for channel/section, supporting product Q&A,
/// reviews, UGC. Board creation, visibility, moderation permissions, and
/// linkage to channel/section (by FK). Segmentation enables different boards
/// per channel/section; anchor for all board-based content and moderation.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_boards {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Belonged channel’s {@link shopping_mall_channels.id}.
  shopping_mall_channel_id String
  
  /// Belonged section’s {@link shopping_mall_sections.id}.
  shopping_mall_section_id String?
  
  /// Board display name/title.
  title String
  
  /// Explanation/purpose of the board (Markdown supported).
  description String?
  
  /// Board visibility: public, private, channel-restricted, or
  /// section-restricted.
  visibility String
  
  /// Whether all posts need moderation before publication.
  moderation_required Boolean
  
  /// Days until posts are auto-archived/expire (nullable).
  post_expiry_days Int?
  
  /// Time the board record was created.
  created_at DateTime
  
  /// Time this record was last updated.
  updated_at DateTime
  
  /// Soft delete time, null if active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  channel shopping_mall_channels @relation(fields: [shopping_mall_channel_id], references: [id], onDelete: Cascade)
  section shopping_mall_sections? @relation(fields: [shopping_mall_section_id], references: [id], onDelete: Cascade)
  
  shopping_mall_board_posts shopping_mall_board_posts[]
  
  @@unique([shopping_mall_channel_id, title])
  @@index([shopping_mall_section_id])
  @@index([created_at])
}

/// Posts/articles/respondable threads in boards. Created by any role, linked
/// to board, optionally to products/orders. Full multi-role authorship,
/// moderation and reply threading. Supports independent management and
/// search.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_board_posts {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Associated board’s {@link shopping_mall_boards.id}.
  shopping_mall_board_id String
  
  /// If author is customer, link to {@link shopping_mall_customers.id}.
  shopping_mall_customer_id String?
  
  /// If author is seller, link to {@link shopping_mall_sellers.id}.
  shopping_mall_seller_id String?
  
  /// If author is admin, link to {@link shopping_mall_admins.id}.
  shopping_mall_admin_id String?
  
  /// Reply of/parent (self-ref).
  shopping_mall_parent_post_id String?
  
  /// Linked product’s {@link shopping_mall_products.id}.
  shopping_mall_product_id String?
  
  /// Linked order’s {@link shopping_mall_orders.id}.
  shopping_mall_order_id String?
  
  /// Post or article title.
  title String?
  
  /// Main content (Markdown/HTML).
  body String
  
  /// Thread depth (0=starter).
  reply_level Int
  
  /// True if post is an official (admin/seller) answer.
  is_official_answer Boolean
  
  /// Visibility: public, registered-users, private, etc.
  visibility String
  
  /// Moderation: pending, approved, denied, etc.
  moderation_status String
  
  /// Explanation for moderation state (optional).
  moderation_reason String?
  
  /// Created timestamp.
  created_at DateTime
  
  /// Last updated timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  board shopping_mall_boards @relation(fields: [shopping_mall_board_id], references: [id], onDelete: Cascade)
  customer shopping_mall_customers? @relation(fields: [shopping_mall_customer_id], references: [id], onDelete: Cascade)
  seller shopping_mall_sellers? @relation(fields: [shopping_mall_seller_id], references: [id], onDelete: Cascade)
  admin shopping_mall_admins? @relation(fields: [shopping_mall_admin_id], references: [id], onDelete: Cascade)
  parentPost shopping_mall_board_posts? @relation("recursive", fields: [shopping_mall_parent_post_id], references: [id], onDelete: Cascade)
  product shopping_mall_products? @relation(fields: [shopping_mall_product_id], references: [id], onDelete: Cascade)
  order shopping_mall_orders? @relation(fields: [shopping_mall_order_id], references: [id], onDelete: Cascade)
  
  recursive shopping_mall_board_posts[] @relation("recursive")
  shopping_mall_board_post_snapshots shopping_mall_board_post_snapshots[]
  shopping_mall_comments shopping_mall_comments[]
  shopping_mall_post_attachments shopping_mall_post_attachments[]
  
  @@index([shopping_mall_customer_id])
  @@index([shopping_mall_seller_id])
  @@index([shopping_mall_admin_id])
  @@index([shopping_mall_product_id])
  @@index([shopping_mall_order_id])
  
  @@unique([shopping_mall_board_id, title, created_at], map: "shopping_mall_board_posts_shopping_mall_board_id_title_820c4c57")
  @@index([shopping_mall_board_id])
  @@index([shopping_mall_parent_post_id])
  @@index([created_at])
}

/// Snapshots preserving all mutable fields for each board post mutation
/// (edit/moderation, etc). Immutable history for legal compliance and audit.
/// Snapshots reference their parent post.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_board_post_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Snapshot of board post {@link shopping_mall_board_posts.id}.
  shopping_mall_board_post_id String
  
  /// Title at snapshot time.
  title String?
  
  /// Content at snapshot time.
  body String
  
  /// Thread depth at snapshot time.
  reply_level Int
  
  /// Official answer flag at snapshot.
  is_official_answer Boolean
  
  /// Visibility at snapshot time.
  visibility String
  
  /// Moderation state at snapshot time.
  moderation_status String
  
  /// Moderation reason at snapshot time (nullable).
  moderation_reason String?
  
  /// Reason for snapshot (edit, moderation, etc).
  snapshot_reason String
  
  /// Snapshot timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  boardPost shopping_mall_board_posts @relation(fields: [shopping_mall_board_post_id], references: [id], onDelete: Cascade)
  
  @@index([shopping_mall_board_post_id], map: "shopping_mall_board_post_snapshots_shopping_mall_board_e10e6a73")
  @@index([created_at])
}

/// Inquiries (Q&A) regarding products. Authored by customer/seller. Direct
/// linkage to product and actor/role; supports official response, privacy,
/// and moderation. Supports audit trails and batch solutions.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_product_inquiries {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Related product’s {@link shopping_mall_products.id}.
  shopping_mall_product_id String
  
  /// If inquirer is customer, link to {@link shopping_mall_customers.id}.
  shopping_mall_customer_id String?
  
  /// If inquirer is seller, link to {@link shopping_mall_sellers.id}.
  shopping_mall_seller_id String?
  
  /// Inquiry summary/title.
  title String?
  
  /// Full inquiry content.
  body String
  
  /// Visibility restriction to only author and responders.
  is_private Boolean
  
  /// True when an answer is posted.
  answered Boolean
  
  /// Moderation state: pending, approved, etc.
  moderation_status String
  
  /// Inquiry created at.
  created_at DateTime
  
  /// Last update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  product shopping_mall_products @relation(fields: [shopping_mall_product_id], references: [id], onDelete: Cascade)
  customer shopping_mall_customers? @relation(fields: [shopping_mall_customer_id], references: [id], onDelete: Cascade)
  seller shopping_mall_sellers? @relation(fields: [shopping_mall_seller_id], references: [id], onDelete: Cascade)
  
  shopping_mall_inquiry_answers shopping_mall_inquiry_answers[]
  shopping_mall_comments shopping_mall_comments[]
  shopping_mall_favorite_inquiries shopping_mall_favorite_inquiries[]
  shopping_mall_favorite_snapshots shopping_mall_favorite_snapshots[]
  
  @@unique([shopping_mall_product_id, body], map: "shopping_mall_product_inquiries_shopping_mall_product__c04b6f9c")
  @@index([shopping_mall_customer_id])
  @@index([shopping_mall_seller_id])
  @@index([created_at])
}

/// Answers to product inquiries by sellers/admins. Supports official answer
/// flag, independent moderation, and notification link. Linked to original
/// inquiry and multi-role author. Moderation life-cycle and compliance
/// supported.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_inquiry_answers {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Inquiry being answered {@link shopping_mall_product_inquiries.id}.
  shopping_mall_product_inquiry_id String
  
  /// Responder if seller {@link shopping_mall_sellers.id}.
  shopping_mall_seller_id String?
  
  /// Responder if admin {@link shopping_mall_admins.id}.
  shopping_mall_admin_id String?
  
  /// Answer body.
  body String
  
  /// Moderation: pending, approved, etc.
  moderation_status String
  
  /// Official answer for the inquiry.
  official_answer Boolean
  
  /// When customer notified (nullable).
  notified_at DateTime?
  
  /// Answer created at.
  created_at DateTime
  
  /// Last updated at.
  updated_at DateTime
  
  /// Soft delete timestamp.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  inquiry shopping_mall_product_inquiries @relation(fields: [shopping_mall_product_inquiry_id], references: [id], onDelete: Cascade)
  seller shopping_mall_sellers? @relation(fields: [shopping_mall_seller_id], references: [id], onDelete: Cascade)
  admin shopping_mall_admins? @relation(fields: [shopping_mall_admin_id], references: [id], onDelete: Cascade)
  
  @@index([shopping_mall_seller_id])
  @@index([shopping_mall_admin_id])
  
  @@index([shopping_mall_product_inquiry_id], map: "shopping_mall_inquiry_answers_shopping_mall_product_in_4ff4b451")
  @@index([created_at])
}

/// Product reviews by customers/sellers for compliance and UGC. Links to
/// product and order, supports unique (product,order,customer) constraint,
/// moderation and notification workflow. Key compliance artifact for
/// consumer protection.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_reviews {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reviewed product {@link shopping_mall_products.id}.
  shopping_mall_product_id String
  
  /// Related order {@link shopping_mall_orders.id}.
  shopping_mall_order_id String
  
  /// Reviewer (customer) {@link shopping_mall_customers.id}.
  shopping_mall_customer_id String
  
  /// Reviewer (seller) {@link shopping_mall_sellers.id}.
  shopping_mall_seller_id String?
  
  /// Stars/points integer rating (typ. 1-5).
  rating Int
  
  /// Title/headline for the review.
  title String?
  
  /// Full review content.
  body String
  
  /// Moderation: pending, approved, etc.
  moderation_status String
  
  /// Notification timestamp (optional).
  notified_at DateTime?
  
  /// Review creation time.
  created_at DateTime
  
  /// Last modification time.
  updated_at DateTime
  
  /// Soft delete timestamp.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  product shopping_mall_products @relation(fields: [shopping_mall_product_id], references: [id], onDelete: Cascade)
  order shopping_mall_orders @relation(fields: [shopping_mall_order_id], references: [id], onDelete: Cascade)
  customer shopping_mall_customers @relation(fields: [shopping_mall_customer_id], references: [id], onDelete: Cascade)
  seller shopping_mall_sellers? @relation(fields: [shopping_mall_seller_id], references: [id], onDelete: Cascade)
  
  shopping_mall_review_snapshots shopping_mall_review_snapshots[]
  shopping_mall_comments shopping_mall_comments[]
  shopping_mall_post_attachments shopping_mall_post_attachments[]
  
  @@index([shopping_mall_order_id])
  @@index([shopping_mall_customer_id])
  @@index([shopping_mall_seller_id])
  
  @@unique([shopping_mall_product_id, shopping_mall_order_id, shopping_mall_customer_id], map: "shopping_mall_reviews_shopping_mall_product_id_shoppin_2227f043")
  @@index([created_at])
  @@index([moderation_status])
}

/// All historic versions of a review, recording moderation/notification
/// state for audit/legal recovery.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_review_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Snapshot for review {@link shopping_mall_reviews.id}.
  shopping_mall_review_id String
  
  /// Snapshot of rating at this point in time.
  rating Int
  
  /// Title at this snapshot.
  title String?
  
  /// Review body at this snapshot.
  body String
  
  /// Moderation at this snapshot.
  moderation_status String
  
  /// Notification state at this snapshot.
  notified_at DateTime?
  
  /// Why snapshot was captured.
  snapshot_reason String
  
  /// Snapshot created.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  review shopping_mall_reviews @relation(fields: [shopping_mall_review_id], references: [id], onDelete: Cascade)
  
  @@index([shopping_mall_review_id])
  @@index([created_at])
}

/// Threaded comments on posts/inquiries/reviews, multi-role authorship. Each
/// comment may reference a board post, inquiry, or review, and have threaded
/// replies. Moderation and notification. Cross-entity searchable,
/// created/managed independently.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_comments {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Board post being commented on {@link shopping_mall_board_posts.id}.
  shopping_mall_board_post_id String?
  
  /// Product inquiry being commented on {@link
  /// shopping_mall_product_inquiries.id}.
  shopping_mall_product_inquiry_id String?
  
  /// Review being commented on {@link shopping_mall_reviews.id}.
  shopping_mall_review_id String?
  
  /// Parent comment (self-reference) if reply.
  shopping_mall_parent_comment_id String?
  
  /// Authored by customer {@link shopping_mall_customers.id}.
  shopping_mall_customer_id String?
  
  /// Authored by seller {@link shopping_mall_sellers.id}.
  shopping_mall_seller_id String?
  
  /// Authored by admin {@link shopping_mall_admins.id}.
  shopping_mall_admin_id String?
  
  /// Comment text (Markdown supported).
  body String
  
  /// Thread level of comment (root=0).
  level Int
  
  /// Moderation state (pending/approved/etc.).
  moderation_status String
  
  /// Reason for moderation state (optional).
  moderation_reason String?
  
  /// Created at timestamp.
  created_at DateTime
  
  /// Last updated timestamp.
  updated_at DateTime
  
  /// Soft deleted timestamp (null if active).
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  boardPost shopping_mall_board_posts? @relation(fields: [shopping_mall_board_post_id], references: [id], onDelete: Cascade)
  productInquiry shopping_mall_product_inquiries? @relation(fields: [shopping_mall_product_inquiry_id], references: [id], onDelete: Cascade)
  review shopping_mall_reviews? @relation(fields: [shopping_mall_review_id], references: [id], onDelete: Cascade)
  parentComment shopping_mall_comments? @relation("recursive", fields: [shopping_mall_parent_comment_id], references: [id], onDelete: Cascade)
  customer shopping_mall_customers? @relation(fields: [shopping_mall_customer_id], references: [id], onDelete: Cascade)
  seller shopping_mall_sellers? @relation(fields: [shopping_mall_seller_id], references: [id], onDelete: Cascade)
  admin shopping_mall_admins? @relation(fields: [shopping_mall_admin_id], references: [id], onDelete: Cascade)
  
  recursive shopping_mall_comments[] @relation("recursive")
  shopping_mall_comment_snapshots shopping_mall_comment_snapshots[]
  shopping_mall_post_attachments shopping_mall_post_attachments[]
  
  @@index([shopping_mall_parent_comment_id])
  @@index([shopping_mall_customer_id])
  @@index([shopping_mall_seller_id])
  @@index([shopping_mall_admin_id])
  
  @@index([shopping_mall_board_post_id])
  @@index([shopping_mall_product_inquiry_id])
  @@index([shopping_mall_review_id])
  @@index([created_at])
}

/// All changes to each comment, for audit/dispute/evidence. Historical
/// snapshot of body, status, and moderation info.
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_comment_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Original comment {@link shopping_mall_comments.id}.
  shopping_mall_comment_id String
  
  /// Body of comment at snapshot.
  body String
  
  /// Level at snapshot.
  level Int
  
  /// Moderation status at snapshot.
  moderation_status String
  
  /// Reason for moderation (optional).
  moderation_reason String?
  
  /// Why snapshot taken (edit, moderation, etc).
  snapshot_reason String
  
  /// Snapshot timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  comment shopping_mall_comments @relation(fields: [shopping_mall_comment_id], references: [id], onDelete: Cascade)
  
  @@index([shopping_mall_comment_id])
  @@index([created_at])
}

/// Link table that attaches files to posts/reviews/comments. References
/// posts, reviews, comments, and the global attachment table (FK to
/// attachments); used for audit/evidence and display. Managed only through
/// parent entity change (not independent CRUD).
///
/// @namespace InquiriesArticles
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_post_attachments {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Attached post’s {@link shopping_mall_board_posts.id}.
  shopping_mall_board_post_id String?
  
  /// Attached review’s {@link shopping_mall_reviews.id}.
  shopping_mall_review_id String?
  
  /// Attached comment's {@link shopping_mall_comments.id}.
  shopping_mall_comment_id String?
  
  /// Attachment (file) record {@link shopping_mall_attachments.id}.
  shopping_mall_attachment_id String
  
  /// How the attachment is used: post_image, review_evidence, comment_media,
  /// etc.
  usage_type String
  
  /// Order among entity’s attachments.
  sort_order Int
  
  /// When attached.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  boardPost shopping_mall_board_posts? @relation(fields: [shopping_mall_board_post_id], references: [id], onDelete: Cascade)
  review shopping_mall_reviews? @relation(fields: [shopping_mall_review_id], references: [id], onDelete: Cascade)
  comment shopping_mall_comments? @relation(fields: [shopping_mall_comment_id], references: [id], onDelete: Cascade)
  attachment shopping_mall_attachments @relation(fields: [shopping_mall_attachment_id], references: [id], onDelete: Cascade)
  
  @@index([shopping_mall_attachment_id])
  
  @@index([shopping_mall_board_post_id])
  @@index([shopping_mall_review_id])
  @@index([shopping_mall_comment_id])
  @@index([created_at])
}