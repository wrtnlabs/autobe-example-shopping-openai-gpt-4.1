/// Master list of all coupons, promotions, and discount policies including
/// type, value, stacking, applicability, eligibility definitions, and
/// meta-configuration. Cross-linked to issuances, codes, stacking,
/// restrictions, notifications, and snapshots. Enables regulatory
/// compliance, analytics, and personal or bulk issuance.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupons {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Scope of coupon for promotions within a specific channel. References
  /// {@link shopping_mall_ai_backend_channels.id}.
  shopping_mall_ai_backend_channel_id String? @db.Uuid
  
  /// Seller that issued the coupon, if applicable. References {@link
  /// shopping_mall_ai_backend_sellers.id}.
  shopping_mall_ai_backend_seller_id String? @db.Uuid
  
  /// Unique business code for the coupon or promotion campaign. E.g.
  /// SUMMER2024, NEWUSER50.
  code String
  
  /// Coupon type: e.g., 'fixed', 'percentage', 'shipping', 'event', 'welcome',
  /// 'bulk_code', 'personal'. Should be validated in application or codebook.
  type String
  
  /// Title for human-recognition (e.g., '10% Off First Order').
  title String
  
  /// Detailed description for display and audit trails.
  description String?
  
  /// Discount amount or percentage depending on type.
  value Float @db.DoublePrecision
  
  /// Minimum eligible order amount, if any, for use validation.
  min_order_amount Float? @db.DoublePrecision
  
  /// Maximum discount that can be applied, for percentage or capped coupons.
  max_discount_amount Float? @db.DoublePrecision
  
  /// Currency code if monetary. (e.g., 'KRW','USD'). Null for non-monetary
  /// coupons.
  currency String?
  
  /// Coupon expiration datetime (absolute or computed per-issuance).
  expires_at DateTime? @db.Timestamptz
  
  /// Whether the coupon can stack with others (default: false). Business-level
  /// validation required for eligibility.
  stackable Boolean
  
  /// True if only for a specific customer (e.g., birthday, one-off, event,
  /// new-member).
  personal Boolean
  
  /// Max issue count (e.g., for the entire campaign) or null for unlimited.
  issued_quantity Int? @db.Integer
  
  /// How many times a single user can be issued this coupon.
  issued_per_user Int? @db.Integer
  
  /// Usage limit per user (null=unlimited).
  used_per_user Int? @db.Integer
  
  /// Total uses allowed for this coupon (null=unlimited).
  usage_limit_total Int? @db.Integer
  
  /// Total number of coupons actually issued (system-maintained, for
  /// analytics).
  issued_count Int @db.Integer
  
  /// System-maintained: aggregate number of times this coupon was successfully
  /// used.
  used_count Int @db.Integer
  
  /// When coupon is/will be publicly available for claim.
  published_at DateTime? @db.Timestamptz
  
  /// Coupon status (e.g. 'active', 'expired', 'scheduled', 'hidden',
  /// 'restricted'). Validate in application or via codebooks.
  status String
  
  /// Creation timestamp.
  created_at DateTime @db.Timestamptz
  
  /// Last update timestamp.
  updated_at DateTime @db.Timestamptz
  
  /// Soft-deletion timestamp if the coupon is removed from view.
  deleted_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  channel shopping_mall_ai_backend_channels? @relation(fields: [shopping_mall_ai_backend_channel_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupons_shopping_mall_ai_back_dd8e57e1")
  seller shopping_mall_ai_backend_sellers? @relation(fields: [shopping_mall_ai_backend_seller_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupons_shopping_mall_ai_back_9030b5b7")
  
  shopping_mall_ai_backend_cart_coupon_usages shopping_mall_ai_backend_cart_coupon_usages[]
  shopping_mall_ai_backend_coupon_issuances shopping_mall_ai_backend_coupon_issuances[]
  shopping_mall_ai_backend_coupon_codes shopping_mall_ai_backend_coupon_codes[]
  shopping_mall_ai_backend_coupon_stacking_rules_of_shop_35b558e3 shopping_mall_ai_backend_coupon_stacking_rules[] @relation("shopping_mall_ai_backend_coupon_stacking_rules_of_shop_35b558e3")
  shopping_mall_ai_backend_coupon_stacking_rules_of_excl_d38ba2b8 shopping_mall_ai_backend_coupon_stacking_rules[] @relation("shopping_mall_ai_backend_coupon_stacking_rules_of_excl_d38ba2b8")
  shopping_mall_ai_backend_coupon_restrictions shopping_mall_ai_backend_coupon_restrictions[]
  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]
  shopping_mall_ai_backend_coupon_snapshots shopping_mall_ai_backend_coupon_snapshots[]
  
  @@unique([code, shopping_mall_ai_backend_channel_id], map: "shopping_mall_ai_backend_coupons_code_shopping_mall_ai_06b45e7e")
  @@index([shopping_mall_ai_backend_channel_id], map: "shopping_mall_ai_backend_coupons_shopping_mall_ai_back_2c0f7d0c")
  @@index([shopping_mall_ai_backend_seller_id], map: "shopping_mall_ai_backend_coupons_shopping_mall_ai_back_95bd3f9f")
  @@index([status])
  @@index([title(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([description(ops: raw("gin_trgm_ops"))], type: Gin)
}

/// Instance of coupon issued to a customer or group. Tracks the allocation,
/// recipient, status, and issuance time. Linked to coupons and customers,
/// and references the underlying policy for regulatory and eligibility
/// tracking.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_issuances {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Coupon policy associated with this issuance. {@link
  /// shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String @db.Uuid
  
  /// Customer recipient issued this coupon. {@link
  /// shopping_mall_ai_backend_customers.id}. Required if personal coupon.
  shopping_mall_ai_backend_customer_id String? @db.Uuid
  
  /// Redemption/external code assigned for this issuance (e.g. for affiliate,
  /// external campaigns).
  external_code String?
  
  /// Expiration for issued coupon (overrides policy-specific expiry, e.g.,
  /// per-user duration).
  expires_at DateTime? @db.Timestamptz
  
  /// Status per issuance ('issued','used','revoked','expired').
  /// Application-validated or codebook-based.
  status String
  
  /// Issuance timestamp (when delivered/given to user).
  issued_at DateTime @db.Timestamptz
  
  /// When coupon was actually redeemed (if used).
  used_at DateTime? @db.Timestamptz
  
  /// When coupon was revoked (user withdrawal or policy violation).
  revoked_at DateTime? @db.Timestamptz
  
  /// Creation timestamp.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_issuances_shopping_mal_819276b8")
  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_issuances_shopping_mal_76a25b8c")
  
  shopping_mall_ai_backend_coupon_usages shopping_mall_ai_backend_coupon_usages[]
  shopping_mall_ai_backend_coupon_codes shopping_mall_ai_backend_coupon_codes[]
  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]
  
  @@unique([shopping_mall_ai_backend_coupon_id, shopping_mall_ai_backend_customer_id, external_code], map: "shopping_mall_ai_backend_coupon_issuances_shopping_mal_69ca52c6")
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_issuances_shopping_mal_2edd9ff4")
  @@index([shopping_mall_ai_backend_customer_id], map: "shopping_mall_ai_backend_coupon_issuances_shopping_mal_a8be0cd6")
  @@index([status])
}

/// Coupon redemption log. Tracks each attempt or successful use of a coupon
/// issuance (per customer, per order, per event). Linked to the issuance,
/// the redeemed customer, and order. Allows auditing of coupon consumption
/// and fraud tracking.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_usages {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// References the coupon issuance being used. {@link
  /// shopping_mall_ai_backend_coupon_issuances.id}.
  shopping_mall_ai_backend_coupon_issuance_id String @db.Uuid
  
  /// Customer using coupon. Redundant to coupon_issuance.customer by history
  /// (audit reliability). {@link shopping_mall_ai_backend_customers.id} .
  shopping_mall_ai_backend_customer_id String @db.Uuid
  
  /// Order where coupon was used (for cross-reference/audit). {@link
  /// shopping_mall_ai_backend_orders.id}.
  shopping_mall_ai_backend_order_id String? @db.Uuid
  
  /// When this usage occurred (actual redemption).
  used_at DateTime @db.Timestamptz
  
  /// Actual discount value given by this coupon on this usage (for refund,
  /// analytics).
  amount_discounted Float @db.DoublePrecision
  
  /// Usage status, e.g. 'success','failed','rolled_back'. Application-enforced
  /// for audit trail.
  status String
  
  /// If usage was later revoked or refunded, time here indicates when event
  /// occurred (e.g., if refund or invalid).
  rolledback_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  couponIssuance shopping_mall_ai_backend_coupon_issuances @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_273d8e4a")
  customer shopping_mall_ai_backend_customers @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_d11f2413")
  order shopping_mall_ai_backend_orders? @relation(fields: [shopping_mall_ai_backend_order_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_ca4ddd87")
  
  @@index([shopping_mall_ai_backend_order_id], map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_3a458b8b")
  
  @@unique([shopping_mall_ai_backend_coupon_issuance_id, shopping_mall_ai_backend_order_id], map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_e493eb26")
  @@index([shopping_mall_ai_backend_customer_id], map: "shopping_mall_ai_backend_coupon_usages_shopping_mall_a_2e70d91a")
  @@index([used_at])
}

/// Table holding bulk coupon codes for campaigns (e.g., public events,
/// external coupons). Maps each code to coupon policy and its status in
/// issuance or redemption. Prevents code collisions, duplicate use, and
/// supports external integrations.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_codes {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Coupon this code belongs to. {@link shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String @db.Uuid
  
  /// If issued as an individual allocation, link to the issuance. Useful for
  /// personalized or claimed codes. {@link
  /// shopping_mall_ai_backend_coupon_issuances.id}.
  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid
  
  /// Bulk/published coupon code. E.g., for codes handed out at event, on a
  /// flyer.
  bulk_code String
  
  /// Optional: contact/email assigned for code claim (for
  /// invite/referral/event tracking).
  issued_to_email String?
  
  /// Status: 'available','issued','redeemed','invalidated','revoked'.
  /// Business-level enforcement.
  status String
  
  /// Creation timestamp (code generation).
  created_at DateTime @db.Timestamptz
  
  /// When code was actually redeemed (if applicable).
  redeemed_at DateTime? @db.Timestamptz
  
  /// If code invalidated/revoked, store timestamp.
  revoked_at DateTime? @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_55486455")
  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_839873a0")
  
  shopping_mall_ai_backend_coupon_notifications shopping_mall_ai_backend_coupon_notifications[]
  
  @@index([shopping_mall_ai_backend_coupon_issuance_id], map: "shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_e5559bfc")
  
  @@unique([bulk_code])
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_codes_shopping_mall_ai_318babb0")
  @@index([status])
}

/// Defines allowed/disallowed stacking of coupons and types, both in general
/// and per coupon campaign. Explicitly structures business-restricted
/// stackability (e.g., 'A cannot stack with B', 'fixed+percentage allowed',
/// 'only 1 coupon per order'). Used in policy validation and at redemption.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_stacking_rules {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Coupon for which this stacking rule applies. {@link
  /// shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String? @db.Uuid
  
  /// Specific coupon or type (if any) that this coupon cannot stack with.
  /// Nullable for type/policy-wise rules. {@link
  /// shopping_mall_ai_backend_coupons.id}.
  excluded_coupon_id String? @db.Uuid
  
  /// Rule type: 'allow', 'deny', or 'override'. Business logic enforces actual
  /// stacking. Use codebook in application if possible.
  type String
  
  /// Target coupon type/category this rule applies to (e.g., all 'fixed',
  /// 'shipping', etc.). Null if only per-coupon.
  applies_to_type String?
  
  /// Creation timestamp of this stacking rule.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons? @relation("shopping_mall_ai_backend_coupon_stacking_rules_of_shop_35b558e3", fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_stacking_rules_shoppin_5809ee09")
  excludedCoupon shopping_mall_ai_backend_coupons? @relation("shopping_mall_ai_backend_coupon_stacking_rules_of_excl_d38ba2b8", fields: [excluded_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_stacking_rules_exclude_d50b5269")
  
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_stacking_rules_shoppin_19e44e33")
  @@index([excluded_coupon_id], map: "shopping_mall_ai_backend_coupon_stacking_rules_exclude_5daa2e1b")
}

/// Per-coupon restriction definitions. Defines not-allowed conditions,
/// periods, channels, users, sections, categories, products. Supports
/// fine-grained business enforcement (e.g., 'not valid with product X', 'not
/// for user group Y', 'blocked on weekends', etc.).
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_restrictions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Coupon to restrict. {@link shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String @db.Uuid
  
  /// Product this restriction applies to (if any, else null means
  /// general/global). {@link shopping_mall_ai_backend_products.id}.
  shopping_mall_ai_backend_product_id String? @db.Uuid
  
  /// Section limitation (if any). {@link
  /// shopping_mall_ai_backend_channel_sections.id}.
  shopping_mall_ai_backend_channel_section_id String? @db.Uuid
  
  /// Category limitation (if any). {@link
  /// shopping_mall_ai_backend_channel_categories.id}.
  shopping_mall_ai_backend_channel_category_id String? @db.Uuid
  
  /// User-level restriction (blacklist, group-exclude, business-group, etc.)
  /// {@link shopping_mall_ai_backend_customers.id}.
  shopping_mall_ai_backend_customer_id String? @db.Uuid
  
  /// Restriction start (blocked during this time). Null for always-blocked.
  start_time DateTime? @db.Timestamptz
  
  /// Restriction end (blocked until this time). Null for always-blocked.
  end_time DateTime? @db.Timestamptz
  
  /// Bitmask for restrict on specific days of the week (application logic
  /// required).
  weekday_bitmask Int? @db.Integer
  
  /// Whether restriction also applies during holidays.
  is_holiday_restricted Boolean?
  
  /// Code/reason for restriction (audit log, application validates).
  reason_code String?
  
  /// Created at.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_restrictions_shopping__84b13071")
  product shopping_mall_ai_backend_products? @relation(fields: [shopping_mall_ai_backend_product_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_restrictions_shopping__52d6b2fc")
  channelSection shopping_mall_ai_backend_channel_sections? @relation(fields: [shopping_mall_ai_backend_channel_section_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_restrictions_shopping__343fafac")
  channelCategory shopping_mall_ai_backend_channel_categories? @relation(fields: [shopping_mall_ai_backend_channel_category_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_restrictions_shopping__9e62c090")
  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_restrictions_shopping__a44474bf")
  
  @@index([shopping_mall_ai_backend_customer_id], map: "shopping_mall_ai_backend_coupon_restrictions_shopping__7039f69a")
  
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_restrictions_shopping__faa99761")
  @@index([shopping_mall_ai_backend_product_id], map: "shopping_mall_ai_backend_coupon_restrictions_shopping__201abd1f")
  @@index([shopping_mall_ai_backend_channel_section_id], map: "shopping_mall_ai_backend_coupon_restrictions_shopping__e6de4bc6")
  @@index([shopping_mall_ai_backend_channel_category_id], map: "shopping_mall_ai_backend_coupon_restrictions_shopping__a91912fc")
}

/// Per-coupon, code, or issuance notification log/tracking for required or
/// business-driven user notifications. Used for compliance, auditing, and
/// evidence. Includes type, status, send time, result, error messages. Can
/// log push, email, or SMS notifications.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_notifications {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Coupon policy to which the notification relates. {@link
  /// shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String? @db.Uuid
  
  /// Lower specificity: specific issuance for which notification event
  /// occurred (e.g., notification of redemption/expiry). {@link
  /// shopping_mall_ai_backend_coupon_issuances.id}.
  shopping_mall_ai_backend_coupon_issuance_id String? @db.Uuid
  
  /// Notification relates to a particular code within a campaign. {@link
  /// shopping_mall_ai_backend_coupon_codes.id}.
  shopping_mall_ai_backend_coupon_code_id String? @db.Uuid
  
  /// Customer target of notification. {@link
  /// shopping_mall_ai_backend_customers.id}.
  shopping_mall_ai_backend_customer_id String? @db.Uuid
  
  /// Type: e.g.,
  /// 'issuance','expiry','reminder','redemption','admin','campaign','error'.
  notification_type String
  
  /// Delivery status: 'pending','sent','failed','acknowledged'.
  status String
  
  /// Number of prior attempts.
  send_attempts Int @db.Integer
  
  /// When last send was attempted (if any).
  last_attempted_at DateTime? @db.Timestamptz
  
  /// Response/result/error info.
  result_message String?
  
  /// Created at.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons? @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_notifications_shopping_e5042d10")
  couponIssuance shopping_mall_ai_backend_coupon_issuances? @relation(fields: [shopping_mall_ai_backend_coupon_issuance_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_notifications_shopping_b38bd7db")
  couponCode shopping_mall_ai_backend_coupon_codes? @relation(fields: [shopping_mall_ai_backend_coupon_code_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_notifications_shopping_bfa2c672")
  customer shopping_mall_ai_backend_customers? @relation(fields: [shopping_mall_ai_backend_customer_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_notifications_shopping_1297b842")
  
  @@index([shopping_mall_ai_backend_coupon_issuance_id], map: "shopping_mall_ai_backend_coupon_notifications_shopping_e79d3b5f")
  @@index([shopping_mall_ai_backend_customer_id], map: "shopping_mall_ai_backend_coupon_notifications_shopping_fd930fd3")
  
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_notifications_shopping_347b3435")
  @@index([shopping_mall_ai_backend_coupon_code_id], map: "shopping_mall_ai_backend_coupon_notifications_shopping_ceea7d69")
  @@index([status])
}

/// Immutable snapshots capturing full coupon policy state and related key
/// attributes for audit and historical trace. Created whenever coupon is
/// created or policy/rules are changed. Enables evidence for compliance and
/// legal defense.
///
/// @namespace Coupons
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model shopping_mall_ai_backend_coupon_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid
  
  /// Original coupon this snapshot records. {@link
  /// shopping_mall_ai_backend_coupons.id}.
  shopping_mall_ai_backend_coupon_id String @db.Uuid
  
  /// Admin who created/modified the policy and triggered the snapshot. {@link
  /// shopping_mall_ai_backend_admins.id}.
  shopping_mall_ai_backend_admin_id String? @db.Uuid
  
  /// Serialized full snapshot of coupon policy and relations—must include all
  /// business attributes and major rules for evidence. JSON for maximum
  /// historical fidelity.
  policy_json String
  
  /// Snapshot creation time.
  created_at DateTime @db.Timestamptz
  
  //----
  // RELATIONS
  //----
  coupon shopping_mall_ai_backend_coupons @relation(fields: [shopping_mall_ai_backend_coupon_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_snapshots_shopping_mal_506965f9")
  admin shopping_mall_ai_backend_admins? @relation(fields: [shopping_mall_ai_backend_admin_id], references: [id], onDelete: Cascade, map: "shopping_mall_ai_backend_coupon_snapshots_shopping_mal_75ac7cd0")
  
  @@index([shopping_mall_ai_backend_admin_id], map: "shopping_mall_ai_backend_coupon_snapshots_shopping_mal_fc11173d")
  
  @@index([shopping_mall_ai_backend_coupon_id], map: "shopping_mall_ai_backend_coupon_snapshots_shopping_mal_840dec32")
  @@index([created_at])
}