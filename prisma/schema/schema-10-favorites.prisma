/// Favorites of products by users. Core personalization entity for
/// expressing interest in products, supporting search, organizing in
/// folders, snapshotting target product state, and triggering notification
/// workflows. References users, products, product snapshots, folders, and is
/// soft deletable for privacy. Each favorite is unique per user-product
/// pair. Main business table for product favoriting workflows.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_products {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced user's {@link ai_commerce_buyer.id} or {@link
  /// ai_commerce_seller.id}.
  user_id String
  
  /// Target product's {@link ai_commerce_products.id}.
  product_id String
  
  /// Optional folder for grouping. References {@link
  /// ai_commerce_favorites_folders.id}.
  folder_id String?
  
  /// Associated product snapshot at the moment of favoriting, {@link
  /// ai_commerce_favorites_product_snapshots.id}.
  snapshot_id String
  
  /// User-assigned label for organization/personal search.
  label String?
  
  /// Creation timestamp.
  created_at DateTime
  
  /// Update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp if removed by user.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  folder ai_commerce_favorites_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade)
  snapshot ai_commerce_favorites_product_snapshots @relation(fields: [snapshot_id], references: [id], onDelete: Cascade)
  
  ai_commerce_favorites_alerts ai_commerce_favorites_alerts[]
  ai_commerce_favorites_notifications ai_commerce_favorites_notifications[]
  ai_commerce_favorites_audit_logs ai_commerce_favorites_audit_logs[]
  
  @@index([product_id])
  @@unique([snapshot_id])
  
  @@unique([user_id, product_id])
  @@index([user_id])
  @@index([folder_id])
}

/// Favorites of product inquiries by users. Allows buyers/sellers to
/// bookmark key Q&As for quick access to information. Tracks user, inquiry,
/// optional folder, and locks in a snapshot at time of favoriting. Each user
/// can favorite the same inquiry only once. Supports notification and audit
/// workflows.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_inquiries {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced user (buyer/seller) {@link ai_commerce_buyer.id} or {@link
  /// ai_commerce_seller.id}.
  user_id String
  
  /// Target product inquiry's {@link ai_commerce_inquiries.id}.
  inquiry_id String
  
  /// Optional grouping folder. {@link ai_commerce_favorites_folders.id}.
  folder_id String?
  
  /// Snapshot of inquiry at time of favoriting. {@link
  /// ai_commerce_favorites_inquiry_snapshots.id}.
  snapshot_id String
  
  /// User-given label for search/organization.
  label String?
  
  /// Creation timestamp.
  created_at DateTime
  
  /// Update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp if removed by user.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  inquiry ai_commerce_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)
  folder ai_commerce_favorites_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade)
  snapshot ai_commerce_favorites_inquiry_snapshots @relation(fields: [snapshot_id], references: [id], onDelete: Cascade)
  
  @@index([inquiry_id])
  @@unique([snapshot_id])
  
  @@unique([user_id, inquiry_id])
  @@index([user_id])
  @@index([folder_id])
}

/// Favorites of user addresses for checkout or delivery. Allows
/// buyers/sellers to tag, organize, and receive alerts on preferred shipping
/// locations. Snapshots state at time of favoriting for audit. Each favorite
/// is unique per user-address pair. Supports organization.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_addresses {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced user (buyer/seller) {@link ai_commerce_buyer.id} or {@link
  /// ai_commerce_seller.id}.
  user_id String
  
  /// Target user address's {@link ai_commerce_user_addresses.id}.
  address_id String
  
  /// Optional grouping folder. {@link ai_commerce_favorites_folders.id}.
  folder_id String?
  
  /// Snapshot of address at time of favoriting. {@link
  /// ai_commerce_favorites_address_snapshots.id}.
  snapshot_id String
  
  /// User label for organizational/searching purpose.
  label String?
  
  /// Whether this is the user's primary address out of favorites.
  primary Boolean
  
  /// Creation timestamp.
  created_at DateTime
  
  /// Update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp if removed by user.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  address ai_commerce_user_addresses @relation(fields: [address_id], references: [id], onDelete: Cascade)
  folder ai_commerce_favorites_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade)
  snapshot ai_commerce_favorites_address_snapshots @relation(fields: [snapshot_id], references: [id], onDelete: Cascade)
  
  @@index([address_id])
  @@unique([snapshot_id])
  
  @@unique([user_id, address_id])
  @@index([user_id])
  @@index([folder_id])
}

/// Organizational folders per user, to group/categorize favorites (products,
/// inquiries, addresses). Users can create, rename, remove, and search among
/// folders. Folders cannot be shared. Naming collision not allowed per user.
/// Standalone business entity for favorite organization.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_folders {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Folder owner. References {@link ai_commerce_buyer.id}.
  user_id String
  
  /// Folder name unique per user.
  name String
  
  /// Optional description for folder's organizational purpose.
  description String?
  
  /// Folder creation timestamp.
  created_at DateTime
  
  /// Folder last updated timestamp.
  updated_at DateTime
  
  /// Folder deleted timestamp if user removes.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  ai_commerce_favorites_products ai_commerce_favorites_products[]
  ai_commerce_favorites_inquiries ai_commerce_favorites_inquiries[]
  ai_commerce_favorites_addresses ai_commerce_favorites_addresses[]
  
  @@unique([user_id, name])
  @@index([user_id])
}

/// Historical snapshot of the product at time of favoriting. Used to provide
/// evidence, rollback, and change trackers for favorites. Contains copy of
/// business-critical fields at snapshot moment. Read-only, append-only
/// entity referenced by favorites and audit logs.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_product_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Snapshot target's {@link ai_commerce_products.id}.
  product_id String
  
  /// Product name at snapshot.
  name String
  
  /// Product description at snapshot.
  description String
  
  /// Product price at time of snapshot.
  price Float
  
  /// Was product available for purchase at snapshot?
  available Boolean
  
  /// Snapshot timestamp.
  snapshot_date DateTime
  
  //----
  // RELATIONS
  //----
  product ai_commerce_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  
  ai_commerce_favorites_products ai_commerce_favorites_products?
  
  @@index([product_id])
}

/// Historical snapshot of inquiry state at the point of being favorited.
/// Includes main Q&A content, status, timestamps. Supports audit trail for
/// favorited inquiries. Read-only, referenced by favorites, retains
/// immutable evidence for legal/dispute/compliance need.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_inquiry_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced inquiry's {@link ai_commerce_inquiries.id}.
  inquiry_id String
  
  /// Inquiry question body at the time of snapshot.
  question String
  
  /// Answer content at snapshot (if available).
  answer String?
  
  /// Status of inquiry at snapshot (open, answered, closed, etc).
  status String
  
  /// Snapshot timestamp.
  snapshot_date DateTime
  
  //----
  // RELATIONS
  //----
  inquiry ai_commerce_inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade)
  
  ai_commerce_favorites_inquiries ai_commerce_favorites_inquiries?
  
  @@index([inquiry_id])
}

/// Historical snapshot of a user's address at the moment of favoriting.
/// Holds full address structure as favorited, for evidence and audit
/// support. Used by address favorite references and legal/compliance
/// processes. Append-only, read-only entity.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_address_snapshots {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced address's {@link ai_commerce_user_addresses.id}.
  address_id String
  
  /// Country code at favoriting time.
  country_code String
  
  /// City or locality at snapshot.
  city String
  
  /// Postal code value at snapshot.
  postal_code String
  
  /// First line of address at time of snapshot.
  line1 String
  
  /// Second line or detail, nullable.
  line2 String?
  
  /// Name of address's recipient at snapshot.
  recipient_name String
  
  /// Recipient contact at snapshot.
  phone String
  
  /// Snapshot timestamp.
  snapshot_date DateTime
  
  //----
  // RELATIONS
  //----
  address ai_commerce_user_addresses @relation(fields: [address_id], references: [id], onDelete: Cascade)
  
  ai_commerce_favorites_addresses ai_commerce_favorites_addresses?
  
  @@index([address_id])
}

/// Personal alert triggers for favorite changes—used to power notification
/// logic. Associates favorite with alerting configuration or state; tracks
/// what triggers notifications (stock, price, answer, etc) and per-user
/// preferences. Considered subsidiary, not independently managed apart from
/// favorite lifecycle.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_alerts {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Favorite entity this alert is for. Could link to product/inquiry/address
  /// favorites via explicit field or polymorphic resolver in implementation.
  /// Example uses {@link ai_commerce_favorites_products.id}.
  favorite_id String
  
  /// Business event triggering alert (e.g. price_drop, answer_posted,
  /// restocked, etc).
  alert_type String
  
  /// Is this alert active for the current user?
  is_enabled Boolean
  
  /// Timestamp when alert last triggered.
  last_triggered_at DateTime?
  
  //----
  // RELATIONS
  //----
  favorite ai_commerce_favorites_products @relation(fields: [favorite_id], references: [id], onDelete: Cascade)
  
  @@index([favorite_id])
}

/// Outbound notification events for favorite-related triggers (price drop,
/// restock, delivery update). Notifies the user of change or activity on
/// healthy favorite. Supports presentation and delivery state tracking and
/// is queryable for user notification inbox/history. Tracked per favorite
/// and user.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_notifications {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Notification target user. {@link ai_commerce_buyer.id}.
  user_id String
  
  /// Related favorite entity (product, inquiry, address favorite). See {@link
  /// ai_commerce_favorites_products.id} etc.
  favorite_id String
  
  /// Type of notification event (e.g. price_drop, status_update, missing, etc).
  notification_type String
  
  /// Timestamp when notification was delivered to user.
  delivered_at DateTime
  
  /// Timestamp user read the notification, if any.
  read_at DateTime?
  
  /// Notification creation timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  favorite ai_commerce_favorites_products @relation(fields: [favorite_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  @@index([favorite_id])
}

/// Audit log entries for state changes to favorites: created, updated,
/// removed, notified, alert switched, reason for changes, etc. Enables
/// compliance, forensics, and legal evidence. Tracks before/after, actor,
/// reason, and result.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_favorites_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Favorite entity audited (links to favorites table as needed for audit).
  /// Example: {@link ai_commerce_favorites_products.id}.
  favorite_id String
  
  /// Who performed action logged. References {@link ai_commerce_buyer.id}.
  actor_user_id String
  
  /// Type of event audited (favorite_created, removed, label_changed, etc).
  action String
  
  /// Rational provided for audit log event. Optional.
  reason String?
  
  /// Snapshot or summary of favorite before change (JSON serialized if needed).
  before_state String?
  
  /// Snapshot or summary after change (JSON serialized if needed).
  after_state String?
  
  /// Timestamp for when the audit log event occurred.
  occurred_at DateTime
  
  //----
  // RELATIONS
  //----
  favorite ai_commerce_favorites_products @relation(fields: [favorite_id], references: [id], onDelete: Cascade)
  actorUser ai_commerce_buyer @relation(fields: [actor_user_id], references: [id], onDelete: Cascade)
  
  @@index([actor_user_id])
  
  @@index([favorite_id])
}

/// Main attachment entity for any uploaded asset (file, image, document)
/// submitted with favorite, notification, or alert events. Tracks user
/// ownership, business context, linkage to favorite/notification, and
/// status. Key for evidentiary and personalization workflows. Each
/// attachment has its own versions and metadata details. Standalone table
/// for uploaded files.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_attachments {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Uploader's user ID. References {@link ai_commerce_buyer.id} or {@link
  /// ai_commerce_seller.id}.
  user_id String
  
  /// Original file name at upload.
  filename String
  
  /// Business purpose (e.g. favorite_screenshot, notification_attachment, etc).
  business_type String
  
  /// Attachment state (active, quarantined, deleted, etc).
  status String
  
  /// Creation timestamp.
  created_at DateTime
  
  /// Last update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user ai_commerce_buyer @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  ai_commerce_product_images ai_commerce_product_images[]
  ai_commerce_ugc_attachments ai_commerce_ugc_attachments[]
  ai_commerce_attachment_versions ai_commerce_attachment_versions[]
  ai_commerce_attachment_metadata ai_commerce_attachment_metadata[]
  ai_commerce_attachment_access_audit ai_commerce_attachment_access_audit[]
  
  @@index([user_id])
}

/// Snapshot/versioning table for each uploaded file. New record created for
/// every content or metadata update, supporting full history and legal
/// audit. Immutable and read-only; every attachment can have multiple
/// versions (lifecycle, legal, dispute evidence, rollbacks).
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_attachment_versions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced attachment {@link ai_commerce_attachments.id}.
  attachment_id String
  
  /// Monotonic version sequence, starts at 1.
  version Int
  
  /// Location of stored file at this version (could be S3, CDN, etc).
  file_url String
  
  /// File hash value for content verification.
  hash String?
  
  /// Reason or context for file update/version increment.
  change_reason String?
  
  /// Snapshot/version creation timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  attachment ai_commerce_attachments @relation(fields: [attachment_id], references: [id], onDelete: Cascade)
  
  @@unique([attachment_id, version])
  @@index([attachment_id])
}

/// Attachment additional metadata, e.g. image size, document type, analysis,
/// AI-derived tags, etc. Subsidiary/supporting table for compliance,
/// analytics, and asset search. Attachment can reference zero, one, or many
/// metadata records. Updated on each version or new upload as needed.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_attachment_metadata {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Attachment this metadata is for. References {@link
  /// ai_commerce_attachments.id}.
  attachment_id String
  
  /// Type of metadata (e.g. exif, file_type, generated_tag, ai_analysis, etc).
  meta_key String
  
  /// Metadata value (serialized, stringified, or raw).
  meta_value String
  
  /// Metadata creation timestamp.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  attachment ai_commerce_attachments @relation(fields: [attachment_id], references: [id], onDelete: Cascade)
  
  @@index([attachment_id])
}

/// Access log for every read/copy/download of any attachment file. Records
/// which user, when, how, and with what result. Powers compliance with legal
/// and forensic access requirements as well as operational analytics. Each
/// entry tracks the user (if any), attachment, access type, and result.
/// Append-only for audit.
///
/// @namespace Favorites
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model ai_commerce_attachment_access_audit {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Targeted attachment file. References {@link ai_commerce_attachments.id}.
  attachment_id String
  
  /// User who accessed file (if any). References {@link ai_commerce_buyer.id}
  /// or {@link ai_commerce_seller.id}.
  user_id String?
  
  /// Type of operation (read, download, preview, etc).
  access_type String
  
  /// Outcome for access (success, denied, error, etc).
  result String
  
  /// When access occurred.
  timestamp DateTime
  
  /// IP address recorded for access (if available).
  ip_address String?
  
  //----
  // RELATIONS
  //----
  attachment ai_commerce_attachments @relation(fields: [attachment_id], references: [id], onDelete: Cascade)
  user ai_commerce_buyer? @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  
  @@index([attachment_id])
}